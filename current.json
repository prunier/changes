{
    "LE1": {
        "PF-LE1": {
            "PF-LE1/LE1_VIS": {
                "start date": "2023-06-09 09:00",
                "end date": "2023-08-10 09:00",
                "start tag": "> 5.8.0",
                "end tag": "> 5.9.2",
                "count_files_modified": "5",
                "modifications_by_file": {
                    "CMakeLists.txt": [
                        [
                            "@@ -24,6 +24,6 @@ set(OPT_DEBUG ON)\n #                         elements_project(MyProject 1.0 USE Element 3.9)\n #===============================================================================\n \n-elements_project(LE1_VIS 5.9 USE Elements 6.2.1\n-                                 EL_ImageLib 2.3.0\n-                                 ST_DataModelTools 9.2.0)\n+elements_project(LE1_VIS 5.10 USE Elements 6.2.1\n+                              EL_ImageLib 2.3.0\n+                              ST_DataModelTools 9.2.0)\n",
                            "Updated CMakeList to LE1_VIS 5.10 in develop branch",
                            "Kane Nguyen-Kim",
                            "2023-06-16T10:19:04.000+02:00",
                            "cfece04a0991e2e200ec5600ed8e4d81ca40fcbc"
                        ],
                        [
                            "@@ -24,6 +24,6 @@ set(OPT_DEBUG ON)\n #                         elements_project(MyProject 1.0 USE Element 3.9)\n #===============================================================================\n \n-elements_project(LE1_VIS 5.9 USE Elements 6.1.1\n-                                 EL_ImageLib 2.2.0\n-                                 ST_DataModelTools 9.1.2)\n+elements_project(LE1_VIS 5.9 USE Elements 6.2.1\n+                                 EL_ImageLib 2.3.0\n+                                 ST_DataModelTools 9.2.0)\n",
                            "Merge branch 'feature-dm9.2' into 'develop'",
                            "Hoang Nguyen NGUYEN-KIM",
                            "2023-06-12T14:49:30.000+00:00",
                            "5cd60228312e47b0b76397f1da40eccbd300f8fa"
                        ],
                        [
                            "@@ -24,6 +24,6 @@ set(OPT_DEBUG ON)\n #                         elements_project(MyProject 1.0 USE Element 3.9)\n #===============================================================================\n \n-elements_project(LE1_VIS 5.9 USE Elements 6.1.1\n-                                 EL_ImageLib 2.2.0\n-                                 ST_DataModelTools 9.1.2)\n+elements_project(LE1_VIS 5.9 USE Elements 6.2.1\n+                                 EL_ImageLib 2.3.0\n+                                 ST_DataModelTools 9.2.0)\n",
                            "[NEW] migration to EDEN 3.1/DM 9.2.0",
                            "Kane Nguyen-Kim",
                            "2023-06-11T11:39:56.000+02:00",
                            "64ae0d11b472687c0559ee525796f48096026607"
                        ]
                    ],
                    "LE1_VIS_Output/src/lib/LE1_Fits.cpp": [
                        [
                            "@@ -85,19 +85,19 @@ int CLE1Fits::get_CRPIX(int                     quad_number_value,\n         crpix_value(1) = crpix_value(1) + quad_height_value + fits_ccdchargeinjection/2;\n     } else if (quad_id_value == \"G\") {\n         crpix_value(0) = crpix_value(0) + fits_OVRSCANX;\n-        crpix_value(1) = crpix_value(1) + fits_OVRSCANY;\n+        crpix_value(1) = crpix_value(1) + fits_OVRSCANY - fits_ccdchargeinjection/2;\n     } else if (quad_id_value == \"H\") {\n         crpix_value(0) = crpix_value(0) + quad_width_value + fits_PRESCANX;\n-        crpix_value(1) = crpix_value(1) + fits_OVRSCANY;\n+        crpix_value(1) = crpix_value(1) + fits_OVRSCANY - fits_ccdchargeinjection/2;\n     }\n   }\n   if (ccd_column_value >= 4) {        // Right half of the FPA\n     if(quad_id_value == \"E\") {\n         crpix_value(0) = crpix_value(0) + fits_OVRSCANX;\n-        crpix_value(1) = crpix_value(1) + fits_OVRSCANY;\n+        crpix_value(1) = crpix_value(1) + fits_OVRSCANY - fits_ccdchargeinjection/2;\n     } else if (quad_id_value == \"F\") {\n         crpix_value(0) = crpix_value(0) + quad_width_value + fits_PRESCANX;\n-        crpix_value(1) = crpix_value(1) + fits_OVRSCANY;\n+        crpix_value(1) = crpix_value(1) + fits_OVRSCANY - fits_ccdchargeinjection/2;\n     } else if (quad_id_value == \"G\") {\n         crpix_value(0) = crpix_value(0) + quad_width_value + fits_PRESCANX;\n         crpix_value(1) = crpix_value(1) + quad_height_value + fits_ccdchargeinjection/2;\n",
                            "[FIX] LE1_Fits.cpp: corrected astrometric solution for WCS",
                            "Kane Nguyen-Kim",
                            "2023-06-13T16:48:11.000+02:00",
                            "35b466cfedde1d3362e2e6341a50f59911f3e1b1"
                        ]
                    ],
                    ".jenkinsFile": [
                        [
                            "@@ -1,3 +1,3 @@\n #!groovy\n-@Library('integration-library@release-9') _\n-pipelineElements(artifactId:'LE1_VIS', component:'eden.3.0', deployDevelop:false, deployMaster:false)\n+@Library(value='integration-library@release-10') _\n+pipelineElements(name:\"LE1_VIS\", component:'eden.3.1', skipContinuous:true, skipRelease:true)\n",
                            "Merge branch 'feature-dm9.2' into 'develop'",
                            "Hoang Nguyen NGUYEN-KIM",
                            "2023-06-12T14:49:30.000+00:00",
                            "5cd60228312e47b0b76397f1da40eccbd300f8fa"
                        ],
                        [
                            "@@ -1,3 +1,3 @@\n #!groovy\n @Library(value='integration-library@release-10') _\n-pipelineElements(name:\"LE1_VIS\", component:'eden.3.1')\n+pipelineElements(name:\"LE1_VIS\", component:'eden.3.1', skipContinuous:true, skipRelease:true)\n",
                            "[FIX] .jenkinsFiles: added skipContinuous:true, skipRelease:true to pipelineElements",
                            "Kane  NGUYEN KIM",
                            "2023-06-12T12:55:21.000+02:00",
                            "4cbdd89858b3cfef0b55ade2af441013b0f0e56d"
                        ],
                        [
                            "@@ -1,3 +1,3 @@\n #!groovy\n @Library(value='integration-library@release-10') _\n-pipelineElements(name:\"LE1_VIS\", component:'eden.3.1', deployDevelop:false, deployMaster:false)\n+pipelineElements(name:\"LE1_VIS\", component:'eden.3.1')\n",
                            "[FIX] .jenkinsFile: removed deployDevelop and deployMaster",
                            "Kane  NGUYEN KIM",
                            "2023-06-12T10:48:06.000+02:00",
                            "727dafa57259e734ce06137fc1bafdc7ea9b4d1a"
                        ],
                        [
                            "@@ -1,3 +1,3 @@\n #!groovy\n-@Library('integration-library@release-10') _\n+@Library(value='integration-library@release-10') _\n pipelineElements(name:\"LE1_VIS\", component:'eden.3.1', deployDevelop:false, deployMaster:false)\n",
                            "[FIX] .jenkinsFile: inserted value= for @Library",
                            "Kane Nguyen-Kim",
                            "2023-06-11T21:49:06.000+02:00",
                            "6f71874ecdabff02b001ebad85b1c3f5267649b4"
                        ],
                        [
                            "@@ -1,3 +1,3 @@\n #!groovy\n @Library('integration-library@release-10') _\n-pipelineElements(name:'LE1_VIS', component:'eden.3.1', deployDevelop:false, deployMaster:false)\n+pipelineElements(name:\"LE1_VIS\", component:'eden.3.1', deployDevelop:false, deployMaster:false)\n",
                            "[FIX] .jenkinsFile: fixe typo",
                            "Kane Nguyen-Kim",
                            "2023-06-11T21:44:18.000+02:00",
                            "042ed89dd4e5164f369d8e6be160ba89077a558e"
                        ],
                        [
                            "@@ -1,3 +1,3 @@\n #!groovy\n @Library('integration-library@release-10') _\n-pipelineElements(artifactId:'LE1_VIS', component:'eden.3.1', deployDevelop:false, deployMaster:false)\n+pipelineElements(name:'LE1_VIS', component:'eden.3.1', deployDevelop:false, deployMaster:false)\n",
                            "[FIX] .jenkinsFile: replaced artifactId with name",
                            "Kane Nguyen-Kim",
                            "2023-06-11T21:40:45.000+02:00",
                            "c2bb9c4a4e29eed2b5578be84a2435bcc2b76213"
                        ],
                        [
                            "@@ -1,3 +1,3 @@\n #!groovy\n-@Library('integration-library@release-9') _\n+@Library('integration-library@release-10') _\n pipelineElements(artifactId:'LE1_VIS', component:'eden.3.1', deployDevelop:false, deployMaster:false)\n",
                            "[FIX] .jenkinsFile: updated release-9 to release-10",
                            "Kane Nguyen-Kim",
                            "2023-06-11T20:22:09.000+02:00",
                            "9fee4020c66505e70050573dccf52f4cfcc6875a"
                        ],
                        [
                            "@@ -1,3 +1,3 @@\n #!groovy\n @Library('integration-library@release-9') _\n-pipelineElements(artifactId:'LE1_VIS', component:'eden.3.1, deployDevelop:false, deployMaster:false)\n+pipelineElements(artifactId:'LE1_VIS', component:'eden.3.1', deployDevelop:false, deployMaster:false)\n",
                            "[FIX] .jenkinsFile: fixed typo",
                            "Kane Nguyen-Kim",
                            "2023-06-11T11:45:56.000+02:00",
                            "813006d3e63b372468d0b0abb321f4ac4d29cb80"
                        ],
                        [
                            "@@ -1,3 +1,3 @@\n #!groovy\n @Library('integration-library@release-9') _\n-pipelineElements(artifactId:'LE1_VIS', component:'eden.3.0', deployDevelop:false, deployMaster:false)\n+pipelineElements(artifactId:'LE1_VIS', component:'eden.3.1, deployDevelop:false, deployMaster:false)\n",
                            "[NEW] migration to EDEN 3.1/DM 9.2.0",
                            "Kane Nguyen-Kim",
                            "2023-06-11T11:39:56.000+02:00",
                            "64ae0d11b472687c0559ee525796f48096026607"
                        ]
                    ],
                    "LE1_VIS_Output/src/lib/LE1_Datamodel.cpp": [
                        [
                            "@@ -342,8 +342,7 @@ sys::genericHeader CLE1Datamodel::createXmlHeader() {\n   ::serialTrapPumpingParameters::ReadoutCount_type                         serial_trap_pumping_readoutcount = 0;\n   ::serialTrapPumpingParameterList::SerialTrapPumpingParameterSet_sequence serial_trap_pumping_parameterssequence;\n   ::serialTrapPumpingParameters::SerialTrapPumpingParameterList_type       serial_trap_pumping_parameterslist;\n-  ::trapPumping::SerialTrapPumpingParameters_type serial_trap_pumping_parameters(serial_trap_pumping_readoutcount,\n-                                                                                 serial_trap_pumping_parameterslist);\n+  ::trapPumping::SerialTrapPumpingParameters_type                          serial_trap_pumping_parameters(serial_trap_pumping_readoutcount);\n \n   if (trapPumpingStatus_value != \"Off\") {\n     if (trapPumpingStatus_value == \"Parallel\") {\n@@ -393,8 +392,9 @@ sys::genericHeader CLE1Datamodel::createXmlHeader() {\n \n         serial_trap_pumping_parameterslist.SerialTrapPumpingParameterSet(serial_trap_pumping_parameterssequence);\n \n-        serial_trap_pumping_parameters = ::trapPumping::SerialTrapPumpingParameters_type(\n-            serial_trap_pumping_readoutcount, serial_trap_pumping_parameterslist);\n+        serial_trap_pumping_parameters = ::trapPumping::SerialTrapPumpingParameters_type(serial_trap_pumping_readoutcount);\n+        serial_trap_pumping_parameters.SerialTrapPumpingParameterList(serial_trap_pumping_parameterslist);\n+        serial_trap_pumping_parameters.SerialTrapPumpingParameterSet1(serial_trap_pumping_parameterset);\n     }\n \n     if (trapPumpingStatus_value == \"MultipleSerial\") {\n@@ -518,11 +518,18 @@ sys::genericHeader CLE1Datamodel::createXmlHeader() {\n       serial_trap_pumping_parameterssequence.push_back(serial_trap_pumping_parameterset8);\n \n       serial_trap_pumping_parameterslist = ::serialTrapPumpingParameters::SerialTrapPumpingParameterList_type();\n-\n       serial_trap_pumping_parameterslist.SerialTrapPumpingParameterSet(serial_trap_pumping_parameterssequence);\n \n-      serial_trap_pumping_parameters = ::trapPumping::SerialTrapPumpingParameters_type(\n-          serial_trap_pumping_readoutcount, serial_trap_pumping_parameterslist);\n+      serial_trap_pumping_parameters = ::trapPumping::SerialTrapPumpingParameters_type( serial_trap_pumping_readoutcount);\n+      serial_trap_pumping_parameters.SerialTrapPumpingParameterList(serial_trap_pumping_parameterslist);\n+      serial_trap_pumping_parameters.SerialTrapPumpingParameterSet1(serial_trap_pumping_parameterset1);\n+      serial_trap_pumping_parameters.SerialTrapPumpingParameterSet2(serial_trap_pumping_parameterset2);\n+      serial_trap_pumping_parameters.SerialTrapPumpingParameterSet3(serial_trap_pumping_parameterset3);\n+      serial_trap_pumping_parameters.SerialTrapPumpingParameterSet4(serial_trap_pumping_parameterset4);\n+      serial_trap_pumping_parameters.SerialTrapPumpingParameterSet5(serial_trap_pumping_parameterset5);\n+      serial_trap_pumping_parameters.SerialTrapPumpingParameterSet6(serial_trap_pumping_parameterset6);\n+      serial_trap_pumping_parameters.SerialTrapPumpingParameterSet7(serial_trap_pumping_parameterset7);\n+      serial_trap_pumping_parameters.SerialTrapPumpingParameterSet8(serial_trap_pumping_parameterset8);\n     }\n   }\n \n",
                            "Merge branch 'feature-dm9.2' into 'develop'",
                            "Hoang Nguyen NGUYEN-KIM",
                            "2023-06-12T14:49:30.000+00:00",
                            "5cd60228312e47b0b76397f1da40eccbd300f8fa"
                        ]
                    ],
                    "LE1_VIS_Reading/tests/src/CrcCalculator_test.cpp": [
                        [
                            "@@ -19,6 +19,7 @@\n \n #include \"ElementsKernel/Auxiliary.h\"\n #include <boost/test/unit_test.hpp>\n+#include <fstream>\n \n #include \"LE1_VIS_Reading/CrcCalculator.h\"\n using namespace LE1_VIS::Reading;\n",
                            "Merge branch 'feature-dm9.2' into 'develop'",
                            "Hoang Nguyen NGUYEN-KIM",
                            "2023-06-12T14:49:30.000+00:00",
                            "5cd60228312e47b0b76397f1da40eccbd300f8fa"
                        ]
                    ]
                },
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": [
                    {
                        "name": "5.8.0",
                        "created_at": "2023-04-10T19:12:59.000+02:00",
                        "author_name": "Kane Nguyen-Kim"
                    },
                    {
                        "name": "5.9",
                        "created_at": "2023-06-13T16:48:11.000+02:00",
                        "author_name": "Kane Nguyen-Kim"
                    },
                    {
                        "name": "5.9.0",
                        "created_at": "2023-06-16T10:17:54.000+02:00",
                        "author_name": "Kane Nguyen-Kim"
                    },
                    {
                        "name": "5.9.1",
                        "created_at": "2023-06-27T13:18:57.000+02:00",
                        "author_name": "Kane Nguyen-Kim"
                    },
                    {
                        "name": "5.9.2",
                        "created_at": "2023-06-28T13:31:28.000+02:00",
                        "author_name": "Kane Nguyen-Kim"
                    }
                ]
            }
        }
    },
    "LE2": {
        "PF-NIR": {
            "PF-NIR/NIR_DarkBiasSubtraction": {
                "start date": "2022-07-09 09:00",
                "end date": "2023-07-29 09:00",
                "start tag": "> 2.0.0",
                "end tag": "> 2.2.0",
                "count_files_modified": "3",
                "modifications_by_file": {
                    ".jenkinsFile": [
                        [
                            "@@ -1,3 +1,3 @@\n #!groovy\n-@Library('integration-library@release-9') _\n-pipelineElements(artifactId:\"NIR_DarkBiasSubtraction\", component:'eden.3.0')\n+@Library(value='integration-library@release-10') _\n+pipelineElements(name:\"NIR_DarkBiasSubtraction\", component:'eden.3.1')\n",
                            "Merge branch 'DM92_update' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-06-28T08:11:06.000+00:00",
                            "5c1d682f61b704425bd75d2b8251be22353cd96e"
                        ]
                    ],
                    "Makefile": [
                        [
                            "@@ -44,170 +44,19 @@\n #\n ################################################################################\n \n-# settings\n-CMAKE := cmake\n-CTEST := ctest\n-NINJA := $(shell which ninja-build 2> /dev/null)\n-ifeq ($(NINJA),)\n-  NINJA := $(shell which ninja 2> /dev/null)\n-endif\n-\n-# Looking for the Custom make library\n-\n-CUSTOM_MAKE_LIB := Custom.mk\n-\n-ifneq ($(wildcard $(CURDIR)/make/$(CUSTOM_MAKE_LIB)),)\n-  CUSTOM_MAKE_LIB_FILE := $(CURDIR)/make/$(CUSTOM_MAKE_LIB)\n-else\n-  ifneq ($(CMAKE_PREFIX_PATH),)\n-    PREFIX_LIST := $(subst :, ,$(CMAKE_PREFIX_PATH))\n-    CUSTOM_MAKE_LIB_LIST := $(foreach dir,$(PREFIX_LIST),$(wildcard $(dir)/share/Elements/make/$(CUSTOM_MAKE_LIB) $(dir)/../make/$(CUSTOM_MAKE_LIB)))\n-  endif\n-  CUSTOM_MAKE_LIB_LIST += /usr/share/Elements/make/$(CUSTOM_MAKE_LIB)\n-  CUSTOM_MAKE_LIB_FILE := $(firstword $(CUSTOM_MAKE_LIB_LIST))\n-endif\n-\n-# Looking for the ToolChain\n-\n-TOOLCHAIN_NAME := ElementsToolChain.cmake\n+ELEMENTS_MAKE_LIB := Elements.mk\n \n-ifneq ($(wildcard $(CURDIR)/cmake/$(TOOLCHAIN_NAME)),)\n-  TOOLCHAIN_FILE := $(CURDIR)/cmake/$(TOOLCHAIN_NAME)\n+ifneq ($(wildcard $(CURDIR)/make/$(ELEMENTS_MAKE_LIB)),)\n+  ELEMENTS_MAKE_LIB_FILE := $(CURDIR)/make/$(ELEMENTS_MAKE_LIB)\n else\n   ifneq ($(CMAKE_PREFIX_PATH),)\n     PREFIX_LIST := $(subst :, ,$(CMAKE_PREFIX_PATH))\n-    TOOLCHAIN_LIST := $(foreach dir,$(PREFIX_LIST),$(wildcard $(dir)/lib*/cmake/ElementsProject/$(TOOLCHAIN_NAME) $(dir)/$(TOOLCHAIN_NAME)))\n-    TOOLCHAIN_FILE := $(firstword $(TOOLCHAIN_LIST))\n-  endif\n-endif\n-\n-override ALL_CMAKEFLAGS := -Wno-dev --no-warn-unused-cli\n-\n-ifneq ($(TOOLCHAIN_FILE),)\n-  # A toolchain has been found. Lets use it.\n-  override ALL_CMAKEFLAGS += -DCMAKE_TOOLCHAIN_FILE=$(TOOLCHAIN_FILE)\n-endif\n-\n-\n-BUILD_PREFIX_NAME := build\n-\n-override ALL_CMAKEFLAGS += -DUSE_LOCAL_INSTALLAREA=ON -DBUILD_PREFIX_NAME:STRING=$(BUILD_PREFIX_NAME)\n-override ALL_CMAKEFLAGS += -DUSE_VERSIONED_LIBRARIES=OFF\n-\n-ifndef BINARY_TAG\n-  ifdef CMAKECONFIG\n-    BINARY_TAG := ${CMAKECONFIG}\n-  else\n-    ifdef CMTCONFIG\n-      BINARY_TAG := ${CMTCONFIG}\n-    endif\n-  endif\n-endif\n-\n-ifdef BINARY_TAG\n-  BUILD_SUBDIR := $(BUILD_PREFIX_NAME).$(BINARY_TAG)\n-else\n-  BUILD_SUBDIR := $(BUILD_PREFIX_NAME)\n-endif\n-BUILDDIR := $(CURDIR)/$(BUILD_SUBDIR)\n-\n-# build tool\n-\n-ifneq ($(USE_NINJA),)\n-  # enable Ninja\n-  override ALL_CMAKEFLAGS += -GNinja\n-  BUILD_CONF_FILE := build.ninja\n-  BUILDFLAGS := $(NINJAFLAGS)\n-  ifneq ($(VERBOSE),)\n-    BUILDFLAGS := -v $(BUILDFLAGS)\n+    ELEMENTS_MAKE_LIB_LIST := $(foreach dir,$(PREFIX_LIST),$(wildcard $(dir)/share/Elements/make/$(ELEMENTS_MAKE_LIB) $(dir)/../make/$(ELEMENTS_MAKE_LIB)))\n   endif\n-else\n-  BUILD_CONF_FILE := Makefile\n-endif\n-BUILD_CMD := $(CMAKE) --build $(BUILD_SUBDIR) --target\n-\n-\n-# Use environment variable for extra flags\n-\n-# Replace the \":\" from eclipse variable list to spaces  \n-ifneq ($(EXPAND_FLAGS),)\n-  CMAKEFLAGS := $(subst :-, -,$(CMAKEFLAGS))\n-endif\n-\n-ifneq ($(CMAKEFLAGS),)\n-  override ALL_CMAKEFLAGS += $(CMAKEFLAGS)\n+  ELEMENTS_MAKE_LIB_LIST += /usr/share/Elements/make/$(ELEMENTS_MAKE_LIB)\n+  ELEMENTS_MAKE_LIB_FILE := $(firstword $(ELEMENTS_MAKE_LIB_LIST))\n endif\n \n-# default target\n-all:\n-\n-# deep clean\n-purge:\n-\t$(RM) -r $(BUILDDIR) $(CURDIR)/InstallArea/$(BINARY_TAG)\n-\tfind $(CURDIR) \"(\" -name \"InstallArea\" -prune -o -name \"*.pyc\" -o -name \"*.pyo\" \")\" -a -type f -exec $(RM) -v \\{} \\;\n-\tfind $(CURDIR) -depth -type d -name \"__pycache__\" -exec $(RM) -rv \\{} \\;\n-\n-# Remove all the possible directories and the whole InstallArea as well\n-mrproper:\n-\t$(RM) -r $(CURDIR)/build $(CURDIR)/build.* $(CURDIR)/InstallArea\n-\tfind $(CURDIR) \"(\" -name \"*.pyc\" -o -name \"*.pyo\" \")\" -a -type f -exec $(RM) -v \\{} \\;\n-\tfind $(CURDIR) -depth -type d -name \"__pycache__\" -exec $(RM) -rv \\{} \\;\n-\n-# delegate any target to the build directory (except 'purge')\n-ifneq ($(MAKECMDGOALS),purge)\n-ifneq ($(MAKECMDGOALS),mrproper)\n-%: $(BUILDDIR)/$(BUILD_CONF_FILE) FORCE\n-\t+$(BUILD_CMD) $* -- $(BUILDFLAGS)\n-endif\n-endif\n-\n-# aliases\n-.PHONY: configure tests FORCE\n-ifneq ($(wildcard $(BUILDDIR)/$(BUILD_CONF_FILE)),)\n-configure: rebuild_cache\n-else\n-configure: $(BUILDDIR)/$(BUILD_CONF_FILE)\n-endif\n-\t@ # do not delegate further\n-\n-\n-# This wrapping around the test target is used to ensure the generation of\n-# the XML output from ctest.\n-test: $(BUILDDIR)/$(BUILD_CONF_FILE)\n-\t$(RM) -r $(BUILDDIR)/Testing $(BUILDDIR)/html\n-\t-cd $(BUILDDIR) && $(CTEST) -T test $(ARGS)\n-\t+$(BUILD_CMD) JUnitSummary\n-\n-\n-# This target ensures that the \"all\" target is called before\n-# running the tests (unlike the \"test\" default target of CMake)\n-tests: all\n-\t$(RM) -r $(BUILDDIR)/Testing $(BUILDDIR)/html\n-\t-cd $(BUILDDIR) && $(CTEST) -T test $(ARGS)\n-\t+$(BUILD_CMD) JUnitSummary\n-\n-ifeq ($(VERBOSE),)\n-# less verbose install\n-# (emulate the default CMake install target)\n-install: all\n-\tcd $(BUILDDIR) && $(CMAKE) -P cmake_install.cmake | grep -v \"^-- Up-to-date:\"\n-endif\n-\n-# import the library to look for a custom Makefile\n--include $(CUSTOM_MAKE_LIB_FILE)\n-\n-# ensure that the target are always passed to the CMake Makefile\n-FORCE: ;\n-\n-# Makefiles are used as implicit targets in make, but we should not consider\n-# them for delegation.\n-$(MAKEFILE_LIST): ;\n-\n-\n-# trigger CMake configuration\n-$(BUILDDIR)/$(BUILD_CONF_FILE): | $(BUILDDIR)\n-\tcd $(BUILDDIR) && $(CMAKE) $(ALL_CMAKEFLAGS) $(CURDIR)\n-\n-$(BUILDDIR):\n-\tmkdir -p $(BUILDDIR)\n+$(info Using the $(ELEMENTS_MAKE_LIB_FILE) make library)\n+include $(ELEMENTS_MAKE_LIB_FILE)\n \n",
                            "Merge branch 'DM92_update' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-06-28T08:11:06.000+00:00",
                            "5c1d682f61b704425bd75d2b8251be22353cd96e"
                        ]
                    ],
                    "CMakeLists.txt": [
                        [
                            "@@ -6,6 +6,6 @@ find_package(ElementsProject)\n #---------------------------------------------------------------\n \n # Declare project name and version\n-elements_project(NIR_DarkBiasSubtraction 2.2\n+elements_project(NIR_DarkBiasSubtraction 2.3\n                  USE\n-                 NIR_Utilities 2.2)\n+                 NIR_Utilities 2.3)\n",
                            "raise version to 2.3 in develop branch after tagging",
                            "Thomas Gasparetto",
                            "2023-06-26T18:33:28.000+02:00",
                            "90a22576285c73b5853499e1a3609d9585f1753e"
                        ],
                        [
                            "@@ -6,6 +6,6 @@ find_package(ElementsProject)\n #---------------------------------------------------------------\n \n # Declare project name and version\n-elements_project(NIR_DarkBiasSubtraction 2.1\n+elements_project(NIR_DarkBiasSubtraction 2.2\n                  USE\n-                 NIR_Utilities 2.1)\n+                 NIR_Utilities 2.2)\n",
                            "bump version from 2.1 to 2.2",
                            "frizzo",
                            "2022-08-02T10:07:19.000+02:00",
                            "5a9e1a0da73231f982b6b56d44c278fee141ae05"
                        ]
                    ]
                },
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": [
                    {
                        "name": "2.0.0",
                        "created_at": "2022-05-17T10:32:09.000+00:00",
                        "author_name": "Marco Frailis"
                    },
                    {
                        "name": "2.1.0",
                        "created_at": "2022-08-01T17:39:43.000+02:00",
                        "author_name": "frizzo"
                    },
                    {
                        "name": "2.2.0",
                        "created_at": "2023-06-26T15:47:23.000+02:00",
                        "author_name": "Thomas Gasparetto"
                    }
                ]
            },
            "PF-NIR/NIR_IAL_Pipelines": {
                "start date": "2022-08-09 09:00",
                "end date": "2023-08-29 09:00",
                "start tag": "> 1.5.1",
                "end tag": "> 2.4.1",
                "count_files_modified": "91",
                "modifications_by_file": {
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_DistortionModel_Pipeline/PipScript_NIR_DistortionModel.py": [
                        [
                            "@@ -2,7 +2,7 @@ from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n from PackageDef_NIR import (\n         runInitialize, badPixMasking, saturation, nonLinearity, darkSubtract, backEstimate, \n-        smallFlatCorrect, extractLists2, doAstromDistortion)    \n+        smallFlatCorrect, extractLists2, psfForDitherAbsCal, doAstromDistortion)\n     \n \n @parallel(iterable='ditherExposure')\n",
                            "Fixing forgotten task in geometric distortion",
                            "Marco Frailis",
                            "2023-08-28T14:56:55.000+00:00",
                            "d2ebf751801d3f5d423ce99dfb9cde820305d3a6"
                        ],
                        [
                            "@@ -28,10 +28,15 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, badpixel, sour\n \n     pre_processed, background = extractLists2(inlist=tmp)\n \n+    listofpsflists_dither = psfForDitherAbsCal(listofimages=pre_processed,\n+                                               mdbfile=mdb,\n+                                               config=nirConfig)\n+\n     distortionmodel, listofcaldithers = doAstromDistortion(listofdithers=pre_processed,\n-                               ref_catalog=sourceCatalog,\n-                               presolution=presolution,\n-                               config=nirConfig)\n+                                                           listofpsflists=listofpsflists_dither,\n+                                                           ref_catalog=sourceCatalog,\n+                                                           presolution=presolution,\n+                                                           config=nirConfig)\n \n     return distortionmodel\n \n",
                            "Adding psfForDither to geometric distortion pipeline",
                            "Marco Frailis",
                            "2023-08-28T14:18:04.000+00:00",
                            "649aac7055e3d2ddffeba76f2efe048da565b914"
                        ],
                        [
                            "@@ -2,34 +2,33 @@ from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n from PackageDef_NIR import (\n         runInitialize, badPixMasking, saturation, nonLinearity, darkSubtract, backEstimate, \n-        smallFlatCorrect, largeFlatCorrect, extractLists2, doAstromDistortion)    \n+        smallFlatCorrect, extractLists2, doAstromDistortion)    \n     \n \n @parallel(iterable='ditherExposure')\n-def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, largeflat, badpixel, config):\n+def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, badpixel, config):\n     initExposure = runInitialize(infile=ditherExposure, mdbfile=mdb)\n     badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n     satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n     nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb, config=config)\n     darkExposure = darkSubtract(infile=nonlinExposure, masterdark=masterdark)\n     smallflatExposure = smallFlatCorrect(infile=darkExposure, masterflat=masterflat)\n-    largeflatExposure = largeFlatCorrect(infile=smallflatExposure, flat=largeflat)\n-    background = backEstimate(input=largeflatExposure)\n-    return largeflatExposure, background\n+    background = backEstimate(input=smallflatExposure)\n+    return smallflatExposure, background\n \n \n @pipeline(outputs='distortionmodel')\n-def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, badpixel, sourceCatalog, presolution):\n+def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, badpixel, sourceCatalog, presolution):\n \n     tmp = nir_calib_dither(ditherExposure=dithers,\n                            mdb=mdb,\n                            badpixel=badpixel, masterdark=masterdark,\n-                           masterflat=masterflat, largeflat=largeflat,\n+                           masterflat=masterflat,\n                            config=nirConfig)\n \n     pre_processed, background = extractLists2(inlist=tmp)\n \n-    distortionmodel = doAstromDistortion(listofdithers=pre_processed,\n+    distortionmodel, listofcaldithers = doAstromDistortion(listofdithers=pre_processed,\n                                ref_catalog=sourceCatalog,\n                                presolution=presolution,\n                                config=nirConfig)\n",
                            "Merge branch 'update_pvrh2_calblock001' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-06-12T10:30:03.000+00:00",
                            "ba582aeaf5e6d62e76c3b9c2edc8016e75d39301"
                        ],
                        [
                            "@@ -2,34 +2,33 @@ from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n from PackageDef_NIR import (\n         runInitialize, badPixMasking, saturation, nonLinearity, darkSubtract, backEstimate, \n-        smallFlatCorrect, largeFlatCorrect, extractLists2, doAstromDistortion)    \n+        smallFlatCorrect, extractLists2, doAstromDistortion)    \n     \n \n @parallel(iterable='ditherExposure')\n-def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, largeflat, badpixel, config):\n+def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, badpixel, config):\n     initExposure = runInitialize(infile=ditherExposure, mdbfile=mdb)\n     badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n     satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n     nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb, config=config)\n     darkExposure = darkSubtract(infile=nonlinExposure, masterdark=masterdark)\n     smallflatExposure = smallFlatCorrect(infile=darkExposure, masterflat=masterflat)\n-    largeflatExposure = largeFlatCorrect(infile=smallflatExposure, flat=largeflat)\n-    background = backEstimate(input=largeflatExposure)\n-    return largeflatExposure, background\n+    background = backEstimate(input=smallflatExposure)\n+    return smallflatExposure, background\n \n \n @pipeline(outputs='distortionmodel')\n-def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, badpixel, sourceCatalog, presolution):\n+def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, badpixel, sourceCatalog, presolution):\n \n     tmp = nir_calib_dither(ditherExposure=dithers,\n                            mdb=mdb,\n                            badpixel=badpixel, masterdark=masterdark,\n-                           masterflat=masterflat, largeflat=largeflat,\n+                           masterflat=masterflat,\n                            config=nirConfig)\n \n     pre_processed, background = extractLists2(inlist=tmp)\n \n-    distortionmodel = doAstromDistortion(listofdithers=pre_processed,\n+    distortionmodel, listofcaldithers = doAstromDistortion(listofdithers=pre_processed,\n                                ref_catalog=sourceCatalog,\n                                presolution=presolution,\n                                config=nirConfig)\n",
                            "Selfcal and distortion pipelines update",
                            "Thomas Gasparetto",
                            "2023-06-12T10:30:03.000+00:00",
                            "aff0826a1f68b401c5a898f3012bf9c468b88e96"
                        ],
                        [
                            "@@ -6,11 +6,11 @@ from PackageDef_NIR import (\n     \n \n @parallel(iterable='ditherExposure')\n-def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, largeflat, badpixel):\n+def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, largeflat, badpixel, config):\n     initExposure = runInitialize(infile=ditherExposure, mdbfile=mdb)\n     badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n     satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n-    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb)\n+    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb, config=config)\n     darkExposure = darkSubtract(infile=nonlinExposure, masterdark=masterdark)\n     smallflatExposure = smallFlatCorrect(infile=darkExposure, masterflat=masterflat)\n     largeflatExposure = largeFlatCorrect(infile=smallflatExposure, flat=largeflat)\n@@ -24,7 +24,8 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n     tmp = nir_calib_dither(ditherExposure=dithers,\n                            mdb=mdb,\n                            badpixel=badpixel, masterdark=masterdark,\n-                           masterflat=masterflat, largeflat=largeflat)\n+                           masterflat=masterflat, largeflat=largeflat,\n+                           config=nirConfig)\n \n     pre_processed, background = extractLists2(inlist=tmp)\n \n",
                            "Merge branch 'cycle18_dm91_fixes' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-05-03T15:11:35.000+00:00",
                            "eb283372eb67490540acf763239f735251196af6"
                        ],
                        [
                            "@@ -6,11 +6,11 @@ from PackageDef_NIR import (\n     \n \n @parallel(iterable='ditherExposure')\n-def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, largeflat, badpixel):\n+def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, largeflat, badpixel, config):\n     initExposure = runInitialize(infile=ditherExposure, mdbfile=mdb)\n     badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n     satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n-    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb)\n+    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb, config=config)\n     darkExposure = darkSubtract(infile=nonlinExposure, masterdark=masterdark)\n     smallflatExposure = smallFlatCorrect(infile=darkExposure, masterflat=masterflat)\n     largeflatExposure = largeFlatCorrect(infile=smallflatExposure, flat=largeflat)\n@@ -24,7 +24,8 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n     tmp = nir_calib_dither(ditherExposure=dithers,\n                            mdb=mdb,\n                            badpixel=badpixel, masterdark=masterdark,\n-                           masterflat=masterflat, largeflat=largeflat)\n+                           masterflat=masterflat, largeflat=largeflat,\n+                           config=nirConfig)\n \n     pre_processed, background = extractLists2(inlist=tmp)\n \n",
                            "Added Non Linearity config pipelines. Skipping Persistence since there's no config file at the moment",
                            "Thomas Gasparetto",
                            "2023-04-26T17:31:04.000+02:00",
                            "41e9e10542414366821871e619ad325cd170641a"
                        ],
                        [
                            "@@ -29,7 +29,7 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n     pre_processed, background = extractLists2(inlist=tmp)\n \n     distortionmodel = doAstromDistortion(listofdithers=pre_processed,\n-                               SIM_catalog=sourceCatalog,\n+                               ref_catalog=sourceCatalog,\n                                presolution=presolution,\n                                config=nirConfig)\n \n",
                            "Merge branch 'mfrailis/single_ref_catalog' into 'develop'",
                            "Federico Rizzo",
                            "2022-08-25T13:02:38.000+00:00",
                            "b6d1c9dfc97e07ea9e27420c61b8dd50b403dd58"
                        ],
                        [
                            "@@ -29,7 +29,7 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n     pre_processed, background = extractLists2(inlist=tmp)\n \n     distortionmodel = doAstromDistortion(listofdithers=pre_processed,\n-                               SIM_catalog=sourceCatalog,\n+                               ref_catalog=sourceCatalog,\n                                presolution=presolution,\n                                config=nirConfig)\n \n",
                            "Removing NIR_ProcessField_TU workflow by simplifying the input ports of the Astrometric calibration and the Ghost masking steps. Now the NIR_ProcessField pipeline accepts both a VIS stack catalog or a TU catalog",
                            "Marco Frailis",
                            "2022-08-23T16:15:31.000+00:00",
                            "4ac0d3337800354945a5d027eb9f978289094cbe"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_AbsolutePhotometry_Pipeline/PipScript_NIR_AbsolutePhotometry.py": [
                        [
                            "@@ -31,8 +31,8 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n                                          config=nirConfig)\n \n     calibDithers_preLargeScale, astrometricCatalogs, fullcatalog = doAstromAbsCal(listofdithers=largeflats,\n-                                  ref_catalog=sourceCatalog,\n                                   listofpsflists=listofpsflists_dither,\n+                                  ref_catalog=sourceCatalog,\n                                   presolution=presolution,\n                                   config=nirConfig)\n \n",
                            "Adding psfForDither to geometric distortion pipeline",
                            "Marco Frailis",
                            "2023-08-28T14:18:04.000+00:00",
                            "649aac7055e3d2ddffeba76f2efe048da565b914"
                        ],
                        [
                            "@@ -2,35 +2,43 @@ from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n from PackageDef_NIR import (\n     runInitialize, badPixMasking, saturation, nonLinearity,\n-    darkSubtract, smallFlatCorrect, doAstromAbsCal, makeAbsoluteCalib)\n+    darkSubtract, smallFlatCorrect, largeFlatCorrect, doAstromAbsCal, makeAbsoluteCalib,\n+    psfForDitherAbsCal)\n \n @parallel(iterable=\"ditherExposure\")\n-def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, badpixel, config):\n+def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, badpixel, config, largeflat):\n     initExposure = runInitialize(infile=ditherExposure, mdbfile=mdb)\n     badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n     satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n     nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb, config=config)\n     darkExposure = darkSubtract(infile=nonlinExposure, masterdark=masterdark)\n-    flatExposure = smallFlatCorrect(infile=darkExposure, masterflat=masterflat)\n-    return flatExposure\n+    smallflatExposure = smallFlatCorrect(infile=darkExposure, masterflat=masterflat)\n+    largeflatExposure = largeFlatCorrect(infile=smallflatExposure, flat=largeflat)\n+    return largeflatExposure\n \n \n @pipeline(outputs=('abscal'))\n def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, badpixel,\n                   sourceCatalog, presolution, detectorsPhotomOffsets):\n \n-    flats = nir_calib_dither(ditherExposure=dithers, mdb=mdb,\n+    largeflats = nir_calib_dither(ditherExposure=dithers, mdb=mdb,\n                              masterdark=masterdark, masterflat=masterflat, \n-                             badpixel=badpixel, config=nirConfig)\n+                             badpixel=badpixel, config=nirConfig, \n+                             largeflat=largeflat)\n \n-    calibDithers_preLargeScale, astrometricCatalogs, fullcatalog = doAstromAbsCal(listofdithers=flats,\n+    listofpsflists_dither = psfForDitherAbsCal(listofimages=largeflats,\n+                                         mdbfile=mdb,\n+                                         config=nirConfig)\n+\n+    calibDithers_preLargeScale, astrometricCatalogs, fullcatalog = doAstromAbsCal(listofdithers=largeflats,\n                                   ref_catalog=sourceCatalog,\n+                                  listofpsflists=listofpsflists_dither,\n                                   presolution=presolution,\n                                   config=nirConfig)\n \n     abscal = makeAbsoluteCalib(inlist=astrometricCatalogs,\n                                mdbfile=mdb,\n-                               inflat=largeflat,\n+                               listofpsflists=listofpsflists_dither,\n                                indetcoeff=detectorsPhotomOffsets,\n                                standard_catalog=sourceCatalog)\n \n",
                            "Merge branch 'absolute_ph_changes' into 'develop'",
                            "Marco Frailis",
                            "2023-08-04T15:10:16.000+00:00",
                            "d3fb59c554610682a65c027c071bc400d65c743a"
                        ],
                        [
                            "@@ -2,7 +2,7 @@ from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n from PackageDef_NIR import (\n     runInitialize, badPixMasking, saturation, nonLinearity,\n-    darkSubtract, smallFlatCorrect, doAstromAbsCal, makeAbsoluteCalib,\n+    darkSubtract, smallFlatCorrect, largeFlatCorrect, doAstromAbsCal, makeAbsoluteCalib,\n     psfForDitherAbsCal)\n \n @parallel(iterable=\"ditherExposure\")\n",
                            "Fix syntax errors, and missing parameters.  Pipeline now produces inflight PSFs",
                            "Jeffery Jacobson",
                            "2023-07-29T06:41:24.000-07:00",
                            "36b107202d2bc5cb11eee9b0d21720ddf75a35f2"
                        ],
                        [
                            "@@ -38,6 +38,7 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n \n     abscal = makeAbsoluteCalib(inlist=astrometricCatalogs,\n                                mdbfile=mdb,\n+                               listofpsflists=listofpsflists_dither,\n                                indetcoeff=detectorsPhotomOffsets,\n                                standard_catalog=sourceCatalog)\n \n",
                            "added listofpsflists in makeAbsoluteCalib",
                            "Thomas Gasparetto",
                            "2023-07-18T15:54:33.000+00:00",
                            "f11bd0fadab2d217302b5037c693693028ef2549"
                        ],
                        [
                            "@@ -2,7 +2,8 @@ from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n from PackageDef_NIR import (\n     runInitialize, badPixMasking, saturation, nonLinearity,\n-    darkSubtract, smallFlatCorrect, doAstromAbsCal, makeAbsoluteCalib)\n+    darkSubtract, smallFlatCorrect, doAstromAbsCal, makeAbsoluteCalib,\n+    psfForDitherAbsCal)\n \n @parallel(iterable=\"ditherExposure\")\n def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, badpixel, config, largeflat):\n@@ -25,8 +26,13 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n                              badpixel=badpixel, config=nirConfig, \n                              largeflat=largeflat)\n \n+    listofpsflists_dither = psfForDitherAbsCal(listofimages=largeflats,\n+                                         mdbfile=mdb,\n+                                         config=nirConfig)\n+\n     calibDithers_preLargeScale, astrometricCatalogs, fullcatalog = doAstromAbsCal(listofdithers=largeflats,\n                                   ref_catalog=sourceCatalog,\n+                                  listofpsflists=listofpsflists_dither,\n                                   presolution=presolution,\n                                   config=nirConfig)\n \n",
                            "added PSF task to absolute ph pipeline",
                            "Thomas Gasparetto",
                            "2023-07-17T15:58:37.000+00:00",
                            "07d8532b05eb6e8fde8225efe3f4ff2b7e69c4fc"
                        ],
                        [
                            "@@ -5,32 +5,33 @@ from PackageDef_NIR import (\n     darkSubtract, smallFlatCorrect, doAstromAbsCal, makeAbsoluteCalib)\n \n @parallel(iterable=\"ditherExposure\")\n-def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, badpixel, config):\n+def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, badpixel, config, largeflat):\n     initExposure = runInitialize(infile=ditherExposure, mdbfile=mdb)\n     badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n     satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n     nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb, config=config)\n     darkExposure = darkSubtract(infile=nonlinExposure, masterdark=masterdark)\n-    flatExposure = smallFlatCorrect(infile=darkExposure, masterflat=masterflat)\n-    return flatExposure\n+    smallflatExposure = smallFlatCorrect(infile=darkExposure, masterflat=masterflat)\n+    largeflatExposure = largeFlatCorrect(infile=smallflatExposure, flat=largeflat)\n+    return largeflatExposure\n \n \n @pipeline(outputs=('abscal'))\n def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, badpixel,\n                   sourceCatalog, presolution, detectorsPhotomOffsets):\n \n-    flats = nir_calib_dither(ditherExposure=dithers, mdb=mdb,\n+    largeflats = nir_calib_dither(ditherExposure=dithers, mdb=mdb,\n                              masterdark=masterdark, masterflat=masterflat, \n-                             badpixel=badpixel, config=nirConfig)\n+                             badpixel=badpixel, config=nirConfig, \n+                             largeflat=largeflat)\n \n-    calibDithers_preLargeScale, astrometricCatalogs, fullcatalog = doAstromAbsCal(listofdithers=flats,\n+    calibDithers_preLargeScale, astrometricCatalogs, fullcatalog = doAstromAbsCal(listofdithers=largeflats,\n                                   ref_catalog=sourceCatalog,\n                                   presolution=presolution,\n                                   config=nirConfig)\n \n     abscal = makeAbsoluteCalib(inlist=astrometricCatalogs,\n                                mdbfile=mdb,\n-                               inflat=largeflat,\n                                indetcoeff=detectorsPhotomOffsets,\n                                standard_catalog=sourceCatalog)\n \n",
                            "moved large scale flat to preprocessing",
                            "Thomas Gasparetto",
                            "2023-07-17T15:46:03.000+00:00",
                            "0b809871ae208edf4445eee1a096c39ae5b61ea3"
                        ],
                        [
                            "@@ -5,11 +5,11 @@ from PackageDef_NIR import (\n     darkSubtract, smallFlatCorrect, doAstromAbsCal, makeAbsoluteCalib)\n \n @parallel(iterable=\"ditherExposure\")\n-def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, badpixel):\n+def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, badpixel, config):\n     initExposure = runInitialize(infile=ditherExposure, mdbfile=mdb)\n     badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n     satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n-    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb)\n+    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb, config=config)\n     darkExposure = darkSubtract(infile=nonlinExposure, masterdark=masterdark)\n     flatExposure = smallFlatCorrect(infile=darkExposure, masterflat=masterflat)\n     return flatExposure\n@@ -20,7 +20,8 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n                   sourceCatalog, presolution, detectorsPhotomOffsets):\n \n     flats = nir_calib_dither(ditherExposure=dithers, mdb=mdb,\n-                             masterdark=masterdark, masterflat=masterflat, badpixel=badpixel)\n+                             masterdark=masterdark, masterflat=masterflat, \n+                             badpixel=badpixel, config=nirConfig)\n \n     calibDithers_preLargeScale, astrometricCatalogs, fullcatalog = doAstromAbsCal(listofdithers=flats,\n                                   ref_catalog=sourceCatalog,\n",
                            "Merge branch 'cycle18_dm91_fixes' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-05-03T15:11:35.000+00:00",
                            "eb283372eb67490540acf763239f735251196af6"
                        ],
                        [
                            "@@ -5,11 +5,11 @@ from PackageDef_NIR import (\n     darkSubtract, smallFlatCorrect, doAstromAbsCal, makeAbsoluteCalib)\n \n @parallel(iterable=\"ditherExposure\")\n-def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, badpixel):\n+def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, badpixel, config):\n     initExposure = runInitialize(infile=ditherExposure, mdbfile=mdb)\n     badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n     satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n-    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb)\n+    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb, config=config)\n     darkExposure = darkSubtract(infile=nonlinExposure, masterdark=masterdark)\n     flatExposure = smallFlatCorrect(infile=darkExposure, masterflat=masterflat)\n     return flatExposure\n@@ -20,7 +20,8 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n                   sourceCatalog, presolution, detectorsPhotomOffsets):\n \n     flats = nir_calib_dither(ditherExposure=dithers, mdb=mdb,\n-                             masterdark=masterdark, masterflat=masterflat, badpixel=badpixel)\n+                             masterdark=masterdark, masterflat=masterflat, \n+                             badpixel=badpixel, config=nirConfig)\n \n     calibDithers_preLargeScale, astrometricCatalogs, fullcatalog = doAstromAbsCal(listofdithers=flats,\n                                   ref_catalog=sourceCatalog,\n",
                            "Added Non Linearity config pipelines. Skipping Persistence since there's no config file at the moment",
                            "Thomas Gasparetto",
                            "2023-04-26T17:31:04.000+02:00",
                            "41e9e10542414366821871e619ad325cd170641a"
                        ],
                        [
                            "@@ -2,7 +2,7 @@ from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n from PackageDef_NIR import (\n     runInitialize, badPixMasking, saturation, nonLinearity,\n-    darkSubtract, smallFlatCorrect, doAstromCatalogs, makeAbsoluteCalib)\n+    darkSubtract, smallFlatCorrect, doAstromAbsCal, makeAbsoluteCalib)\n \n @parallel(iterable=\"ditherExposure\")\n def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, badpixel):\n@@ -22,7 +22,7 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n     flats = nir_calib_dither(ditherExposure=dithers, mdb=mdb,\n                              masterdark=masterdark, masterflat=masterflat, badpixel=badpixel)\n \n-    calibDithers_preLargeScale, astrometricCatalogs, fullcatalog = doAstromCatalogs(listofdithers=flats,\n+    calibDithers_preLargeScale, astrometricCatalogs, fullcatalog = doAstromAbsCal(listofdithers=flats,\n                                   ref_catalog=sourceCatalog,\n                                   presolution=presolution,\n                                   config=nirConfig)\n",
                            "update resources; new PipDefs for particular tasks",
                            "frizzo",
                            "2022-08-28T18:22:30.000+02:00",
                            "daa1bb97099babff7ff7ece5ed1667cff4733ec5"
                        ],
                        [
                            "@@ -2,7 +2,7 @@ from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n from PackageDef_NIR import (\n     runInitialize, badPixMasking, saturation, nonLinearity,\n-    darkSubtract, smallFlatCorrect, doAstromAbsolutePhoto, makeAbsoluteCalib)\n+    darkSubtract, smallFlatCorrect, doAstromCatalogs, makeAbsoluteCalib)\n \n @parallel(iterable=\"ditherExposure\")\n def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, badpixel):\n@@ -22,8 +22,8 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n     flats = nir_calib_dither(ditherExposure=dithers, mdb=mdb,\n                              masterdark=masterdark, masterflat=masterflat, badpixel=badpixel)\n \n-    calibDithers_preLargeScale, astrometricCatalogs, fullcatalog = doAstromAbsolutePhoto(listofdithers=flats,\n-                                  SIM_catalog=sourceCatalog,\n+    calibDithers_preLargeScale, astrometricCatalogs, fullcatalog = doAstromCatalogs(listofdithers=flats,\n+                                  ref_catalog=sourceCatalog,\n                                   presolution=presolution,\n                                   config=nirConfig)\n \n",
                            "Merge branch 'mfrailis/single_ref_catalog' into 'develop'",
                            "Federico Rizzo",
                            "2022-08-25T13:02:38.000+00:00",
                            "b6d1c9dfc97e07ea9e27420c61b8dd50b403dd58"
                        ],
                        [
                            "@@ -2,7 +2,7 @@ from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n from PackageDef_NIR import (\n     runInitialize, badPixMasking, saturation, nonLinearity,\n-    darkSubtract, smallFlatCorrect, doAstromAbsolutePhoto, makeAbsoluteCalib)\n+    darkSubtract, smallFlatCorrect, doAstromCatalogs, makeAbsoluteCalib)\n \n @parallel(iterable=\"ditherExposure\")\n def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, badpixel):\n@@ -22,8 +22,8 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n     flats = nir_calib_dither(ditherExposure=dithers, mdb=mdb,\n                              masterdark=masterdark, masterflat=masterflat, badpixel=badpixel)\n \n-    calibDithers_preLargeScale, astrometricCatalogs, fullcatalog = doAstromAbsolutePhoto(listofdithers=flats,\n-                                  SIM_catalog=sourceCatalog,\n+    calibDithers_preLargeScale, astrometricCatalogs, fullcatalog = doAstromCatalogs(listofdithers=flats,\n+                                  ref_catalog=sourceCatalog,\n                                   presolution=presolution,\n                                   config=nirConfig)\n \n",
                            "Removing NIR_ProcessField_TU workflow by simplifying the input ports of the Astrometric calibration and the Ghost masking steps. Now the NIR_ProcessField pipeline accepts both a VIS stack catalog or a TU catalog",
                            "Marco Frailis",
                            "2022-08-23T16:15:31.000+00:00",
                            "4ac0d3337800354945a5d027eb9f978289094cbe"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/PackageDef_NIR.py": [
                        [
                            "@@ -175,8 +175,8 @@ createScientificDpds = Executable(command=f'E-Run NIR_Utilities {proj_version} N\n # - New executables - #\n doAstromAbsCal = Executable(command=f'E-Run NIR_AstrometricCalibration {proj_version} NIR_DoastromProgram --create-catalogs --create-scamp-plots False --create-check-plots False',\n                             inputs=[Input('listofdithers', content_type='listfile'),\n+                                    Input('listofpsflists', content_type='listfile'),                                    \n                                     Input('ref_catalog', content_type='listfile'),\n-                                    Input('listofpsflists', content_type='listfile'),\n                                     Input('presolution', content_type='listfile'),\n                                     Input('config')],\n                             outputs=[Output(\"listofcaldithers\",  content_type=\"listfile\", mime_type=\"json\"),\n@@ -194,6 +194,16 @@ doAstromSelfCal = Executable(command=f'E-Run NIR_AstrometricCalibration {proj_ve\n                                       Output('fullcatalog', mime_type='fits')],\n                              resources=ComputingResources(cores=1, ram=3.0, walltime=3.0))\n \n+doAstromDistortion = Executable(command=f'E-Run NIR_AstrometricCalibration {proj_version} NIR_DoastromProgram --create-distortion-model',\n+                      inputs=[Input('listofdithers', content_type='listfile'),\n+                              Input('listofpsflists', content_type='listfile'),\n+                              Input('ref_catalog', content_type='listfile'),\n+                              Input('presolution', content_type='listfile'),\n+                              Input('config')],\n+                      outputs=[Output('distortion-model'),\n+                               Output(\"listofcaldithers\",  content_type=\"listfile\", mime_type=\"json\")],\n+                      resources=ComputingResources(cores=1, ram=3.0, walltime=3.0))\n+\n makeAbsoluteCalib = Executable(command=f\"E-Run NIR_AbsolutePhotometry {proj_version} NIR_ComputeAbsolutePhotometry\",\n                              inputs=[Input(\"inlist\", content_type=\"listfile\"),\n                                      Input(\"mdbfile\"),\n@@ -203,15 +213,6 @@ makeAbsoluteCalib = Executable(command=f\"E-Run NIR_AbsolutePhotometry {proj_vers\n                             outputs=[Output(\"product\")],\n                             resources=ComputingResources(cores=1, ram=3.0, walltime=1.0))\n \n-doAstromDistortion = Executable(command=f'E-Run NIR_AstrometricCalibration {proj_version} NIR_DoastromProgram --create-distortion-model',\n-                      inputs=[Input('listofdithers', content_type='listfile'),\n-                              Input('ref_catalog', content_type='listfile'),\n-                              Input('presolution', content_type='listfile'),\n-                              Input('config')],\n-                      outputs=[Output('distortion-model'),\n-                               Output(\"listofcaldithers\",  content_type=\"listfile\", mime_type=\"json\")],\n-                      resources=ComputingResources(cores=1, ram=3.0, walltime=2.0))\n-\n makeMasterDark = Executable(command=f\"E-Run NIR_DarkBiasSubtraction {proj_version} makeNirMasterDark\",\n                           inputs=[Input(\"darklist\", content_type=\"listfile\"), Input(\"config\")],\n                           outputs=[Output(\"outfile\")],\n",
                            "Adding psfForDither to geometric distortion pipeline",
                            "Marco Frailis",
                            "2023-08-28T14:18:04.000+00:00",
                            "649aac7055e3d2ddffeba76f2efe048da565b914"
                        ],
                        [
                            "@@ -2,6 +2,7 @@ from euclidwf.framework.taskdefs import Executable, Input, Output, ComputingReso\n \n \n proj_version = \"\"\n+ec_wrapper = \"EuclidWrapper --forward-ial-api --ecdm_config_xpath='//ConfigurationFile[SubModuleIdentifier=\\'{}\\']/DataContainer/FileName'\"\n \n extractLists2 = Executable(command=f'E-Run NIR_Utilities {proj_version} NIR_ExtractLists',\n                            inputs=[Input('inlist', content_type='listfile')],\n@@ -126,8 +127,9 @@ gsclMasking = Executable(command=f'E-Run NIR_GhostBusters {proj_version} NIR_mas\n                            outputs=[Output('outfile', mime_type='fits')],\n                            resources=ComputingResources(cores=1, ram=3.0, walltime=2.0))\n \n-catalogPhotDither = Executable(command=f'E-Run NIR_CatalogExtraction {proj_version} DitherCatalogExtraction',\n-                               inputs=[Input('infile'), Input('listofpsffiles')],\n+catalogPhotDither = Executable(command=f'E-Run NIR_CatalogExtraction {proj_version} {ec_wrapper} DitherCatalogExtraction',\n+                               inputs=[Input('ecdm_config_xml'), Input('infile'),\n+                                       Input('listofpsffiles')],\n                                outputs=[Output('outputcat', mime_type='fits')],\n                                resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n",
                            "Merge branch 'mfrailis/use_ecwrapper' into 'develop'",
                            "Marco Frailis",
                            "2023-08-28T08:06:21.000+00:00",
                            "52fc241e6ab8aeb1c20434aa897d39a1b924ffc5"
                        ],
                        [
                            "@@ -2,6 +2,7 @@ from euclidwf.framework.taskdefs import Executable, Input, Output, ComputingReso\n \n \n proj_version = \"\"\n+ec_wrapper = \"EuclidWrapper --forward-ial-api --ecdm_config_xpath='//ConfigurationFile[SubModuleIdentifier=\\'{}\\']/DataContainer/FileName'\"\n \n extractLists2 = Executable(command=f'E-Run NIR_Utilities {proj_version} NIR_ExtractLists',\n                            inputs=[Input('inlist', content_type='listfile')],\n@@ -126,8 +127,9 @@ gsclMasking = Executable(command=f'E-Run NIR_GhostBusters {proj_version} NIR_mas\n                            outputs=[Output('outfile', mime_type='fits')],\n                            resources=ComputingResources(cores=1, ram=3.0, walltime=2.0))\n \n-catalogPhotDither = Executable(command=f'E-Run NIR_CatalogExtraction {proj_version} DitherCatalogExtraction',\n-                               inputs=[Input('infile'), Input('listofpsffiles')],\n+catalogPhotDither = Executable(command=f'E-Run NIR_CatalogExtraction {proj_version} {ec_wrapper} DitherCatalogExtraction',\n+                               inputs=[Input('ecdm_config_xml'), Input('infile'),\n+                                       Input('listofpsffiles')],\n                                outputs=[Output('outputcat', mime_type='fits')],\n                                resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n",
                            "Adding configuration file to DitherCatalogExtraction, using the EuclidWrapper",
                            "Marco Frailis",
                            "2023-08-25T20:46:12.000+02:00",
                            "51a09e8ecf44f1f1819984a93603bea6fc134c9c"
                        ],
                        [
                            "@@ -1,84 +1,87 @@\n from euclidwf.framework.taskdefs import Executable, Input, Output, ComputingResources\n \n-extractLists2 = Executable(command='E-Run NIR_Utilities  NIR_ExtractLists',\n+\n+proj_version = \"\"\n+\n+extractLists2 = Executable(command=f'E-Run NIR_Utilities {proj_version} NIR_ExtractLists',\n                            inputs=[Input('inlist', content_type='listfile')],\n                            outputs=[Output('outlist1', content_type='listfile', mime_type='json'),\n                                     Output('outlist2', content_type='listfile', mime_type='json')],\n                            resources=ComputingResources(cores=1, ram=1.0, walltime=1.0))\n \n-combineLists2 = Executable(command='E-Run NIR_Utilities  NIR_CombineLists',\n+combineLists2 = Executable(command=f'E-Run NIR_Utilities {proj_version} NIR_CombineLists',\n                            inputs=[Input('inlist1', content_type='listfile'),\n                                    Input('inlist2', content_type='listfile')],\n                            outputs=[Output('outlist', content_type='listfile', mime_type='json')],\n                            resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n \n-runInitialize = Executable(command='E-Run NIR_Init  NIR_runInitialize',\n+runInitialize = Executable(command=f'E-Run NIR_Init {proj_version} NIR_runInitialize',\n                            inputs=[Input('infile'), Input('mdbfile')],\n                            outputs=[Output('outfile', mime_type='fits')],\n                            resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n # To be used only for Baseline Map pre-processing\n-runInitializeBaseline = Executable(command='E-Run NIR_Init  NIR_runInitialize --no_trim',\n+runInitializeBaseline = Executable(command=f'E-Run NIR_Init {proj_version} NIR_runInitialize --no_trim',\n                            inputs=[Input('infile'), Input('mdbfile')],\n                            outputs=[Output('outfile', mime_type='fits')],\n                            resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-badPixMasking = Executable(command='E-Run NIR_BadPixelMasking  maskBadpixels',\n+badPixMasking = Executable(command=f'E-Run NIR_BadPixelMasking {proj_version} maskBadpixels',\n                            inputs=[Input('infile'), Input('xmlfile')],\n                            outputs=[Output('outfile', mime_type='fits')],\n                            resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-saturation = Executable(command='E-Run NIR_NonLinearSaturation  maskSaturation',\n+saturation = Executable(command=f'E-Run NIR_NonLinearSaturation {proj_version} maskSaturation',\n                         inputs=[Input('infile'), Input('xmlfile')],\n                         outputs=[Output('outfile', mime_type='fits')],\n                         resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-nonLinearity = Executable(command='E-Run NIR_NonLinearSaturation  correctNonlinearity',\n+nonLinearity = Executable(command=f'E-Run NIR_NonLinearSaturation {proj_version} correctNonlinearity',\n                           inputs=[Input('infile'), Input('xmlfile'), Input('config')],\n                           outputs=[Output('outfile', mime_type='fits')],\n-                          resources=ComputingResources(cores=1, ram=20.0, walltime=1.0))\n+                          resources=ComputingResources(cores=1, ram=4.0, vms=20, walltime=1.0))\n \n-darkSubtract = Executable(command='E-Run NIR_DarkBiasSubtraction  darkSubtraction',\n+darkSubtract = Executable(command=f'E-Run NIR_DarkBiasSubtraction {proj_version} darkSubtraction',\n                           inputs=[Input('infile'), Input('masterdark')],\n                           outputs=[Output('outfile', mime_type='fits')],\n                           resources=ComputingResources(cores=1, ram=3.0, walltime=1.0))\n \n-crRejectionSF = Executable(command='E-Run NIR_CrRejectionSingleFrame  NIR_cr_rejection',\n+crRejectionSF = Executable(command=f'E-Run NIR_CrRejectionSingleFrame {proj_version} NIR_cr_rejection',\n                            inputs=[Input('infile'), Input('config')],\n                            outputs=[Output('output', mime_type='fits')],\n                            resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-smallFlatCorrect = Executable(command='E-Run NIR_FlatFieldCorrection  NIR_apply_flat_field_correction',\n+smallFlatCorrect = Executable(command=f'E-Run NIR_FlatFieldCorrection {proj_version} NIR_apply_flat_field_correction',\n                               inputs=[Input('infile'), Input('masterflat')],\n                               outputs=[Output('output', mime_type='fits')],\n                               resources=ComputingResources(cores=1, ram=3.0, walltime=1.0))\n \n-largeFlatCorrect = Executable(command='E-Run NIR_SelfCalib  NIR_Apply',\n+largeFlatCorrect = Executable(command=f'E-Run NIR_SelfCalib {proj_version} NIR_Apply',\n                               inputs=[Input('infile'), Input('flat')],\n                               outputs=[Output('outfile', mime_type='fits')],\n                               resources=ComputingResources(cores=1, ram=3.0, walltime=1.0))\n \n-backEstimate = Executable(command='E-Run NIR_BackgroundEstimation  NIR_estimate_background',\n+backEstimate = Executable(command=f'E-Run NIR_BackgroundEstimation {proj_version} NIR_estimate_background',\n                           inputs=[Input('input')],\n                           outputs=[Output('outputbkg', mime_type='fits')],\n                           resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-psfForDither = Executable(command='E-Run NIR_PointSpreadFunction NIR_PSFModelling --imagetype=dither --psfex_cpp False',\n+psfForDither = Executable(command=f'E-Run NIR_PointSpreadFunction {proj_version} NIR_PSFModelling --imagetype=dither --psfex_cpp False',\n                           inputs=[Input('listofimages', content_type='listfile'),\n                                   Input('mdbfile'), Input('cal_data'), Input('config')],\n                           outputs=[Output('listofpsflists', content_type='listfile', mime_type='json')],\n                           resources=ComputingResources(cores=1, ram=3.0, walltime=3.0))\n \n-psfForDitherAbsCal = Executable(command='E-Run NIR_PointSpreadFunction NIR_PSFModelling --imagetype=dither --psflistcontent all_dithers --psfex_cpp False',\n+psfForDitherAbsCal = Executable(command=f'E-Run NIR_PointSpreadFunction {proj_version} NIR_PSFModelling --imagetype=dither --psflistcontent all_dithers --psfex_cpp False',\n                           inputs=[\n                                 Input('listofimages', content_type='listfile'),\n                                 Input('mdbfile'),\n                                 Input('config')],\n                           outputs=[Output('listofpsflists', content_type='listfile', mime_type='json')],\n-                          resources=ComputingResources(cores=1, ram=3.0, walltime=3.0))\n+                          resources=ComputingResources(cores=1, ram=3.0, walltime=4.0))\n \n \n-doAstrom = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram',\n+doAstrom = Executable(command=f'E-Run NIR_AstrometricCalibration {proj_version} NIR_DoastromProgram',\n                       inputs=[Input('listofdithers', content_type='listfile'),\n                               Input('listofpsflists', content_type='listfile'),\n                               Input('ref_catalog', content_type='listfile'),\n@@ -88,23 +91,23 @@ doAstrom = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromPro\n                                Output('fullcatalog', mime_type='fits')],\n                       resources=ComputingResources(cores=1, ram=3.0, walltime=2.0))\n \n-crRejectionMF = Executable(command='E-Run NIR_CrRejectionMultiFrame  CrRejectMulti',\n+crRejectionMF = Executable(command=f'E-Run NIR_CrRejectionMultiFrame {proj_version} CrRejectMulti',\n                            inputs=[Input('dith_file', content_type='listfile')],\n                            outputs=[Output('dith_file_out', content_type='listfile', mime_type='json')],\n                            resources=ComputingResources(cores=1, ram=4.0, walltime=3.0))\n \n-crDeflag = Executable(command='E-Run NIR_CrRejectionMultiFrame  Deflagging',\n+crDeflag = Executable(command=f'E-Run NIR_CrRejectionMultiFrame {proj_version} Deflagging',\n                            inputs=[Input('input_list', content_type='listfile')],\n                            outputs=[Output('output_list', content_type='listfile', mime_type='json')],\n                            resources=ComputingResources(cores=1, ram=4.0, walltime=2.0))\n \n-relPhotoExp = Executable(command='E-Run NIR_RelativePhotometry  NIR_calculate_relative_exposures',\n+relPhotoExp = Executable(command=f'E-Run NIR_RelativePhotometry {proj_version} NIR_calculate_relative_exposures',\n                          inputs=[Input('in_full_catalog'),\n                                  Input('in_calibration_detectors')],\n                          outputs=[Output('rel_exposure_xml')],\n                          resources=ComputingResources(cores=1, ram=6.0, walltime=4.0))\n \n-relPhotoCalib = Executable(command='E-Run NIR_RelativePhotometry  NIR_apply_relative_calibrations',\n+relPhotoCalib = Executable(command=f'E-Run NIR_RelativePhotometry {proj_version} NIR_apply_relative_calibrations',\n                            inputs=[Input('infile'),\n                                    Input('in_calibration_detectors'),\n                                    Input('in_calibration_exposure'),\n@@ -112,48 +115,48 @@ relPhotoCalib = Executable(command='E-Run NIR_RelativePhotometry  NIR_apply_rela\n                            outputs=[Output('outfile', mime_type='fits')],\n                            resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-absPhotoCalib = Executable(command='E-Run NIR_AbsolutePhotometry  NIR_ApplyAbsolutePhotometry',\n+absPhotoCalib = Executable(command=f'E-Run NIR_AbsolutePhotometry {proj_version} NIR_ApplyAbsolutePhotometry',\n                            inputs=[Input('infile'), Input('cal_data')],\n                            outputs=[Output('outfile', mime_type='fits')],\n                            resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-gsclMasking = Executable(command='E-Run NIR_GhostBusters  NIR_mask_gscl',\n+gsclMasking = Executable(command=f'E-Run NIR_GhostBusters {proj_version} NIR_mask_gscl',\n                            inputs=[Input('infile'), Input('mdbxml'),\n                                    Input('ref_catalog', content_type='listfile')],\n                            outputs=[Output('outfile', mime_type='fits')],\n                            resources=ComputingResources(cores=1, ram=3.0, walltime=2.0))\n \n-catalogPhotDither = Executable(command='E-Run NIR_CatalogExtraction  DitherCatalogExtraction',\n+catalogPhotDither = Executable(command=f'E-Run NIR_CatalogExtraction {proj_version} DitherCatalogExtraction',\n                                inputs=[Input('infile'), Input('listofpsffiles')],\n                                outputs=[Output('outputcat', mime_type='fits')],\n                                resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-doResampling = Executable(command='E-Run NIR_Resampling  NIR_DoresamplProgram',\n+doResampling = Executable(command=f'E-Run NIR_Resampling {proj_version} NIR_DoresamplProgram',\n                           inputs=[Input('listofcaldithers', content_type='listfile'),\n                                   Input('listofbackgrounds', content_type='listfile'),\n                                   Input('config')],\n                           outputs=[Output('listofresampled', content_type='listfile', mime_type='json')],\n                           resources=ComputingResources(cores=1, ram=4.0, walltime=3.0))\n \n-doStacking = Executable(command='E-Run NIR_Stacking  NIR_DostackProgram',\n+doStacking = Executable(command=f'E-Run NIR_Stacking {proj_version} NIR_DostackProgram',\n                         inputs=[Input('listofresampled', content_type='listfile'),\n                                 Input('config')],\n                         outputs=[Output('stackedimage', content_type='listfile', mime_type='json')],\n                         resources=ComputingResources(cores=1, ram=10.0, walltime=2.0))\n \n-psfForStack = Executable(command='E-Run NIR_PointSpreadFunction  NIR_PSFModelling --imagetype=stack --psfex_cpp False',\n+psfForStack = Executable(command=f'E-Run NIR_PointSpreadFunction {proj_version} NIR_PSFModelling --imagetype=stack --psfex_cpp False',\n                          inputs=[Input('listofimages', content_type='listfile'),\n                                  Input('mdbfile'), Input('cal_data'), Input('config')],\n                          outputs=[Output('listofpsflists', content_type='listfile', mime_type='json')],\n                          resources=ComputingResources(cores=1, ram=10.0, walltime=1.0))\n \n-catalogPhotStack = Executable(command='E-Run NIR_CatalogExtraction  StackedCatalogExtraction',\n+catalogPhotStack = Executable(command=f'E-Run NIR_CatalogExtraction {proj_version} StackedCatalogExtraction',\n                               inputs=[Input('infile'),\n                                       Input('listofpsflists', content_type='listfile')],\n                               outputs=[Output('outputcat', mime_type='fits')],\n                               resources=ComputingResources(cores=1, ram=6.0, walltime=1.0))\n \n-createScientificDpds = Executable(command='E-Run NIR_Utilities  NIR_CreateScientificDpds',\n+createScientificDpds = Executable(command=f'E-Run NIR_Utilities {proj_version} NIR_CreateScientificDpds',\n                                   inputs=[Input('cal_images', content_type='listfile'),\n                                           Input('cal_background', content_type='listfile'),\n                                           Input('cal_psf', content_type='listfile'),\n@@ -168,7 +171,7 @@ createScientificDpds = Executable(command='E-Run NIR_Utilities  NIR_CreateScient\n                                   resources=ComputingResources(cores=1, ram=6.0, walltime=1.0))\n \n # - New executables - #\n-doAstromAbsCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs --create-scamp-plots False --create-check-plots False',\n+doAstromAbsCal = Executable(command=f'E-Run NIR_AstrometricCalibration {proj_version} NIR_DoastromProgram --create-catalogs --create-scamp-plots False --create-check-plots False',\n                             inputs=[Input('listofdithers', content_type='listfile'),\n                                     Input('ref_catalog', content_type='listfile'),\n                                     Input('listofpsflists', content_type='listfile'),\n@@ -179,7 +182,7 @@ doAstromAbsCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_Doast\n                                      Output('fullcatalog', mime_type='fits')],\n                             resources=ComputingResources(cores=1, ram=6.0, walltime=24.0))\n \n-doAstromSelfCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs',\n+doAstromSelfCal = Executable(command=f'E-Run NIR_AstrometricCalibration {proj_version} NIR_DoastromProgram --create-catalogs',\n                              inputs=[Input('listofdithers', content_type='listfile'),\n                                      Input('ref_catalog', content_type='listfile'),\n                                      Input('presolution', content_type='listfile'),\n@@ -187,9 +190,9 @@ doAstromSelfCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_Doas\n                              outputs=[Output(\"listofcaldithers\",  content_type=\"listfile\", mime_type=\"json\"),\n                                       Output(\"listofcalcatalogs\", content_type=\"listfile\", mime_type=\"json\"),\n                                       Output('fullcatalog', mime_type='fits')],\n-                             resources=ComputingResources(cores=1, ram=3.0, walltime=2.0))\n+                             resources=ComputingResources(cores=1, ram=3.0, walltime=3.0))\n \n-makeAbsoluteCalib = Executable(command=\"E-Run NIR_AbsolutePhotometry  NIR_ComputeAbsolutePhotometry\",\n+makeAbsoluteCalib = Executable(command=f\"E-Run NIR_AbsolutePhotometry {proj_version} NIR_ComputeAbsolutePhotometry\",\n                              inputs=[Input(\"inlist\", content_type=\"listfile\"),\n                                      Input(\"mdbfile\"),\n                                      Input(\"indetcoeff\"),\n@@ -198,7 +201,7 @@ makeAbsoluteCalib = Executable(command=\"E-Run NIR_AbsolutePhotometry  NIR_Comput\n                             outputs=[Output(\"product\")],\n                             resources=ComputingResources(cores=1, ram=3.0, walltime=1.0))\n \n-doAstromDistortion = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-distortion-model',\n+doAstromDistortion = Executable(command=f'E-Run NIR_AstrometricCalibration {proj_version} NIR_DoastromProgram --create-distortion-model',\n                       inputs=[Input('listofdithers', content_type='listfile'),\n                               Input('ref_catalog', content_type='listfile'),\n                               Input('presolution', content_type='listfile'),\n@@ -207,12 +210,12 @@ doAstromDistortion = Executable(command='E-Run NIR_AstrometricCalibration  NIR_D\n                                Output(\"listofcaldithers\",  content_type=\"listfile\", mime_type=\"json\")],\n                       resources=ComputingResources(cores=1, ram=3.0, walltime=2.0))\n \n-makeMasterDark = Executable(command=\"E-Run NIR_DarkBiasSubtraction  makeNirMasterDark\",\n+makeMasterDark = Executable(command=f\"E-Run NIR_DarkBiasSubtraction {proj_version} makeNirMasterDark\",\n                           inputs=[Input(\"darklist\", content_type=\"listfile\"), Input(\"config\")],\n                           outputs=[Output(\"outfile\")],\n                           resources=ComputingResources(cores=1, ram=10.0, walltime=8.0))\n \n-makeSmallScaleFlat = Executable(command=\"E-Run NIR_FlatFieldCorrection  NIR_construct_master_flat\",\n+makeSmallScaleFlat = Executable(command=f\"E-Run NIR_FlatFieldCorrection {proj_version} NIR_construct_master_flat\",\n                                 inputs=[Input(\"rawflatproducts\", content_type=\"listfile\"),\n                                         Input(\"calibratedrawflats\", content_type=\"listfile\"),\n                                         Input(\"config\"),\n@@ -222,69 +225,69 @@ makeSmallScaleFlat = Executable(command=\"E-Run NIR_FlatFieldCorrection  NIR_cons\n                                 outputs=[Output(\"outputfile\")],\n                                 resources=ComputingResources(cores=1, ram=13.0, walltime=2.0))\n \n-makeNirNLCoefs = Executable(command=\"E-Run NIR_NonLinearSaturation makeNLCoefs\",\n+makeNirNLCoefs = Executable(command=f\"E-Run NIR_NonLinearSaturation {proj_version} makeNLCoefs\",\n                             inputs=[Input(\"mdbfile\"), Input(\"xmllistfile\")],\n                             outputs=[Output(\"nl_coef_xml\"),\n                                      Output(\"nl_cov_xml\")],\n                             resources=ComputingResources(cores=1, ram=20.0, walltime=45.0))\n \n-selectExpos = Executable(command='E-Run NIR_Persistence selectTargetExpos',\n+selectExpos = Executable(command=f'E-Run NIR_Persistence {proj_version} selectTargetExpos',\n                          inputs=[Input('expolist', content_type='listfile'), \n                                  Input('masklist', content_type='listfile')],\n                          outputs=[Output(\"targetlist\",  content_type=\"listfile\", mime_type=\"json\")],\n                          resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n \n-persistenceMask = Executable(command='E-Run NIR_Persistence  createPersistenceImage',\n+persistenceMask = Executable(command=f'E-Run NIR_Persistence {proj_version} createPersistenceImage',\n                              inputs=[Input('infile'), Input('prevlist'), Input('mdbxml')],\n                              outputs=[Output('maskfits', mime_type='fits')],\n                              resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n \n-createPersistenceXml = Executable(command='E-Run NIR_Utilities  NIR_CreateDpds',\n+createPersistenceXml = Executable(command=f'E-Run NIR_Utilities {proj_version} NIR_CreateDpds',\n                                   inputs=[Input('persistence_mask')],\n                                   outputs=[Output('persistence_mask_xml')],\n                                   resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n \n \n-persistenceApply = Executable(command='E-Run NIR_Persistence  applyPersistenceMask',\n+persistenceApply = Executable(command=f'E-Run NIR_Persistence {proj_version} applyPersistenceMask',\n                           inputs=[Input('infile'), Input('masklist')],\n                           outputs=[Output('outfile', mime_type='fits')],\n                           resources=ComputingResources(cores=1, ram=5.0, walltime=1.0))\n \n-persistenceDiff = Executable(command='E-Run NIR_Persistence computeDiffImage',\n+persistenceDiff = Executable(command=f'E-Run NIR_Persistence {proj_version} computeDiffImage',\n                              inputs=[Input('darkfile'),\n                                      Input('persfile')],\n                              outputs=[Output('outfile', mime_type='fits')],\n                              resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n \n-makeSelfCalib = Executable(command='E-Run NIR_SelfCalib  NIR_Compute',\n+makeSelfCalib = Executable(command=f'E-Run NIR_SelfCalib {proj_version} NIR_Compute',\n                            inputs=[\n                                 Input('inlist', content_type='listfile'),\n                                 Input('inopt'),\n                                 Input('mdbfile')],\n                            outputs=[Output('outflat'), Output('outdetcoeff')],\n-                           resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+                           resources=ComputingResources(cores=1, ram=6.0, walltime=2.0))\n \n # - Duplicated executables - #\n-relPhotoExpSciSelfCal = Executable(command='E-Run NIR_RelativePhotometry  NIR_calculate_relative_exposures',\n+relPhotoExpSciSelfCal = Executable(command=f'E-Run NIR_RelativePhotometry {proj_version} NIR_calculate_relative_exposures',\n                                    inputs=[Input('in_full_catalog'),\n                                            Input('in_calibration_detectors')],\n                                    outputs=[Output('rel_exposure_xml')],\n                                    resources=ComputingResources(cores=1, ram=20.0, walltime=9.0))\n \n-crRejectionMFSciSelfCal = Executable(command='E-Run NIR_CrRejectionMultiFrame  CrRejectMulti',\n+crRejectionMFSciSelfCal = Executable(command=f'E-Run NIR_CrRejectionMultiFrame {proj_version} CrRejectMulti',\n                                      inputs=[Input('dith_file', content_type='listfile')],\n                                      outputs=[Output('dith_file_out', content_type='listfile', mime_type='json')],\n                                      resources=ComputingResources(cores=1, ram=5.0, walltime=6.0))\n \n \n \n-catalogPhotStackSciSelfCal = Executable(command='E-Run NIR_CatalogExtraction  StackedCatalogExtraction',\n+catalogPhotStackSciSelfCal = Executable(command=f'E-Run NIR_CatalogExtraction {proj_version} StackedCatalogExtraction',\n                                         inputs=[Input('infile'),\n                                                 Input('listofpsflists', content_type='listfile')],\n                                         outputs=[Output('outputcat', mime_type='fits')],\n                                         resources=ComputingResources(cores=1, ram=10.0, walltime=1.0))\n \n-createScientificDpdsSciSelfCal = Executable(command='E-Run NIR_Utilities  NIR_CreateScientificDpds',\n+createScientificDpdsSciSelfCal = Executable(command=f'E-Run NIR_Utilities {proj_version} NIR_CreateScientificDpds',\n                                             inputs=[Input('cal_images', content_type='listfile'),\n                                                     Input('cal_background', content_type='listfile'),\n                                                     Input('cal_psf', content_type='listfile'),\n@@ -298,12 +301,12 @@ createScientificDpdsSciSelfCal = Executable(command='E-Run NIR_Utilities  NIR_Cr\n                                                      Output('stk_catalog_xml')],\n                                             resources=ComputingResources(cores=1, ram=10.0, walltime=1.0))\n \n-combineLists1=Executable(command=\"E-Run NIR_Utilities NIR_CombineLists\",\n+combineLists1=Executable(command=f\"E-Run NIR_Utilities {proj_version} NIR_CombineLists\",\n                          inputs=[Input(\"inlist1\", content_type=\"listfile\")],\n                          outputs=[Output(\"outlist\", content_type=\"listfile\", mime_type=\"json\")],\n                          resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-combineLists4=Executable(command=\"E-Run NIR_Utilities NIR_CombineLists\",\n+combineLists4=Executable(command=f\"E-Run NIR_Utilities {proj_version} NIR_CombineLists\",\n                          inputs=[Input(\"inlist1\", content_type=\"listfile\"),\n                                  Input(\"inlist2\", content_type=\"listfile\"),\n                                  Input(\"inlist3\", content_type=\"listfile\"),\n@@ -311,18 +314,18 @@ combineLists4=Executable(command=\"E-Run NIR_Utilities NIR_CombineLists\",\n                          outputs=[Output(\"outlist\", content_type=\"listfile\", mime_type=\"json\")],\n                          resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-makeList1 = Executable(command=\"E-Run NIR_Utilities NIR_MakeList\",\n+makeList1 = Executable(command=f\"E-Run NIR_Utilities {proj_version} NIR_MakeList\",\n                        inputs=[Input(\"infile1\")],\n                        outputs=[Output(\"outlist\", content_type=\"listfile\", mime_type=\"json\")],\n                        resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-makeList2 = Executable(command=\"E-Run NIR_Utilities NIR_MakeList\",\n+makeList2 = Executable(command=f\"E-Run NIR_Utilities {proj_version} NIR_MakeList\",\n                        inputs=[Input(\"infile1\"), \n                                Input(\"infile2\")],\n                        outputs=[Output(\"outlist\", content_type=\"listfile\", mime_type=\"json\")],\n                        resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-makeList4 = Executable(command=\"E-Run NIR_Utilities NIR_MakeList\",\n+makeList4 = Executable(command=f\"E-Run NIR_Utilities {proj_version} NIR_MakeList\",\n                        inputs=[Input(\"infile1\"),\n                                Input(\"infile2\"),\n                                Input(\"infile3\"),\n@@ -330,14 +333,14 @@ makeList4 = Executable(command=\"E-Run NIR_Utilities NIR_MakeList\",\n                        outputs=[Output(\"outlist\", content_type=\"listfile\", mime_type=\"json\")],\n                        resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-makeNirBadPixelsMask = Executable(command=\"E-Run NIR_BadPixelMasking makeNirBadPixels\",\n+makeNirBadPixelsMask = Executable(command=f\"E-Run NIR_BadPixelMasking {proj_version} makeNirBadPixels\",\n                             inputs=[Input(\"mdbfile\"),\n                                     Input(\"inputdatalist\")],\n                             outputs=[Output(\"outfile\")],\n                             resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n                            )\n \n-findDeadPixels = Executable(command=\"E-Run NIR_BadPixelMasking findDeadPixels\",\n+findDeadPixels = Executable(command=f\"E-Run NIR_BadPixelMasking {proj_version} findDeadPixels\",\n                             inputs=[Input(\"mdbfile\"),\n                                     Input(\"config\"),\n                                     Input(\"exposurelist\")],\n@@ -345,7 +348,7 @@ findDeadPixels = Executable(command=\"E-Run NIR_BadPixelMasking findDeadPixels\",\n                             resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n                            )\n  \n-findHotPixels = Executable(command=\"E-Run NIR_BadPixelMasking findHotPixels\",\n+findHotPixels = Executable(command=f\"E-Run NIR_BadPixelMasking {proj_version} findHotPixels\",\n                             inputs=[Input(\"mdbfile\"),\n                                     Input(\"config\"),\n                                     Input(\"exposurelist\")],\n@@ -353,35 +356,35 @@ findHotPixels = Executable(command=\"E-Run NIR_BadPixelMasking findHotPixels\",\n                             resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n                            )\n                                     \n-findZeroQEPixels = Executable(command=\"E-Run NIR_BadPixelMasking findZeroQEPixels\",\n+findZeroQEPixels = Executable(command=f\"E-Run NIR_BadPixelMasking {proj_version} findZeroQEPixels\",\n                             inputs=[Input(\"mdbfile\"),\n                                     Input(\"config\")],\n                             outputs=[Output(\"outfile\")],\n                             resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n                            )\n                                     \n-findLowQEPixels = Executable(command=\"E-Run NIR_BadPixelMasking findLowQEPixels\",\n+findLowQEPixels = Executable(command=f\"E-Run NIR_BadPixelMasking {proj_version} findLowQEPixels\",\n                             inputs=[Input(\"mdbfile\"),\n                                     Input(\"config\")],\n                             outputs=[Output(\"outfile\")],\n                             resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n                            )\n                                     \n-findSuperQEPixels = Executable(command=\"E-Run NIR_BadPixelMasking findSuperQEPixels\",\n+findSuperQEPixels = Executable(command=f\"E-Run NIR_BadPixelMasking {proj_version} findSuperQEPixels\",\n                             inputs=[Input(\"mdbfile\"),\n                                     Input(\"config\")],\n                             outputs=[Output(\"outfile\")],\n                             resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n                            )\n                                     \n-findHighLowBaselinePixels = Executable(command=\"E-Run NIR_BadPixelMasking findHighLowBaselinePixels\",\n+findHighLowBaselinePixels = Executable(command=f\"E-Run NIR_BadPixelMasking {proj_version} findHighLowBaselinePixels\",\n                             inputs=[Input(\"mdbfile\"),\n                                     Input(\"config\")],\n                             outputs=[Output(\"outfile\")],\n                             resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n                            )\n \n-makeBaseline = Executable(command=\"E-Run NIR_Baseline  makeNirBaseline\",\n+makeBaseline = Executable(command=f\"E-Run NIR_Baseline {proj_version} makeNirBaseline\",\n                           inputs=[Input(\"darklist\", content_type=\"listfile\"), Input(\"config\")],\n                           outputs=[Output(\"outfile\")],\n                           resources=ComputingResources(cores=1, ram=6.0, walltime=8.0))\n",
                            "manually fixing conflicts",
                            "Thomas Gasparetto",
                            "2023-08-25T16:26:13.000+02:00",
                            "7f4f54121de845a8eec94c6a6284c3931821454e"
                        ],
                        [
                            "@@ -39,7 +39,7 @@ saturation = Executable(command=f'E-Run NIR_NonLinearSaturation {proj_version} m\n nonLinearity = Executable(command=f'E-Run NIR_NonLinearSaturation {proj_version} correctNonlinearity',\n                           inputs=[Input('infile'), Input('xmlfile'), Input('config')],\n                           outputs=[Output('outfile', mime_type='fits')],\n-                          resources=ComputingResources(cores=1, ram=20.0, walltime=1.0))\n+                          resources=ComputingResources(cores=1, ram=4.0, vms=20, walltime=1.0))\n \n darkSubtract = Executable(command=f'E-Run NIR_DarkBiasSubtraction {proj_version} darkSubtraction',\n                           inputs=[Input('infile'), Input('masterdark')],\n",
                            "Merge branch 'patch_resources_NL' into 'develop'",
                            "Marco Frailis",
                            "2023-08-25T12:38:28.000+00:00",
                            "ff644ad6a045cd1e57a52e4a86578387666d8fe0"
                        ],
                        [
                            "@@ -39,7 +39,7 @@ saturation = Executable(command=f'E-Run NIR_NonLinearSaturation {proj_version} m\n nonLinearity = Executable(command=f'E-Run NIR_NonLinearSaturation {proj_version} correctNonlinearity',\n                           inputs=[Input('infile'), Input('xmlfile'), Input('config')],\n                           outputs=[Output('outfile', mime_type='fits')],\n-                          resources=ComputingResources(cores=1, ram=20.0, walltime=1.0))\n+                          resources=ComputingResources(cores=1, ram=4.0, vms=20, walltime=1.0))\n \n darkSubtract = Executable(command=f'E-Run NIR_DarkBiasSubtraction {proj_version} darkSubtraction',\n                           inputs=[Input('infile'), Input('masterdark')],\n",
                            "updated resources for Non lInearity task after issue 23583",
                            "Thomas Gasparetto",
                            "2023-08-25T09:36:00.000+00:00",
                            "1c384fda490a3090ccfacbf52bc55c37b95cf8d2"
                        ],
                        [
                            "@@ -211,7 +211,10 @@ doAstromDistortion = Executable(command=f'E-Run NIR_AstrometricCalibration {proj\n                       resources=ComputingResources(cores=1, ram=3.0, walltime=2.0))\n \n makeMasterDark = Executable(command=f\"E-Run NIR_DarkBiasSubtraction {proj_version} makeNirMasterDark\",\n-                          inputs=[Input(\"darklist\", content_type=\"listfile\"), Input(\"config\")],\n+                          inputs=[\n+                                Input(\"darklist\", content_type=\"listfile\"), \n+                                Input(\"config\"),\n+                                Input(\"mdbfile\")],\n                           outputs=[Output(\"outfile\")],\n                           resources=ComputingResources(cores=1, ram=10.0, walltime=8.0))\n \n",
                            "MasterDark using MDB file",
                            "Thomas Gasparetto",
                            "2023-08-24T11:38:55.000+00:00",
                            "faa487b12261b4742e3c86614496ba3e91b4da36"
                        ],
                        [
                            "@@ -1,75 +1,78 @@\n from euclidwf.framework.taskdefs import Executable, Input, Output, ComputingResources\n \n-extractLists2 = Executable(command='E-Run NIR_Utilities  NIR_ExtractLists',\n+\n+proj_version = \"\"\n+\n+extractLists2 = Executable(command=f'E-Run NIR_Utilities {proj_version} NIR_ExtractLists',\n                            inputs=[Input('inlist', content_type='listfile')],\n                            outputs=[Output('outlist1', content_type='listfile', mime_type='json'),\n                                     Output('outlist2', content_type='listfile', mime_type='json')],\n                            resources=ComputingResources(cores=1, ram=1.0, walltime=1.0))\n \n-combineLists2 = Executable(command='E-Run NIR_Utilities  NIR_CombineLists',\n+combineLists2 = Executable(command=f'E-Run NIR_Utilities {proj_version} NIR_CombineLists',\n                            inputs=[Input('inlist1', content_type='listfile'),\n                                    Input('inlist2', content_type='listfile')],\n                            outputs=[Output('outlist', content_type='listfile', mime_type='json')],\n                            resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n \n-runInitialize = Executable(command='E-Run NIR_Init  NIR_runInitialize',\n+runInitialize = Executable(command=f'E-Run NIR_Init {proj_version} NIR_runInitialize',\n                            inputs=[Input('infile'), Input('mdbfile')],\n                            outputs=[Output('outfile', mime_type='fits')],\n                            resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n # To be used only for Baseline Map pre-processing\n-runInitializeBaseline = Executable(command='E-Run NIR_Init  NIR_runInitialize --no_trim',\n+runInitializeBaseline = Executable(command=f'E-Run NIR_Init {proj_version} NIR_runInitialize --no_trim',\n                            inputs=[Input('infile'), Input('mdbfile')],\n                            outputs=[Output('outfile', mime_type='fits')],\n                            resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-badPixMasking = Executable(command='E-Run NIR_BadPixelMasking  maskBadpixels',\n+badPixMasking = Executable(command=f'E-Run NIR_BadPixelMasking {proj_version} maskBadpixels',\n                            inputs=[Input('infile'), Input('xmlfile')],\n                            outputs=[Output('outfile', mime_type='fits')],\n                            resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-saturation = Executable(command='E-Run NIR_NonLinearSaturation  maskSaturation',\n+saturation = Executable(command=f'E-Run NIR_NonLinearSaturation {proj_version} maskSaturation',\n                         inputs=[Input('infile'), Input('xmlfile')],\n                         outputs=[Output('outfile', mime_type='fits')],\n                         resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-nonLinearity = Executable(command='E-Run NIR_NonLinearSaturation  correctNonlinearity',\n+nonLinearity = Executable(command=f'E-Run NIR_NonLinearSaturation {proj_version} correctNonlinearity',\n                           inputs=[Input('infile'), Input('xmlfile'), Input('config')],\n                           outputs=[Output('outfile', mime_type='fits')],\n                           resources=ComputingResources(cores=1, ram=20.0, walltime=1.0))\n \n-darkSubtract = Executable(command='E-Run NIR_DarkBiasSubtraction  darkSubtraction',\n+darkSubtract = Executable(command=f'E-Run NIR_DarkBiasSubtraction {proj_version} darkSubtraction',\n                           inputs=[Input('infile'), Input('masterdark')],\n                           outputs=[Output('outfile', mime_type='fits')],\n                           resources=ComputingResources(cores=1, ram=3.0, walltime=1.0))\n \n-crRejectionSF = Executable(command='E-Run NIR_CrRejectionSingleFrame  NIR_cr_rejection',\n+crRejectionSF = Executable(command=f'E-Run NIR_CrRejectionSingleFrame {proj_version} NIR_cr_rejection',\n                            inputs=[Input('infile'), Input('config')],\n                            outputs=[Output('output', mime_type='fits')],\n                            resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-smallFlatCorrect = Executable(command='E-Run NIR_FlatFieldCorrection  NIR_apply_flat_field_correction',\n+smallFlatCorrect = Executable(command=f'E-Run NIR_FlatFieldCorrection {proj_version} NIR_apply_flat_field_correction',\n                               inputs=[Input('infile'), Input('masterflat')],\n                               outputs=[Output('output', mime_type='fits')],\n                               resources=ComputingResources(cores=1, ram=3.0, walltime=1.0))\n \n-largeFlatCorrect = Executable(command='E-Run NIR_SelfCalib  NIR_Apply',\n+largeFlatCorrect = Executable(command=f'E-Run NIR_SelfCalib {proj_version} NIR_Apply',\n                               inputs=[Input('infile'), Input('flat')],\n                               outputs=[Output('outfile', mime_type='fits')],\n                               resources=ComputingResources(cores=1, ram=3.0, walltime=1.0))\n \n-backEstimate = Executable(command='E-Run NIR_BackgroundEstimation  NIR_estimate_background',\n+backEstimate = Executable(command=f'E-Run NIR_BackgroundEstimation {proj_version} NIR_estimate_background',\n                           inputs=[Input('input')],\n                           outputs=[Output('outputbkg', mime_type='fits')],\n                           resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-psfForDither = Executable(command='E-Run NIR_PointSpreadFunction NIR_PSFModelling --imagetype=dither --psfex_cpp False',\n+psfForDither = Executable(command=f'E-Run NIR_PointSpreadFunction {proj_version} NIR_PSFModelling --imagetype=dither --psfex_cpp False',\n                           inputs=[Input('listofimages', content_type='listfile'),\n                                   Input('mdbfile'), Input('cal_data'), Input('config')],\n                           outputs=[Output('listofpsflists', content_type='listfile', mime_type='json')],\n                           resources=ComputingResources(cores=1, ram=3.0, walltime=3.0))\n \n-psfForDitherAbsCal = Executable(command='E-Run NIR_PointSpreadFunction NIR_PSFModelling --imagetype=dither --psflistcontent all_dithers --psfex_cpp False',\n+psfForDitherAbsCal = Executable(command=f'E-Run NIR_PointSpreadFunction {proj_version} NIR_PSFModelling --imagetype=dither --psflistcontent all_dithers --psfex_cpp False',\n                           inputs=[\n                                 Input('listofimages', content_type='listfile'),\n                                 Input('mdbfile'),\n@@ -78,7 +81,7 @@ psfForDitherAbsCal = Executable(command='E-Run NIR_PointSpreadFunction NIR_PSFMo\n                           resources=ComputingResources(cores=1, ram=3.0, walltime=4.0))\n \n \n-doAstrom = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram',\n+doAstrom = Executable(command=f'E-Run NIR_AstrometricCalibration {proj_version} NIR_DoastromProgram',\n                       inputs=[Input('listofdithers', content_type='listfile'),\n                               Input('listofpsflists', content_type='listfile'),\n                               Input('ref_catalog', content_type='listfile'),\n@@ -88,23 +91,23 @@ doAstrom = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromPro\n                                Output('fullcatalog', mime_type='fits')],\n                       resources=ComputingResources(cores=1, ram=3.0, walltime=2.0))\n \n-crRejectionMF = Executable(command='E-Run NIR_CrRejectionMultiFrame  CrRejectMulti',\n+crRejectionMF = Executable(command=f'E-Run NIR_CrRejectionMultiFrame {proj_version} CrRejectMulti',\n                            inputs=[Input('dith_file', content_type='listfile')],\n                            outputs=[Output('dith_file_out', content_type='listfile', mime_type='json')],\n                            resources=ComputingResources(cores=1, ram=4.0, walltime=3.0))\n \n-crDeflag = Executable(command='E-Run NIR_CrRejectionMultiFrame  Deflagging',\n+crDeflag = Executable(command=f'E-Run NIR_CrRejectionMultiFrame {proj_version} Deflagging',\n                            inputs=[Input('input_list', content_type='listfile')],\n                            outputs=[Output('output_list', content_type='listfile', mime_type='json')],\n                            resources=ComputingResources(cores=1, ram=4.0, walltime=2.0))\n \n-relPhotoExp = Executable(command='E-Run NIR_RelativePhotometry  NIR_calculate_relative_exposures',\n+relPhotoExp = Executable(command=f'E-Run NIR_RelativePhotometry {proj_version} NIR_calculate_relative_exposures',\n                          inputs=[Input('in_full_catalog'),\n                                  Input('in_calibration_detectors')],\n                          outputs=[Output('rel_exposure_xml')],\n                          resources=ComputingResources(cores=1, ram=6.0, walltime=4.0))\n \n-relPhotoCalib = Executable(command='E-Run NIR_RelativePhotometry  NIR_apply_relative_calibrations',\n+relPhotoCalib = Executable(command=f'E-Run NIR_RelativePhotometry {proj_version} NIR_apply_relative_calibrations',\n                            inputs=[Input('infile'),\n                                    Input('in_calibration_detectors'),\n                                    Input('in_calibration_exposure'),\n@@ -112,48 +115,48 @@ relPhotoCalib = Executable(command='E-Run NIR_RelativePhotometry  NIR_apply_rela\n                            outputs=[Output('outfile', mime_type='fits')],\n                            resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-absPhotoCalib = Executable(command='E-Run NIR_AbsolutePhotometry  NIR_ApplyAbsolutePhotometry',\n+absPhotoCalib = Executable(command=f'E-Run NIR_AbsolutePhotometry {proj_version} NIR_ApplyAbsolutePhotometry',\n                            inputs=[Input('infile'), Input('cal_data')],\n                            outputs=[Output('outfile', mime_type='fits')],\n                            resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-gsclMasking = Executable(command='E-Run NIR_GhostBusters  NIR_mask_gscl',\n+gsclMasking = Executable(command=f'E-Run NIR_GhostBusters {proj_version} NIR_mask_gscl',\n                            inputs=[Input('infile'), Input('mdbxml'),\n                                    Input('ref_catalog', content_type='listfile')],\n                            outputs=[Output('outfile', mime_type='fits')],\n                            resources=ComputingResources(cores=1, ram=3.0, walltime=2.0))\n \n-catalogPhotDither = Executable(command='E-Run NIR_CatalogExtraction  DitherCatalogExtraction',\n+catalogPhotDither = Executable(command=f'E-Run NIR_CatalogExtraction {proj_version} DitherCatalogExtraction',\n                                inputs=[Input('infile'), Input('listofpsffiles')],\n                                outputs=[Output('outputcat', mime_type='fits')],\n                                resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-doResampling = Executable(command='E-Run NIR_Resampling  NIR_DoresamplProgram',\n+doResampling = Executable(command=f'E-Run NIR_Resampling {proj_version} NIR_DoresamplProgram',\n                           inputs=[Input('listofcaldithers', content_type='listfile'),\n                                   Input('listofbackgrounds', content_type='listfile'),\n                                   Input('config')],\n                           outputs=[Output('listofresampled', content_type='listfile', mime_type='json')],\n                           resources=ComputingResources(cores=1, ram=4.0, walltime=3.0))\n \n-doStacking = Executable(command='E-Run NIR_Stacking  NIR_DostackProgram',\n+doStacking = Executable(command=f'E-Run NIR_Stacking {proj_version} NIR_DostackProgram',\n                         inputs=[Input('listofresampled', content_type='listfile'),\n                                 Input('config')],\n                         outputs=[Output('stackedimage', content_type='listfile', mime_type='json')],\n                         resources=ComputingResources(cores=1, ram=10.0, walltime=2.0))\n \n-psfForStack = Executable(command='E-Run NIR_PointSpreadFunction  NIR_PSFModelling --imagetype=stack --psfex_cpp False',\n+psfForStack = Executable(command=f'E-Run NIR_PointSpreadFunction {proj_version} NIR_PSFModelling --imagetype=stack --psfex_cpp False',\n                          inputs=[Input('listofimages', content_type='listfile'),\n                                  Input('mdbfile'), Input('cal_data'), Input('config')],\n                          outputs=[Output('listofpsflists', content_type='listfile', mime_type='json')],\n                          resources=ComputingResources(cores=1, ram=10.0, walltime=1.0))\n \n-catalogPhotStack = Executable(command='E-Run NIR_CatalogExtraction  StackedCatalogExtraction',\n+catalogPhotStack = Executable(command=f'E-Run NIR_CatalogExtraction {proj_version} StackedCatalogExtraction',\n                               inputs=[Input('infile'),\n                                       Input('listofpsflists', content_type='listfile')],\n                               outputs=[Output('outputcat', mime_type='fits')],\n                               resources=ComputingResources(cores=1, ram=6.0, walltime=1.0))\n \n-createScientificDpds = Executable(command='E-Run NIR_Utilities  NIR_CreateScientificDpds',\n+createScientificDpds = Executable(command=f'E-Run NIR_Utilities {proj_version} NIR_CreateScientificDpds',\n                                   inputs=[Input('cal_images', content_type='listfile'),\n                                           Input('cal_background', content_type='listfile'),\n                                           Input('cal_psf', content_type='listfile'),\n@@ -168,7 +171,7 @@ createScientificDpds = Executable(command='E-Run NIR_Utilities  NIR_CreateScient\n                                   resources=ComputingResources(cores=1, ram=6.0, walltime=1.0))\n \n # - New executables - #\n-doAstromAbsCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs --create-scamp-plots False --create-check-plots False',\n+doAstromAbsCal = Executable(command=f'E-Run NIR_AstrometricCalibration {proj_version} NIR_DoastromProgram --create-catalogs --create-scamp-plots False --create-check-plots False',\n                             inputs=[Input('listofdithers', content_type='listfile'),\n                                     Input('ref_catalog', content_type='listfile'),\n                                     Input('listofpsflists', content_type='listfile'),\n@@ -179,7 +182,7 @@ doAstromAbsCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_Doast\n                                      Output('fullcatalog', mime_type='fits')],\n                             resources=ComputingResources(cores=1, ram=6.0, walltime=24.0))\n \n-doAstromSelfCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs',\n+doAstromSelfCal = Executable(command=f'E-Run NIR_AstrometricCalibration {proj_version} NIR_DoastromProgram --create-catalogs',\n                              inputs=[Input('listofdithers', content_type='listfile'),\n                                      Input('ref_catalog', content_type='listfile'),\n                                      Input('presolution', content_type='listfile'),\n@@ -189,7 +192,7 @@ doAstromSelfCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_Doas\n                                       Output('fullcatalog', mime_type='fits')],\n                              resources=ComputingResources(cores=1, ram=3.0, walltime=3.0))\n \n-makeAbsoluteCalib = Executable(command=\"E-Run NIR_AbsolutePhotometry  NIR_ComputeAbsolutePhotometry\",\n+makeAbsoluteCalib = Executable(command=f\"E-Run NIR_AbsolutePhotometry {proj_version} NIR_ComputeAbsolutePhotometry\",\n                              inputs=[Input(\"inlist\", content_type=\"listfile\"),\n                                      Input(\"mdbfile\"),\n                                      Input(\"indetcoeff\"),\n@@ -198,7 +201,7 @@ makeAbsoluteCalib = Executable(command=\"E-Run NIR_AbsolutePhotometry  NIR_Comput\n                             outputs=[Output(\"product\")],\n                             resources=ComputingResources(cores=1, ram=3.0, walltime=1.0))\n \n-doAstromDistortion = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-distortion-model',\n+doAstromDistortion = Executable(command=f'E-Run NIR_AstrometricCalibration {proj_version} NIR_DoastromProgram --create-distortion-model',\n                       inputs=[Input('listofdithers', content_type='listfile'),\n                               Input('ref_catalog', content_type='listfile'),\n                               Input('presolution', content_type='listfile'),\n@@ -207,12 +210,12 @@ doAstromDistortion = Executable(command='E-Run NIR_AstrometricCalibration  NIR_D\n                                Output(\"listofcaldithers\",  content_type=\"listfile\", mime_type=\"json\")],\n                       resources=ComputingResources(cores=1, ram=3.0, walltime=2.0))\n \n-makeMasterDark = Executable(command=\"E-Run NIR_DarkBiasSubtraction  makeNirMasterDark\",\n+makeMasterDark = Executable(command=f\"E-Run NIR_DarkBiasSubtraction {proj_version} makeNirMasterDark\",\n                           inputs=[Input(\"darklist\", content_type=\"listfile\"), Input(\"config\")],\n                           outputs=[Output(\"outfile\")],\n                           resources=ComputingResources(cores=1, ram=10.0, walltime=8.0))\n \n-makeSmallScaleFlat = Executable(command=\"E-Run NIR_FlatFieldCorrection  NIR_construct_master_flat\",\n+makeSmallScaleFlat = Executable(command=f\"E-Run NIR_FlatFieldCorrection {proj_version} NIR_construct_master_flat\",\n                                 inputs=[Input(\"rawflatproducts\", content_type=\"listfile\"),\n                                         Input(\"calibratedrawflats\", content_type=\"listfile\"),\n                                         Input(\"config\"),\n@@ -222,35 +225,35 @@ makeSmallScaleFlat = Executable(command=\"E-Run NIR_FlatFieldCorrection  NIR_cons\n                                 outputs=[Output(\"outputfile\")],\n                                 resources=ComputingResources(cores=1, ram=13.0, walltime=2.0))\n \n-makeNirNLCoefs = Executable(command=\"E-Run NIR_NonLinearSaturation makeNLCoefs\",\n+makeNirNLCoefs = Executable(command=f\"E-Run NIR_NonLinearSaturation {proj_version} makeNLCoefs\",\n                             inputs=[Input(\"mdbfile\"), Input(\"xmllistfile\")],\n                             outputs=[Output(\"nl_coef_xml\"),\n                                      Output(\"nl_cov_xml\")],\n                             resources=ComputingResources(cores=1, ram=20.0, walltime=45.0))\n \n-selectExpos = Executable(command='E-Run NIR_Persistence selectTargetExpos',\n+selectExpos = Executable(command=f'E-Run NIR_Persistence {proj_version} selectTargetExpos',\n                          inputs=[Input('expolist', content_type='listfile'), \n                                  Input('masklist', content_type='listfile')],\n                          outputs=[Output(\"targetlist\",  content_type=\"listfile\", mime_type=\"json\")],\n                          resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n \n-persistenceMask = Executable(command='E-Run NIR_Persistence  createPersistenceImage',\n+persistenceMask = Executable(command=f'E-Run NIR_Persistence {proj_version} createPersistenceImage',\n                              inputs=[Input('infile'), Input('prevlist'), Input('mdbxml')],\n                              outputs=[Output('maskfits', mime_type='fits')],\n                              resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n \n-createPersistenceXml = Executable(command='E-Run NIR_Utilities  NIR_CreateDpds',\n+createPersistenceXml = Executable(command=f'E-Run NIR_Utilities {proj_version} NIR_CreateDpds',\n                                   inputs=[Input('persistence_mask')],\n                                   outputs=[Output('persistence_mask_xml')],\n                                   resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n \n \n-persistenceApply = Executable(command='E-Run NIR_Persistence  applyPersistenceMask',\n+persistenceApply = Executable(command=f'E-Run NIR_Persistence {proj_version} applyPersistenceMask',\n                           inputs=[Input('infile'), Input('masklist')],\n                           outputs=[Output('outfile', mime_type='fits')],\n                           resources=ComputingResources(cores=1, ram=5.0, walltime=1.0))\n \n-makeSelfCalib = Executable(command='E-Run NIR_SelfCalib  NIR_Compute',\n+makeSelfCalib = Executable(command=f'E-Run NIR_SelfCalib {proj_version} NIR_Compute',\n                            inputs=[\n                                 Input('inlist', content_type='listfile'),\n                                 Input('inopt'),\n@@ -259,26 +262,26 @@ makeSelfCalib = Executable(command='E-Run NIR_SelfCalib  NIR_Compute',\n                            resources=ComputingResources(cores=1, ram=6.0, walltime=2.0))\n \n # - Duplicated executables - #\n-relPhotoExpSciSelfCal = Executable(command='E-Run NIR_RelativePhotometry  NIR_calculate_relative_exposures',\n+relPhotoExpSciSelfCal = Executable(command=f'E-Run NIR_RelativePhotometry {proj_version} NIR_calculate_relative_exposures',\n                                    inputs=[Input('in_full_catalog'),\n                                            Input('in_calibration_detectors')],\n                                    outputs=[Output('rel_exposure_xml')],\n                                    resources=ComputingResources(cores=1, ram=20.0, walltime=9.0))\n \n-crRejectionMFSciSelfCal = Executable(command='E-Run NIR_CrRejectionMultiFrame  CrRejectMulti',\n+crRejectionMFSciSelfCal = Executable(command=f'E-Run NIR_CrRejectionMultiFrame {proj_version} CrRejectMulti',\n                                      inputs=[Input('dith_file', content_type='listfile')],\n                                      outputs=[Output('dith_file_out', content_type='listfile', mime_type='json')],\n                                      resources=ComputingResources(cores=1, ram=5.0, walltime=6.0))\n \n \n \n-catalogPhotStackSciSelfCal = Executable(command='E-Run NIR_CatalogExtraction  StackedCatalogExtraction',\n+catalogPhotStackSciSelfCal = Executable(command=f'E-Run NIR_CatalogExtraction {proj_version} StackedCatalogExtraction',\n                                         inputs=[Input('infile'),\n                                                 Input('listofpsflists', content_type='listfile')],\n                                         outputs=[Output('outputcat', mime_type='fits')],\n                                         resources=ComputingResources(cores=1, ram=10.0, walltime=1.0))\n \n-createScientificDpdsSciSelfCal = Executable(command='E-Run NIR_Utilities  NIR_CreateScientificDpds',\n+createScientificDpdsSciSelfCal = Executable(command=f'E-Run NIR_Utilities {proj_version} NIR_CreateScientificDpds',\n                                             inputs=[Input('cal_images', content_type='listfile'),\n                                                     Input('cal_background', content_type='listfile'),\n                                                     Input('cal_psf', content_type='listfile'),\n@@ -292,12 +295,12 @@ createScientificDpdsSciSelfCal = Executable(command='E-Run NIR_Utilities  NIR_Cr\n                                                      Output('stk_catalog_xml')],\n                                             resources=ComputingResources(cores=1, ram=10.0, walltime=1.0))\n \n-combineLists1=Executable(command=\"E-Run NIR_Utilities NIR_CombineLists\",\n+combineLists1=Executable(command=f\"E-Run NIR_Utilities {proj_version} NIR_CombineLists\",\n                          inputs=[Input(\"inlist1\", content_type=\"listfile\")],\n                          outputs=[Output(\"outlist\", content_type=\"listfile\", mime_type=\"json\")],\n                          resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-combineLists4=Executable(command=\"E-Run NIR_Utilities NIR_CombineLists\",\n+combineLists4=Executable(command=f\"E-Run NIR_Utilities {proj_version} NIR_CombineLists\",\n                          inputs=[Input(\"inlist1\", content_type=\"listfile\"),\n                                  Input(\"inlist2\", content_type=\"listfile\"),\n                                  Input(\"inlist3\", content_type=\"listfile\"),\n@@ -305,12 +308,12 @@ combineLists4=Executable(command=\"E-Run NIR_Utilities NIR_CombineLists\",\n                          outputs=[Output(\"outlist\", content_type=\"listfile\", mime_type=\"json\")],\n                          resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-makeList1 = Executable(command=\"E-Run NIR_Utilities NIR_MakeList\",\n+makeList1 = Executable(command=f\"E-Run NIR_Utilities {proj_version} NIR_MakeList\",\n                        inputs=[Input(\"infile1\")],\n                        outputs=[Output(\"outlist\", content_type=\"listfile\", mime_type=\"json\")],\n                        resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-makeList4 = Executable(command=\"E-Run NIR_Utilities NIR_MakeList\",\n+makeList4 = Executable(command=f\"E-Run NIR_Utilities {proj_version} NIR_MakeList\",\n                        inputs=[Input(\"infile1\"),\n                                Input(\"infile2\"),\n                                Input(\"infile3\"),\n@@ -318,14 +321,14 @@ makeList4 = Executable(command=\"E-Run NIR_Utilities NIR_MakeList\",\n                        outputs=[Output(\"outlist\", content_type=\"listfile\", mime_type=\"json\")],\n                        resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-makeNirBadPixelsMask = Executable(command=\"E-Run NIR_BadPixelMasking makeNirBadPixels\",\n+makeNirBadPixelsMask = Executable(command=f\"E-Run NIR_BadPixelMasking {proj_version} makeNirBadPixels\",\n                             inputs=[Input(\"mdbfile\"),\n                                     Input(\"inputdatalist\")],\n                             outputs=[Output(\"outfile\")],\n                             resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n                            )\n \n-findDeadPixels = Executable(command=\"E-Run NIR_BadPixelMasking findDeadPixels\",\n+findDeadPixels = Executable(command=f\"E-Run NIR_BadPixelMasking {proj_version} findDeadPixels\",\n                             inputs=[Input(\"mdbfile\"),\n                                     Input(\"config\"),\n                                     Input(\"exposurelist\")],\n@@ -333,7 +336,7 @@ findDeadPixels = Executable(command=\"E-Run NIR_BadPixelMasking findDeadPixels\",\n                             resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n                            )\n  \n-findHotPixels = Executable(command=\"E-Run NIR_BadPixelMasking findHotPixels\",\n+findHotPixels = Executable(command=f\"E-Run NIR_BadPixelMasking {proj_version} findHotPixels\",\n                             inputs=[Input(\"mdbfile\"),\n                                     Input(\"config\"),\n                                     Input(\"exposurelist\")],\n@@ -341,35 +344,35 @@ findHotPixels = Executable(command=\"E-Run NIR_BadPixelMasking findHotPixels\",\n                             resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n                            )\n                                     \n-findZeroQEPixels = Executable(command=\"E-Run NIR_BadPixelMasking findZeroQEPixels\",\n+findZeroQEPixels = Executable(command=f\"E-Run NIR_BadPixelMasking {proj_version} findZeroQEPixels\",\n                             inputs=[Input(\"mdbfile\"),\n                                     Input(\"config\")],\n                             outputs=[Output(\"outfile\")],\n                             resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n                            )\n                                     \n-findLowQEPixels = Executable(command=\"E-Run NIR_BadPixelMasking findLowQEPixels\",\n+findLowQEPixels = Executable(command=f\"E-Run NIR_BadPixelMasking {proj_version} findLowQEPixels\",\n                             inputs=[Input(\"mdbfile\"),\n                                     Input(\"config\")],\n                             outputs=[Output(\"outfile\")],\n                             resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n                            )\n                                     \n-findSuperQEPixels = Executable(command=\"E-Run NIR_BadPixelMasking findSuperQEPixels\",\n+findSuperQEPixels = Executable(command=f\"E-Run NIR_BadPixelMasking {proj_version} findSuperQEPixels\",\n                             inputs=[Input(\"mdbfile\"),\n                                     Input(\"config\")],\n                             outputs=[Output(\"outfile\")],\n                             resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n                            )\n                                     \n-findHighLowBaselinePixels = Executable(command=\"E-Run NIR_BadPixelMasking findHighLowBaselinePixels\",\n+findHighLowBaselinePixels = Executable(command=f\"E-Run NIR_BadPixelMasking {proj_version} findHighLowBaselinePixels\",\n                             inputs=[Input(\"mdbfile\"),\n                                     Input(\"config\")],\n                             outputs=[Output(\"outfile\")],\n                             resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n                            )\n \n-makeBaseline = Executable(command=\"E-Run NIR_Baseline  makeNirBaseline\",\n+makeBaseline = Executable(command=f\"E-Run NIR_Baseline {proj_version} makeNirBaseline\",\n                           inputs=[Input(\"darklist\", content_type=\"listfile\"), Input(\"config\")],\n                           outputs=[Output(\"outfile\")],\n                           resources=ComputingResources(cores=1, ram=6.0, walltime=8.0))\n",
                            "Adding proj_version macro to all executables",
                            "Marco Frailis",
                            "2023-08-17T21:29:55.000+00:00",
                            "131c362713001470234df3c4e8f59c3b828ea5b4"
                        ],
                        [
                            "@@ -75,7 +75,7 @@ psfForDitherAbsCal = Executable(command='E-Run NIR_PointSpreadFunction NIR_PSFMo\n                                 Input('mdbfile'),\n                                 Input('config')],\n                           outputs=[Output('listofpsflists', content_type='listfile', mime_type='json')],\n-                          resources=ComputingResources(cores=1, ram=3.0, walltime=3.0))\n+                          resources=ComputingResources(cores=1, ram=3.0, walltime=4.0))\n \n \n doAstrom = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram',\n@@ -187,7 +187,7 @@ doAstromSelfCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_Doas\n                              outputs=[Output(\"listofcaldithers\",  content_type=\"listfile\", mime_type=\"json\"),\n                                       Output(\"listofcalcatalogs\", content_type=\"listfile\", mime_type=\"json\"),\n                                       Output('fullcatalog', mime_type='fits')],\n-                             resources=ComputingResources(cores=1, ram=3.0, walltime=2.0))\n+                             resources=ComputingResources(cores=1, ram=3.0, walltime=3.0))\n \n makeAbsoluteCalib = Executable(command=\"E-Run NIR_AbsolutePhotometry  NIR_ComputeAbsolutePhotometry\",\n                              inputs=[Input(\"inlist\", content_type=\"listfile\"),\n@@ -256,7 +256,7 @@ makeSelfCalib = Executable(command='E-Run NIR_SelfCalib  NIR_Compute',\n                                 Input('inopt'),\n                                 Input('mdbfile')],\n                            outputs=[Output('outflat'), Output('outdetcoeff')],\n-                           resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+                           resources=ComputingResources(cores=1, ram=6.0, walltime=2.0))\n \n # - Duplicated executables - #\n relPhotoExpSciSelfCal = Executable(command='E-Run NIR_RelativePhotometry  NIR_calculate_relative_exposures',\n",
                            "Incrementing some tasks resources, based on recent profiling",
                            "Marco Frailis",
                            "2023-08-17T21:16:42.000+00:00",
                            "ab093f991daa884ca8aa0ff96a5cc3477163b066"
                        ],
                        [
                            "@@ -250,6 +250,12 @@ persistenceApply = Executable(command='E-Run NIR_Persistence  applyPersistenceMa\n                           outputs=[Output('outfile', mime_type='fits')],\n                           resources=ComputingResources(cores=1, ram=5.0, walltime=1.0))\n \n+persistenceDiff = Executable(command='E-Run NIR_Persistence computeDiffImage',\n+                             inputs=[Input('darkfile'),\n+                                     Input('persfile')],\n+                             outputs=[Output('outfile', mime_type='fits')],\n+                             resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+\n makeSelfCalib = Executable(command='E-Run NIR_SelfCalib  NIR_Compute',\n                            inputs=[\n                                 Input('inlist', content_type='listfile'),\n@@ -310,6 +316,12 @@ makeList1 = Executable(command=\"E-Run NIR_Utilities NIR_MakeList\",\n                        outputs=[Output(\"outlist\", content_type=\"listfile\", mime_type=\"json\")],\n                        resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n+makeList2 = Executable(command=\"E-Run NIR_Utilities NIR_MakeList\",\n+                       inputs=[Input(\"infile1\"), \n+                               Input(\"infile2\")],\n+                       outputs=[Output(\"outlist\", content_type=\"listfile\", mime_type=\"json\")],\n+                       resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n+\n makeList4 = Executable(command=\"E-Run NIR_Utilities NIR_MakeList\",\n                        inputs=[Input(\"infile1\"),\n                                Input(\"infile2\"),\n",
                            "first test of a Persistence pipeline for CALBLOCK-016",
                            "Thomas Gasparetto",
                            "2023-08-17T11:44:00.000+02:00",
                            "7f3fcbbe0690af2389b5c530e2380a26002c4448"
                        ],
                        [
                            "@@ -250,9 +250,10 @@ persistenceApply = Executable(command='E-Run NIR_Persistence  applyPersistenceMa\n                           outputs=[Output('outfile', mime_type='fits')],\n                           resources=ComputingResources(cores=1, ram=5.0, walltime=1.0))\n \n-makeSelfCalib = Executable(command='E-Run NIR_SelfCalib  NIR_Compute --disableinterpolation 1 --ncoeff 10',\n+makeSelfCalib = Executable(command='E-Run NIR_SelfCalib  NIR_Compute',\n                            inputs=[\n                                 Input('inlist', content_type='listfile'),\n+                                Input('inopt'),\n                                 Input('mdbfile')],\n                            outputs=[Output('outflat'), Output('outdetcoeff')],\n                            resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n",
                            "Merge branch 'feature_selfcal' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-08-14T15:23:11.000+00:00",
                            "c949c3a03a45164a056f5e50203071807027929e"
                        ],
                        [
                            "@@ -189,7 +189,7 @@ doAstromSelfCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_Doas\n                                       Output('fullcatalog', mime_type='fits')],\n                              resources=ComputingResources(cores=1, ram=3.0, walltime=2.0))\n \n-makeAbsoluteCalib = Executable(command=\"E-Run NIR_AbsolutePhotometry  NIR_ComputeAbsolutePhotometry --colorcorrect No --abmagrange 'TU_MAG_H_2MASS,15.0,18.5'\",\n+makeAbsoluteCalib = Executable(command=\"E-Run NIR_AbsolutePhotometry  NIR_ComputeAbsolutePhotometry\",\n                              inputs=[Input(\"inlist\", content_type=\"listfile\"),\n                                      Input(\"mdbfile\"),\n                                      Input(\"indetcoeff\"),\n",
                            "Merge branch 'jeff_remove_abmagrange' into 'develop'",
                            "Marco Frailis",
                            "2023-08-14T07:04:49.000+00:00",
                            "dd79f0dd23bc5563f4756ddc071053d2fbfd07ab"
                        ],
                        [
                            "@@ -36,7 +36,7 @@ saturation = Executable(command='E-Run NIR_NonLinearSaturation  maskSaturation',\n nonLinearity = Executable(command='E-Run NIR_NonLinearSaturation  correctNonlinearity',\n                           inputs=[Input('infile'), Input('xmlfile'), Input('config')],\n                           outputs=[Output('outfile', mime_type='fits')],\n-                          resources=ComputingResources(cores=1, ram=5.0, walltime=1.0))\n+                          resources=ComputingResources(cores=1, ram=20.0, walltime=1.0))\n \n darkSubtract = Executable(command='E-Run NIR_DarkBiasSubtraction  darkSubtraction',\n                           inputs=[Input('infile'), Input('masterdark')],\n",
                            "update RAM usage of Non Linearity application task",
                            "Thomas Gasparetto",
                            "2023-08-11T17:05:14.000+00:00",
                            "f76c44d0fec4f95e8ccd22af2bafec95d0f8d287"
                        ],
                        [
                            "@@ -189,7 +189,7 @@ doAstromSelfCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_Doas\n                                       Output('fullcatalog', mime_type='fits')],\n                              resources=ComputingResources(cores=1, ram=3.0, walltime=2.0))\n \n-makeAbsoluteCalib = Executable(command=\"E-Run NIR_AbsolutePhotometry  NIR_ComputeAbsolutePhotometry --colorcorrect No --abmagrange 'TU_MAG_H_2MASS,15.0,18.5'\",\n+makeAbsoluteCalib = Executable(command=\"E-Run NIR_AbsolutePhotometry  NIR_ComputeAbsolutePhotometry\",\n                              inputs=[Input(\"inlist\", content_type=\"listfile\"),\n                                      Input(\"mdbfile\"),\n                                      Input(\"indetcoeff\"),\n",
                            "Remove abmagrange and colorcorrect options from NIR_AbsolutePhotometry package defs",
                            "Jeffery Jacobson",
                            "2023-08-10T06:59:11.000-07:00",
                            "5ddc1b866dbfa256eefa21f71e32b838a3c2422c"
                        ],
                        [
                            "@@ -69,6 +69,15 @@ psfForDither = Executable(command='E-Run NIR_PointSpreadFunction NIR_PSFModellin\n                           outputs=[Output('listofpsflists', content_type='listfile', mime_type='json')],\n                           resources=ComputingResources(cores=1, ram=3.0, walltime=3.0))\n \n+psfForDitherAbsCal = Executable(command='E-Run NIR_PointSpreadFunction NIR_PSFModelling --imagetype=dither --psflistcontent all_dithers --psfex_cpp False',\n+                          inputs=[\n+                                Input('listofimages', content_type='listfile'),\n+                                Input('mdbfile'),\n+                                Input('config')],\n+                          outputs=[Output('listofpsflists', content_type='listfile', mime_type='json')],\n+                          resources=ComputingResources(cores=1, ram=3.0, walltime=3.0))\n+\n+\n doAstrom = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram',\n                       inputs=[Input('listofdithers', content_type='listfile'),\n                               Input('listofpsflists', content_type='listfile'),\n@@ -162,6 +171,7 @@ createScientificDpds = Executable(command='E-Run NIR_Utilities  NIR_CreateScient\n doAstromAbsCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs --create-scamp-plots False --create-check-plots False',\n                             inputs=[Input('listofdithers', content_type='listfile'),\n                                     Input('ref_catalog', content_type='listfile'),\n+                                    Input('listofpsflists', content_type='listfile'),\n                                     Input('presolution', content_type='listfile'),\n                                     Input('config')],\n                             outputs=[Output(\"listofcaldithers\",  content_type=\"listfile\", mime_type=\"json\"),\n@@ -182,8 +192,8 @@ doAstromSelfCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_Doas\n makeAbsoluteCalib = Executable(command=\"E-Run NIR_AbsolutePhotometry  NIR_ComputeAbsolutePhotometry --colorcorrect No --abmagrange 'TU_MAG_H_2MASS,15.0,18.5'\",\n                              inputs=[Input(\"inlist\", content_type=\"listfile\"),\n                                      Input(\"mdbfile\"),\n-                                     Input(\"inflat\"),\n                                      Input(\"indetcoeff\"),\n+                                     Input(\"listofpsflists\", content_type='listfile'),\n                                      Input(\"standard_catalog\", content_type=\"listfile\")],\n                             outputs=[Output(\"product\")],\n                             resources=ComputingResources(cores=1, ram=3.0, walltime=1.0))\n",
                            "Merge branch 'absolute_ph_changes' into 'develop'",
                            "Marco Frailis",
                            "2023-08-04T15:10:16.000+00:00",
                            "d3fb59c554610682a65c027c071bc400d65c743a"
                        ],
                        [
                            "@@ -17,6 +17,12 @@ runInitialize = Executable(command='E-Run NIR_Init  NIR_runInitialize',\n                            outputs=[Output('outfile', mime_type='fits')],\n                            resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n+# To be used only for Baseline Map pre-processing\n+runInitializeBaseline = Executable(command='E-Run NIR_Init  NIR_runInitialize --no_trim',\n+                           inputs=[Input('infile'), Input('mdbfile')],\n+                           outputs=[Output('outfile', mime_type='fits')],\n+                           resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n+\n badPixMasking = Executable(command='E-Run NIR_BadPixelMasking  maskBadpixels',\n                            inputs=[Input('infile'), Input('xmlfile')],\n                            outputs=[Output('outfile', mime_type='fits')],\n@@ -351,3 +357,8 @@ findHighLowBaselinePixels = Executable(command=\"E-Run NIR_BadPixelMasking findHi\n                             outputs=[Output(\"outfile\")],\n                             resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n                            )\n+\n+makeBaseline = Executable(command=\"E-Run NIR_Baseline  makeNirBaseline\",\n+                          inputs=[Input(\"darklist\", content_type=\"listfile\"), Input(\"config\")],\n+                          outputs=[Output(\"outfile\")],\n+                          resources=ComputingResources(cores=1, ram=6.0, walltime=8.0))\n",
                            "Merge branch 'add_baseline_pipeline' into 'develop'",
                            "Marco Frailis",
                            "2023-08-03T07:24:02.000+00:00",
                            "92a42a21a30cc50adf6e12d828f26b9455401e3c"
                        ],
                        [
                            "@@ -63,7 +63,7 @@ psfForDither = Executable(command='E-Run NIR_PointSpreadFunction NIR_PSFModellin\n                           outputs=[Output('listofpsflists', content_type='listfile', mime_type='json')],\n                           resources=ComputingResources(cores=1, ram=3.0, walltime=3.0))\n \n-psfForDitherAbsCal = Executable(command='E-Run NIR_PointSpreadFunction NIR_PSFModelling --imagetype=dither --psfex_cpp False',\n+psfForDitherAbsCal = Executable(command='E-Run NIR_PointSpreadFunction NIR_PSFModelling --imagetype=dither --psflistcontent all_dithers --psfex_cpp False',\n                           inputs=[\n                                 Input('listofimages', content_type='listfile'),\n                                 Input('mdbfile'),\n@@ -165,6 +165,7 @@ createScientificDpds = Executable(command='E-Run NIR_Utilities  NIR_CreateScient\n doAstromAbsCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs --create-scamp-plots False --create-check-plots False',\n                             inputs=[Input('listofdithers', content_type='listfile'),\n                                     Input('ref_catalog', content_type='listfile'),\n+                                    Input('listofpsflists', content_type='listfile'),\n                                     Input('presolution', content_type='listfile'),\n                                     Input('config')],\n                             outputs=[Output(\"listofcaldithers\",  content_type=\"listfile\", mime_type=\"json\"),\n@@ -186,7 +187,7 @@ makeAbsoluteCalib = Executable(command=\"E-Run NIR_AbsolutePhotometry  NIR_Comput\n                              inputs=[Input(\"inlist\", content_type=\"listfile\"),\n                                      Input(\"mdbfile\"),\n                                      Input(\"indetcoeff\"),\n-                                     Input(\"listofpsflists\", content_type='listfile')\n+                                     Input(\"listofpsflists\", content_type='listfile'),\n                                      Input(\"standard_catalog\", content_type=\"listfile\")],\n                             outputs=[Output(\"product\")],\n                             resources=ComputingResources(cores=1, ram=3.0, walltime=1.0))\n",
                            "Fix syntax errors, and missing parameters.  Pipeline now produces inflight PSFs",
                            "Jeffery Jacobson",
                            "2023-07-29T06:41:24.000-07:00",
                            "36b107202d2bc5cb11eee9b0d21720ddf75a35f2"
                        ],
                        [
                            "@@ -234,9 +234,10 @@ persistenceApply = Executable(command='E-Run NIR_Persistence  applyPersistenceMa\n                           outputs=[Output('outfile', mime_type='fits')],\n                           resources=ComputingResources(cores=1, ram=5.0, walltime=1.0))\n \n-makeSelfCalib = Executable(command='E-Run NIR_SelfCalib  NIR_Compute --disableinterpolation 1 --ncoeff 10',\n+makeSelfCalib = Executable(command='E-Run NIR_SelfCalib  NIR_Compute',\n                            inputs=[\n                                 Input('inlist', content_type='listfile'),\n+                                Input('inopt'),\n                                 Input('mdbfile')],\n                            outputs=[Output('outflat'), Output('outdetcoeff')],\n                            resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n",
                            "adding nirConfig to makeselfcal task in Self Cal Pipeline",
                            "Thomas Gasparetto",
                            "2023-07-24T16:05:31.000+02:00",
                            "6b5f7d07ae77d3b15d8e22fd155307e96e0c57b8"
                        ],
                        [
                            "@@ -18,7 +18,7 @@ runInitialize = Executable(command='E-Run NIR_Init  NIR_runInitialize',\n                            resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n # To be used only for Baseline Map pre-processing\n-runInitializeBaseline = Executable(command='E-Run NIR_Init  NIR_runInitializeBaseline',\n+runInitializeBaseline = Executable(command='E-Run NIR_Init  NIR_runInitialize --no_trim',\n                            inputs=[Input('infile'), Input('mdbfile')],\n                            outputs=[Output('outfile', mime_type='fits')],\n                            resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n@@ -361,4 +361,4 @@ findHighLowBaselinePixels = Executable(command=\"E-Run NIR_BadPixelMasking findHi\n makeBaseline = Executable(command=\"E-Run NIR_Baseline  makeNirBaseline\",\n                           inputs=[Input(\"darklist\", content_type=\"listfile\"), Input(\"config\")],\n                           outputs=[Output(\"outfile\")],\n-                          resources=ComputingResources(cores=1, ram=10.0, walltime=8.0))\n+                          resources=ComputingResources(cores=1, ram=6.0, walltime=8.0))\n",
                            "update to baseline after INIT update",
                            "Thomas Gasparetto",
                            "2023-07-21T09:51:41.000+00:00",
                            "c7f79858ad4bd2775f00f9596b37644255c33300"
                        ],
                        [
                            "@@ -18,7 +18,7 @@ runInitialize = Executable(command='E-Run NIR_Init  NIR_runInitialize',\n                            resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n # To be used only for Baseline Map pre-processing\n-runInitializeBaseline = Executable(command='E-Run NIR_Init  NIR_runInitializeBaseline --disabletrimming',\n+runInitializeBaseline = Executable(command='E-Run NIR_Init  NIR_runInitializeBaseline',\n                            inputs=[Input('infile'), Input('mdbfile')],\n                            outputs=[Output('outfile', mime_type='fits')],\n                            resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n@@ -359,6 +359,6 @@ findHighLowBaselinePixels = Executable(command=\"E-Run NIR_BadPixelMasking findHi\n                            )\n \n makeBaseline = Executable(command=\"E-Run NIR_Baseline  makeNirBaseline\",\n-                          inputs=[Input(\"baselinelist\", content_type=\"listfile\"), Input(\"config\")],\n+                          inputs=[Input(\"darklist\", content_type=\"listfile\"), Input(\"config\")],\n                           outputs=[Output(\"outfile\")],\n                           resources=ComputingResources(cores=1, ram=10.0, walltime=8.0))\n",
                            "removed useless steps in baseline pipeline. to be tested soon",
                            "Thomas Gasparetto",
                            "2023-07-20T16:23:54.000+02:00",
                            "c71c480afa86f9ff0ebc0d9c4190b3960fa281c1"
                        ],
                        [
                            "@@ -186,6 +186,7 @@ makeAbsoluteCalib = Executable(command=\"E-Run NIR_AbsolutePhotometry  NIR_Comput\n                              inputs=[Input(\"inlist\", content_type=\"listfile\"),\n                                      Input(\"mdbfile\"),\n                                      Input(\"indetcoeff\"),\n+                                     Input(\"listofpsflists\", content_type='listfile')\n                                      Input(\"standard_catalog\", content_type=\"listfile\")],\n                             outputs=[Output(\"product\")],\n                             resources=ComputingResources(cores=1, ram=3.0, walltime=1.0))\n",
                            "added listofpsflists in makeAbsoluteCalib",
                            "Thomas Gasparetto",
                            "2023-07-18T15:54:33.000+00:00",
                            "f11bd0fadab2d217302b5037c693693028ef2549"
                        ],
                        [
                            "@@ -63,6 +63,15 @@ psfForDither = Executable(command='E-Run NIR_PointSpreadFunction NIR_PSFModellin\n                           outputs=[Output('listofpsflists', content_type='listfile', mime_type='json')],\n                           resources=ComputingResources(cores=1, ram=3.0, walltime=3.0))\n \n+psfForDitherAbsCal = Executable(command='E-Run NIR_PointSpreadFunction NIR_PSFModelling --imagetype=dither --psfex_cpp False',\n+                          inputs=[\n+                                Input('listofimages', content_type='listfile'),\n+                                Input('mdbfile'),\n+                                Input('config')],\n+                          outputs=[Output('listofpsflists', content_type='listfile', mime_type='json')],\n+                          resources=ComputingResources(cores=1, ram=3.0, walltime=3.0))\n+\n+\n doAstrom = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram',\n                       inputs=[Input('listofdithers', content_type='listfile'),\n                               Input('listofpsflists', content_type='listfile'),\n",
                            "added PSF task to absolute ph pipeline",
                            "Thomas Gasparetto",
                            "2023-07-17T15:58:37.000+00:00",
                            "07d8532b05eb6e8fde8225efe3f4ff2b7e69c4fc"
                        ],
                        [
                            "@@ -176,7 +176,6 @@ doAstromSelfCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_Doas\n makeAbsoluteCalib = Executable(command=\"E-Run NIR_AbsolutePhotometry  NIR_ComputeAbsolutePhotometry --colorcorrect No --abmagrange 'TU_MAG_H_2MASS,15.0,18.5'\",\n                              inputs=[Input(\"inlist\", content_type=\"listfile\"),\n                                      Input(\"mdbfile\"),\n-                                     Input(\"inflat\"),\n                                      Input(\"indetcoeff\"),\n                                      Input(\"standard_catalog\", content_type=\"listfile\")],\n                             outputs=[Output(\"product\")],\n",
                            "moved large scale flat to preprocessing",
                            "Thomas Gasparetto",
                            "2023-07-17T15:46:03.000+00:00",
                            "0b809871ae208edf4445eee1a096c39ae5b61ea3"
                        ],
                        [
                            "@@ -153,7 +153,7 @@ createScientificDpds = Executable(command='E-Run NIR_Utilities  NIR_CreateScient\n                                   resources=ComputingResources(cores=1, ram=6.0, walltime=1.0))\n \n # - New executables - #\n-doAstromAbsCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs --use-psf-models False --create-scamp-plots False --create-check-plots False',\n+doAstromAbsCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs --create-scamp-plots False --create-check-plots False',\n                             inputs=[Input('listofdithers', content_type='listfile'),\n                                     Input('ref_catalog', content_type='listfile'),\n                                     Input('presolution', content_type='listfile'),\n@@ -163,7 +163,7 @@ doAstromAbsCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_Doast\n                                      Output('fullcatalog', mime_type='fits')],\n                             resources=ComputingResources(cores=1, ram=6.0, walltime=24.0))\n \n-doAstromSelfCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs --use-psf-models False',\n+doAstromSelfCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs',\n                              inputs=[Input('listofdithers', content_type='listfile'),\n                                      Input('ref_catalog', content_type='listfile'),\n                                      Input('presolution', content_type='listfile'),\n@@ -182,7 +182,7 @@ makeAbsoluteCalib = Executable(command=\"E-Run NIR_AbsolutePhotometry  NIR_Comput\n                             outputs=[Output(\"product\")],\n                             resources=ComputingResources(cores=1, ram=3.0, walltime=1.0))\n \n-doAstromDistortion = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-distortion-model --use-psf-models False --use-presolution False',\n+doAstromDistortion = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-distortion-model',\n                       inputs=[Input('listofdithers', content_type='listfile'),\n                               Input('ref_catalog', content_type='listfile'),\n                               Input('presolution', content_type='listfile'),\n",
                            "Merge branch 'feature_astrometry_ports' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-07-07T11:53:54.000+00:00",
                            "d0a4c0eefd0d885318e8216cff099102dbf8b049"
                        ],
                        [
                            "@@ -153,7 +153,7 @@ createScientificDpds = Executable(command='E-Run NIR_Utilities  NIR_CreateScient\n                                   resources=ComputingResources(cores=1, ram=6.0, walltime=1.0))\n \n # - New executables - #\n-doAstromAbsCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs --use-psf-models False --create-scamp-plots False --create-check-plots False',\n+doAstromAbsCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs --create-scamp-plots False --create-check-plots False',\n                             inputs=[Input('listofdithers', content_type='listfile'),\n                                     Input('ref_catalog', content_type='listfile'),\n                                     Input('presolution', content_type='listfile'),\n@@ -163,7 +163,7 @@ doAstromAbsCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_Doast\n                                      Output('fullcatalog', mime_type='fits')],\n                             resources=ComputingResources(cores=1, ram=6.0, walltime=24.0))\n \n-doAstromSelfCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs --use-psf-models False',\n+doAstromSelfCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs',\n                              inputs=[Input('listofdithers', content_type='listfile'),\n                                      Input('ref_catalog', content_type='listfile'),\n                                      Input('presolution', content_type='listfile'),\n@@ -182,7 +182,7 @@ makeAbsoluteCalib = Executable(command=\"E-Run NIR_AbsolutePhotometry  NIR_Comput\n                             outputs=[Output(\"product\")],\n                             resources=ComputingResources(cores=1, ram=3.0, walltime=1.0))\n \n-doAstromDistortion = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-distortion-model --use-psf-models False --use-presolution False',\n+doAstromDistortion = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-distortion-model',\n                       inputs=[Input('listofdithers', content_type='listfile'),\n                               Input('ref_catalog', content_type='listfile'),\n                               Input('presolution', content_type='listfile'),\n",
                            "changes to PckDef. New handling of flags in the Astrometry PE",
                            "Thomas Gasparetto",
                            "2023-07-07T11:41:04.000+00:00",
                            "843fc8d79402785d7325ad36acb61443765d2766"
                        ],
                        [
                            "@@ -57,7 +57,7 @@ backEstimate = Executable(command='E-Run NIR_BackgroundEstimation  NIR_estimate_\n                           outputs=[Output('outputbkg', mime_type='fits')],\n                           resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-psfForDither = Executable(command='E-Run NIR_PointSpreadFunction NIR_PSFModelling --imagetype=dither',\n+psfForDither = Executable(command='E-Run NIR_PointSpreadFunction NIR_PSFModelling --imagetype=dither --psfex_cpp False',\n                           inputs=[Input('listofimages', content_type='listfile'),\n                                   Input('mdbfile'), Input('cal_data'), Input('config')],\n                           outputs=[Output('listofpsflists', content_type='listfile', mime_type='json')],\n@@ -126,7 +126,7 @@ doStacking = Executable(command='E-Run NIR_Stacking  NIR_DostackProgram',\n                         outputs=[Output('stackedimage', content_type='listfile', mime_type='json')],\n                         resources=ComputingResources(cores=1, ram=10.0, walltime=2.0))\n \n-psfForStack = Executable(command='E-Run NIR_PointSpreadFunction  NIR_PSFModelling --imagetype=stack',\n+psfForStack = Executable(command='E-Run NIR_PointSpreadFunction  NIR_PSFModelling --imagetype=stack --psfex_cpp False',\n                          inputs=[Input('listofimages', content_type='listfile'),\n                                  Input('mdbfile'), Input('cal_data'), Input('config')],\n                          outputs=[Output('listofpsflists', content_type='listfile', mime_type='json')],\n",
                            "Merge branch 'feature_psfex_cpp' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-07-07T10:45:14.000+00:00",
                            "2c3c90b1a75d8bdc95381e29c3984240fe671d08"
                        ],
                        [
                            "@@ -57,7 +57,7 @@ backEstimate = Executable(command='E-Run NIR_BackgroundEstimation  NIR_estimate_\n                           outputs=[Output('outputbkg', mime_type='fits')],\n                           resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n-psfForDither = Executable(command='E-Run NIR_PointSpreadFunction NIR_PSFModelling --imagetype=dither',\n+psfForDither = Executable(command='E-Run NIR_PointSpreadFunction NIR_PSFModelling --imagetype=dither --psfex_cpp False',\n                           inputs=[Input('listofimages', content_type='listfile'),\n                                   Input('mdbfile'), Input('cal_data'), Input('config')],\n                           outputs=[Output('listofpsflists', content_type='listfile', mime_type='json')],\n@@ -126,7 +126,7 @@ doStacking = Executable(command='E-Run NIR_Stacking  NIR_DostackProgram',\n                         outputs=[Output('stackedimage', content_type='listfile', mime_type='json')],\n                         resources=ComputingResources(cores=1, ram=10.0, walltime=2.0))\n \n-psfForStack = Executable(command='E-Run NIR_PointSpreadFunction  NIR_PSFModelling --imagetype=stack',\n+psfForStack = Executable(command='E-Run NIR_PointSpreadFunction  NIR_PSFModelling --imagetype=stack --psfex_cpp False',\n                          inputs=[Input('listofimages', content_type='listfile'),\n                                  Input('mdbfile'), Input('cal_data'), Input('config')],\n                          outputs=[Output('listofpsflists', content_type='listfile', mime_type='json')],\n",
                            "adding psfex_cpp flag. it's will be used (True) once we've tested it",
                            "Thomas Gasparetto",
                            "2023-07-07T10:23:56.000+00:00",
                            "af97a449aa7f5c14333040db697a87cebc4cd267"
                        ],
                        [
                            "@@ -358,7 +358,7 @@ findHighLowBaselinePixels = Executable(command=\"E-Run NIR_BadPixelMasking findHi\n                             resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n                            )\n \n-makeBaselineStack = Executable(command=\"E-Run NIR_BaselineStack  makeNirBaselineStack\",\n+makeBaseline = Executable(command=\"E-Run NIR_Baseline  makeNirBaseline\",\n                           inputs=[Input(\"baselinelist\", content_type=\"listfile\"), Input(\"config\")],\n                           outputs=[Output(\"outfile\")],\n                           resources=ComputingResources(cores=1, ram=10.0, walltime=8.0))\n",
                            "change name to makeBaseline",
                            "Thomas Gasparetto",
                            "2023-07-06T15:05:47.000+00:00",
                            "5bf8008f627ac24cdb85c4bd0707da08d6121ede"
                        ],
                        [
                            "@@ -17,6 +17,12 @@ runInitialize = Executable(command='E-Run NIR_Init  NIR_runInitialize',\n                            outputs=[Output('outfile', mime_type='fits')],\n                            resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n+# To be used only for Baseline Map pre-processing\n+runInitializeBaseline = Executable(command='E-Run NIR_Init  NIR_runInitializeBaseline --disabletrimming',\n+                           inputs=[Input('infile'), Input('mdbfile')],\n+                           outputs=[Output('outfile', mime_type='fits')],\n+                           resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n+\n badPixMasking = Executable(command='E-Run NIR_BadPixelMasking  maskBadpixels',\n                            inputs=[Input('infile'), Input('xmlfile')],\n                            outputs=[Output('outfile', mime_type='fits')],\n@@ -351,3 +357,8 @@ findHighLowBaselinePixels = Executable(command=\"E-Run NIR_BadPixelMasking findHi\n                             outputs=[Output(\"outfile\")],\n                             resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n                            )\n+\n+makeBaselineStack = Executable(command=\"E-Run NIR_BaselineStack  makeNirBaselineStack\",\n+                          inputs=[Input(\"baselinelist\", content_type=\"listfile\"), Input(\"config\")],\n+                          outputs=[Output(\"outfile\")],\n+                          resources=ComputingResources(cores=1, ram=10.0, walltime=8.0))\n",
                            "added init and final task for Baseline. PipScript and PipDef for baseline",
                            "Thomas Gasparetto",
                            "2023-07-04T16:41:23.000+02:00",
                            "8ed228c41ddb9a901cca71ccb0fc1bb2af26fac3"
                        ],
                        [
                            "@@ -234,7 +234,7 @@ persistenceApply = Executable(command='E-Run NIR_Persistence  applyPersistenceMa\n                           outputs=[Output('outfile', mime_type='fits')],\n                           resources=ComputingResources(cores=1, ram=5.0, walltime=1.0))\n \n-makeSelfCalib = Executable(command='E-Run NIR_SelfCalib  NIR_Compute',\n+makeSelfCalib = Executable(command='E-Run NIR_SelfCalib  NIR_Compute --disableinterpolation 1 --ncoeff 10',\n                            inputs=[\n                                 Input('inlist', content_type='listfile'),\n                                 Input('mdbfile')],\n",
                            "SelfCal creation changed. Temporary but necessary. I'll revert back soon.",
                            "Thomas Gasparetto",
                            "2023-06-15T15:03:57.000+00:00",
                            "2052d2ffcbf6d9c6cc8a5bad5a871cbcc476ac09"
                        ],
                        [
                            "@@ -54,7 +54,7 @@ largeFlatCorrect = Executable(command='E-Run NIR_SelfCalib  NIR_Apply',\n \n backEstimate = Executable(command='E-Run NIR_BackgroundEstimation  NIR_estimate_background',\n                           inputs=[Input('input')],\n-                          outputs=[Output('output', mime_type='fits')],\n+                          outputs=[Output('outputbkg', mime_type='fits')],\n                           resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n psfForDither = Executable(command='E-Run NIR_PointSpreadFunction NIR_PSFModelling --imagetype=dither',\n",
                            "update due to restrictions by the infrastructure. There cannot be two PE with the same output name...crazy",
                            "Thomas Gasparetto",
                            "2023-06-14T12:08:25.000+02:00",
                            "2e415bc05f2b35445ab8852f9d82ab2a18642eea"
                        ],
                        [
                            "@@ -182,12 +182,13 @@ makeAbsoluteCalib = Executable(command=\"E-Run NIR_AbsolutePhotometry  NIR_Comput\n                             outputs=[Output(\"product\")],\n                             resources=ComputingResources(cores=1, ram=3.0, walltime=1.0))\n \n-doAstromDistortion = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-distortion-model',\n+doAstromDistortion = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-distortion-model --use-psf-models False --use-presolution False',\n                       inputs=[Input('listofdithers', content_type='listfile'),\n                               Input('ref_catalog', content_type='listfile'),\n                               Input('presolution', content_type='listfile'),\n                               Input('config')],\n-                      outputs=[Output('distortion-model')],\n+                      outputs=[Output('distortion-model'),\n+                               Output(\"listofcaldithers\",  content_type=\"listfile\", mime_type=\"json\")],\n                       resources=ComputingResources(cores=1, ram=3.0, walltime=2.0))\n \n makeMasterDark = Executable(command=\"E-Run NIR_DarkBiasSubtraction  makeNirMasterDark\",\n",
                            "Merge branch 'update_pvrh2_calblock001' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-06-12T10:30:03.000+00:00",
                            "ba582aeaf5e6d62e76c3b9c2edc8016e75d39301"
                        ],
                        [
                            "@@ -182,12 +182,13 @@ makeAbsoluteCalib = Executable(command=\"E-Run NIR_AbsolutePhotometry  NIR_Comput\n                             outputs=[Output(\"product\")],\n                             resources=ComputingResources(cores=1, ram=3.0, walltime=1.0))\n \n-doAstromDistortion = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-distortion-model',\n+doAstromDistortion = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-distortion-model --use-psf-models False --use-presolution False',\n                       inputs=[Input('listofdithers', content_type='listfile'),\n                               Input('ref_catalog', content_type='listfile'),\n                               Input('presolution', content_type='listfile'),\n                               Input('config')],\n-                      outputs=[Output('distortion-model')],\n+                      outputs=[Output('distortion-model'),\n+                               Output(\"listofcaldithers\",  content_type=\"listfile\", mime_type=\"json\")],\n                       resources=ComputingResources(cores=1, ram=3.0, walltime=2.0))\n \n makeMasterDark = Executable(command=\"E-Run NIR_DarkBiasSubtraction  makeNirMasterDark\",\n",
                            "Selfcal and distortion pipelines update",
                            "Thomas Gasparetto",
                            "2023-06-12T10:30:03.000+00:00",
                            "aff0826a1f68b401c5a898f3012bf9c468b88e96"
                        ],
                        [
                            "@@ -211,9 +211,15 @@ makeNirNLCoefs = Executable(command=\"E-Run NIR_NonLinearSaturation makeNLCoefs\",\n                                      Output(\"nl_cov_xml\")],\n                             resources=ComputingResources(cores=1, ram=20.0, walltime=45.0))\n \n-persistenceMask = Executable(command='E-Run NIR_Persistence  NIR_PersistenceFlagCompute',\n-                             inputs=[Input('infile')],\n-                             outputs=[Output('outfile', mime_type='fits')],\n+selectExpos = Executable(command='E-Run NIR_Persistence selectTargetExpos',\n+                         inputs=[Input('expolist', content_type='listfile'), \n+                                 Input('masklist', content_type='listfile')],\n+                         outputs=[Output(\"targetlist\",  content_type=\"listfile\", mime_type=\"json\")],\n+                         resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+\n+persistenceMask = Executable(command='E-Run NIR_Persistence  createPersistenceImage',\n+                             inputs=[Input('infile'), Input('prevlist'), Input('mdbxml')],\n+                             outputs=[Output('maskfits', mime_type='fits')],\n                              resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n \n createPersistenceXml = Executable(command='E-Run NIR_Utilities  NIR_CreateDpds',\n@@ -221,6 +227,12 @@ createPersistenceXml = Executable(command='E-Run NIR_Utilities  NIR_CreateDpds',\n                                   outputs=[Output('persistence_mask_xml')],\n                                   resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n \n+\n+persistenceApply = Executable(command='E-Run NIR_Persistence  applyPersistenceMask',\n+                          inputs=[Input('infile'), Input('masklist')],\n+                          outputs=[Output('outfile', mime_type='fits')],\n+                          resources=ComputingResources(cores=1, ram=5.0, walltime=1.0))\n+\n makeSelfCalib = Executable(command='E-Run NIR_SelfCalib  NIR_Compute',\n                            inputs=[\n                                 Input('inlist', content_type='listfile'),\n",
                            "Merge branch 'persistence_pipeline' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-06-06T13:31:54.000+00:00",
                            "3c33960a4e37208f9e62ac0d6efafa8dc01e0e89"
                        ],
                        [
                            "@@ -211,9 +211,15 @@ makeNirNLCoefs = Executable(command=\"E-Run NIR_NonLinearSaturation makeNLCoefs\",\n                                      Output(\"nl_cov_xml\")],\n                             resources=ComputingResources(cores=1, ram=20.0, walltime=45.0))\n \n-persistenceMask = Executable(command='E-Run NIR_Persistence  NIR_PersistenceFlagCompute',\n-                             inputs=[Input('infile')],\n-                             outputs=[Output('outfile', mime_type='fits')],\n+selectExpos = Executable(command='E-Run NIR_Persistence selectTargetExpos',\n+                         inputs=[Input('expolist', content_type='listfile'), \n+                                 Input('masklist', content_type='listfile')],\n+                         outputs=[Output(\"targetlist\",  content_type=\"listfile\", mime_type=\"json\")],\n+                         resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+\n+persistenceMask = Executable(command='E-Run NIR_Persistence  createPersistenceImage',\n+                             inputs=[Input('infile'), Input('prevlist'), Input('mdbxml')],\n+                             outputs=[Output('maskfits', mime_type='fits')],\n                              resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n \n createPersistenceXml = Executable(command='E-Run NIR_Utilities  NIR_CreateDpds',\n@@ -221,6 +227,12 @@ createPersistenceXml = Executable(command='E-Run NIR_Utilities  NIR_CreateDpds',\n                                   outputs=[Output('persistence_mask_xml')],\n                                   resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n \n+\n+persistenceApply = Executable(command='E-Run NIR_Persistence  applyPersistenceMask',\n+                          inputs=[Input('infile'), Input('masklist')],\n+                          outputs=[Output('outfile', mime_type='fits')],\n+                          resources=ComputingResources(cores=1, ram=5.0, walltime=1.0))\n+\n makeSelfCalib = Executable(command='E-Run NIR_SelfCalib  NIR_Compute',\n                            inputs=[\n                                 Input('inlist', content_type='listfile'),\n",
                            "Persistence pipeline update",
                            "Thomas Gasparetto",
                            "2023-06-06T13:31:54.000+00:00",
                            "fed4493605efad0783166f0ebc97f09f106b8f4c"
                        ],
                        [
                            "@@ -222,7 +222,9 @@ createPersistenceXml = Executable(command='E-Run NIR_Utilities  NIR_CreateDpds',\n                                   resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n \n makeSelfCalib = Executable(command='E-Run NIR_SelfCalib  NIR_Compute',\n-                           inputs=[Input('inlist', content_type='listfile')],\n+                           inputs=[\n+                                Input('inlist', content_type='listfile'),\n+                                Input('mdbfile')],\n                            outputs=[Output('outflat'), Output('outdetcoeff')],\n                            resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n \n",
                            "Update file PackageDef_NIR.py",
                            "Thomas Gasparetto",
                            "2023-06-06T12:48:48.000+00:00",
                            "c6b9a2974ed75790cf76b671d4230b87e922a593"
                        ],
                        [
                            "@@ -28,7 +28,7 @@ saturation = Executable(command='E-Run NIR_NonLinearSaturation  maskSaturation',\n                         resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n nonLinearity = Executable(command='E-Run NIR_NonLinearSaturation  correctNonlinearity',\n-                          inputs=[Input('infile'), Input('xmlfile')],\n+                          inputs=[Input('infile'), Input('xmlfile'), Input('config')],\n                           outputs=[Output('outfile', mime_type='fits')],\n                           resources=ComputingResources(cores=1, ram=5.0, walltime=1.0))\n \n",
                            "Merge branch 'cycle18_dm91_fixes' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-05-03T15:11:35.000+00:00",
                            "eb283372eb67490540acf763239f735251196af6"
                        ],
                        [
                            "@@ -28,7 +28,7 @@ saturation = Executable(command='E-Run NIR_NonLinearSaturation  maskSaturation',\n                         resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n nonLinearity = Executable(command='E-Run NIR_NonLinearSaturation  correctNonlinearity',\n-                          inputs=[Input('infile'), Input('xmlfile')],\n+                          inputs=[Input('infile'), Input('xmlfile'), Input('config')],\n                           outputs=[Output('outfile', mime_type='fits')],\n                           resources=ComputingResources(cores=1, ram=5.0, walltime=1.0))\n \n",
                            "Added Non Linearity config pipelines. Skipping Persistence since there's no config file at the moment",
                            "Thomas Gasparetto",
                            "2023-04-26T17:31:04.000+02:00",
                            "41e9e10542414366821871e619ad325cd170641a"
                        ],
                        [
                            "@@ -259,3 +259,80 @@ createScientificDpdsSciSelfCal = Executable(command='E-Run NIR_Utilities  NIR_Cr\n                                                      Output('stk_image_xml'),\n                                                      Output('stk_catalog_xml')],\n                                             resources=ComputingResources(cores=1, ram=10.0, walltime=1.0))\n+\n+combineLists1=Executable(command=\"E-Run NIR_Utilities NIR_CombineLists\",\n+                         inputs=[Input(\"inlist1\", content_type=\"listfile\")],\n+                         outputs=[Output(\"outlist\", content_type=\"listfile\", mime_type=\"json\")],\n+                         resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n+\n+combineLists4=Executable(command=\"E-Run NIR_Utilities NIR_CombineLists\",\n+                         inputs=[Input(\"inlist1\", content_type=\"listfile\"),\n+                                 Input(\"inlist2\", content_type=\"listfile\"),\n+                                 Input(\"inlist3\", content_type=\"listfile\"),\n+                                 Input(\"inlist4\", content_type=\"listfile\")],\n+                         outputs=[Output(\"outlist\", content_type=\"listfile\", mime_type=\"json\")],\n+                         resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n+\n+makeList1 = Executable(command=\"E-Run NIR_Utilities NIR_MakeList\",\n+                       inputs=[Input(\"infile1\")],\n+                       outputs=[Output(\"outlist\", content_type=\"listfile\", mime_type=\"json\")],\n+                       resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n+\n+makeList4 = Executable(command=\"E-Run NIR_Utilities NIR_MakeList\",\n+                       inputs=[Input(\"infile1\"),\n+                               Input(\"infile2\"),\n+                               Input(\"infile3\"),\n+                               Input(\"infile4\")],\n+                       outputs=[Output(\"outlist\", content_type=\"listfile\", mime_type=\"json\")],\n+                       resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n+\n+makeNirBadPixelsMask = Executable(command=\"E-Run NIR_BadPixelMasking makeNirBadPixels\",\n+                            inputs=[Input(\"mdbfile\"),\n+                                    Input(\"inputdatalist\")],\n+                            outputs=[Output(\"outfile\")],\n+                            resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n+                           )\n+\n+findDeadPixels = Executable(command=\"E-Run NIR_BadPixelMasking findDeadPixels\",\n+                            inputs=[Input(\"mdbfile\"),\n+                                    Input(\"config\"),\n+                                    Input(\"exposurelist\")],\n+                            outputs=[Output(\"outfile\")],\n+                            resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n+                           )\n+ \n+findHotPixels = Executable(command=\"E-Run NIR_BadPixelMasking findHotPixels\",\n+                            inputs=[Input(\"mdbfile\"),\n+                                    Input(\"config\"),\n+                                    Input(\"exposurelist\")],\n+                            outputs=[Output(\"outfile\")],\n+                            resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n+                           )\n+                                    \n+findZeroQEPixels = Executable(command=\"E-Run NIR_BadPixelMasking findZeroQEPixels\",\n+                            inputs=[Input(\"mdbfile\"),\n+                                    Input(\"config\")],\n+                            outputs=[Output(\"outfile\")],\n+                            resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n+                           )\n+                                    \n+findLowQEPixels = Executable(command=\"E-Run NIR_BadPixelMasking findLowQEPixels\",\n+                            inputs=[Input(\"mdbfile\"),\n+                                    Input(\"config\")],\n+                            outputs=[Output(\"outfile\")],\n+                            resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n+                           )\n+                                    \n+findSuperQEPixels = Executable(command=\"E-Run NIR_BadPixelMasking findSuperQEPixels\",\n+                            inputs=[Input(\"mdbfile\"),\n+                                    Input(\"config\")],\n+                            outputs=[Output(\"outfile\")],\n+                            resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n+                           )\n+                                    \n+findHighLowBaselinePixels = Executable(command=\"E-Run NIR_BadPixelMasking findHighLowBaselinePixels\",\n+                            inputs=[Input(\"mdbfile\"),\n+                                    Input(\"config\")],\n+                            outputs=[Output(\"outfile\")],\n+                            resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n+                           )\n",
                            "Merge branch 'feature_BadPixMap' into 'develop'",
                            "Federico Rizzo",
                            "2023-02-28T08:54:45.000+00:00",
                            "a0a4304103636da871a1a3320b8a746fe4292bc5"
                        ],
                        [
                            "@@ -259,3 +259,80 @@ createScientificDpdsSciSelfCal = Executable(command='E-Run NIR_Utilities  NIR_Cr\n                                                      Output('stk_image_xml'),\n                                                      Output('stk_catalog_xml')],\n                                             resources=ComputingResources(cores=1, ram=10.0, walltime=1.0))\n+\n+combineLists1=Executable(command=\"E-Run NIR_Utilities NIR_CombineLists\",\n+                         inputs=[Input(\"inlist1\", content_type=\"listfile\")],\n+                         outputs=[Output(\"outlist\", content_type=\"listfile\", mime_type=\"json\")],\n+                         resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n+\n+combineLists4=Executable(command=\"E-Run NIR_Utilities NIR_CombineLists\",\n+                         inputs=[Input(\"inlist1\", content_type=\"listfile\"),\n+                                 Input(\"inlist2\", content_type=\"listfile\"),\n+                                 Input(\"inlist3\", content_type=\"listfile\"),\n+                                 Input(\"inlist4\", content_type=\"listfile\")],\n+                         outputs=[Output(\"outlist\", content_type=\"listfile\", mime_type=\"json\")],\n+                         resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n+\n+makeList1 = Executable(command=\"E-Run NIR_Utilities NIR_MakeList\",\n+                       inputs=[Input(\"infile1\")],\n+                       outputs=[Output(\"outlist\", content_type=\"listfile\", mime_type=\"json\")],\n+                       resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n+\n+makeList4 = Executable(command=\"E-Run NIR_Utilities NIR_MakeList\",\n+                       inputs=[Input(\"infile1\"),\n+                               Input(\"infile2\"),\n+                               Input(\"infile3\"),\n+                               Input(\"infile4\")],\n+                       outputs=[Output(\"outlist\", content_type=\"listfile\", mime_type=\"json\")],\n+                       resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n+\n+makeNirBadPixelsMask = Executable(command=\"E-Run NIR_BadPixelMasking makeNirBadPixels\",\n+                            inputs=[Input(\"mdbfile\"),\n+                                    Input(\"inputdatalist\")],\n+                            outputs=[Output(\"outfile\")],\n+                            resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n+                           )\n+\n+findDeadPixels = Executable(command=\"E-Run NIR_BadPixelMasking findDeadPixels\",\n+                            inputs=[Input(\"mdbfile\"),\n+                                    Input(\"config\"),\n+                                    Input(\"exposurelist\")],\n+                            outputs=[Output(\"outfile\")],\n+                            resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n+                           )\n+ \n+findHotPixels = Executable(command=\"E-Run NIR_BadPixelMasking findHotPixels\",\n+                            inputs=[Input(\"mdbfile\"),\n+                                    Input(\"config\"),\n+                                    Input(\"exposurelist\")],\n+                            outputs=[Output(\"outfile\")],\n+                            resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n+                           )\n+                                    \n+findZeroQEPixels = Executable(command=\"E-Run NIR_BadPixelMasking findZeroQEPixels\",\n+                            inputs=[Input(\"mdbfile\"),\n+                                    Input(\"config\")],\n+                            outputs=[Output(\"outfile\")],\n+                            resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n+                           )\n+                                    \n+findLowQEPixels = Executable(command=\"E-Run NIR_BadPixelMasking findLowQEPixels\",\n+                            inputs=[Input(\"mdbfile\"),\n+                                    Input(\"config\")],\n+                            outputs=[Output(\"outfile\")],\n+                            resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n+                           )\n+                                    \n+findSuperQEPixels = Executable(command=\"E-Run NIR_BadPixelMasking findSuperQEPixels\",\n+                            inputs=[Input(\"mdbfile\"),\n+                                    Input(\"config\")],\n+                            outputs=[Output(\"outfile\")],\n+                            resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n+                           )\n+                                    \n+findHighLowBaselinePixels = Executable(command=\"E-Run NIR_BadPixelMasking findHighLowBaselinePixels\",\n+                            inputs=[Input(\"mdbfile\"),\n+                                    Input(\"config\")],\n+                            outputs=[Output(\"outfile\")],\n+                            resources=ComputingResources(cores=1, ram=4.0, walltime=2.0)\n+                           )\n",
                            "BadPixelPipelines added",
                            "frizzo",
                            "2023-02-22T16:40:11.000+01:00",
                            "3762bdf8ac7f0e3dd8895eff8bb97fc138507622"
                        ],
                        [
                            "@@ -153,7 +153,7 @@ createScientificDpds = Executable(command='E-Run NIR_Utilities  NIR_CreateScient\n                                   resources=ComputingResources(cores=1, ram=6.0, walltime=1.0))\n \n # - New executables - #\n-doAstromAbsCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs',\n+doAstromAbsCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs --use-psf-models False --create-scamp-plots False --create-check-plots False',\n                             inputs=[Input('listofdithers', content_type='listfile'),\n                                     Input('ref_catalog', content_type='listfile'),\n                                     Input('presolution', content_type='listfile'),\n",
                            "creation of graphs in doAstrom disabled for AstrometricCalib pipeline",
                            "frizzo",
                            "2023-02-06T11:05:06.000+01:00",
                            "f1a2227a24244c7bad6a01f1d903933cd50364fe"
                        ],
                        [
                            "@@ -73,6 +73,16 @@ doAstrom = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromPro\n                                Output('fullcatalog', mime_type='fits')],\n                       resources=ComputingResources(cores=1, ram=3.0, walltime=2.0))\n \n+crRejectionMF = Executable(command='E-Run NIR_CrRejectionMultiFrame  CrRejectMulti',\n+                           inputs=[Input('dith_file', content_type='listfile')],\n+                           outputs=[Output('dith_file_out', content_type='listfile', mime_type='json')],\n+                           resources=ComputingResources(cores=1, ram=4.0, walltime=3.0))\n+\n+crDeflag = Executable(command='E-Run NIR_CrRejectionMultiFrame  Deflagging',\n+                           inputs=[Input('input_list', content_type='listfile')],\n+                           outputs=[Output('output_list', content_type='listfile', mime_type='json')],\n+                           resources=ComputingResources(cores=1, ram=4.0, walltime=2.0))\n+\n relPhotoExp = Executable(command='E-Run NIR_RelativePhotometry  NIR_calculate_relative_exposures',\n                          inputs=[Input('in_full_catalog'),\n                                  Input('in_calibration_detectors')],\n@@ -110,11 +120,6 @@ doResampling = Executable(command='E-Run NIR_Resampling  NIR_DoresamplProgram',\n                           outputs=[Output('listofresampled', content_type='listfile', mime_type='json')],\n                           resources=ComputingResources(cores=1, ram=4.0, walltime=3.0))\n \n-crRejectionMF = Executable(command='E-Run NIR_CrRejectionMultiFrame  CrRejectMulti',\n-                           inputs=[Input('dith_file', content_type='listfile')],\n-                           outputs=[Output('dith_file_out', content_type='listfile', mime_type='json')],\n-                           resources=ComputingResources(cores=1, ram=4.0, walltime=3.0))\n-\n doStacking = Executable(command='E-Run NIR_Stacking  NIR_DostackProgram',\n                         inputs=[Input('listofresampled', content_type='listfile'),\n                                 Input('config')],\n",
                            "Merge branch 'feature_newCRMFposition' into 'develop'",
                            "Federico Rizzo",
                            "2023-01-23T14:25:47.000+00:00",
                            "90458ab03af3294b497cd1d0a12f0acf8a90a584"
                        ],
                        [
                            "@@ -78,9 +78,9 @@ crRejectionMF = Executable(command='E-Run NIR_CrRejectionMultiFrame  CrRejectMul\n                            outputs=[Output('dith_file_out', content_type='listfile', mime_type='json')],\n                            resources=ComputingResources(cores=1, ram=4.0, walltime=3.0))\n \n-crDeflag = Executable(command='E-Run NIR_Deflag  Deflagging',\n-                           inputs=[Input('dith_file', content_type='listfile')],\n-                           outputs=[Output('dith_file_out', content_type='listfile', mime_type='json')],\n+crDeflag = Executable(command='E-Run NIR_CrRejectionMultiFrame  Deflagging',\n+                           inputs=[Input('input_list', content_type='listfile')],\n+                           outputs=[Output('output_list', content_type='listfile', mime_type='json')],\n                            resources=ComputingResources(cores=1, ram=4.0, walltime=2.0))\n \n relPhotoExp = Executable(command='E-Run NIR_RelativePhotometry  NIR_calculate_relative_exposures',\n",
                            "PipScript and PackageDef updated",
                            "frizzo",
                            "2023-01-13T09:49:10.000+01:00",
                            "2056951a442fb8594b9160c4601c172cdfcbdd36"
                        ],
                        [
                            "@@ -158,7 +158,7 @@ doAstromAbsCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_Doast\n                                      Output('fullcatalog', mime_type='fits')],\n                             resources=ComputingResources(cores=1, ram=6.0, walltime=24.0))\n \n-doAstromSelfCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs',\n+doAstromSelfCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs --use-psf-models False',\n                              inputs=[Input('listofdithers', content_type='listfile'),\n                                      Input('ref_catalog', content_type='listfile'),\n                                      Input('presolution', content_type='listfile'),\n",
                            "differentiate call to Astrometry in SelfCal and ProcessFieldSelfCal",
                            "frizzo",
                            "2022-12-26T11:09:00.000+01:00",
                            "1d8fde4c3066373121c0d69aed180c661da4aa9c"
                        ],
                        [
                            "@@ -73,6 +73,16 @@ doAstrom = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromPro\n                                Output('fullcatalog', mime_type='fits')],\n                       resources=ComputingResources(cores=1, ram=3.0, walltime=2.0))\n \n+crRejectionMF = Executable(command='E-Run NIR_CrRejectionMultiFrame  CrRejectMulti',\n+                           inputs=[Input('dith_file', content_type='listfile')],\n+                           outputs=[Output('dith_file_out', content_type='listfile', mime_type='json')],\n+                           resources=ComputingResources(cores=1, ram=4.0, walltime=3.0))\n+\n+crDeflag = Executable(command='E-Run NIR_Deflag  Deflagging',\n+                           inputs=[Input('dith_file', content_type='listfile')],\n+                           outputs=[Output('dith_file_out', content_type='listfile', mime_type='json')],\n+                           resources=ComputingResources(cores=1, ram=4.0, walltime=2.0))\n+\n relPhotoExp = Executable(command='E-Run NIR_RelativePhotometry  NIR_calculate_relative_exposures',\n                          inputs=[Input('in_full_catalog'),\n                                  Input('in_calibration_detectors')],\n@@ -110,11 +120,6 @@ doResampling = Executable(command='E-Run NIR_Resampling  NIR_DoresamplProgram',\n                           outputs=[Output('listofresampled', content_type='listfile', mime_type='json')],\n                           resources=ComputingResources(cores=1, ram=4.0, walltime=3.0))\n \n-crRejectionMF = Executable(command='E-Run NIR_CrRejectionMultiFrame  CrRejectMulti',\n-                           inputs=[Input('dith_file', content_type='listfile')],\n-                           outputs=[Output('dith_file_out', content_type='listfile', mime_type='json')],\n-                           resources=ComputingResources(cores=1, ram=4.0, walltime=3.0))\n-\n doStacking = Executable(command='E-Run NIR_Stacking  NIR_DostackProgram',\n                         inputs=[Input('listofresampled', content_type='listfile'),\n                                 Input('config')],\n",
                            "CRMF on calibrated dithers + deflagging",
                            "ffaustin",
                            "2022-12-15T14:44:10.000+00:00",
                            "a82fb64a99cfa9a7dda671b9c6ceec647346e2c4"
                        ],
                        [
                            "@@ -4,7 +4,7 @@ extractLists2 = Executable(command='E-Run NIR_Utilities  NIR_ExtractLists',\n                            inputs=[Input('inlist', content_type='listfile')],\n                            outputs=[Output('outlist1', content_type='listfile', mime_type='json'),\n                                     Output('outlist2', content_type='listfile', mime_type='json')],\n-                           resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+                           resources=ComputingResources(cores=1, ram=1.0, walltime=1.0))\n \n combineLists2 = Executable(command='E-Run NIR_Utilities  NIR_CombineLists',\n                            inputs=[Input('inlist1', content_type='listfile'),\n@@ -15,53 +15,53 @@ combineLists2 = Executable(command='E-Run NIR_Utilities  NIR_CombineLists',\n runInitialize = Executable(command='E-Run NIR_Init  NIR_runInitialize',\n                            inputs=[Input('infile'), Input('mdbfile')],\n                            outputs=[Output('outfile', mime_type='fits')],\n-                           resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+                           resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n badPixMasking = Executable(command='E-Run NIR_BadPixelMasking  maskBadpixels',\n                            inputs=[Input('infile'), Input('xmlfile')],\n                            outputs=[Output('outfile', mime_type='fits')],\n-                           resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+                           resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n saturation = Executable(command='E-Run NIR_NonLinearSaturation  maskSaturation',\n                         inputs=[Input('infile'), Input('xmlfile')],\n                         outputs=[Output('outfile', mime_type='fits')],\n-                        resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+                        resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n nonLinearity = Executable(command='E-Run NIR_NonLinearSaturation  correctNonlinearity',\n                           inputs=[Input('infile'), Input('xmlfile')],\n                           outputs=[Output('outfile', mime_type='fits')],\n-                          resources=ComputingResources(cores=1, ram=6.0, walltime=1.0))\n+                          resources=ComputingResources(cores=1, ram=5.0, walltime=1.0))\n \n darkSubtract = Executable(command='E-Run NIR_DarkBiasSubtraction  darkSubtraction',\n                           inputs=[Input('infile'), Input('masterdark')],\n                           outputs=[Output('outfile', mime_type='fits')],\n-                          resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+                          resources=ComputingResources(cores=1, ram=3.0, walltime=1.0))\n \n crRejectionSF = Executable(command='E-Run NIR_CrRejectionSingleFrame  NIR_cr_rejection',\n                            inputs=[Input('infile'), Input('config')],\n                            outputs=[Output('output', mime_type='fits')],\n-                           resources=ComputingResources(cores=1, ram=4.0, walltime=2.0))\n+                           resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n smallFlatCorrect = Executable(command='E-Run NIR_FlatFieldCorrection  NIR_apply_flat_field_correction',\n                               inputs=[Input('infile'), Input('masterflat')],\n                               outputs=[Output('output', mime_type='fits')],\n-                              resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+                              resources=ComputingResources(cores=1, ram=3.0, walltime=1.0))\n \n largeFlatCorrect = Executable(command='E-Run NIR_SelfCalib  NIR_Apply',\n                               inputs=[Input('infile'), Input('flat')],\n                               outputs=[Output('outfile', mime_type='fits')],\n-                              resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+                              resources=ComputingResources(cores=1, ram=3.0, walltime=1.0))\n \n backEstimate = Executable(command='E-Run NIR_BackgroundEstimation  NIR_estimate_background',\n                           inputs=[Input('input')],\n                           outputs=[Output('output', mime_type='fits')],\n-                          resources=ComputingResources(cores=1, ram=4.0, walltime=2.0))\n+                          resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n psfForDither = Executable(command='E-Run NIR_PointSpreadFunction NIR_PSFModelling --imagetype=dither',\n                           inputs=[Input('listofimages', content_type='listfile'),\n                                   Input('mdbfile'), Input('cal_data'), Input('config')],\n                           outputs=[Output('listofpsflists', content_type='listfile', mime_type='json')],\n-                          resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+                          resources=ComputingResources(cores=1, ram=3.0, walltime=3.0))\n \n doAstrom = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram',\n                       inputs=[Input('listofdithers', content_type='listfile'),\n@@ -71,13 +71,13 @@ doAstrom = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromPro\n                               Input('config')],\n                       outputs=[Output('listofcaldithers', content_type='listfile', mime_type='json'),\n                                Output('fullcatalog', mime_type='fits')],\n-                      resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+                      resources=ComputingResources(cores=1, ram=3.0, walltime=2.0))\n \n relPhotoExp = Executable(command='E-Run NIR_RelativePhotometry  NIR_calculate_relative_exposures',\n                          inputs=[Input('in_full_catalog'),\n                                  Input('in_calibration_detectors')],\n                          outputs=[Output('rel_exposure_xml')],\n-                         resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+                         resources=ComputingResources(cores=1, ram=6.0, walltime=4.0))\n \n relPhotoCalib = Executable(command='E-Run NIR_RelativePhotometry  NIR_apply_relative_calibrations',\n                            inputs=[Input('infile'),\n@@ -85,53 +85,53 @@ relPhotoCalib = Executable(command='E-Run NIR_RelativePhotometry  NIR_apply_rela\n                                    Input('in_calibration_exposure'),\n                                    Input('in_calibration_field')],\n                            outputs=[Output('outfile', mime_type='fits')],\n-                           resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+                           resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n absPhotoCalib = Executable(command='E-Run NIR_AbsolutePhotometry  NIR_ApplyAbsolutePhotometry',\n                            inputs=[Input('infile'), Input('cal_data')],\n                            outputs=[Output('outfile', mime_type='fits')],\n-                           resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+                           resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n gsclMasking = Executable(command='E-Run NIR_GhostBusters  NIR_mask_gscl',\n                            inputs=[Input('infile'), Input('mdbxml'),\n                                    Input('ref_catalog', content_type='listfile')],\n                            outputs=[Output('outfile', mime_type='fits')],\n-                           resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+                           resources=ComputingResources(cores=1, ram=3.0, walltime=2.0))\n \n catalogPhotDither = Executable(command='E-Run NIR_CatalogExtraction  DitherCatalogExtraction',\n                                inputs=[Input('infile'), Input('listofpsffiles')],\n                                outputs=[Output('outputcat', mime_type='fits')],\n-                               resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+                               resources=ComputingResources(cores=1, ram=2.0, walltime=1.0))\n \n doResampling = Executable(command='E-Run NIR_Resampling  NIR_DoresamplProgram',\n                           inputs=[Input('listofcaldithers', content_type='listfile'),\n                                   Input('listofbackgrounds', content_type='listfile'),\n                                   Input('config')],\n                           outputs=[Output('listofresampled', content_type='listfile', mime_type='json')],\n-                          resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+                          resources=ComputingResources(cores=1, ram=4.0, walltime=3.0))\n \n crRejectionMF = Executable(command='E-Run NIR_CrRejectionMultiFrame  CrRejectMulti',\n                            inputs=[Input('dith_file', content_type='listfile')],\n                            outputs=[Output('dith_file_out', content_type='listfile', mime_type='json')],\n-                           resources=ComputingResources(cores=1, ram=5.0, walltime=1.0))\n+                           resources=ComputingResources(cores=1, ram=4.0, walltime=3.0))\n \n doStacking = Executable(command='E-Run NIR_Stacking  NIR_DostackProgram',\n                         inputs=[Input('listofresampled', content_type='listfile'),\n                                 Input('config')],\n                         outputs=[Output('stackedimage', content_type='listfile', mime_type='json')],\n-                        resources=ComputingResources(cores=1, ram=5.0, walltime=1.0))\n+                        resources=ComputingResources(cores=1, ram=10.0, walltime=2.0))\n \n psfForStack = Executable(command='E-Run NIR_PointSpreadFunction  NIR_PSFModelling --imagetype=stack',\n                          inputs=[Input('listofimages', content_type='listfile'),\n                                  Input('mdbfile'), Input('cal_data'), Input('config')],\n                          outputs=[Output('listofpsflists', content_type='listfile', mime_type='json')],\n-                         resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+                         resources=ComputingResources(cores=1, ram=10.0, walltime=1.0))\n \n catalogPhotStack = Executable(command='E-Run NIR_CatalogExtraction  StackedCatalogExtraction',\n                               inputs=[Input('infile'),\n                                       Input('listofpsflists', content_type='listfile')],\n                               outputs=[Output('outputcat', mime_type='fits')],\n-                              resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+                              resources=ComputingResources(cores=1, ram=6.0, walltime=1.0))\n \n createScientificDpds = Executable(command='E-Run NIR_Utilities  NIR_CreateScientificDpds',\n                                   inputs=[Input('cal_images', content_type='listfile'),\n@@ -145,18 +145,28 @@ createScientificDpds = Executable(command='E-Run NIR_Utilities  NIR_CreateScient\n                                            Output('cal_catalogs_xml', content_type='listfile', mime_type='json'),\n                                            Output('stk_image_xml'),\n                                            Output('stk_catalog_xml')],\n-                                  resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+                                  resources=ComputingResources(cores=1, ram=6.0, walltime=1.0))\n \n # - New executables - #\n-doAstromCatalogs = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs',\n-                              inputs=[Input('listofdithers', content_type='listfile'),\n-                                      Input('ref_catalog', content_type='listfile'),\n-                                      Input('presolution', content_type='listfile'),\n-                                      Input('config')],\n-                              outputs=[Output(\"listofcaldithers\",  content_type=\"listfile\", mime_type=\"json\"),\n-                                       Output(\"listofcalcatalogs\", content_type=\"listfile\", mime_type=\"json\"),\n-                                       Output('fullcatalog', mime_type='fits')],\n-                              resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+doAstromAbsCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs',\n+                            inputs=[Input('listofdithers', content_type='listfile'),\n+                                    Input('ref_catalog', content_type='listfile'),\n+                                    Input('presolution', content_type='listfile'),\n+                                    Input('config')],\n+                            outputs=[Output(\"listofcaldithers\",  content_type=\"listfile\", mime_type=\"json\"),\n+                                     Output(\"listofcalcatalogs\", content_type=\"listfile\", mime_type=\"json\"),\n+                                     Output('fullcatalog', mime_type='fits')],\n+                            resources=ComputingResources(cores=1, ram=6.0, walltime=24.0))\n+\n+doAstromSelfCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs',\n+                             inputs=[Input('listofdithers', content_type='listfile'),\n+                                     Input('ref_catalog', content_type='listfile'),\n+                                     Input('presolution', content_type='listfile'),\n+                                     Input('config')],\n+                             outputs=[Output(\"listofcaldithers\",  content_type=\"listfile\", mime_type=\"json\"),\n+                                      Output(\"listofcalcatalogs\", content_type=\"listfile\", mime_type=\"json\"),\n+                                      Output('fullcatalog', mime_type='fits')],\n+                             resources=ComputingResources(cores=1, ram=3.0, walltime=2.0))\n \n makeAbsoluteCalib = Executable(command=\"E-Run NIR_AbsolutePhotometry  NIR_ComputeAbsolutePhotometry --colorcorrect No --abmagrange 'TU_MAG_H_2MASS,15.0,18.5'\",\n                              inputs=[Input(\"inlist\", content_type=\"listfile\"),\n@@ -165,7 +175,7 @@ makeAbsoluteCalib = Executable(command=\"E-Run NIR_AbsolutePhotometry  NIR_Comput\n                                      Input(\"indetcoeff\"),\n                                      Input(\"standard_catalog\", content_type=\"listfile\")],\n                             outputs=[Output(\"product\")],\n-                            resources=ComputingResources(cores=1, ram=4.0, walltime=6.0))\n+                            resources=ComputingResources(cores=1, ram=3.0, walltime=1.0))\n \n doAstromDistortion = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-distortion-model',\n                       inputs=[Input('listofdithers', content_type='listfile'),\n@@ -173,12 +183,12 @@ doAstromDistortion = Executable(command='E-Run NIR_AstrometricCalibration  NIR_D\n                               Input('presolution', content_type='listfile'),\n                               Input('config')],\n                       outputs=[Output('distortion-model')],\n-                      resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n+                      resources=ComputingResources(cores=1, ram=3.0, walltime=2.0))\n \n makeMasterDark = Executable(command=\"E-Run NIR_DarkBiasSubtraction  makeNirMasterDark\",\n                           inputs=[Input(\"darklist\", content_type=\"listfile\"), Input(\"config\")],\n                           outputs=[Output(\"outfile\")],\n-                          resources=ComputingResources(cores=1, ram=4.0, walltime=2.0))\n+                          resources=ComputingResources(cores=1, ram=10.0, walltime=8.0))\n \n makeSmallScaleFlat = Executable(command=\"E-Run NIR_FlatFieldCorrection  NIR_construct_master_flat\",\n                                 inputs=[Input(\"rawflatproducts\", content_type=\"listfile\"),\n@@ -188,7 +198,7 @@ makeSmallScaleFlat = Executable(command=\"E-Run NIR_FlatFieldCorrection  NIR_cons\n                                         Input(\"badpixelsxml\"),\n                                         Input(\"masterdarkxml\"),],\n                                 outputs=[Output(\"outputfile\")],\n-                                resources=ComputingResources(cores=1, ram=12.0, walltime=1.0))\n+                                resources=ComputingResources(cores=1, ram=13.0, walltime=2.0))\n \n makeNirNLCoefs = Executable(command=\"E-Run NIR_NonLinearSaturation makeNLCoefs\",\n                             inputs=[Input(\"mdbfile\"), Input(\"xmllistfile\")],\n@@ -209,5 +219,38 @@ createPersistenceXml = Executable(command='E-Run NIR_Utilities  NIR_CreateDpds',\n makeSelfCalib = Executable(command='E-Run NIR_SelfCalib  NIR_Compute',\n                            inputs=[Input('inlist', content_type='listfile')],\n                            outputs=[Output('outflat'), Output('outdetcoeff')],\n-                           resources=ComputingResources(cores=1, ram=4.0, walltime=6.0))\n+                           resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n \n+# - Duplicated executables - #\n+relPhotoExpSciSelfCal = Executable(command='E-Run NIR_RelativePhotometry  NIR_calculate_relative_exposures',\n+                                   inputs=[Input('in_full_catalog'),\n+                                           Input('in_calibration_detectors')],\n+                                   outputs=[Output('rel_exposure_xml')],\n+                                   resources=ComputingResources(cores=1, ram=20.0, walltime=9.0))\n+\n+crRejectionMFSciSelfCal = Executable(command='E-Run NIR_CrRejectionMultiFrame  CrRejectMulti',\n+                                     inputs=[Input('dith_file', content_type='listfile')],\n+                                     outputs=[Output('dith_file_out', content_type='listfile', mime_type='json')],\n+                                     resources=ComputingResources(cores=1, ram=5.0, walltime=6.0))\n+\n+\n+\n+catalogPhotStackSciSelfCal = Executable(command='E-Run NIR_CatalogExtraction  StackedCatalogExtraction',\n+                                        inputs=[Input('infile'),\n+                                                Input('listofpsflists', content_type='listfile')],\n+                                        outputs=[Output('outputcat', mime_type='fits')],\n+                                        resources=ComputingResources(cores=1, ram=10.0, walltime=1.0))\n+\n+createScientificDpdsSciSelfCal = Executable(command='E-Run NIR_Utilities  NIR_CreateScientificDpds',\n+                                            inputs=[Input('cal_images', content_type='listfile'),\n+                                                    Input('cal_background', content_type='listfile'),\n+                                                    Input('cal_psf', content_type='listfile'),\n+                                                    Input('cal_catalogs', content_type='listfile'),\n+                                                    Input('stk_image', content_type='listfile'),\n+                                                    Input('stk_psf', content_type='listfile'),\n+                                                    Input('stk_catalog')],\n+                                            outputs=[Output('cal_images_xml', content_type='listfile', mime_type='json'),\n+                                                     Output('cal_catalogs_xml', content_type='listfile', mime_type='json'),\n+                                                     Output('stk_image_xml'),\n+                                                     Output('stk_catalog_xml')],\n+                                            resources=ComputingResources(cores=1, ram=10.0, walltime=1.0))\n",
                            "update resources; new PipDefs for particular tasks",
                            "frizzo",
                            "2022-08-28T18:22:30.000+02:00",
                            "daa1bb97099babff7ff7ece5ed1667cff4733ec5"
                        ],
                        [
                            "@@ -66,7 +66,7 @@ psfForDither = Executable(command='E-Run NIR_PointSpreadFunction NIR_PSFModellin\n doAstrom = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram',\n                       inputs=[Input('listofdithers', content_type='listfile'),\n                               Input('listofpsflists', content_type='listfile'),\n-                              Input('VIS_catalog', content_type='listfile'),\n+                              Input('ref_catalog', content_type='listfile'),\n                               Input('presolution', content_type='listfile'),\n                               Input('config')],\n                       outputs=[Output('listofcaldithers', content_type='listfile', mime_type='json'),\n@@ -94,8 +94,7 @@ absPhotoCalib = Executable(command='E-Run NIR_AbsolutePhotometry  NIR_ApplyAbsol\n \n gsclMasking = Executable(command='E-Run NIR_GhostBusters  NIR_mask_gscl',\n                            inputs=[Input('infile'), Input('mdbxml'),\n-                                   Input('SIM_catalog', content_type='listfile'),\n-                                   Input('VIS_catalog', content_type='listfile')],\n+                                   Input('ref_catalog', content_type='listfile')],\n                            outputs=[Output('outfile', mime_type='fits')],\n                            resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n \n@@ -149,9 +148,9 @@ createScientificDpds = Executable(command='E-Run NIR_Utilities  NIR_CreateScient\n                                   resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n \n # - New executables - #\n-doAstromAbsolutePhoto = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs',\n+doAstromCatalogs = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs',\n                               inputs=[Input('listofdithers', content_type='listfile'),\n-                                      Input('SIM_catalog', content_type='listfile'),\n+                                      Input('ref_catalog', content_type='listfile'),\n                                       Input('presolution', content_type='listfile'),\n                                       Input('config')],\n                               outputs=[Output(\"listofcaldithers\",  content_type=\"listfile\", mime_type=\"json\"),\n@@ -170,7 +169,7 @@ makeAbsoluteCalib = Executable(command=\"E-Run NIR_AbsolutePhotometry  NIR_Comput\n \n doAstromDistortion = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-distortion-model',\n                       inputs=[Input('listofdithers', content_type='listfile'),\n-                              Input('SIM_catalog', content_type='listfile'),\n+                              Input('ref_catalog', content_type='listfile'),\n                               Input('presolution', content_type='listfile'),\n                               Input('config')],\n                       outputs=[Output('distortion-model')],\n@@ -207,33 +206,8 @@ createPersistenceXml = Executable(command='E-Run NIR_Utilities  NIR_CreateDpds',\n                                   outputs=[Output('persistence_mask_xml')],\n                                   resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n \n-doAstromProcessFieldTU = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram',\n-                                    inputs=[Input('listofdithers', content_type='listfile'),\n-                                            Input('listofpsflists', content_type='listfile'),\n-                                            Input('SIM_catalog', content_type='listfile'),\n-                                            Input('presolution', content_type='listfile'),\n-                                            Input('config')],\n-                                    outputs=[Output('listofcaldithers', content_type='listfile', mime_type='json'),\n-                                             Output('fullcatalog', mime_type='fits')],\n-                                    resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n-\n-gsclMaskingProcessFieldTU = Executable(command='E-Run NIR_GhostBusters  NIR_mask_gscl',\n-                                       inputs=[Input('infile'), Input('mdbxml'),\n-                                               Input('SIM_catalog', content_type='listfile')],\n-                                       outputs=[Output('outfile', mime_type='fits')],\n-                                       resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n-\n-doAstromSelfCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs',\n-                             inputs=[Input('listofdithers', content_type='listfile'),\n-                                     Input('SIM_catalog', content_type='listfile'),\n-                                     Input('presolution', content_type='listfile'),\n-                                     Input('config')],\n-                             outputs=[Output(\"listofcaldithers\",  content_type=\"listfile\", mime_type=\"json\"),\n-                                      Output(\"listofcalcatalogs\", content_type=\"listfile\", mime_type=\"json\"),\n-                                      Output('fullcatalog', mime_type='fits')],\n-                             resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n-\n makeSelfCalib = Executable(command='E-Run NIR_SelfCalib  NIR_Compute',\n                            inputs=[Input('inlist', content_type='listfile')],\n                            outputs=[Output('outflat'), Output('outdetcoeff')],\n                            resources=ComputingResources(cores=1, ram=4.0, walltime=6.0))\n+\n",
                            "Merge branch 'mfrailis/single_ref_catalog' into 'develop'",
                            "Federico Rizzo",
                            "2022-08-25T13:02:38.000+00:00",
                            "b6d1c9dfc97e07ea9e27420c61b8dd50b403dd58"
                        ],
                        [
                            "@@ -66,7 +66,7 @@ psfForDither = Executable(command='E-Run NIR_PointSpreadFunction NIR_PSFModellin\n doAstrom = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram',\n                       inputs=[Input('listofdithers', content_type='listfile'),\n                               Input('listofpsflists', content_type='listfile'),\n-                              Input('VIS_catalog', content_type='listfile'),\n+                              Input('ref_catalog', content_type='listfile'),\n                               Input('presolution', content_type='listfile'),\n                               Input('config')],\n                       outputs=[Output('listofcaldithers', content_type='listfile', mime_type='json'),\n@@ -94,8 +94,7 @@ absPhotoCalib = Executable(command='E-Run NIR_AbsolutePhotometry  NIR_ApplyAbsol\n \n gsclMasking = Executable(command='E-Run NIR_GhostBusters  NIR_mask_gscl',\n                            inputs=[Input('infile'), Input('mdbxml'),\n-                                   Input('SIM_catalog', content_type='listfile'),\n-                                   Input('VIS_catalog', content_type='listfile')],\n+                                   Input('ref_catalog', content_type='listfile')],\n                            outputs=[Output('outfile', mime_type='fits')],\n                            resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n \n@@ -149,9 +148,9 @@ createScientificDpds = Executable(command='E-Run NIR_Utilities  NIR_CreateScient\n                                   resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n \n # - New executables - #\n-doAstromAbsolutePhoto = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs',\n+doAstromCatalogs = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs',\n                               inputs=[Input('listofdithers', content_type='listfile'),\n-                                      Input('SIM_catalog', content_type='listfile'),\n+                                      Input('ref_catalog', content_type='listfile'),\n                                       Input('presolution', content_type='listfile'),\n                                       Input('config')],\n                               outputs=[Output(\"listofcaldithers\",  content_type=\"listfile\", mime_type=\"json\"),\n@@ -170,7 +169,7 @@ makeAbsoluteCalib = Executable(command=\"E-Run NIR_AbsolutePhotometry  NIR_Comput\n \n doAstromDistortion = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-distortion-model',\n                       inputs=[Input('listofdithers', content_type='listfile'),\n-                              Input('SIM_catalog', content_type='listfile'),\n+                              Input('ref_catalog', content_type='listfile'),\n                               Input('presolution', content_type='listfile'),\n                               Input('config')],\n                       outputs=[Output('distortion-model')],\n@@ -207,33 +206,8 @@ createPersistenceXml = Executable(command='E-Run NIR_Utilities  NIR_CreateDpds',\n                                   outputs=[Output('persistence_mask_xml')],\n                                   resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n \n-doAstromProcessFieldTU = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram',\n-                                    inputs=[Input('listofdithers', content_type='listfile'),\n-                                            Input('listofpsflists', content_type='listfile'),\n-                                            Input('SIM_catalog', content_type='listfile'),\n-                                            Input('presolution', content_type='listfile'),\n-                                            Input('config')],\n-                                    outputs=[Output('listofcaldithers', content_type='listfile', mime_type='json'),\n-                                             Output('fullcatalog', mime_type='fits')],\n-                                    resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n-\n-gsclMaskingProcessFieldTU = Executable(command='E-Run NIR_GhostBusters  NIR_mask_gscl',\n-                                       inputs=[Input('infile'), Input('mdbxml'),\n-                                               Input('SIM_catalog', content_type='listfile')],\n-                                       outputs=[Output('outfile', mime_type='fits')],\n-                                       resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n-\n-doAstromSelfCal = Executable(command='E-Run NIR_AstrometricCalibration  NIR_DoastromProgram --create-catalogs',\n-                             inputs=[Input('listofdithers', content_type='listfile'),\n-                                     Input('SIM_catalog', content_type='listfile'),\n-                                     Input('presolution', content_type='listfile'),\n-                                     Input('config')],\n-                             outputs=[Output(\"listofcaldithers\",  content_type=\"listfile\", mime_type=\"json\"),\n-                                      Output(\"listofcalcatalogs\", content_type=\"listfile\", mime_type=\"json\"),\n-                                      Output('fullcatalog', mime_type='fits')],\n-                             resources=ComputingResources(cores=1, ram=4.0, walltime=1.0))\n-\n makeSelfCalib = Executable(command='E-Run NIR_SelfCalib  NIR_Compute',\n                            inputs=[Input('inlist', content_type='listfile')],\n                            outputs=[Output('outflat'), Output('outdetcoeff')],\n                            resources=ComputingResources(cores=1, ram=4.0, walltime=6.0))\n+\n",
                            "Removing NIR_ProcessField_TU workflow by simplifying the input ports of the Astrometric calibration and the Ghost masking steps. Now the NIR_ProcessField pipeline accepts both a VIS stack catalog or a TU catalog",
                            "Marco Frailis",
                            "2022-08-23T16:15:31.000+00:00",
                            "4ac0d3337800354945a5d027eb9f978289094cbe"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_Persistence_Pipeline/PipDef_NIR_Persistence_Model_Check.xml": [
                        [
                            "@@ -14,7 +14,7 @@\n             AND (flatinput.Data.ImgType.Technique == \"IMAGE\") \n             AND (flatinput.Data.ObservationSequence.PointingId == \"UNKNOWN\")\n             AND (flatinput.Data.ObservationSequence.Exposure == 1)\n-            AND (rawBaseline.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n+            AND (flatinput.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n",
                            "adding tests. fixing the pipdef",
                            "Thomas Gasparetto",
                            "2023-08-28T11:33:35.000+02:00",
                            "299fa7fc9923c8c90f62f2a5db59c75663575d01"
                        ],
                        [
                            "@@ -0,0 +1,111 @@\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n+    <Id>PipDef_NIR_CALIB_PERSISTENCE_CHECK_2023.08.17</Id>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <PipelineScriptPath>NIR_Persistence_Pipeline/PipScript_NIR_Persistence_Model_Check.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n+        <KeyProductInputDataPlan>\n+            <InputPortName>flatinput</InputPortName>\n+            <DataProductType>DpdNispRawFrame</DataProductType>\n+            <InputQuerySpecPlan> (flatinput.Data.ObservationSequence.CalblockId == \"UNKNOWN\")\n+            AND (flatinput.Data.ObservationSequence.CalblockVariant == \"UNKNOWN\") \n+            AND (flatinput.Data.FilterWheelPos.FilterWheelPosition == \"CLOSED\") \n+            AND (flatinput.Data.ImgType.FirstType == \"FLAT\") \n+            AND (flatinput.Data.ImgType.Technique == \"IMAGE\") \n+            AND (flatinput.Data.ObservationSequence.PointingId == \"UNKNOWN\")\n+            AND (flatinput.Data.ObservationSequence.Exposure == 1)\n+            AND (rawBaseline.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>600</Max>\n+            </Cardinality>\n+        </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>darkinput</InputPortName>\n+            <DataProductType>DpdNispRawFrame</DataProductType>\n+            <InputQuerySpecPlan> (darkinput.Data.ObservationSequence.CalblockVariant == \"UNKNOWN\") \n+            AND (darkinput.Data.FilterWheelPos.FilterWheelPosition == \"CLOSED\") \n+            AND (darkinput.Data.ImgType.FirstType == \"DARK\") \n+            AND (darkinput.Data.ImgType.Technique == \"IMAGE\") \n+            AND (darkinput.Data.ObservationSequence.Exposure == 2)\n+            AND (darkinput.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n+             <LinkedBy>\n+                <Query>(flatinput.Data.ObservationSequence.CalblockId == darkinput.Data.ObservationSequence.CalblockId) \n+                AND (flatinput.Data.ObservationSequence.CalblockVariant == darkinput.Data.ObservationSequence.CalblockVariant) \n+                AND (flatinput.Data.ObservationSequence.PointingId == darkinput.Data.ObservationSequence.PointingId) \n+                </Query>\n+            </LinkedBy>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>600</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>nirConfig</InputPortName>\n+            <DataProductType>DpdNirConfigurationSet</DataProductType>\n+            <InputQuerySpecPlan>nirConfig.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>mdb</InputPortName>\n+            <DataProductType>DpdMdbDataBase</DataProductType>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <FileFiltering>\n+                <FilesToInclude>\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NISP_NLPHOTO*\",\"EUC_NIR_DISTOR*\",\"NISPDetectorTable*\",\"NISPDetectorSlots*\",\"EUC_NISP_GAIN-*\",\"EUC_NISP_PERSISTENCE*\"</FilesToInclude>\n+            </FileFiltering>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>badpixel</InputPortName>\n+            <DataProductType>DpdNirBadPixelMask</DataProductType>\n+            <InputQuerySpecPlan>badpixel.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>masterdark</InputPortName>\n+            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n+            <InputQuerySpecPlan>masterdark.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+    </InputDataSetPlan>\n+    <OutputDataSet>\n+        <OutputDataProduct>\n+            <OutputPortName>persistence_mask_output</OutputPortName>\n+            <DataProductType>DpdNirPersistenceMask</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+        <OutputDataProduct>\n+            <OutputPortName>diff_image_xml</OutputPortName>\n+            <DataProductType>DpdNirPersistenceMask</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+    </OutputDataSet>\n+    <EstimatedWorkdirSizeGB>10</EstimatedWorkdirSizeGB>\n+</tsk1:PipelineDef>\n+\n",
                            "adding PipDef. TO BE CHECKED",
                            "Thomas Gasparetto",
                            "2023-08-17T13:01:17.000+02:00",
                            "3b3cdf17bc9f5c75ad118ec5bba816b116ea487d"
                        ],
                        [
                            "",
                            "first test of a Persistence pipeline for CALBLOCK-016",
                            "Thomas Gasparetto",
                            "2023-08-17T11:44:00.000+02:00",
                            "7f3fcbbe0690af2389b5c530e2380a26002c4448"
                        ]
                    ],
                    "NIR_IAL_Pipelines/tests/python/NIR_Persistence_Pipeline_Check_test.py": [
                        [
                            "@@ -0,0 +1,52 @@\n+\n+#\n+# Copyright (C) 2012-2020 Euclid Science Ground Segment\n+#\n+# This library is free software; you can redistribute it and/or modify it under\n+# the terms of the GNU Lesser General Public License as published by the Free\n+# Software Foundation; either version 3.0 of the License, or (at your option)\n+# any later version.\n+#\n+# This library is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+# FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n+# details.\n+#\n+# You should have received a copy of the GNU Lesser General Public License\n+# along with this library; if not, write to the Free Software Foundation, Inc.,\n+# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+#\n+\n+\"\"\"\n+File: tests/python/NIR_Persistence_Pipeline_Check_test.py\n+\n+Created on: 28/08/2023\n+Author: tgaspare\n+\"\"\"\n+\n+from ElementsKernel.Auxiliary import getAuxiliaryPath\n+\n+from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n+from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester\n+from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n+\n+\n+persistence_package_def = getAuxiliaryPath('NIR_Pipelines/PackageDef_NIR.py')\n+persistence_pipeline_script = getAuxiliaryPath('NIR_Pipelines/NIR_Persistence_Pipeline/PipScript_NIR_Persistence_Model_Check.py')\n+persistence_pipeline_def = getAuxiliaryPath('NIR_Pipelines/NIR_Persistence_Pipeline/PipDef_NIR_Persistence_Model_Check.xml')\n+\n+\n+class TestPersistencePackageDef(PackageDefTester):\n+   package_def = persistence_package_def\n+\n+class TestPersistencePipelineScript(PipelineScriptTester):\n+   package_def = persistence_package_def\n+   pipeline_script = persistence_pipeline_script\n+\n+class TestPersistencePipelineDef(PipelineDefTester):\n+   pipeline_script = persistence_pipeline_script\n+   pipeline_def = persistence_pipeline_def\n+\n+\n+\n+\n",
                            "adding tests. fixing the pipdef",
                            "Thomas Gasparetto",
                            "2023-08-28T11:33:35.000+02:00",
                            "299fa7fc9923c8c90f62f2a5db59c75663575d01"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py": [
                        [
                            "@@ -23,14 +23,14 @@ def nir_calib_dither(nirConfig, ditherExposure, mdb, masterdark, masterflat, lar\n \n \n @parallel(iterable=['infile', 'listofpsffiles'])\n-def p_photoCalib(infile, rel_cal_data, rel_exposure_xml, tilesPhotomOffsets, abs_cal_data, listofpsffiles, mdbfile, ref_catalog):\n+def p_photoCalib(nirConfig, infile, rel_cal_data, rel_exposure_xml, tilesPhotomOffsets, abs_cal_data, listofpsffiles, mdbfile, ref_catalog):\n     relcalibrated = relPhotoCalib(infile=infile,\n                                   in_calibration_detectors=rel_cal_data,\n                                   in_calibration_exposure=rel_exposure_xml,\n                                   in_calibration_field=tilesPhotomOffsets)\n     abscalibrated = absPhotoCalib(infile=relcalibrated, cal_data=abs_cal_data)\n     gsclmasked = gsclMasking(infile=abscalibrated, mdbxml=mdbfile, ref_catalog=ref_catalog)\n-    catalog = catalogPhotDither(infile=gsclmasked, listofpsffiles=listofpsffiles)\n+    catalog = catalogPhotDither(ecdm_config_xml=nirConfig, infile=gsclmasked, listofpsffiles=listofpsffiles)\n     return gsclmasked, catalog\n \n \n@@ -59,7 +59,8 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n     # rel_exposure_xml = relPhotoExp(in_full_catalog=fullcatalog,\n                                    # in_calibration_detectors=detectorsPhotomOffsets)\n \n-    tmp = p_photoCalib(infile=astromCalibDithers,\n+    tmp = p_photoCalib(nirConfig=nirConfig,\n+                       infile=astromCalibDithers,\n                        rel_cal_data=detectorsPhotomOffsets,\n                        rel_exposure_xml=relExposure,\n                        tilesPhotomOffsets=tilesPhotomOffsets,\n",
                            "Merge branch 'mfrailis/use_ecwrapper' into 'develop'",
                            "Marco Frailis",
                            "2023-08-28T08:06:21.000+00:00",
                            "52fc241e6ab8aeb1c20434aa897d39a1b924ffc5"
                        ],
                        [
                            "@@ -13,7 +13,7 @@ def nir_calib_dither(nirConfig, ditherExposure, mdb, masterdark, masterflat, lar\n     initExposure = runInitialize(infile=ditherExposure, mdbfile=mdb)\n     badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n     satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n-    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb)\n+    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb, config=nirConfig)\n     darkExposure = darkSubtract(infile=nonlinExposure, masterdark=masterdark)\n     crExposure = crRejectionSF(infile=darkExposure, config=nirConfig)\n     smallflatExposure = smallFlatCorrect(infile=crExposure, masterflat=masterflat)\n",
                            "Merge branch 'cycle18_dm91_fixes' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-05-03T15:11:35.000+00:00",
                            "eb283372eb67490540acf763239f735251196af6"
                        ],
                        [
                            "@@ -13,7 +13,7 @@ def nir_calib_dither(nirConfig, ditherExposure, mdb, masterdark, masterflat, lar\n     initExposure = runInitialize(infile=ditherExposure, mdbfile=mdb)\n     badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n     satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n-    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb)\n+    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb, config=nirConfig)\n     darkExposure = darkSubtract(infile=nonlinExposure, masterdark=masterdark)\n     crExposure = crRejectionSF(infile=darkExposure, config=nirConfig)\n     smallflatExposure = smallFlatCorrect(infile=crExposure, masterflat=masterflat)\n",
                            "Added Non Linearity config pipelines. Skipping Persistence since there's no config file at the moment",
                            "Thomas Gasparetto",
                            "2023-04-26T17:31:04.000+02:00",
                            "41e9e10542414366821871e619ad325cd170641a"
                        ],
                        [
                            "@@ -5,7 +5,7 @@ from PackageDef_NIR import (\n         backEstimate, smallFlatCorrect, largeFlatCorrect, psfForDither, \n         relPhotoExp, relPhotoCalib, absPhotoCalib, doResampling, crRejectionMF,\n         doStacking, psfForStack, catalogPhotDither, catalogPhotStack, \n-        extractLists2, createScientificDpds, crRejectionSF, doAstromProcessFieldTU, gsclMaskingProcessFieldTU)\n+        extractLists2, createScientificDpds, crRejectionSF, doAstrom, gsclMasking)\n \n \n @parallel(iterable='ditherExposure')\n@@ -23,20 +23,20 @@ def nir_calib_dither(nirConfig, ditherExposure, mdb, masterdark, masterflat, lar\n \n \n @parallel(iterable=['infile', 'listofpsffiles'])\n-def p_photoCalib(infile, rel_cal_data, rel_exposure_xml, tilesPhotomOffsets, abs_cal_data, listofpsffiles, mdbfile, sourceCatalog):\n+def p_photoCalib(infile, rel_cal_data, rel_exposure_xml, tilesPhotomOffsets, abs_cal_data, listofpsffiles, mdbfile, ref_catalog):\n     relcalibrated = relPhotoCalib(infile=infile,\n                                   in_calibration_detectors=rel_cal_data,\n                                   in_calibration_exposure=rel_exposure_xml,\n                                   in_calibration_field=tilesPhotomOffsets)\n     abscalibrated = absPhotoCalib(infile=relcalibrated, cal_data=abs_cal_data)\n-    gsclmasked = gsclMaskingProcessFieldTU(infile=abscalibrated, mdbxml=mdbfile, SIM_catalog=sourceCatalog)\n+    gsclmasked = gsclMasking(infile=abscalibrated, mdbxml=mdbfile, ref_catalog=ref_catalog)\n     catalog = catalogPhotDither(infile=gsclmasked, listofpsffiles=listofpsffiles)\n     return gsclmasked, catalog\n \n \n @pipeline(outputs=('cal_images_xml', 'cal_catalogs_xml', 'stk_image_xml', 'stk_catalog_xml'))\n def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, badpixel,\n-                 sourceCatalog, presolution, detectorsPhotomOffsets, absPhotoData, tilesPhotomOffsets, relExposure):\n+                 obsCatalog, refCatalog, presolution, detectorsPhotomOffsets, absPhotoData, tilesPhotomOffsets, relExposure):\n \n     tmp = nir_calib_dither(nirConfig=nirConfig,\n                            ditherExposure=dithers,\n@@ -50,11 +50,11 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n                                          mdbfile=mdb, cal_data=absPhotoData,\n                                          config=nirConfig)\n \n-    astromCalibDithers, fullcatalog = doAstromProcessFieldTU(listofdithers=pre_processed,\n-                                                             listofpsflists=listofpsflists_dither,\n-                                                             SIM_catalog=sourceCatalog,\n-                                                             presolution=presolution,\n-                                                             config=nirConfig)\n+    astromCalibDithers, fullcatalog = doAstrom(listofdithers=pre_processed,\n+                                               listofpsflists=listofpsflists_dither,\n+                                               ref_catalog=obsCatalog,\n+                                               presolution=presolution,\n+                                               config=nirConfig)\n \n     # rel_exposure_xml = relPhotoExp(in_full_catalog=fullcatalog,\n                                    # in_calibration_detectors=detectorsPhotomOffsets)\n@@ -66,7 +66,7 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n                        abs_cal_data=absPhotoData,\n                        listofpsffiles=listofpsflists_dither,\n                        mdbfile=mdb,\n-                       sourceCatalog=sourceCatalog)\n+                       ref_catalog=refCatalog)\n \n     gsclmasked, catalog = extractLists2(inlist=tmp)\n \n",
                            "Merge branch 'mfrailis/single_ref_catalog' into 'develop'",
                            "Federico Rizzo",
                            "2022-08-25T13:02:38.000+00:00",
                            "b6d1c9dfc97e07ea9e27420c61b8dd50b403dd58"
                        ],
                        [
                            "@@ -5,7 +5,7 @@ from PackageDef_NIR import (\n         backEstimate, smallFlatCorrect, largeFlatCorrect, psfForDither, \n         relPhotoExp, relPhotoCalib, absPhotoCalib, doResampling, crRejectionMF,\n         doStacking, psfForStack, catalogPhotDither, catalogPhotStack, \n-        extractLists2, createScientificDpds, crRejectionSF, doAstromProcessFieldTU, gsclMaskingProcessFieldTU)\n+        extractLists2, createScientificDpds, crRejectionSF, doAstrom, gsclMasking)\n \n \n @parallel(iterable='ditherExposure')\n@@ -23,20 +23,20 @@ def nir_calib_dither(nirConfig, ditherExposure, mdb, masterdark, masterflat, lar\n \n \n @parallel(iterable=['infile', 'listofpsffiles'])\n-def p_photoCalib(infile, rel_cal_data, rel_exposure_xml, tilesPhotomOffsets, abs_cal_data, listofpsffiles, mdbfile, sourceCatalog):\n+def p_photoCalib(infile, rel_cal_data, rel_exposure_xml, tilesPhotomOffsets, abs_cal_data, listofpsffiles, mdbfile, ref_catalog):\n     relcalibrated = relPhotoCalib(infile=infile,\n                                   in_calibration_detectors=rel_cal_data,\n                                   in_calibration_exposure=rel_exposure_xml,\n                                   in_calibration_field=tilesPhotomOffsets)\n     abscalibrated = absPhotoCalib(infile=relcalibrated, cal_data=abs_cal_data)\n-    gsclmasked = gsclMaskingProcessFieldTU(infile=abscalibrated, mdbxml=mdbfile, SIM_catalog=sourceCatalog)\n+    gsclmasked = gsclMasking(infile=abscalibrated, mdbxml=mdbfile, ref_catalog=ref_catalog)\n     catalog = catalogPhotDither(infile=gsclmasked, listofpsffiles=listofpsffiles)\n     return gsclmasked, catalog\n \n \n @pipeline(outputs=('cal_images_xml', 'cal_catalogs_xml', 'stk_image_xml', 'stk_catalog_xml'))\n def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, badpixel,\n-                 sourceCatalog, presolution, detectorsPhotomOffsets, absPhotoData, tilesPhotomOffsets, relExposure):\n+                 obsCatalog, refCatalog, presolution, detectorsPhotomOffsets, absPhotoData, tilesPhotomOffsets, relExposure):\n \n     tmp = nir_calib_dither(nirConfig=nirConfig,\n                            ditherExposure=dithers,\n@@ -50,11 +50,11 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n                                          mdbfile=mdb, cal_data=absPhotoData,\n                                          config=nirConfig)\n \n-    astromCalibDithers, fullcatalog = doAstromProcessFieldTU(listofdithers=pre_processed,\n-                                                             listofpsflists=listofpsflists_dither,\n-                                                             SIM_catalog=sourceCatalog,\n-                                                             presolution=presolution,\n-                                                             config=nirConfig)\n+    astromCalibDithers, fullcatalog = doAstrom(listofdithers=pre_processed,\n+                                               listofpsflists=listofpsflists_dither,\n+                                               ref_catalog=obsCatalog,\n+                                               presolution=presolution,\n+                                               config=nirConfig)\n \n     # rel_exposure_xml = relPhotoExp(in_full_catalog=fullcatalog,\n                                    # in_calibration_detectors=detectorsPhotomOffsets)\n@@ -66,7 +66,7 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n                        abs_cal_data=absPhotoData,\n                        listofpsffiles=listofpsflists_dither,\n                        mdbfile=mdb,\n-                       sourceCatalog=sourceCatalog)\n+                       ref_catalog=refCatalog)\n \n     gsclmasked, catalog = extractLists2(inlist=tmp)\n \n",
                            "Updating NIR_ProcessField_Background pipeline",
                            "Marco Frailis",
                            "2022-08-25T14:39:17.000+02:00",
                            "017aafd7c7da1bfd67eff9dbabbfa598c8c9494f"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py": [
                        [
                            "@@ -22,14 +22,14 @@ def nir_calib_dither(nirConfig, ditherExposure, mdb, masterdark, masterflat, lar\n \n \n @parallel(iterable=['infile', 'listofpsffiles'])\n-def p_photoCalib(infile, rel_cal_data, rel_exposure_xml, tilesPhotomOffsets, abs_cal_data, listofpsffiles, mdbfile, ref_catalog):\n+def p_photoCalib(nirConfig, infile, rel_cal_data, rel_exposure_xml, tilesPhotomOffsets, abs_cal_data, listofpsffiles, mdbfile, ref_catalog):\n     relcalibrated = relPhotoCalib(infile=infile,\n                                   in_calibration_detectors=rel_cal_data,\n                                   in_calibration_exposure=rel_exposure_xml,\n                                   in_calibration_field=tilesPhotomOffsets)\n     abscalibrated = absPhotoCalib(infile=relcalibrated, cal_data=abs_cal_data)\n     gsclmasked = gsclMasking(infile=abscalibrated, mdbxml=mdbfile, ref_catalog=ref_catalog)\n-    catalog = catalogPhotDither(infile=gsclmasked, listofpsffiles=listofpsffiles)\n+    catalog = catalogPhotDither(ecdm_config_xml=nirConfig, infile=gsclmasked, listofpsffiles=listofpsffiles)\n     return gsclmasked, catalog\n \n \n@@ -62,7 +62,8 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n     rel_exposure_xml = relPhotoExp(in_full_catalog=fullcatalog,\n                                    in_calibration_detectors=detectorsPhotomOffsets)\n \n-    tmp = p_photoCalib(infile=astromCalibDithersDeflagged,\n+    tmp = p_photoCalib(nirConfig=nirConfig,\n+                       infile=astromCalibDithersDeflagged,\n                        rel_cal_data=detectorsPhotomOffsets,\n                        rel_exposure_xml=rel_exposure_xml,\n                        tilesPhotomOffsets=tilesPhotomOffsets,\n",
                            "Merge branch 'mfrailis/use_ecwrapper' into 'develop'",
                            "Marco Frailis",
                            "2023-08-28T08:06:21.000+00:00",
                            "52fc241e6ab8aeb1c20434aa897d39a1b924ffc5"
                        ],
                        [
                            "@@ -12,7 +12,7 @@ def nir_calib_dither(nirConfig, ditherExposure, mdb, masterdark, masterflat, lar\n     initExposure = runInitialize(infile=ditherExposure, mdbfile=mdb)\n     badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n     satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n-    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb)\n+    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb, config=nirConfig)\n     darkExposure = darkSubtract(infile=nonlinExposure, masterdark=masterdark)\n     crExposure = crRejectionSF(infile=darkExposure, config=nirConfig)\n     smallflatExposure = smallFlatCorrect(infile=crExposure, masterflat=masterflat)\n",
                            "Merge branch 'cycle18_dm91_fixes' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-05-03T15:11:35.000+00:00",
                            "eb283372eb67490540acf763239f735251196af6"
                        ],
                        [
                            "@@ -12,7 +12,7 @@ def nir_calib_dither(nirConfig, ditherExposure, mdb, masterdark, masterflat, lar\n     initExposure = runInitialize(infile=ditherExposure, mdbfile=mdb)\n     badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n     satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n-    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb)\n+    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb, config=nirConfig)\n     darkExposure = darkSubtract(infile=nonlinExposure, masterdark=masterdark)\n     crExposure = crRejectionSF(infile=darkExposure, config=nirConfig)\n     smallflatExposure = smallFlatCorrect(infile=crExposure, masterflat=masterflat)\n",
                            "Added Non Linearity config pipelines. Skipping Persistence since there's no config file at the moment",
                            "Thomas Gasparetto",
                            "2023-04-26T17:31:04.000+02:00",
                            "41e9e10542414366821871e619ad325cd170641a"
                        ],
                        [
                            "@@ -1,11 +1,11 @@\n from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n from PackageDef_NIR import (\n-     runInitialize, badPixMasking, saturation, nonLinearity, darkSubtract, \n-     backEstimate, smallFlatCorrect, largeFlatCorrect, doAstrom, psfForDither, \n-     relPhotoExp, relPhotoCalib, absPhotoCalib, doResampling, crRejectionMF, \n-     doStacking, psfForStack, catalogPhotDither, catalogPhotStack, extractLists2, \n-     createScientificDpds, crRejectionSF, gsclMasking)\n+     runInitialize, badPixMasking, saturation, nonLinearity, darkSubtract,\n+     backEstimate, smallFlatCorrect, largeFlatCorrect, doAstrom, psfForDither,\n+     relPhotoExp, relPhotoCalib, absPhotoCalib, doResampling, crRejectionMF,\n+     doStacking, psfForStack, catalogPhotDither, catalogPhotStack, extractLists2,\n+     createScientificDpds, crRejectionSF, gsclMasking, crDeflag)\n \n @parallel(iterable='ditherExposure')\n def nir_calib_dither(nirConfig, ditherExposure, mdb, masterdark, masterflat, largeflat, badpixel):\n@@ -55,10 +55,14 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n                                                presolution=presolution,\n                                                config=nirConfig)\n \n+    astromCalibDithersCRFlagged = crRejectionMF(dith_file=astromCalibDithers)\n+\n+    astromCalibDithersDeflagged = crDeflag(input_list=astromCalibDithersCRFlagged)\n+\n     rel_exposure_xml = relPhotoExp(in_full_catalog=fullcatalog,\n                                    in_calibration_detectors=detectorsPhotomOffsets)\n \n-    tmp = p_photoCalib(infile=astromCalibDithers,\n+    tmp = p_photoCalib(infile=astromCalibDithersDeflagged,\n                        rel_cal_data=detectorsPhotomOffsets,\n                        rel_exposure_xml=rel_exposure_xml,\n                        tilesPhotomOffsets=tilesPhotomOffsets,\n@@ -74,9 +78,9 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n                              listofbackgrounds=background,\n                              config=nirConfig)\n \n-    resampledCRFlagged = crRejectionMF(dith_file=resampled)\n+    #resampledCRFlagged = crRejectionMF(dith_file=resampled)\n \n-    stackedImage = doStacking(listofresampled=resampledCRFlagged,\n+    stackedImage = doStacking(listofresampled=resampled,\n                               config=nirConfig)\n \n     listofpsflists_stacked = psfForStack(listofimages=stackedImage,\n",
                            "Merge branch 'feature_newCRMFposition' into 'develop'",
                            "Federico Rizzo",
                            "2023-01-23T14:25:47.000+00:00",
                            "90458ab03af3294b497cd1d0a12f0acf8a90a584"
                        ],
                        [
                            "@@ -1,11 +1,11 @@\n from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n from PackageDef_NIR import (\n-     runInitialize, badPixMasking, saturation, nonLinearity, darkSubtract, \n-     backEstimate, smallFlatCorrect, largeFlatCorrect, doAstrom, psfForDither, \n-     relPhotoExp, relPhotoCalib, absPhotoCalib, doResampling, crRejectionMF, \n-     doStacking, psfForStack, catalogPhotDither, catalogPhotStack, extractLists2, \n-     createScientificDpds, crRejectionSF, gsclMasking)\n+     runInitialize, badPixMasking, saturation, nonLinearity, darkSubtract,\n+     backEstimate, smallFlatCorrect, largeFlatCorrect, doAstrom, psfForDither,\n+     relPhotoExp, relPhotoCalib, absPhotoCalib, doResampling, crRejectionMF,\n+     doStacking, psfForStack, catalogPhotDither, catalogPhotStack, extractLists2,\n+     createScientificDpds, crRejectionSF, gsclMasking, crDeflag)\n \n @parallel(iterable='ditherExposure')\n def nir_calib_dither(nirConfig, ditherExposure, mdb, masterdark, masterflat, largeflat, badpixel):\n@@ -57,7 +57,7 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n \n     astromCalibDithersCRFlagged = crRejectionMF(dith_file=astromCalibDithers)\n \n-    astromCalibDithersDeflagged = crDeflag(dith_file=astromCalibDithersCRFlagged)\n+    astromCalibDithersDeflagged = crDeflag(input_list=astromCalibDithersCRFlagged)\n \n     rel_exposure_xml = relPhotoExp(in_full_catalog=fullcatalog,\n                                    in_calibration_detectors=detectorsPhotomOffsets)\n",
                            "PipScript and PackageDef updated",
                            "frizzo",
                            "2023-01-13T09:49:10.000+01:00",
                            "2056951a442fb8594b9160c4601c172cdfcbdd36"
                        ],
                        [
                            "@@ -55,10 +55,14 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n                                                presolution=presolution,\n                                                config=nirConfig)\n \n+    astromCalibDithersCRFlagged = crRejectionMF(dith_file=astromCalibDithers)\n+\n+    astromCalibDithersDeflagged = crDeflag(dith_file=astromCalibDithersCRFlagged)\n+\n     rel_exposure_xml = relPhotoExp(in_full_catalog=fullcatalog,\n                                    in_calibration_detectors=detectorsPhotomOffsets)\n \n-    tmp = p_photoCalib(infile=astromCalibDithers,\n+    tmp = p_photoCalib(infile=astromCalibDithersDeflagged,\n                        rel_cal_data=detectorsPhotomOffsets,\n                        rel_exposure_xml=rel_exposure_xml,\n                        tilesPhotomOffsets=tilesPhotomOffsets,\n@@ -74,9 +78,9 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n                              listofbackgrounds=background,\n                              config=nirConfig)\n \n-    resampledCRFlagged = crRejectionMF(dith_file=resampled)\n+    #resampledCRFlagged = crRejectionMF(dith_file=resampled)\n \n-    stackedImage = doStacking(listofresampled=resampledCRFlagged,\n+    stackedImage = doStacking(listofresampled=resampled,\n                               config=nirConfig)\n \n     listofpsflists_stacked = psfForStack(listofimages=stackedImage,\n",
                            "CRMF on calibrated dithers + deflagging",
                            "ffaustin",
                            "2022-12-15T14:44:10.000+00:00",
                            "a82fb64a99cfa9a7dda671b9c6ceec647346e2c4"
                        ],
                        [
                            "@@ -22,20 +22,20 @@ def nir_calib_dither(nirConfig, ditherExposure, mdb, masterdark, masterflat, lar\n \n \n @parallel(iterable=['infile', 'listofpsffiles'])\n-def p_photoCalib(infile, rel_cal_data, rel_exposure_xml, tilesPhotomOffsets, abs_cal_data, listofpsffiles, mdbfile, VIS_catalog, SIM_catalog):\n+def p_photoCalib(infile, rel_cal_data, rel_exposure_xml, tilesPhotomOffsets, abs_cal_data, listofpsffiles, mdbfile, ref_catalog):\n     relcalibrated = relPhotoCalib(infile=infile,\n                                   in_calibration_detectors=rel_cal_data,\n                                   in_calibration_exposure=rel_exposure_xml,\n                                   in_calibration_field=tilesPhotomOffsets)\n     abscalibrated = absPhotoCalib(infile=relcalibrated, cal_data=abs_cal_data)\n-    gsclmasked = gsclMasking(infile=abscalibrated, mdbxml=mdbfile, SIM_catalog=SIM_catalog, VIS_catalog=VIS_catalog)\n+    gsclmasked = gsclMasking(infile=abscalibrated, mdbxml=mdbfile, ref_catalog=ref_catalog)\n     catalog = catalogPhotDither(infile=gsclmasked, listofpsffiles=listofpsffiles)\n     return gsclmasked, catalog\n \n \n @pipeline(outputs=('cal_images_xml', 'cal_catalogs_xml', 'stk_image_xml', 'stk_catalog_xml'))\n def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, badpixel,\n-                 viscatalog, tucatalog, presolution, detectorsPhotomOffsets, absPhotoData, tilesPhotomOffsets):\n+                 obsCatalog, refCatalog, presolution, detectorsPhotomOffsets, absPhotoData, tilesPhotomOffsets):\n \n     tmp = nir_calib_dither(nirConfig=nirConfig,\n                            ditherExposure=dithers,\n@@ -51,7 +51,7 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n \n     astromCalibDithers, fullcatalog = doAstrom(listofdithers=pre_processed,\n                                                listofpsflists=listofpsflists_dither,\n-                                               VIS_catalog=viscatalog,\n+                                               ref_catalog=obsCatalog,\n                                                presolution=presolution,\n                                                config=nirConfig)\n \n@@ -65,8 +65,7 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n                        abs_cal_data=absPhotoData,\n                        listofpsffiles=listofpsflists_dither,\n                        mdbfile=mdb,\n-                       VIS_catalog=viscatalog,\n-                       SIM_catalog=tucatalog\n+                       ref_catalog=refCatalog\n                        )\n \n     gsclmasked, catalog = extractLists2(inlist=tmp)\n",
                            "Merge branch 'mfrailis/single_ref_catalog' into 'develop'",
                            "Federico Rizzo",
                            "2022-08-25T13:02:38.000+00:00",
                            "b6d1c9dfc97e07ea9e27420c61b8dd50b403dd58"
                        ],
                        [
                            "@@ -22,20 +22,20 @@ def nir_calib_dither(nirConfig, ditherExposure, mdb, masterdark, masterflat, lar\n \n \n @parallel(iterable=['infile', 'listofpsffiles'])\n-def p_photoCalib(infile, rel_cal_data, rel_exposure_xml, tilesPhotomOffsets, abs_cal_data, listofpsffiles, mdbfile, VIS_catalog, SIM_catalog):\n+def p_photoCalib(infile, rel_cal_data, rel_exposure_xml, tilesPhotomOffsets, abs_cal_data, listofpsffiles, mdbfile, ref_catalog):\n     relcalibrated = relPhotoCalib(infile=infile,\n                                   in_calibration_detectors=rel_cal_data,\n                                   in_calibration_exposure=rel_exposure_xml,\n                                   in_calibration_field=tilesPhotomOffsets)\n     abscalibrated = absPhotoCalib(infile=relcalibrated, cal_data=abs_cal_data)\n-    gsclmasked = gsclMasking(infile=abscalibrated, mdbxml=mdbfile, SIM_catalog=SIM_catalog, VIS_catalog=VIS_catalog)\n+    gsclmasked = gsclMasking(infile=abscalibrated, mdbxml=mdbfile, ref_catalog=ref_catalog)\n     catalog = catalogPhotDither(infile=gsclmasked, listofpsffiles=listofpsffiles)\n     return gsclmasked, catalog\n \n \n @pipeline(outputs=('cal_images_xml', 'cal_catalogs_xml', 'stk_image_xml', 'stk_catalog_xml'))\n def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, badpixel,\n-                 viscatalog, tucatalog, presolution, detectorsPhotomOffsets, absPhotoData, tilesPhotomOffsets):\n+                 obsCatalog, refCatalog, presolution, detectorsPhotomOffsets, absPhotoData, tilesPhotomOffsets):\n \n     tmp = nir_calib_dither(nirConfig=nirConfig,\n                            ditherExposure=dithers,\n@@ -51,7 +51,7 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n \n     astromCalibDithers, fullcatalog = doAstrom(listofdithers=pre_processed,\n                                                listofpsflists=listofpsflists_dither,\n-                                               VIS_catalog=viscatalog,\n+                                               ref_catalog=obsCatalog,\n                                                presolution=presolution,\n                                                config=nirConfig)\n \n@@ -65,8 +65,7 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n                        abs_cal_data=absPhotoData,\n                        listofpsffiles=listofpsflists_dither,\n                        mdbfile=mdb,\n-                       VIS_catalog=viscatalog,\n-                       SIM_catalog=tucatalog\n+                       ref_catalog=refCatalog\n                        )\n \n     gsclmasked, catalog = extractLists2(inlist=tmp)\n",
                            "Removing NIR_ProcessField_TU workflow by simplifying the input ports of the Astrometric calibration and the Ghost masking steps. Now the NIR_ProcessField pipeline accepts both a VIS stack catalog or a TU catalog",
                            "Marco Frailis",
                            "2022-08-23T16:15:31.000+00:00",
                            "4ac0d3337800354945a5d027eb9f978289094cbe"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessFieldSelfCal.py": [
                        [
                            "@@ -22,14 +22,14 @@ def nir_calib_dither(nirConfig, ditherExposure, mdb, masterdark, masterflat, lar\n \n \n @parallel(iterable=['infile', 'listofpsffiles'])\n-def p_photoCalib(infile, rel_cal_data, rel_exposure_xml, tilesPhotomOffsets, abs_cal_data, listofpsffiles, mdbfile, ref_catalog):\n+def p_photoCalib(nirConfig, infile, rel_cal_data, rel_exposure_xml, tilesPhotomOffsets, abs_cal_data, listofpsffiles, mdbfile, ref_catalog):\n     relcalibrated = relPhotoCalib(infile=infile,\n                                   in_calibration_detectors=rel_cal_data,\n                                   in_calibration_exposure=rel_exposure_xml,\n                                   in_calibration_field=tilesPhotomOffsets)\n     abscalibrated = absPhotoCalib(infile=relcalibrated, cal_data=abs_cal_data)\n     gsclmasked = gsclMasking(infile=abscalibrated, mdbxml=mdbfile, ref_catalog=ref_catalog)\n-    catalog = catalogPhotDither(infile=gsclmasked, listofpsffiles=listofpsffiles)\n+    catalog = catalogPhotDither(ecdm_config_xml=nirConfig, infile=gsclmasked, listofpsffiles=listofpsffiles)\n     return gsclmasked, catalog\n \n \n@@ -62,7 +62,8 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n     rel_exposure_xml = relPhotoExpSciSelfCal(in_full_catalog=fullcatalog,\n                                              in_calibration_detectors=detectorsPhotomOffsets)\n \n-    tmp = p_photoCalib(infile=astromCalibDithersDeflagged,\n+    tmp = p_photoCalib(nirConfig=nirConfig,\n+                       infile=astromCalibDithersDeflagged,\n                        rel_cal_data=detectorsPhotomOffsets,\n                        rel_exposure_xml=rel_exposure_xml,\n                        tilesPhotomOffsets=tilesPhotomOffsets,\n",
                            "Merge branch 'mfrailis/use_ecwrapper' into 'develop'",
                            "Marco Frailis",
                            "2023-08-28T08:06:21.000+00:00",
                            "52fc241e6ab8aeb1c20434aa897d39a1b924ffc5"
                        ],
                        [
                            "@@ -5,7 +5,7 @@ from PackageDef_NIR import (\n      backEstimate, smallFlatCorrect, largeFlatCorrect, doAstrom, psfForDither, \n      relPhotoExpSciSelfCal, relPhotoCalib, absPhotoCalib, doResampling, crRejectionMFSciSelfCal, \n      doStacking, psfForStack, catalogPhotDither, catalogPhotStackSciSelfCal, extractLists2, \n-     createScientificDpdsSciSelfCal, crRejectionSF, gsclMasking)\n+     createScientificDpdsSciSelfCal, crRejectionSF, gsclMasking, crDeflag)\n \n @parallel(iterable='ditherExposure')\n def nir_calib_dither(nirConfig, ditherExposure, mdb, masterdark, masterflat, largeflat, badpixel):\n@@ -55,10 +55,14 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n                                                presolution=presolution,\n                                                config=nirConfig)\n \n+    astromCalibDithersCRFlagged = crRejectionMFSciSelfCal(dith_file=astromCalibDithers)\n+\n+    astromCalibDithersDeflagged = crDeflag(input_list=astromCalibDithersCRFlagged)\n+\n     rel_exposure_xml = relPhotoExpSciSelfCal(in_full_catalog=fullcatalog,\n                                              in_calibration_detectors=detectorsPhotomOffsets)\n \n-    tmp = p_photoCalib(infile=astromCalibDithers,\n+    tmp = p_photoCalib(infile=astromCalibDithersDeflagged,\n                        rel_cal_data=detectorsPhotomOffsets,\n                        rel_exposure_xml=rel_exposure_xml,\n                        tilesPhotomOffsets=tilesPhotomOffsets,\n@@ -74,9 +78,9 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n                              listofbackgrounds=background,\n                              config=nirConfig)\n \n-    resampledCRFlagged = crRejectionMFSciSelfCal(dith_file=resampled)\n+    #resampledCRFlagged = crRejectionMFSciSelfCal(dith_file=resampled)\n \n-    stackedImage = doStacking(listofresampled=resampledCRFlagged,\n+    stackedImage = doStacking(listofresampled=resampled,\n                               config=nirConfig)\n \n     listofpsflists_stacked = psfForStack(listofimages=stackedImage,\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -5,7 +5,7 @@ from PackageDef_NIR import (\n      backEstimate, smallFlatCorrect, largeFlatCorrect, doAstrom, psfForDither, \n      relPhotoExpSciSelfCal, relPhotoCalib, absPhotoCalib, doResampling, crRejectionMFSciSelfCal, \n      doStacking, psfForStack, catalogPhotDither, catalogPhotStackSciSelfCal, extractLists2, \n-     createScientificDpdsSciSelfCal, crRejectionSF, gsclMasking)\n+     createScientificDpdsSciSelfCal, crRejectionSF, gsclMasking, crDeflag)\n \n @parallel(iterable='ditherExposure')\n def nir_calib_dither(nirConfig, ditherExposure, mdb, masterdark, masterflat, largeflat, badpixel):\n@@ -55,10 +55,14 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n                                                presolution=presolution,\n                                                config=nirConfig)\n \n+    astromCalibDithersCRFlagged = crRejectionMFSciSelfCal(dith_file=astromCalibDithers)\n+\n+    astromCalibDithersDeflagged = crDeflag(input_list=astromCalibDithersCRFlagged)\n+\n     rel_exposure_xml = relPhotoExpSciSelfCal(in_full_catalog=fullcatalog,\n                                              in_calibration_detectors=detectorsPhotomOffsets)\n \n-    tmp = p_photoCalib(infile=astromCalibDithers,\n+    tmp = p_photoCalib(infile=astromCalibDithersDeflagged,\n                        rel_cal_data=detectorsPhotomOffsets,\n                        rel_exposure_xml=rel_exposure_xml,\n                        tilesPhotomOffsets=tilesPhotomOffsets,\n@@ -74,9 +78,9 @@ def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, bad\n                              listofbackgrounds=background,\n                              config=nirConfig)\n \n-    resampledCRFlagged = crRejectionMFSciSelfCal(dith_file=resampled)\n+    #resampledCRFlagged = crRejectionMFSciSelfCal(dith_file=resampled)\n \n-    stackedImage = doStacking(listofresampled=resampledCRFlagged,\n+    stackedImage = doStacking(listofresampled=resampled,\n                               config=nirConfig)\n \n     listofpsflists_stacked = psfForStack(listofimages=stackedImage,\n",
                            "First set of updates to the pipeline confgurations",
                            "Marco Frailis",
                            "2023-08-09T16:08:24.000+00:00",
                            "3b320c03b4e8940500253e078cb2afb087747ac4"
                        ],
                        [
                            "@@ -12,7 +12,7 @@ def nir_calib_dither(nirConfig, ditherExposure, mdb, masterdark, masterflat, lar\n     initExposure = runInitialize(infile=ditherExposure, mdbfile=mdb)\n     badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n     satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n-    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb)\n+    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb, config=nirConfig)\n     darkExposure = darkSubtract(infile=nonlinExposure, masterdark=masterdark)\n     crExposure = crRejectionSF(infile=darkExposure, config=nirConfig)\n     smallflatExposure = smallFlatCorrect(infile=crExposure, masterflat=masterflat)\n",
                            "Merge branch 'cycle18_dm91_fixes' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-05-03T15:11:35.000+00:00",
                            "eb283372eb67490540acf763239f735251196af6"
                        ],
                        [
                            "@@ -12,7 +12,7 @@ def nir_calib_dither(nirConfig, ditherExposure, mdb, masterdark, masterflat, lar\n     initExposure = runInitialize(infile=ditherExposure, mdbfile=mdb)\n     badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n     satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n-    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb)\n+    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb, config=nirConfig)\n     darkExposure = darkSubtract(infile=nonlinExposure, masterdark=masterdark)\n     crExposure = crRejectionSF(infile=darkExposure, config=nirConfig)\n     smallflatExposure = smallFlatCorrect(infile=crExposure, masterflat=masterflat)\n",
                            "Added Non Linearity config pipelines. Skipping Persistence since there's no config file at the moment",
                            "Thomas Gasparetto",
                            "2023-04-26T17:31:04.000+02:00",
                            "41e9e10542414366821871e619ad325cd170641a"
                        ],
                        [
                            "@@ -0,0 +1,106 @@\n+from euclidwf.framework.workflow_dsl import pipeline, parallel\n+\n+from PackageDef_NIR import (\n+     runInitialize, badPixMasking, saturation, nonLinearity, darkSubtract, \n+     backEstimate, smallFlatCorrect, largeFlatCorrect, doAstrom, psfForDither, \n+     relPhotoExpSciSelfCal, relPhotoCalib, absPhotoCalib, doResampling, crRejectionMFSciSelfCal, \n+     doStacking, psfForStack, catalogPhotDither, catalogPhotStackSciSelfCal, extractLists2, \n+     createScientificDpdsSciSelfCal, crRejectionSF, gsclMasking)\n+\n+@parallel(iterable='ditherExposure')\n+def nir_calib_dither(nirConfig, ditherExposure, mdb, masterdark, masterflat, largeflat, badpixel):\n+    initExposure = runInitialize(infile=ditherExposure, mdbfile=mdb)\n+    badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n+    satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n+    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb)\n+    darkExposure = darkSubtract(infile=nonlinExposure, masterdark=masterdark)\n+    crExposure = crRejectionSF(infile=darkExposure, config=nirConfig)\n+    smallflatExposure = smallFlatCorrect(infile=crExposure, masterflat=masterflat)\n+    largeflatExposure = largeFlatCorrect(infile=smallflatExposure, flat=largeflat)\n+    background = backEstimate(input=largeflatExposure)\n+    return largeflatExposure, background\n+\n+\n+@parallel(iterable=['infile', 'listofpsffiles'])\n+def p_photoCalib(infile, rel_cal_data, rel_exposure_xml, tilesPhotomOffsets, abs_cal_data, listofpsffiles, mdbfile, ref_catalog):\n+    relcalibrated = relPhotoCalib(infile=infile,\n+                                  in_calibration_detectors=rel_cal_data,\n+                                  in_calibration_exposure=rel_exposure_xml,\n+                                  in_calibration_field=tilesPhotomOffsets)\n+    abscalibrated = absPhotoCalib(infile=relcalibrated, cal_data=abs_cal_data)\n+    gsclmasked = gsclMasking(infile=abscalibrated, mdbxml=mdbfile, ref_catalog=ref_catalog)\n+    catalog = catalogPhotDither(infile=gsclmasked, listofpsffiles=listofpsffiles)\n+    return gsclmasked, catalog\n+\n+\n+@pipeline(outputs=('cal_images_xml', 'cal_catalogs_xml', 'stk_image_xml', 'stk_catalog_xml'))\n+def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, badpixel,\n+                 obsCatalog, refCatalog, presolution, detectorsPhotomOffsets, absPhotoData, tilesPhotomOffsets):\n+\n+    tmp = nir_calib_dither(nirConfig=nirConfig,\n+                           ditherExposure=dithers,\n+                           mdb=mdb,\n+                           badpixel=badpixel, masterdark=masterdark,\n+                           masterflat=masterflat, largeflat=largeflat)\n+\n+    pre_processed, background = extractLists2(inlist=tmp)\n+\n+    listofpsflists_dither = psfForDither(listofimages=pre_processed,\n+                                         mdbfile=mdb, cal_data=absPhotoData,\n+                                         config=nirConfig)\n+\n+    astromCalibDithers, fullcatalog = doAstrom(listofdithers=pre_processed,\n+                                               listofpsflists=listofpsflists_dither,\n+                                               ref_catalog=obsCatalog,\n+                                               presolution=presolution,\n+                                               config=nirConfig)\n+\n+    rel_exposure_xml = relPhotoExpSciSelfCal(in_full_catalog=fullcatalog,\n+                                             in_calibration_detectors=detectorsPhotomOffsets)\n+\n+    tmp = p_photoCalib(infile=astromCalibDithers,\n+                       rel_cal_data=detectorsPhotomOffsets,\n+                       rel_exposure_xml=rel_exposure_xml,\n+                       tilesPhotomOffsets=tilesPhotomOffsets,\n+                       abs_cal_data=absPhotoData,\n+                       listofpsffiles=listofpsflists_dither,\n+                       mdbfile=mdb,\n+                       ref_catalog=refCatalog\n+                       )\n+\n+    gsclmasked, catalog = extractLists2(inlist=tmp)\n+\n+    resampled = doResampling(listofcaldithers=gsclmasked,\n+                             listofbackgrounds=background,\n+                             config=nirConfig)\n+\n+    resampledCRFlagged = crRejectionMFSciSelfCal(dith_file=resampled)\n+\n+    stackedImage = doStacking(listofresampled=resampledCRFlagged,\n+                              config=nirConfig)\n+\n+    listofpsflists_stacked = psfForStack(listofimages=stackedImage,\n+                                         mdbfile=mdb, cal_data=absPhotoData,\n+                                         config=nirConfig)\n+\n+    catalogStack = catalogPhotStackSciSelfCal(infile=stackedImage,\n+                                              listofpsflists=listofpsflists_stacked)\n+\n+    cal_images_xml, cal_catalogs_xml, stk_image_xml, stk_catalog_xml = \\\n+        createScientificDpdsSciSelfCal(cal_images=gsclmasked,\n+                                       cal_background=background,\n+                                       cal_psf=listofpsflists_dither,\n+                                       cal_catalogs=catalog,\n+                                       stk_image=stackedImage,\n+                                       stk_psf=listofpsflists_stacked,\n+                                       stk_catalog=catalogStack)\n+\n+    return cal_images_xml, cal_catalogs_xml, stk_image_xml, stk_catalog_xml\n+\n+\n+if __name__ == '__main__':\n+    from euclidwf.framework.graph_builder import build_graph\n+    from euclidwf.utilities import visualizer\n+    pydron_graph=build_graph(nir_pipeline)\n+    print(str(pydron_graph))\n+    visualizer.visualize_graph(pydron_graph)\n",
                            "update resources; new PipDefs for particular tasks",
                            "frizzo",
                            "2022-08-28T18:22:30.000+02:00",
                            "daa1bb97099babff7ff7ece5ed1667cff4733ec5"
                        ]
                    ],
                    "CMakeLists.txt": [
                        [
                            "@@ -12,7 +12,7 @@ find_package(ElementsProject)\n #                         elements_project(MyProject 1.0 USE Element 3.9)\n #===============================================================================\n \n-elements_project(NIR_IAL_Pipelines 2.4\n+elements_project(NIR_IAL_Pipelines 2.5\n                  USE\n                  Elements 6.2.1\n                  ST_DataModel 9.2.0\n",
                            "Merge branch 'develop' into 'persistence_check_CB016'",
                            "Thomas Gasparetto",
                            "2023-08-25T14:28:15.000+00:00",
                            "eb033aab6c7095733d1eaae193114f5b13d3e733"
                        ],
                        [
                            "@@ -12,7 +12,7 @@ find_package(ElementsProject)\n #                         elements_project(MyProject 1.0 USE Element 3.9)\n #===============================================================================\n \n-elements_project(NIR_IAL_Pipelines 2.3\n+elements_project(NIR_IAL_Pipelines 2.4\n                  USE\n                  Elements 6.2.1\n                  ST_DataModel 9.2.0\n",
                            "Bumping version after tagging",
                            "Marco Frailis",
                            "2023-08-10T09:49:42.000+00:00",
                            "17351505403b404f88031c3019befa2129398431"
                        ],
                        [
                            "@@ -16,4 +16,4 @@ elements_project(NIR_IAL_Pipelines 2.3\n                  USE\n                  Elements 6.2.1\n                  ST_DataModel 9.2.0\n-                 ST_PipelineChecker 1.5.0)\n+                 ST_PipelineChecker 1.5.1)\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -16,4 +16,4 @@ elements_project(NIR_IAL_Pipelines 2.3\n                  USE\n                  Elements 6.2.1\n                  ST_DataModel 9.2.0\n-                 ST_PipelineChecker 1.5.0)\n+                 ST_PipelineChecker 1.5.1)\n",
                            "First set of updates to the pipeline confgurations",
                            "Marco Frailis",
                            "2023-08-09T16:08:24.000+00:00",
                            "3b320c03b4e8940500253e078cb2afb087747ac4"
                        ],
                        [
                            "@@ -14,6 +14,6 @@ find_package(ElementsProject)\n \n elements_project(NIR_IAL_Pipelines 2.3\n                  USE\n-                 Elements 6.1.1\n-                 ST_DataModel 9.1.5\n-                 ST_PipelineChecker 1.4.0)\n+                 Elements 6.2.1\n+                 ST_DataModel 9.2.0\n+                 ST_PipelineChecker 1.5.0)\n",
                            "Merge branch 'DM92_update' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-07-03T09:40:32.000+00:00",
                            "2071ea55716d41f9de141db558789bdee79cbbc1"
                        ],
                        [
                            "@@ -14,6 +14,6 @@ find_package(ElementsProject)\n \n elements_project(NIR_IAL_Pipelines 2.3\n                  USE\n-                 Elements 6.1.1\n-                 ST_DataModel 9.1.5\n-                 ST_PipelineChecker 1.4.0)\n+                 Elements 6.2.1\n+                 ST_DataModel 9.2.0\n+                 ST_PipelineChecker 1.5.0)\n",
                            "update to DM 9.2.0, Elements, jenkins, PipelineChecker. Adding CI file",
                            "Thomas Gasparetto",
                            "2023-07-03T09:40:32.000+00:00",
                            "c836a6652fe083eff2f72bdf00e1f1ab80dbc580"
                        ],
                        [
                            "@@ -12,8 +12,8 @@ find_package(ElementsProject)\n #                         elements_project(MyProject 1.0 USE Element 3.9)\n #===============================================================================\n \n-elements_project(NIR_IAL_Pipelines 2.2\n+elements_project(NIR_IAL_Pipelines 2.3\n                  USE\n-                 Elements 6.0.1\n-                 ST_DataModel 9.0.2\n-                 ST_PipelineChecker 1.2.3)\n+                 Elements 6.1.1\n+                 ST_DataModel 9.1.5\n+                 ST_PipelineChecker 1.4.0)\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -12,8 +12,8 @@ find_package(ElementsProject)\n #                         elements_project(MyProject 1.0 USE Element 3.9)\n #===============================================================================\n \n-elements_project(NIR_IAL_Pipelines 2.2\n+elements_project(NIR_IAL_Pipelines 2.3\n                  USE\n-                 Elements 6.0.1\n-                 ST_DataModel 9.0.2\n-                 ST_PipelineChecker 1.2.3)\n+                 Elements 6.1.1\n+                 ST_DataModel 9.1.5\n+                 ST_PipelineChecker 1.4.0)\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ],
                        [
                            "@@ -12,7 +12,7 @@ find_package(ElementsProject)\n #                         elements_project(MyProject 1.0 USE Element 3.9)\n #===============================================================================\n \n-elements_project(NIR_IAL_Pipelines 2.1\n+elements_project(NIR_IAL_Pipelines 2.2\n                  USE\n                  Elements 6.0.1\n                  ST_DataModel 9.0.2\n",
                            "version 2.2 of pipeline. solving jenkins complaining",
                            "Thomas Gasparetto",
                            "2023-05-03T15:17:44.000+00:00",
                            "15de24f8c3a8b0c6f85188e862f668901a6574c1"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_MasterDark_Pipeline/PipScript_NIR_MasterDark.py": [
                        [
                            "@@ -17,7 +17,7 @@ def calibration(rawDarks, mdb, badpixel, nirconfig):\n @pipeline(outputs=('outputs',))\n def main(rawDarks, mdb, badpixel, nirConfig):\n     calibrated = calibration(rawDarks=rawDarks, mdb=mdb, badpixel=badpixel, nirconfig=nirConfig)\n-    outputs = makeMasterDark(darklist=calibrated, config=nirConfig)\n+    outputs = makeMasterDark(darklist=calibrated, config=nirConfig, mdbfile=mdb)\n     return outputs\n \n \n",
                            "MasterDark using MDB file",
                            "Thomas Gasparetto",
                            "2023-08-24T11:38:55.000+00:00",
                            "faa487b12261b4742e3c86614496ba3e91b4da36"
                        ],
                        [
                            "@@ -5,18 +5,18 @@ from PackageDef_NIR import (\n \n \n @parallel(iterable=\"rawDarks\")\n-def calibration(rawDarks, mdb, badpixel):\n+def calibration(rawDarks, mdb, badpixel, nirconfig):\n     step = runInitialize(infile=rawDarks, mdbfile=mdb)\n     step = badPixMasking(infile=step, xmlfile=badpixel)\n     step = saturation(infile=step, xmlfile=mdb)\n-    step = nonLinearity(infile=step, xmlfile=mdb)\n+    step = nonLinearity(infile=step, xmlfile=mdb, config=nirconfig)\n \n     return step\n \n \n @pipeline(outputs=('outputs',))\n def main(rawDarks, mdb, badpixel, nirConfig):\n-    calibrated = calibration(rawDarks=rawDarks, mdb=mdb, badpixel=badpixel)\n+    calibrated = calibration(rawDarks=rawDarks, mdb=mdb, badpixel=badpixel, nirconfig=nirConfig)\n     outputs = makeMasterDark(darklist=calibrated, config=nirConfig)\n     return outputs\n \n",
                            "Merge branch 'cycle18_dm91_fixes' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-05-03T15:11:35.000+00:00",
                            "eb283372eb67490540acf763239f735251196af6"
                        ],
                        [
                            "@@ -5,18 +5,18 @@ from PackageDef_NIR import (\n \n \n @parallel(iterable=\"rawDarks\")\n-def calibration(rawDarks, mdb, badpixel):\n+def calibration(rawDarks, mdb, badpixel, nirconfig):\n     step = runInitialize(infile=rawDarks, mdbfile=mdb)\n     step = badPixMasking(infile=step, xmlfile=badpixel)\n     step = saturation(infile=step, xmlfile=mdb)\n-    step = nonLinearity(infile=step, xmlfile=mdb)\n+    step = nonLinearity(infile=step, xmlfile=mdb, config=nirconfig)\n \n     return step\n \n \n @pipeline(outputs=('outputs',))\n def main(rawDarks, mdb, badpixel, nirConfig):\n-    calibrated = calibration(rawDarks=rawDarks, mdb=mdb, badpixel=badpixel)\n+    calibrated = calibration(rawDarks=rawDarks, mdb=mdb, badpixel=badpixel, nirconfig=nirConfig)\n     outputs = makeMasterDark(darklist=calibrated, config=nirConfig)\n     return outputs\n \n",
                            "Added Non Linearity config pipelines. Skipping Persistence since there's no config file at the moment",
                            "Thomas Gasparetto",
                            "2023-04-26T17:31:04.000+02:00",
                            "41e9e10542414366821871e619ad325cd170641a"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_Persistence_Pipeline/PipScript_NIR_Persistence_Model_Check.py": [
                        [
                            "@@ -13,7 +13,7 @@ def nir_calib_dither(nirConfig, rawfile, mdb, masterdark, badpixel):\n     darkExposure = darkSubtract(infile=nonlinExposure, masterdark=masterdark)\n     return darkExposure\n \n-@pipeline(outputs=('persistence_mask_output', 'diff_image_xml')) #, 'raw_cal_dark')) #, 'diffimage', 'cal_image_xml'))\n+@pipeline(outputs=('persistence_mask_output', 'diff_image_xml'))\n def nir_persistence_model(nirConfig, darkinput, flatinput, mdb, masterdark, badpixel):\n \n     \n@@ -52,9 +52,8 @@ def nir_persistence_model(nirConfig, darkinput, flatinput, mdb, masterdark, badp\n \n     diff_image_xml = createPersistenceXml(persistence_mask=diff_image)\n \n-    # raw_cal_dark = createPersistenceXml(persistence_mask=calibrated_raw_dark)\n \n-    return persistence_mask_output, diff_image_xml #, raw_cal_dark\n+    return persistence_mask_output, diff_image_xml\n \n \n if __name__ == '__main__':\n",
                            "cleaning commented code",
                            "Thomas Gasparetto",
                            "2023-08-17T11:56:50.000+02:00",
                            "b2232d4f99b9dec767c00f615b7022c3b429af35"
                        ],
                        [
                            "@@ -0,0 +1,67 @@\n+from euclidwf.framework.workflow_dsl import pipeline, parallel\n+\n+from PackageDef_NIR import (\n+    runInitialize, badPixMasking, saturation, nonLinearity, darkSubtract,\n+    persistenceMask, createPersistenceXml, persistenceDiff, makeList1, makeList2)\n+\n+\n+def nir_calib_dither(nirConfig, rawfile, mdb, masterdark, badpixel):\n+    initExposure = runInitialize(infile=rawfile, mdbfile=mdb)\n+    badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n+    satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n+    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb, config=nirConfig)\n+    darkExposure = darkSubtract(infile=nonlinExposure, masterdark=masterdark)\n+    return darkExposure\n+\n+@pipeline(outputs=('persistence_mask_output', 'diff_image_xml')) #, 'raw_cal_dark')) #, 'diffimage', 'cal_image_xml'))\n+def nir_persistence_model(nirConfig, darkinput, flatinput, mdb, masterdark, badpixel):\n+\n+    \n+    calibrated_raw_flat = nir_calib_dither(\n+        nirConfig=nirConfig,\n+        rawfile=flatinput,\n+        mdb=mdb,\n+        masterdark=masterdark,\n+        badpixel=badpixel\n+        )\n+\n+    calibrated_raw_dark = nir_calib_dither(\n+        nirConfig=nirConfig,\n+        rawfile=darkinput,\n+        mdb=mdb,\n+        masterdark=masterdark,\n+        badpixel=badpixel\n+    )\n+\n+    preprocessed_flat_plus_dark = makeList2(\n+        infile1=calibrated_raw_flat,\n+        infile2=calibrated_raw_dark\n+        )\n+\n+    persistence_flat_fits = persistenceMask(\n+        infile=darkinput,\n+        prevlist=preprocessed_flat_plus_dark,\n+        mdbxml=mdb)\n+\n+    persistence_mask_output  = createPersistenceXml(persistence_mask=persistence_flat_fits)\n+\n+    diff_image = persistenceDiff(\n+        darkfile=calibrated_raw_dark,\n+        persfile=persistence_flat_fits\n+        )\n+\n+    diff_image_xml = createPersistenceXml(persistence_mask=diff_image)\n+\n+    # raw_cal_dark = createPersistenceXml(persistence_mask=calibrated_raw_dark)\n+\n+    return persistence_mask_output, diff_image_xml #, raw_cal_dark\n+\n+\n+if __name__ == '__main__':\n+    from euclidwf.framework.graph_builder import build_graph\n+    from euclidwf.utilities import visualizer\n+    pydron_graph=build_graph(nir_persistence_model)\n+    print(str(pydron_graph))\n+    visualizer.visualize_graph(pydron_graph)\n+\n+\n",
                            "first test of a Persistence pipeline for CALBLOCK-016",
                            "Thomas Gasparetto",
                            "2023-08-17T11:44:00.000+02:00",
                            "7f3fcbbe0690af2389b5c530e2380a26002c4448"
                        ]
                    ],
                    ".gitignore": [
                        [
                            "@@ -0,0 +1,183 @@\n+# ==============================================\n+# Euclid Science Ground Segment .gitignore file\n+# ---\n+# Adapted from\n+# https://github.com/github/gitignore\n+# and\n+# http://goel.io/joe\n+# ==============================================\n+\n+#####=== Data ===#####\n+# Fits files\n+*.[fF][iI][tT]\n+*.[fF][iI][tT][sS]\n+*.fits-hash-stamp\n+\n+# CSV\n+*.[cC][sS][vV]\n+\n+# Dat\n+*.[dD][aA][Tt]\n+*.[dD][aA][tT][aA]\n+\n+#####=== Elements ===#####\n+\n+# Building area\n+build.*/\n+\n+# Install area\n+InstallArea/\n+\n+# CMake products\n+CMakeCache.txt\n+\n+#####=== System ===#####\n+\n+# SVN\n+.svn/\n+\n+# Apple\n+*.DS_Store\n+\n+# Windows\n+Desktop.ini\n+Thumbs.db\n+\n+#####=== Editors ===#####\n+\n+## Eclipse\n+.metadata\n+bin/\n+tmp/\n+*.tmp\n+*.bak\n+*.swp\n+*~.nib\n+local.properties\n+.settings/\n+.loadpath\n+.recommenders\n+\n+# Eclipse Core\n+.project\n+\n+# External tool builders\n+.externalToolBuilders/\n+\n+# Locally stored \"Eclipse launch configurations\"\n+*.launch\n+\n+# PyDev specific (Python IDE for Eclipse)\n+*.pydevproject\n+\n+# CDT-specific (C/C++ Development Tooling)\n+.cproject\n+\n+# PyCharm\n+.idea\n+\n+## VIM\n+*.swp\n+\n+## Emacs\n+*~\n+.projectile\n+\n+## SublimeText\n+*.sublime-workspace\n+*.sublime-project\n+\n+#####=== C++ ===#####\n+\n+# Compiled Object files\n+*.slo\n+*.lo\n+*.o\n+*.obj\n+\n+# Precompiled Headers\n+*.gch\n+*.pch\n+\n+# Compiled Dynamic libraries\n+*.so\n+*.dylib\n+*.dll\n+\n+# Fortran module files\n+*.mod\n+\n+# Compiled Static libraries\n+*.lai\n+*.la\n+*.a\n+*.lib\n+\n+# Executables\n+*.exe\n+*.out\n+*.app\n+\n+#####=== Python ===#####\n+\n+# Byte-compiled / optimized / DLL files\n+__pycache__/\n+*.py[cod]\n+*$py.class\n+\n+# C extensions\n+*.so\n+\n+# Distribution / packaging\n+.Python\n+env/\n+build/\n+develop-eggs/\n+dist/\n+downloads/\n+eggs/\n+.eggs/\n+lib/\n+lib64/\n+parts/\n+sdist/\n+var/\n+*.egg-info/\n+.installed.cfg\n+*.egg\n+\n+# PyInstaller\n+#  Usually these files are written by a python script from a template\n+#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n+*.manifest\n+*.spec\n+\n+# Installer logs\n+pip-log.txt\n+pip-delete-this-directory.txt\n+\n+# Unit test / coverage reports\n+htmlcov/\n+.tox/\n+.coverage\n+.coverage.*\n+.cache\n+nosetests.xml\n+coverage.xml\n+*,cover\n+\n+# Translations\n+*.mo\n+*.pot\n+\n+# Django stuff:\n+*.log\n+\n+# Sphinx documentation\n+docs/_build/\n+\n+# PyBuilder\n+target/\n+\n+MD5/\n+*.md5-stamp\n",
                            "first test of a Persistence pipeline for CALBLOCK-016",
                            "Thomas Gasparetto",
                            "2023-08-17T11:44:00.000+02:00",
                            "7f3fcbbe0690af2389b5c530e2380a26002c4448"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_SelfCalib_Pipeline/PipScript_NIR_SelfCalib.py": [
                        [
                            "@@ -29,7 +29,7 @@ def nir_selfcalib(nirConfig, dithers, mdb, masterdark, masterflat, badpixel,\n                                   presolution=presolution,\n                                   config=nirConfig)\n \n-    largeflat, detcoeff = makeSelfCalib(inlist=astrometricCatalogs, mdbfile=mdb)\n+    largeflat, detcoeff = makeSelfCalib(inlist=astrometricCatalogs, mdbfile=mdb, inopt=nirConfig)\n \n     return largeflat,detcoeff\n \n",
                            "Merge branch 'feature_selfcal' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-08-14T15:23:11.000+00:00",
                            "c949c3a03a45164a056f5e50203071807027929e"
                        ],
                        [
                            "@@ -29,7 +29,7 @@ def nir_selfcalib(nirConfig, dithers, mdb, masterdark, masterflat, badpixel,\n                                   presolution=presolution,\n                                   config=nirConfig)\n \n-    largeflat, detcoeff = makeSelfCalib(inlist=astrometricCatalogs)\n+    largeflat, detcoeff = makeSelfCalib(inlist=astrometricCatalogs, mdbfile=mdb)\n \n     return largeflat,detcoeff\n \n",
                            "Merge branch 'update_pvrh2_calblock001' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-06-12T10:30:03.000+00:00",
                            "ba582aeaf5e6d62e76c3b9c2edc8016e75d39301"
                        ],
                        [
                            "@@ -29,7 +29,7 @@ def nir_selfcalib(nirConfig, dithers, mdb, masterdark, masterflat, badpixel,\n                                   presolution=presolution,\n                                   config=nirConfig)\n \n-    largeflat, detcoeff = makeSelfCalib(inlist=astrometricCatalogs)\n+    largeflat, detcoeff = makeSelfCalib(inlist=astrometricCatalogs, mdbfile=mdb)\n \n     return largeflat,detcoeff\n \n",
                            "Selfcal and distortion pipelines update",
                            "Thomas Gasparetto",
                            "2023-06-12T10:30:03.000+00:00",
                            "aff0826a1f68b401c5a898f3012bf9c468b88e96"
                        ],
                        [
                            "@@ -6,11 +6,11 @@ from PackageDef_NIR import (\n     smallFlatCorrect, doAstromSelfCal, makeSelfCalib)\n \n @parallel(iterable=\"ditherExposure\")\n-def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, badpixel):\n+def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, badpixel, config):\n     initExposure = runInitialize(infile=ditherExposure, mdbfile=mdb)\n     badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n     satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n-    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb)\n+    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb, config=config)\n     darkExposure = darkSubtract(infile=nonlinExposure, masterdark=masterdark)\n     flatExposure = smallFlatCorrect(infile=darkExposure, masterflat=masterflat)\n     return flatExposure\n@@ -21,7 +21,8 @@ def nir_selfcalib(nirConfig, dithers, mdb, masterdark, masterflat, badpixel,\n                   sourceCatalog, presolution):\n \n     flats = nir_calib_dither(ditherExposure=dithers, mdb=mdb,\n-                             masterdark=masterdark, masterflat=masterflat, badpixel=badpixel)\n+                             masterdark=masterdark, masterflat=masterflat, \n+                             badpixel=badpixel, config=nirConfig)\n \n     calibDithers_preLargeScale, astrometricCatalogs, fullcatalog = doAstromSelfCal(listofdithers=flats,\n                                   ref_catalog=sourceCatalog,\n",
                            "Merge branch 'cycle18_dm91_fixes' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-05-03T15:11:35.000+00:00",
                            "eb283372eb67490540acf763239f735251196af6"
                        ],
                        [
                            "@@ -6,11 +6,11 @@ from PackageDef_NIR import (\n     smallFlatCorrect, doAstromSelfCal, makeSelfCalib)\n \n @parallel(iterable=\"ditherExposure\")\n-def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, badpixel):\n+def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, badpixel, config):\n     initExposure = runInitialize(infile=ditherExposure, mdbfile=mdb)\n     badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n     satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n-    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb)\n+    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb, config=config)\n     darkExposure = darkSubtract(infile=nonlinExposure, masterdark=masterdark)\n     flatExposure = smallFlatCorrect(infile=darkExposure, masterflat=masterflat)\n     return flatExposure\n@@ -21,7 +21,8 @@ def nir_selfcalib(nirConfig, dithers, mdb, masterdark, masterflat, badpixel,\n                   sourceCatalog, presolution):\n \n     flats = nir_calib_dither(ditherExposure=dithers, mdb=mdb,\n-                             masterdark=masterdark, masterflat=masterflat, badpixel=badpixel)\n+                             masterdark=masterdark, masterflat=masterflat, \n+                             badpixel=badpixel, config=nirConfig)\n \n     calibDithers_preLargeScale, astrometricCatalogs, fullcatalog = doAstromSelfCal(listofdithers=flats,\n                                   ref_catalog=sourceCatalog,\n",
                            "Added Non Linearity config pipelines. Skipping Persistence since there's no config file at the moment",
                            "Thomas Gasparetto",
                            "2023-04-26T17:31:04.000+02:00",
                            "41e9e10542414366821871e619ad325cd170641a"
                        ],
                        [
                            "@@ -3,7 +3,7 @@ from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n from PackageDef_NIR import (\n     runInitialize, badPixMasking, saturation, nonLinearity, darkSubtract,\n-    smallFlatCorrect, doAstromCatalogs, makeSelfCalib)\n+    smallFlatCorrect, doAstromSelfCal, makeSelfCalib)\n \n @parallel(iterable=\"ditherExposure\")\n def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, badpixel):\n@@ -23,7 +23,7 @@ def nir_selfcalib(nirConfig, dithers, mdb, masterdark, masterflat, badpixel,\n     flats = nir_calib_dither(ditherExposure=dithers, mdb=mdb,\n                              masterdark=masterdark, masterflat=masterflat, badpixel=badpixel)\n \n-    calibDithers_preLargeScale, astrometricCatalogs, fullcatalog = doAstromCatalogs(listofdithers=flats,\n+    calibDithers_preLargeScale, astrometricCatalogs, fullcatalog = doAstromSelfCal(listofdithers=flats,\n                                   ref_catalog=sourceCatalog,\n                                   presolution=presolution,\n                                   config=nirConfig)\n",
                            "update resources; new PipDefs for particular tasks",
                            "frizzo",
                            "2022-08-28T18:22:30.000+02:00",
                            "daa1bb97099babff7ff7ece5ed1667cff4733ec5"
                        ],
                        [
                            "@@ -3,7 +3,7 @@ from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n from PackageDef_NIR import (\n     runInitialize, badPixMasking, saturation, nonLinearity, darkSubtract,\n-    smallFlatCorrect, doAstromSelfCal, makeSelfCalib)\n+    smallFlatCorrect, doAstromCatalogs, makeSelfCalib)\n \n @parallel(iterable=\"ditherExposure\")\n def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, badpixel):\n@@ -23,8 +23,8 @@ def nir_selfcalib(nirConfig, dithers, mdb, masterdark, masterflat, badpixel,\n     flats = nir_calib_dither(ditherExposure=dithers, mdb=mdb,\n                              masterdark=masterdark, masterflat=masterflat, badpixel=badpixel)\n \n-    calibDithers_preLargeScale,  astrometricCatalogs, fullcatalog = doAstromSelfCal(listofdithers=flats,\n-                                  SIM_catalog=sourceCatalog,\n+    calibDithers_preLargeScale, astrometricCatalogs, fullcatalog = doAstromCatalogs(listofdithers=flats,\n+                                  ref_catalog=sourceCatalog,\n                                   presolution=presolution,\n                                   config=nirConfig)\n \n",
                            "Merge branch 'mfrailis/single_ref_catalog' into 'develop'",
                            "Federico Rizzo",
                            "2022-08-25T13:02:38.000+00:00",
                            "b6d1c9dfc97e07ea9e27420c61b8dd50b403dd58"
                        ],
                        [
                            "@@ -3,7 +3,7 @@ from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n from PackageDef_NIR import (\n     runInitialize, badPixMasking, saturation, nonLinearity, darkSubtract,\n-    smallFlatCorrect, doAstromSelfCal, makeSelfCalib)\n+    smallFlatCorrect, doAstromCatalogs, makeSelfCalib)\n \n @parallel(iterable=\"ditherExposure\")\n def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, badpixel):\n@@ -23,8 +23,8 @@ def nir_selfcalib(nirConfig, dithers, mdb, masterdark, masterflat, badpixel,\n     flats = nir_calib_dither(ditherExposure=dithers, mdb=mdb,\n                              masterdark=masterdark, masterflat=masterflat, badpixel=badpixel)\n \n-    calibDithers_preLargeScale,  astrometricCatalogs, fullcatalog = doAstromSelfCal(listofdithers=flats,\n-                                  SIM_catalog=sourceCatalog,\n+    calibDithers_preLargeScale, astrometricCatalogs, fullcatalog = doAstromCatalogs(listofdithers=flats,\n+                                  ref_catalog=sourceCatalog,\n                                   presolution=presolution,\n                                   config=nirConfig)\n \n",
                            "Removing NIR_ProcessField_TU workflow by simplifying the input ports of the Astrometric calibration and the Ghost masking steps. Now the NIR_ProcessField pipeline accepts both a VIS stack catalog or a TU catalog",
                            "Marco Frailis",
                            "2022-08-23T16:15:31.000+00:00",
                            "4ac0d3337800354945a5d027eb9f978289094cbe"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_AbsolutePhotometry_Pipeline/PipDef_NIR_AbsolutePhotometry.xml": [
                        [
                            "@@ -1,5 +1,5 @@\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_H-CALIB_ABSOLUTE-PHOTOMETRY_DEV_2022.03.29</Id> \n+    <Id>PipDef_NIR_CALIB_ABSOLUTE-PHOTOMETRY_2023.08.08</Id> \n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n     <PipelineScriptPath>NIR_AbsolutePhotometry_Pipeline/PipScript_NIR_AbsolutePhotometry.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n@@ -7,18 +7,17 @@\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"UNKNOWN\") AND (dithers.Data.ObservationSequence.CalblockId == \"UNKNOWN\") AND (dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>4</Max>\n+                <Max>800</Max>\n             </Cardinality>\n         </KeyProductInputDataPlan>\n-        <InputDataPlan>\n+         <InputDataPlan>\n             <InputPortName>nirConfig</InputPortName>\n             <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>nirConfig.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -28,9 +27,9 @@\n         <InputDataPlan>\n             <InputPortName>mdb</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\"</FilesToInclude>\n+                <FilesToInclude>\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPDetectorTable*\",\"NISPDetectorSlots*\",\"EUC_NISP_NLPHOTO-*\",\"EUC_NISP_GAIN-*\",\"Calibrator*\",\"EUC_FM_NIP_[JHY]_SCS*.fits\",\"NISPDetectorQuantumEff*\",\"NISP[YJH]TransmissionCurves*.csv\",\"PLMTransmissionNISP*\",\"comoving_distance_relation.fits\"</FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -41,7 +40,7 @@\n         <InputDataPlan>\n             <InputPortName>presolution</InputPortName>\n             <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>presolution.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>OPTIONAL</Optionality>\n                 <Min>0</Min>\n@@ -51,8 +50,7 @@\n         <InputDataPlan>\n             <InputPortName>masterdark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>masterdark.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -62,7 +60,7 @@\n         <InputDataPlan>\n             <InputPortName>masterflat</InputPortName>\n             <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>masterflat.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -72,7 +70,7 @@\n         <InputDataPlan>\n             <InputPortName>largeflat</InputPortName>\n             <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>largeflat.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -82,8 +80,7 @@\n         <InputDataPlan>\n             <InputPortName>badpixel</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badpixel.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -92,19 +89,22 @@\n         </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>sourceCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n+            <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n+            <InputQuerySpecPlan>sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\"</InputQuerySpecPlan>\n+             <LinkedBy>\n+                <Query>sourceCatalog.Data.ObservationId == dithers.Data.ObservationSequence.ObservationId</Query>\n+            </LinkedBy>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n-        </InputDataPlan>\n+        </InputDataPlan>      \n         <InputDataPlan>\n             <InputPortName>detectorsPhotomOffsets</InputPortName>\n             <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n-            <InputQuerySpecPlan>(detectorsPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (detectorsPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_H\") AND (detectorsPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n+            <InputQuerySpecPlan>detectorsPhotomOffsets.Header.ProductId.LimitedString == \"UNKNOWN\" </InputQuerySpecPlan>\n+        <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n@@ -122,5 +122,5 @@\n             </Cardinality>\n         </OutputDataProduct>\n     </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n+    <EstimatedWorkdirSizeGB>2000</EstimatedWorkdirSizeGB>\n </tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_AbsolutePhotometry_Pipeline/PipDef_NIR_J_AbsolutePhotometry.xml": [
                        [
                            "@@ -1,126 +0,0 @@\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_J-CALIB_ABSOLUTE-PHOTOMETRY_DEV_2022.03.29</Id> \n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineScriptPath>NIR_AbsolutePhotometry_Pipeline/PipScript_NIR_AbsolutePhotometry.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n-    <InputDataSetPlan>\n-        <KeyProductInputDataPlan>\n-            <InputPortName>dithers</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>4</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>nirConfig</InputPortName>\n-            <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\"</FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>presolution</InputPortName>\n-            <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterdark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_J\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterflat</InputPortName>\n-            <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_J\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>largeflat</InputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_J\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>sourceCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>detectorsPhotomOffsets</InputPortName>\n-            <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n-            <InputQuerySpecPlan>(detectorsPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (detectorsPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_J\") AND (detectorsPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-    </InputDataSetPlan> \n-    <OutputDataSet>\n-        <OutputDataProduct>\n-            <OutputPortName>abscal</OutputPortName>\n-            <DataProductType>DpdNirAbsPhotoCalibration</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n-</tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_J-CALIB_ABSOLUTE-PHOTOMETRY_DEV_2022.03.29</Id> \n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_AbsolutePhotometry_Pipeline/PipScript_NIR_AbsolutePhotometry.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_AbsolutePhotometry_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_AbsolutePhotometry_Pipeline/PipScript_NIR_AbsolutePhotometry.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -103,7 +93,7 @@\n         <InputDataPlan>\n             <InputPortName>sourceCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != 'INVALID') AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -120,13 +110,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>abscal</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_J-CALIB_ABSOLUTE-PHOTOMETRY_DEV_2022.03.29</Id> \n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_AbsolutePhotometry_Pipeline/PipScript_NIR_AbsolutePhotometry.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_AbsolutePhotometry_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_AbsolutePhotometry_Pipeline/PipScript_NIR_AbsolutePhotometry.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -103,7 +93,7 @@\n         <InputDataPlan>\n             <InputPortName>sourceCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != 'INVALID') AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -120,13 +110,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>abscal</OutputPortName>\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_AbsolutePhotometry_Pipeline/PipDef_NIR_Y_AbsolutePhotometry.xml": [
                        [
                            "@@ -1,126 +0,0 @@\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_Y-CALIB_ABSOLUTE-PHOTOMETRY_DEV_2022.03.29</Id> \n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineScriptPath>NIR_AbsolutePhotometry_Pipeline/PipScript_NIR_AbsolutePhotometry.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n-    <InputDataSetPlan>\n-        <KeyProductInputDataPlan>\n-            <InputPortName>dithers</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"Y\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"Y\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>4</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>nirConfig</InputPortName>\n-            <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\"</FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>presolution</InputPortName>\n-            <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterdark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_Y\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterflat</InputPortName>\n-            <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_Y\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>largeflat</InputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_Y\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>sourceCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>detectorsPhotomOffsets</InputPortName>\n-            <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n-            <InputQuerySpecPlan>(detectorsPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (detectorsPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_Y\") AND (detectorsPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-    </InputDataSetPlan> \n-    <OutputDataSet>\n-        <OutputDataProduct>\n-            <OutputPortName>abscal</OutputPortName>\n-            <DataProductType>DpdNirAbsPhotoCalibration</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n-</tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_Y-CALIB_ABSOLUTE-PHOTOMETRY_DEV_2022.03.29</Id> \n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_AbsolutePhotometry_Pipeline/PipScript_NIR_AbsolutePhotometry.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_AbsolutePhotometry_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_AbsolutePhotometry_Pipeline/PipScript_NIR_AbsolutePhotometry.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -103,7 +93,7 @@\n         <InputDataPlan>\n             <InputPortName>sourceCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != 'INVALID') AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -120,13 +110,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>abscal</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_Y-CALIB_ABSOLUTE-PHOTOMETRY_DEV_2022.03.29</Id> \n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_AbsolutePhotometry_Pipeline/PipScript_NIR_AbsolutePhotometry.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_AbsolutePhotometry_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_AbsolutePhotometry_Pipeline/PipScript_NIR_AbsolutePhotometry.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -103,7 +93,7 @@\n         <InputDataPlan>\n             <InputPortName>sourceCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != 'INVALID') AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -120,13 +110,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>abscal</OutputPortName>\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_Baseline_Pipeline/PipDef_NIR_Baseline.xml": [
                        [
                            "@@ -1,5 +1,5 @@\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_H-CALIB_BASELINE_DEV_2022.03.29</Id>\n+    <Id>PipDef_NIR_CALIB_BASELINE_2023.08.08</Id>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n     <PipelineScriptPath>NIR_Baseline_Pipeline/PipScript_NIR_Baseline.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n@@ -7,7 +7,7 @@\n         <KeyProductInputDataPlan>\n             <InputPortName>rawBaseline</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(rawBaseline.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (rawBaseline.Data.FilterWheelPos.FilterWheelPosition == \"CLOSED\") AND (rawBaseline.Data.ImgType.Category.ProductCategory == \"CALIB\") AND (rawBaseline.Data.ImgType.FirstType.ProductTypeFirstGroup == \"DARK\") AND (rawBaseline.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan> (rawBaseline.Data.ObservationSequence.CalblockId == \"UNKNOWN\") AND (rawBaseline.Data.FilterWheelPos.FilterWheelPosition == \"CLOSED\") AND (rawBaseline.Data.ReadoutMode.MACCValues.NGroups == 1) AND (rawBaseline.Data.ImgType.FirstType.ProductTypeFirstGroup == \"DARK\") AND (rawBaseline.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -17,7 +17,7 @@\n         <InputDataPlan>\n             <InputPortName>nirConfig</InputPortName>\n             <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>nirConfig.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -27,7 +27,7 @@\n         <InputDataPlan>\n             <InputPortName>mdb</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <FileFiltering>\n                 <FilesToInclude>\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\"</FilesToInclude>\n             </FileFiltering>\n@@ -37,17 +37,6 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n     </InputDataSetPlan>\n     <OutputDataSet>\n         <OutputDataProduct>\n@@ -60,5 +49,5 @@\n             </Cardinality>\n         </OutputDataProduct>\n     </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n+    <EstimatedWorkdirSizeGB>60</EstimatedWorkdirSizeGB>\n </tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,5 +1,5 @@\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_CALIB_BASELINE_DEV_2023.08.08</Id>\n+    <Id>PipDef_NIR_CALIB_BASELINE_2023.08.08</Id>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n     <PipelineScriptPath>NIR_Baseline_Pipeline/PipScript_NIR_Baseline.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n",
                            "Updated most of the pipeline definitions for PV",
                            "Marco Frailis",
                            "2023-08-09T17:51:09.000+00:00",
                            "e29a28ee79e24fa3d4416124617710741b3d82b1"
                        ],
                        [
                            "@@ -1,5 +1,5 @@\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_H-CALIB_BASELINE_DEV_2022.03.29</Id>\n+    <Id>PipDef_NIR_CALIB_BASELINE_DEV_2023.08.08</Id>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n     <PipelineScriptPath>NIR_Baseline_Pipeline/PipScript_NIR_Baseline.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n@@ -7,7 +7,7 @@\n         <KeyProductInputDataPlan>\n             <InputPortName>rawBaseline</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(rawBaseline.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (rawBaseline.Data.FilterWheelPos.FilterWheelPosition == \"CLOSED\") AND (rawBaseline.Data.ImgType.Category.ProductCategory == \"CALIB\") AND (rawBaseline.Data.ImgType.FirstType.ProductTypeFirstGroup == \"DARK\") AND (rawBaseline.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan> (rawBaseline.Data.ObservationSequence.CalblockId == \"UNKNOWN\") AND (rawBaseline.Data.FilterWheelPos.FilterWheelPosition == \"CLOSED\") AND (rawBaseline.Data.ReadoutMode.MACCValues.NGroups == 1) AND (rawBaseline.Data.ImgType.FirstType.ProductTypeFirstGroup == \"DARK\") AND (rawBaseline.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -17,7 +17,7 @@\n         <InputDataPlan>\n             <InputPortName>nirConfig</InputPortName>\n             <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>nirConfig.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -27,7 +27,7 @@\n         <InputDataPlan>\n             <InputPortName>mdb</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <FileFiltering>\n                 <FilesToInclude>\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\"</FilesToInclude>\n             </FileFiltering>\n@@ -37,17 +37,6 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n     </InputDataSetPlan>\n     <OutputDataSet>\n         <OutputDataProduct>\n@@ -60,5 +49,5 @@\n             </Cardinality>\n         </OutputDataProduct>\n     </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n+    <EstimatedWorkdirSizeGB>60</EstimatedWorkdirSizeGB>\n </tsk1:PipelineDef>\n",
                            "First set of updates to the pipeline confgurations",
                            "Marco Frailis",
                            "2023-08-09T16:08:24.000+00:00",
                            "3b320c03b4e8940500253e078cb2afb087747ac4"
                        ],
                        [
                            "@@ -0,0 +1,64 @@\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n+    <Id>PipDef_NIR_H-CALIB_BASELINE_DEV_2022.03.29</Id>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <PipelineScriptPath>NIR_Baseline_Pipeline/PipScript_NIR_Baseline.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n+        <KeyProductInputDataPlan>\n+            <InputPortName>rawBaseline</InputPortName>\n+            <DataProductType>DpdNispRawFrame</DataProductType>\n+            <InputQuerySpecPlan>(rawBaseline.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (rawBaseline.Data.FilterWheelPos.FilterWheelPosition == \"CLOSED\") AND (rawBaseline.Data.ImgType.Category.ProductCategory == \"CALIB\") AND (rawBaseline.Data.ImgType.FirstType.ProductTypeFirstGroup == \"DARK\") AND (rawBaseline.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>600</Max>\n+            </Cardinality>\n+        </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>nirConfig</InputPortName>\n+            <DataProductType>DpdNirConfigurationSet</DataProductType>\n+            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>mdb</InputPortName>\n+            <DataProductType>DpdMdbDataBase</DataProductType>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <FileFiltering>\n+                <FilesToInclude>\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\"</FilesToInclude>\n+            </FileFiltering>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>badpixel</InputPortName>\n+            <DataProductType>DpdNirBadPixelMask</DataProductType>\n+            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+    </InputDataSetPlan>\n+    <OutputDataSet>\n+        <OutputDataProduct>\n+            <OutputPortName>outputs</OutputPortName>\n+            <DataProductType>DpdNirDetectorBaseline</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+    </OutputDataSet>\n+    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n+</tsk1:PipelineDef>\n",
                            "Merge branch 'add_baseline_pipeline' into 'develop'",
                            "Marco Frailis",
                            "2023-08-03T07:24:02.000+00:00",
                            "92a42a21a30cc50adf6e12d828f26b9455401e3c"
                        ],
                        [
                            "@@ -0,0 +1,64 @@\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n+    <Id>PipDef_NIR_H-CALIB_BASELINE_DEV_2022.03.29</Id>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <PipelineScriptPath>NIR_Baseline_Pipeline/PipScript_NIR_Baseline.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n+        <KeyProductInputDataPlan>\n+            <InputPortName>rawBaseline</InputPortName>\n+            <DataProductType>DpdNispRawFrame</DataProductType>\n+            <InputQuerySpecPlan>(rawBaseline.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (rawBaseline.Data.FilterWheelPos.FilterWheelPosition == \"CLOSED\") AND (rawBaseline.Data.ImgType.Category.ProductCategory == \"CALIB\") AND (rawBaseline.Data.ImgType.FirstType.ProductTypeFirstGroup == \"DARK\") AND (rawBaseline.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>600</Max>\n+            </Cardinality>\n+        </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>nirConfig</InputPortName>\n+            <DataProductType>DpdNirConfigurationSet</DataProductType>\n+            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>mdb</InputPortName>\n+            <DataProductType>DpdMdbDataBase</DataProductType>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <FileFiltering>\n+                <FilesToInclude>\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\"</FilesToInclude>\n+            </FileFiltering>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>badpixel</InputPortName>\n+            <DataProductType>DpdNirBadPixelMask</DataProductType>\n+            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+    </InputDataSetPlan>\n+    <OutputDataSet>\n+        <OutputDataProduct>\n+            <OutputPortName>outputs</OutputPortName>\n+            <DataProductType>DpdNirDetectorBaseline</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+    </OutputDataSet>\n+    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n+</tsk1:PipelineDef>\n",
                            "added init and final task for Baseline. PipScript and PipDef for baseline",
                            "Thomas Gasparetto",
                            "2023-07-04T16:41:23.000+02:00",
                            "8ed228c41ddb9a901cca71ccb0fc1bb2af26fac3"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_DistortionModel_Pipeline/PipDef_NIR_DistortionModel.xml": [
                        [
                            "@@ -1,5 +1,5 @@\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_J-DISTORSIONMODEL_DEV_2022.03.29</Id>\n+    <Id>PipDef_NIR_DISTORSIONMODEL_2023.08.08</Id>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineScriptPath>NIR_DistortionModel_Pipeline/PipScript_NIR_DistortionModel.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n@@ -7,18 +7,17 @@\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"UNKNOWN\") AND (dithers.Data.ObservationSequence.CalblockId == \"UNKNOWN\") AND (dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>4</Max>\n+                <Max>60</Max>\n             </Cardinality>\n         </KeyProductInputDataPlan>\n         <InputDataPlan>\n             <InputPortName>nirConfig</InputPortName>\n             <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>nirConfig.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -28,9 +27,9 @@\n         <InputDataPlan>\n             <InputPortName>mdb</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\"</FilesToInclude>\n+                <FilesToInclude>\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPDetectorTable*\",\"NISPDetectorSlots*\",\"EUC_NISP_NLPHOTO-*\",\"EUC_NISP_GAIN-*\"</FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -41,7 +40,7 @@\n         <InputDataPlan>\n             <InputPortName>presolution</InputPortName>\n             <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>presolution.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>OPTIONAL</Optionality>\n                 <Min>0</Min>\n@@ -51,8 +50,7 @@\n         <InputDataPlan>\n             <InputPortName>masterdark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_J\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>masterdark.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -62,7 +60,7 @@\n         <InputDataPlan>\n             <InputPortName>masterflat</InputPortName>\n             <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_J\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>masterflat.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -72,8 +70,7 @@\n         <InputDataPlan>\n             <InputPortName>badpixel</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badpixel.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -82,8 +79,11 @@\n         </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>sourceCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n+            <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n+            <InputQuerySpecPlan>sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\"</InputQuerySpecPlan>\n+             <LinkedBy>\n+                <Query>sourceCatalog.Data.ObservationId == dithers.Data.ObservationSequence.ObservationId</Query>\n+            </LinkedBy>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -102,5 +102,5 @@\n             </Cardinality>\n         </OutputDataProduct>\n     </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n+    <EstimatedWorkdirSizeGB>500</EstimatedWorkdirSizeGB>\n </tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_DistortionModel_Pipeline/PipDef_NIR_H_DistortionModel.xml": [
                        [
                            "@@ -1,106 +0,0 @@\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_H-DISTORSIONMODEL_DEV_2022.03.29</Id>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineScriptPath>NIR_DistortionModel_Pipeline/PipScript_NIR_DistortionModel.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n-    <InputDataSetPlan>\n-        <KeyProductInputDataPlan>\n-            <InputPortName>dithers</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>4</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>nirConfig</InputPortName>\n-            <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\"</FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>presolution</InputPortName>\n-            <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterdark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterflat</InputPortName>\n-            <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>sourceCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-    </InputDataSetPlan> \n-    <OutputDataSet>\n-        <OutputDataProduct>\n-            <OutputPortName>distortionmodel</OutputPortName>\n-            <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n-</tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_H-DISTORSIONMODEL_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_DistortionModel_Pipeline/PipScript_NIR_DistortionModel.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_DistortionModel_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_DistortionModel_Pipeline/PipScript_NIR_DistortionModel.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -79,16 +69,6 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>largeflat</InputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>badpixel</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n@@ -103,21 +83,14 @@\n         <InputDataPlan>\n             <InputPortName>sourceCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != 'INVALID') AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>distortionmodel</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_H-DISTORSIONMODEL_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_DistortionModel_Pipeline/PipScript_NIR_DistortionModel.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_DistortionModel_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_DistortionModel_Pipeline/PipScript_NIR_DistortionModel.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -79,16 +69,6 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>largeflat</InputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>badpixel</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n@@ -103,21 +83,14 @@\n         <InputDataPlan>\n             <InputPortName>sourceCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != 'INVALID') AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>distortionmodel</OutputPortName>\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_DistortionModel_Pipeline/PipDef_NIR_Y_DistortionModel.xml": [
                        [
                            "@@ -1,106 +0,0 @@\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_Y-DISTORSIONMODEL_DEV_2022.03.29</Id>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineScriptPath>NIR_DistortionModel_Pipeline/PipScript_NIR_DistortionModel.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n-    <InputDataSetPlan>\n-        <KeyProductInputDataPlan>\n-            <InputPortName>dithers</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"Y\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"Y\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>4</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>nirConfig</InputPortName>\n-            <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\"</FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>presolution</InputPortName>\n-            <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterdark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_Y\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterflat</InputPortName>\n-            <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_Y\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>sourceCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-    </InputDataSetPlan> \n-    <OutputDataSet>\n-        <OutputDataProduct>\n-            <OutputPortName>distortionmodel</OutputPortName>\n-            <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n-</tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_Y-DISTORSIONMODEL_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_DistortionModel_Pipeline/PipScript_NIR_DistortionModel.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_DistortionModel_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_DistortionModel_Pipeline/PipScript_NIR_DistortionModel.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -79,16 +69,6 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>largeflat</InputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_Y\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>badpixel</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n@@ -103,21 +83,14 @@\n         <InputDataPlan>\n             <InputPortName>sourceCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != 'INVALID') AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>distortionmodel</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_Y-DISTORSIONMODEL_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_DistortionModel_Pipeline/PipScript_NIR_DistortionModel.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_DistortionModel_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_DistortionModel_Pipeline/PipScript_NIR_DistortionModel.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -79,16 +69,6 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>largeflat</InputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_Y\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>badpixel</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n@@ -103,21 +83,14 @@\n         <InputDataPlan>\n             <InputPortName>sourceCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != 'INVALID') AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>distortionmodel</OutputPortName>\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_MasterDark_Pipeline/PipDef_NIR_J_MasterDark.xml": [
                        [
                            "@@ -1,64 +0,0 @@\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_J-CALIB_MASTERDARK_DEV_2022.03.29</Id>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineScriptPath>NIR_MasterDark_Pipeline/PipScript_NIR_MasterDark.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n-    <InputDataSetPlan>\n-        <KeyProductInputDataPlan>\n-            <InputPortName>rawDarks</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(rawDarks.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (rawDarks.Data.FilterWheelPos.FilterWheelPosition == \"CLOSED\") AND (rawDarks.Data.ImgType.Category.ProductCategory == \"CALIB\") AND (rawDarks.Data.ImgType.FirstType.ProductTypeFirstGroup == \"DARK\") AND (rawDarks.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>600</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>nirConfig</InputPortName>\n-            <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\"</FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>   \n-    </InputDataSetPlan>\n-    <OutputDataSet>\n-        <OutputDataProduct>\n-            <OutputPortName>outputs</OutputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n-</tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_J-CALIB_MASTERDARK_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_MasterDark_Pipeline/PipScript_NIR_MasterDark.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_MasterDark_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_MasterDark_Pipeline/PipScript_NIR_MasterDark.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>rawDarks</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -57,11 +47,8 @@\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n-        </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>rawDarks.Data.Instrument.InstrumentName.InstrumentName</GroupedBy>\n-        </Dependencies>        \n-    </InputDataSet>\n+        </InputDataPlan>   \n+    </InputDataSetPlan>\n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>outputs</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_J-CALIB_MASTERDARK_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_MasterDark_Pipeline/PipScript_NIR_MasterDark.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_MasterDark_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_MasterDark_Pipeline/PipScript_NIR_MasterDark.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>rawDarks</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -57,11 +47,8 @@\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n-        </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>rawDarks.Data.Instrument.InstrumentName.InstrumentName</GroupedBy>\n-        </Dependencies>        \n-    </InputDataSet>\n+        </InputDataPlan>   \n+    </InputDataSetPlan>\n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>outputs</OutputPortName>\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_MasterDark_Pipeline/PipDef_NIR_MasterDark.xml": [
                        [
                            "@@ -1,5 +1,5 @@\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_H-CALIB_MASTERDARK_DEV_2022.03.29</Id>\n+    <Id>PipDef_NIR_CALIB_MASTERDARK_2023.08.08</Id>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n     <PipelineScriptPath>NIR_MasterDark_Pipeline/PipScript_NIR_MasterDark.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n@@ -7,7 +7,7 @@\n         <KeyProductInputDataPlan>\n             <InputPortName>rawDarks</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(rawDarks.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (rawDarks.Data.FilterWheelPos.FilterWheelPosition == \"CLOSED\") AND (rawDarks.Data.ImgType.Category.ProductCategory == \"CALIB\") AND (rawDarks.Data.ImgType.FirstType.ProductTypeFirstGroup == \"DARK\") AND (rawDarks.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(rawDarks.Data.ObservationSequence.CalblockId == \"UNKNOWN\") AND(rawDarks.Data.FilterWheelPos.FilterWheelPosition == \"CLOSED\") AND (rawDarks.Data.ImgType.Technique == \"UNKNOWN\") AND (rawDarks.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -17,7 +17,7 @@\n         <InputDataPlan>\n             <InputPortName>nirConfig</InputPortName>\n             <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>nirConfig.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -27,9 +27,9 @@\n         <InputDataPlan>\n             <InputPortName>mdb</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\"</FilesToInclude>\n+                <FilesToInclude>\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISPDetectorTable*\",\"NISPDetectorSlots*\",\"EUC_NISP_NLPHOTO-*\",\"EUC_NISP_GAIN-*\",\"EUC_NISP_DARKPHOTO-TV1_01.02.fits\",\"EUC_NISP_DARKSPECTRO-TV1_01.02.fits\",\"EUC_NISP_NLSPECTRO*\"</FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -40,8 +40,7 @@\n         <InputDataPlan>\n             <InputPortName>badpixel</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badpixel.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -60,5 +59,5 @@\n             </Cardinality>\n         </OutputDataProduct>\n     </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n+    <EstimatedWorkdirSizeGB>2000</EstimatedWorkdirSizeGB>\n </tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,5 +1,5 @@\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_CALIB_MASTERDARK_DEV_2023.08.08</Id>\n+    <Id>PipDef_NIR_CALIB_MASTERDARK_2023.08.08</Id>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n     <PipelineScriptPath>NIR_MasterDark_Pipeline/PipScript_NIR_MasterDark.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n",
                            "Updated most of the pipeline definitions for PV",
                            "Marco Frailis",
                            "2023-08-09T17:51:09.000+00:00",
                            "e29a28ee79e24fa3d4416124617710741b3d82b1"
                        ],
                        [
                            "@@ -1,5 +1,5 @@\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_H-CALIB_MASTERDARK_DEV_2022.03.29</Id>\n+    <Id>PipDef_NIR_CALIB_MASTERDARK_DEV_2023.08.08</Id>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n     <PipelineScriptPath>NIR_MasterDark_Pipeline/PipScript_NIR_MasterDark.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n@@ -7,7 +7,7 @@\n         <KeyProductInputDataPlan>\n             <InputPortName>rawDarks</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(rawDarks.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (rawDarks.Data.FilterWheelPos.FilterWheelPosition == \"CLOSED\") AND (rawDarks.Data.ImgType.Category.ProductCategory == \"CALIB\") AND (rawDarks.Data.ImgType.FirstType.ProductTypeFirstGroup == \"DARK\") AND (rawDarks.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(rawDarks.Data.ObservationSequence.CalblockId == \"UNKNOWN\") AND(rawDarks.Data.FilterWheelPos.FilterWheelPosition == \"CLOSED\") AND (rawDarks.Data.ImgType.Technique == \"UNKNOWN\") AND (rawDarks.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -17,7 +17,7 @@\n         <InputDataPlan>\n             <InputPortName>nirConfig</InputPortName>\n             <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>nirConfig.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -27,9 +27,9 @@\n         <InputDataPlan>\n             <InputPortName>mdb</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\"</FilesToInclude>\n+                <FilesToInclude>\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISPDetectorTable*\",\"NISPDetectorSlots*\",\"EUC_NISP_NLPHOTO-*\",\"EUC_NISP_GAIN-*\",\"EUC_NISP_DARKPHOTO-TV1_01.02.fits\",\"EUC_NISP_DARKSPECTRO-TV1_01.02.fits\",\"EUC_NISP_NLSPECTRO*\"</FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -40,8 +40,7 @@\n         <InputDataPlan>\n             <InputPortName>badpixel</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badpixel.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -60,5 +59,5 @@\n             </Cardinality>\n         </OutputDataProduct>\n     </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n+    <EstimatedWorkdirSizeGB>2000</EstimatedWorkdirSizeGB>\n </tsk1:PipelineDef>\n",
                            "First set of updates to the pipeline confgurations",
                            "Marco Frailis",
                            "2023-08-09T16:08:24.000+00:00",
                            "3b320c03b4e8940500253e078cb2afb087747ac4"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_MasterDark_Pipeline/PipDef_NIR_Y_MasterDark.xml": [
                        [
                            "@@ -1,64 +0,0 @@\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_Y-CALIB_MASTERDARK_DEV_2022.03.29</Id>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineScriptPath>NIR_MasterDark_Pipeline/PipScript_NIR_MasterDark.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n-    <InputDataSetPlan>\n-        <KeyProductInputDataPlan>\n-            <InputPortName>rawDarks</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(rawDarks.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (rawDarks.Data.FilterWheelPos.FilterWheelPosition == \"CLOSED\") AND (rawDarks.Data.ImgType.Category.ProductCategory == \"CALIB\") AND (rawDarks.Data.ImgType.FirstType.ProductTypeFirstGroup == \"DARK\") AND (rawDarks.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>600</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>nirConfig</InputPortName>\n-            <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\"</FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>     \n-    </InputDataSetPlan>\n-    <OutputDataSet>\n-        <OutputDataProduct>\n-            <OutputPortName>outputs</OutputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n-</tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_Y-CALIB_MASTERDARK_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_MasterDark_Pipeline/PipScript_NIR_MasterDark.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_MasterDark_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_MasterDark_Pipeline/PipScript_NIR_MasterDark.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>rawDarks</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -57,11 +47,8 @@\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n-        </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>rawDarks.Data.Instrument.InstrumentName.InstrumentName</GroupedBy>\n-        </Dependencies>        \n-    </InputDataSet>\n+        </InputDataPlan>     \n+    </InputDataSetPlan>\n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>outputs</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_Y-CALIB_MASTERDARK_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_MasterDark_Pipeline/PipScript_NIR_MasterDark.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_MasterDark_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_MasterDark_Pipeline/PipScript_NIR_MasterDark.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>rawDarks</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -57,11 +47,8 @@\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n-        </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>rawDarks.Data.Instrument.InstrumentName.InstrumentName</GroupedBy>\n-        </Dependencies>        \n-    </InputDataSet>\n+        </InputDataPlan>     \n+    </InputDataSetPlan>\n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>outputs</OutputPortName>\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_MasterFlat_Pipeline/PipDef_NIR_H_MasterFlat.xml": [
                        [
                            "@@ -1,75 +0,0 @@\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_H-CALIB_MASTERFLAT_DEV_2022.03.29</Id>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineScriptPath>NIR_MasterFlat_Pipeline/PipScript_NIR_MasterFlat.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n-    <InputDataSetPlan>\n-        <KeyProductInputDataPlan>\n-            <InputPortName>rawflatproducts</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(rawflatproducts.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (rawflatproducts.Data.FilterWheelPos.FilterWheelPosition == \"CLOSED\") AND (rawflatproducts.Data.ImgType.Category.ProductCategory == \"CALIB\") AND (rawflatproducts.Data.ImgType.FirstType.ProductTypeFirstGroup == \"FLAT\") AND (rawflatproducts.Data.CalibUnit.Led.LedId == \"D\") AND (rawflatproducts.Data.CalibUnit.Led.FluxId == \"30\") AND (rawflatproducts.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>10</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>config</InputPortName>\n-            <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>config.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>mdbxml</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdbxml.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"qe_SCA_18*_mdb_v2.fits\",\"NISPDetectorSlots*\"</FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixelsxml</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixelsxml.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixelsxml.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterdarkxml</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdarkxml.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdarkxml.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterdarkxml.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-    </InputDataSetPlan>\n-    <OutputDataSet>\n-        <OutputDataProduct>\n-            <OutputPortName>small_scale_flat</OutputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n-</tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_H-CALIB_MASTERFLAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_MasterFlat_Pipeline/PipScript_NIR_MasterFlat.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_MasterFlat_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_MasterFlat_Pipeline/PipScript_NIR_MasterFlat.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>rawflatproducts</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -69,10 +59,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>rawflatproducts.Data.Instrument.InstrumentName.InstrumentName</GroupedBy>\n-        </Dependencies>        \n-    </InputDataSet>\n+    </InputDataSetPlan>\n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>small_scale_flat</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_H-CALIB_MASTERFLAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_MasterFlat_Pipeline/PipScript_NIR_MasterFlat.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_MasterFlat_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_MasterFlat_Pipeline/PipScript_NIR_MasterFlat.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>rawflatproducts</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -69,10 +59,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>rawflatproducts.Data.Instrument.InstrumentName.InstrumentName</GroupedBy>\n-        </Dependencies>        \n-    </InputDataSet>\n+    </InputDataSetPlan>\n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>small_scale_flat</OutputPortName>\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_MasterFlat_Pipeline/PipDef_NIR_MasterFlat.xml": [
                        [
                            "@@ -1,5 +1,5 @@\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_J-CALIB_MASTERFLAT_DEV_2022.03.29</Id>\n+    <Id>PipDef_NIR_CALIB_MASTERFLAT_2023.08.08</Id>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n     <PipelineScriptPath>NIR_MasterFlat_Pipeline/PipScript_NIR_MasterFlat.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n@@ -7,17 +7,17 @@\n         <KeyProductInputDataPlan>\n             <InputPortName>rawflatproducts</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(rawflatproducts.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (rawflatproducts.Data.FilterWheelPos.FilterWheelPosition == \"CLOSED\") AND (rawflatproducts.Data.ImgType.Category.ProductCategory == \"CALIB\") AND (rawflatproducts.Data.ImgType.FirstType.ProductTypeFirstGroup == \"FLAT\") AND (rawflatproducts.Data.CalibUnit.Led.LedId == \"C\") AND (rawflatproducts.Data.CalibUnit.Led.FluxId == \"30\") AND (rawflatproducts.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(rawflatproducts.Data.ObservationSequence.CalblockId == \"UNKNOWN\") AND (rawflatproducts.Data.FilterWheelPos == \"CLOSED\") AND (rawflatproducts.Data.ImgType.FirstType == \"FLAT\") AND (rawflatproducts.Data.CalibUnit.Led.LedId == \"UNKNOWN\") AND (rawflatproducts.Data.CalibUnit.Led.Intensity == UNKNOWN) AND (rawflatproducts.Data.CalibUnit.Led.PwmDutyCycle == UNKNOWN) AND (rawflatproducts.Header.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>10</Max>\n+                <Max>30</Max>\n             </Cardinality>\n         </KeyProductInputDataPlan>\n         <InputDataPlan>\n             <InputPortName>config</InputPortName>\n             <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>config.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>config.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -27,9 +27,9 @@\n         <InputDataPlan>\n             <InputPortName>mdbxml</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdbxml.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>mdbxml.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"qe_SCA_18*_mdb_v2.fits\",\"NISPDetectorSlots*\"</FilesToInclude>\n+                <FilesToInclude>\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"qe_SCA_18*_mdb_v3.fits\",\"NISPDetectorSlots*\",\"NISPDetectorTable*\",\"EUC_NISP_NLPHOTO-*\",\"EUC_NISP_GAIN-*\",\"NISP*TransmissionCurves_2.0.csv\",\"NISPCULED*\",\"calib_nicu_*LED*.csv\"</FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -40,8 +40,7 @@\n         <InputDataPlan>\n             <InputPortName>badpixelsxml</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixelsxml.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixelsxml.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badpixelsxml.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -51,8 +50,7 @@\n         <InputDataPlan>\n             <InputPortName>masterdarkxml</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdarkxml.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdarkxml.Data.Filter.Name.FilterName == \"NIR_J\") AND (masterdarkxml.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>masterdarkxml.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -63,7 +61,7 @@\n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>small_scale_flat</OutputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n+            <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -71,5 +69,5 @@\n             </Cardinality>\n         </OutputDataProduct>\n     </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n+    <EstimatedWorkdirSizeGB>200</EstimatedWorkdirSizeGB>\n </tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_MasterFlat_Pipeline/PipDef_NIR_Y_MasterFlat.xml": [
                        [
                            "@@ -1,75 +0,0 @@\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_Y-CALIB_MASTERFLAT_DEV_2022.03.29</Id>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineScriptPath>NIR_MasterFlat_Pipeline/PipScript_NIR_MasterFlat.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n-    <InputDataSetPlan>\n-        <KeyProductInputDataPlan>\n-            <InputPortName>rawflatproducts</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(rawflatproducts.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (rawflatproducts.Data.FilterWheelPos.FilterWheelPosition == \"CLOSED\") AND (rawflatproducts.Data.ImgType.Category.ProductCategory == \"CALIB\") AND (rawflatproducts.Data.ImgType.FirstType.ProductTypeFirstGroup == \"FLAT\") AND (rawflatproducts.Data.CalibUnit.Led.LedId == \"B\") AND (rawflatproducts.Data.CalibUnit.Led.FluxId == \"30\") AND (rawflatproducts.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>10</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>config</InputPortName>\n-            <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>config.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>mdbxml</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdbxml.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"qe_SCA_18*_mdb_v2.fits\",\"NISPDetectorSlots*\"</FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixelsxml</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixelsxml.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixelsxml.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterdarkxml</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdarkxml.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdarkxml.Data.Filter.Name.FilterName == \"NIR_Y\") AND (masterdarkxml.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-    </InputDataSetPlan>\n-    <OutputDataSet>\n-        <OutputDataProduct>\n-            <OutputPortName>small_scale_flat</OutputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n-</tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_Y-CALIB_MASTERFLAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_MasterFlat_Pipeline/PipScript_NIR_MasterFlat.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_MasterFlat_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_MasterFlat_Pipeline/PipScript_NIR_MasterFlat.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>rawflatproducts</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -69,10 +59,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>rawflatproducts.Data.Instrument.InstrumentName.InstrumentName</GroupedBy>\n-        </Dependencies>        \n-    </InputDataSet>\n+    </InputDataSetPlan>\n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>small_scale_flat</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_Y-CALIB_MASTERFLAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_MasterFlat_Pipeline/PipScript_NIR_MasterFlat.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_MasterFlat_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_MasterFlat_Pipeline/PipScript_NIR_MasterFlat.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>rawflatproducts</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -69,10 +59,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>rawflatproducts.Data.Instrument.InstrumentName.InstrumentName</GroupedBy>\n-        </Dependencies>        \n-    </InputDataSet>\n+    </InputDataSetPlan>\n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>small_scale_flat</OutputPortName>\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipDef_NIR_H_ProcessField_Background.xml": [
                        [
                            "@@ -1,193 +0,0 @@\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_H-PROCESSFIELD_BACKGROUND-CAT_DEV_2022.03.29</Id>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineScriptPath>NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n-    <InputDataSetPlan>\n-        <KeyProductInputDataPlan>\n-            <InputPortName>dithers</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>4</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>nirConfig</InputPortName>\n-            <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPH_Outfld_Teles_straylight*\"</FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>presolution</InputPortName>\n-            <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterdark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterflat</InputPortName>\n-            <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>largeflat</InputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>obsCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>refCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>detectorsPhotomOffsets</InputPortName>\n-            <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n-            <InputQuerySpecPlan>(detectorsPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (detectorsPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_H\") AND (detectorsPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-        <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>tilesPhotomOffsets</InputPortName>\n-            <DataProductType>DpdNirRelPhotoFieldCalibration</DataProductType>\n-            <InputQuerySpecPlan>(tilesPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tilesPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_H\") AND (tilesPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>absPhotoData</InputPortName>\n-            <DataProductType>DpdNirAbsPhotoCalibration</DataProductType>\n-            <InputQuerySpecPlan>(absPhotoData.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (absPhotoData.Data.Filter.Name.FilterName == \"NIR_H\")  AND (absPhotoData.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>relExposure</InputPortName>\n-            <DataProductType>DpdNirRelPhotoExpCalibration</DataProductType>\n-            <InputQuerySpecPlan>(relExposure.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (relExposure.Data.Filter.Name.FilterName == \"NIR_H\")  AND (relExposure.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-    </InputDataSetPlan> \n-    <OutputDataSet>\n-        <OutputDataProduct>\n-            <OutputPortName>stk_image_xml</OutputPortName>\n-            <DataProductType>DpdNirStackedFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>cal_images_xml</OutputPortName>\n-            <DataProductType>DpdNirCalibratedFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>stk_catalog_xml</OutputPortName>\n-            <DataProductType>DpdNirStackedFrameCatalog</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>cal_catalogs_xml</OutputPortName>\n-            <DataProductType>DpdNirCalibratedFrameCatalog</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n-</tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_H-PROCESSFIELD_BACKGROUND-CAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -160,18 +150,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>stk_image_xml</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_H-PROCESSFIELD_BACKGROUND-CAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -160,18 +150,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>stk_image_xml</OutputPortName>\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ],
                        [
                            "@@ -7,12 +7,12 @@\n     xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n     <EdenVersion>Eden-3.0</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>PipDef_NIR_H-PROCESSFIELD_TU-CAT_DEV_2022.03.29</Id>\n+    <Id>PipDef_NIR_H-PROCESSFIELD_BACKGROUND-CAT_DEV_2022.03.29</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/PipScript_NIR_ProcessField_TU.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/</PipelineRootPath>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/</PipelineRootPath>\n     <InputDataSet>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n@@ -101,9 +101,19 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>sourceCatalog</InputPortName>\n+            <InputPortName>obsCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>refCatalog</InputPortName>\n+            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n+            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -153,7 +163,11 @@\n         <Dependencies>\n             <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n+                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n+            </LinkedBy>\n+            <LinkedBy refPort=\"dithers\">\n+                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>\n         </Dependencies>\n",
                            "Merge branch 'mfrailis/single_ref_catalog' into 'develop'",
                            "Federico Rizzo",
                            "2022-08-25T13:02:38.000+00:00",
                            "b6d1c9dfc97e07ea9e27420c61b8dd50b403dd58"
                        ],
                        [
                            "@@ -7,12 +7,12 @@\n     xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n     <EdenVersion>Eden-3.0</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>PipDef_NIR_H-PROCESSFIELD_TU-CAT_DEV_2022.03.29</Id>\n+    <Id>PipDef_NIR_H-PROCESSFIELD_BACKGROUND-CAT_DEV_2022.03.29</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/PipScript_NIR_ProcessField_TU.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/</PipelineRootPath>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/</PipelineRootPath>\n     <InputDataSet>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n@@ -101,9 +101,19 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>sourceCatalog</InputPortName>\n+            <InputPortName>obsCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>refCatalog</InputPortName>\n+            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n+            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -153,7 +163,11 @@\n         <Dependencies>\n             <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n+                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n+            </LinkedBy>\n+            <LinkedBy refPort=\"dithers\">\n+                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>\n         </Dependencies>\n",
                            "Updating NIR_ProcessField_Background pipeline",
                            "Marco Frailis",
                            "2022-08-25T14:39:17.000+02:00",
                            "017aafd7c7da1bfd67eff9dbabbfa598c8c9494f"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipDef_NIR_ProcessField_Background.xml": [
                        [
                            "@@ -1,5 +1,5 @@\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_J-PROCESSFIELD_BACKGROUND-CAT_DEV_2022.03.29</Id>\n+    <Id>PipDef_NIR_PROCESSFIELD_BACKGROUND_CAT_2023.08.08</Id>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineScriptPath>NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n@@ -7,18 +7,17 @@\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan> (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ObservationSequence.PointingId == \"UNKNOWN\") AND (dithers.Data.FilterWheelPos == \"UNKNOWN\") AND (dithers.Header.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>4</Max>\n+                <Max>1</Max>\n             </Cardinality>\n         </KeyProductInputDataPlan>\n         <InputDataPlan>\n             <InputPortName>nirConfig</InputPortName>\n             <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>nirConfig.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -28,9 +27,9 @@\n         <InputDataPlan>\n             <InputPortName>mdb</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPH_Outfld_Teles_straylight*\"</FilesToInclude>\n+                <FilesToInclude>\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPDetectorTable*\",\"NISPDetectorSlots*\",\"EUC_NISP_NLPHOTO-*\",\"EUC_NISP_GAIN-*\"</FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -41,7 +40,7 @@\n         <InputDataPlan>\n             <InputPortName>presolution</InputPortName>\n             <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>presolution.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>OPTIONAL</Optionality>\n                 <Min>0</Min>\n@@ -51,8 +50,7 @@\n         <InputDataPlan>\n             <InputPortName>masterdark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_J\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>masterdark.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -62,7 +60,7 @@\n         <InputDataPlan>\n             <InputPortName>masterflat</InputPortName>\n             <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_J\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>masterflat.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -72,7 +70,7 @@\n         <InputDataPlan>\n             <InputPortName>largeflat</InputPortName>\n             <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_J\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>largeflat.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -82,8 +80,7 @@\n         <InputDataPlan>\n             <InputPortName>badpixel</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badpixel.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -92,8 +89,11 @@\n         </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>obsCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n+            <InputQuerySpecPlan>obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\"</InputQuerySpecPlan>\n+             <LinkedBy>\n+                <Query>obsCatalog.Data.ObservationId == dithers.Data.ObservationSequence.ObservationId</Query>\n+            </LinkedBy>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -102,18 +102,21 @@\n         </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>refCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <DataProductType>DpdExtGaiaCutout</DataProductType>\n+            <InputQuerySpecPlan>(refCatalog.Header.DataSetRelease == \"UNKNOWN\") AND (refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n+             <LinkedBy>\n+                <Query>dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(0.01,100) refCatalog.Data.CatalogCoverage.Polygon</Query>\n+            </LinkedBy>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>1</Max>\n+                <Max>100</Max>\n             </Cardinality>\n-        </InputDataPlan>\n+        </InputDataPlan>    \n         <InputDataPlan>\n             <InputPortName>detectorsPhotomOffsets</InputPortName>\n             <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n-            <InputQuerySpecPlan>(detectorsPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (detectorsPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_J\") AND (detectorsPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>detectorsPhotomOffsets.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n         <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -123,7 +126,7 @@\n         <InputDataPlan>\n             <InputPortName>tilesPhotomOffsets</InputPortName>\n             <DataProductType>DpdNirRelPhotoFieldCalibration</DataProductType>\n-            <InputQuerySpecPlan>(tilesPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tilesPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_J\") AND (tilesPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>tilesPhotomOffsets.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -133,7 +136,7 @@\n         <InputDataPlan>\n             <InputPortName>absPhotoData</InputPortName>\n             <DataProductType>DpdNirAbsPhotoCalibration</DataProductType>\n-            <InputQuerySpecPlan>(absPhotoData.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (absPhotoData.Data.Filter.Name.FilterName == \"NIR_J\")  AND (absPhotoData.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>absPhotoData.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -143,7 +146,7 @@\n         <InputDataPlan>\n             <InputPortName>relExposure</InputPortName>\n             <DataProductType>DpdNirRelPhotoExpCalibration</DataProductType>\n-            <InputQuerySpecPlan>(relExposure.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (relExposure.Data.Filter.Name.FilterName == \"NIR_H\")  AND (relExposure.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>relExposure.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -189,5 +192,5 @@\n             </Cardinality>\n         </OutputDataProduct>\n     </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n+    <EstimatedWorkdirSizeGB>60</EstimatedWorkdirSizeGB>\n </tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,5 +1,5 @@\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_H-PROCESSFIELD_BACKGROUND-CAT_DEV_2022.03.29</Id>\n+    <Id>PipDef_NIR_PROCESSFIELD_BACKGROUND_CAT_2023.08.08</Id>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineScriptPath>NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n@@ -7,18 +7,17 @@\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan> (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ObservationSequence.PointingId == \"UNKNOWN\") AND (dithers.Data.FilterWheelPos == \"UNKNOWN\") AND (dithers.Header.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>4</Max>\n+                <Max>1</Max>\n             </Cardinality>\n         </KeyProductInputDataPlan>\n         <InputDataPlan>\n             <InputPortName>nirConfig</InputPortName>\n             <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>nirConfig.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -28,9 +27,9 @@\n         <InputDataPlan>\n             <InputPortName>mdb</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPH_Outfld_Teles_straylight*\"</FilesToInclude>\n+                <FilesToInclude>\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPDetectorTable*\",\"NISPDetectorSlots*\",\"EUC_NISP_NLPHOTO-*\",\"EUC_NISP_GAIN-*\"</FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -41,7 +40,7 @@\n         <InputDataPlan>\n             <InputPortName>presolution</InputPortName>\n             <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>presolution.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>OPTIONAL</Optionality>\n                 <Min>0</Min>\n@@ -51,8 +50,7 @@\n         <InputDataPlan>\n             <InputPortName>masterdark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>masterdark.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -62,7 +60,7 @@\n         <InputDataPlan>\n             <InputPortName>masterflat</InputPortName>\n             <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>masterflat.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -72,7 +70,7 @@\n         <InputDataPlan>\n             <InputPortName>largeflat</InputPortName>\n             <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>largeflat.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -82,8 +80,7 @@\n         <InputDataPlan>\n             <InputPortName>badpixel</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badpixel.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -92,8 +89,11 @@\n         </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>obsCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n+            <InputQuerySpecPlan>obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\"</InputQuerySpecPlan>\n+             <LinkedBy>\n+                <Query>obsCatalog.Data.ObservationId == dithers.Data.ObservationSequence.ObservationId</Query>\n+            </LinkedBy>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -102,18 +102,21 @@\n         </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>refCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <DataProductType>DpdExtGaiaCutout</DataProductType>\n+            <InputQuerySpecPlan>(refCatalog.Header.DataSetRelease == \"UNKNOWN\") AND (refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n+             <LinkedBy>\n+                <Query>dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(0.01,100) refCatalog.Data.CatalogCoverage.Polygon</Query>\n+            </LinkedBy>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>1</Max>\n+                <Max>100</Max>\n             </Cardinality>\n-        </InputDataPlan>\n+        </InputDataPlan>    \n         <InputDataPlan>\n             <InputPortName>detectorsPhotomOffsets</InputPortName>\n             <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n-            <InputQuerySpecPlan>(detectorsPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (detectorsPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_H\") AND (detectorsPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>detectorsPhotomOffsets.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n         <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -123,7 +126,7 @@\n         <InputDataPlan>\n             <InputPortName>tilesPhotomOffsets</InputPortName>\n             <DataProductType>DpdNirRelPhotoFieldCalibration</DataProductType>\n-            <InputQuerySpecPlan>(tilesPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tilesPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_H\") AND (tilesPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>tilesPhotomOffsets.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -133,7 +136,7 @@\n         <InputDataPlan>\n             <InputPortName>absPhotoData</InputPortName>\n             <DataProductType>DpdNirAbsPhotoCalibration</DataProductType>\n-            <InputQuerySpecPlan>(absPhotoData.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (absPhotoData.Data.Filter.Name.FilterName == \"NIR_H\")  AND (absPhotoData.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>absPhotoData.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -143,7 +146,7 @@\n         <InputDataPlan>\n             <InputPortName>relExposure</InputPortName>\n             <DataProductType>DpdNirRelPhotoExpCalibration</DataProductType>\n-            <InputQuerySpecPlan>(relExposure.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (relExposure.Data.Filter.Name.FilterName == \"NIR_H\")  AND (relExposure.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>relExposure.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -189,5 +192,5 @@\n             </Cardinality>\n         </OutputDataProduct>\n     </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n+    <EstimatedWorkdirSizeGB>60</EstimatedWorkdirSizeGB>\n </tsk1:PipelineDef>\n",
                            "Updating the ProcessField_Background pipeline definition",
                            "Marco Frailis",
                            "2023-08-09T20:02:48.000+00:00",
                            "df68a46abc3b52f0c6e2731c65697274ebb1a208"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipDef_NIR_Y_ProcessField_Background.xml": [
                        [
                            "@@ -1,193 +0,0 @@\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_Y-PROCESSFIELD_BACKGROUND-CAT_DEV_2022.03.29</Id>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineScriptPath>NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n-    <InputDataSetPlan>\n-        <KeyProductInputDataPlan>\n-            <InputPortName>dithers</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"Y\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"Y\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>4</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>nirConfig</InputPortName>\n-            <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPH_Outfld_Teles_straylight*\"</FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>presolution</InputPortName>\n-            <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterdark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_Y\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterflat</InputPortName>\n-            <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_Y\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>largeflat</InputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_Y\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>obsCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>refCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>detectorsPhotomOffsets</InputPortName>\n-            <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n-            <InputQuerySpecPlan>(detectorsPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (detectorsPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_Y\") AND (detectorsPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-        <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>tilesPhotomOffsets</InputPortName>\n-            <DataProductType>DpdNirRelPhotoFieldCalibration</DataProductType>\n-            <InputQuerySpecPlan>(tilesPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tilesPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_Y\") AND (tilesPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>absPhotoData</InputPortName>\n-            <DataProductType>DpdNirAbsPhotoCalibration</DataProductType>\n-            <InputQuerySpecPlan>(absPhotoData.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (absPhotoData.Data.Filter.Name.FilterName == \"NIR_Y\")  AND (absPhotoData.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>relExposure</InputPortName>\n-            <DataProductType>DpdNirRelPhotoExpCalibration</DataProductType>\n-            <InputQuerySpecPlan>(relExposure.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (relExposure.Data.Filter.Name.FilterName == \"NIR_H\")  AND (relExposure.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-    </InputDataSetPlan> \n-    <OutputDataSet>\n-        <OutputDataProduct>\n-            <OutputPortName>stk_image_xml</OutputPortName>\n-            <DataProductType>DpdNirStackedFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>cal_images_xml</OutputPortName>\n-            <DataProductType>DpdNirCalibratedFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>stk_catalog_xml</OutputPortName>\n-            <DataProductType>DpdNirStackedFrameCatalog</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>cal_catalogs_xml</OutputPortName>\n-            <DataProductType>DpdNirCalibratedFrameCatalog</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n-</tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_Y-PROCESSFIELD_BACKGROUND-CAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -160,18 +150,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>stk_image_xml</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_Y-PROCESSFIELD_BACKGROUND-CAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -160,18 +150,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>stk_image_xml</OutputPortName>\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ],
                        [
                            "@@ -7,12 +7,12 @@\n     xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n     <EdenVersion>Eden-3.0</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>PipDef_NIR_Y-PROCESSFIELD_TU-CAT_DEV_2022.03.29</Id>\n+    <Id>PipDef_NIR_Y-PROCESSFIELD_BACKGROUND-CAT_DEV_2022.03.29</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/PipScript_NIR_ProcessField_TU.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/</PipelineRootPath>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/</PipelineRootPath>\n     <InputDataSet>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n@@ -101,9 +101,19 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>sourceCatalog</InputPortName>\n+            <InputPortName>obsCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>refCatalog</InputPortName>\n+            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n+            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -153,7 +163,11 @@\n         <Dependencies>\n             <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n+                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n+            </LinkedBy>\n+            <LinkedBy refPort=\"dithers\">\n+                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>\n         </Dependencies>\n",
                            "Merge branch 'mfrailis/single_ref_catalog' into 'develop'",
                            "Federico Rizzo",
                            "2022-08-25T13:02:38.000+00:00",
                            "b6d1c9dfc97e07ea9e27420c61b8dd50b403dd58"
                        ],
                        [
                            "@@ -7,12 +7,12 @@\n     xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n     <EdenVersion>Eden-3.0</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>PipDef_NIR_Y-PROCESSFIELD_TU-CAT_DEV_2022.03.29</Id>\n+    <Id>PipDef_NIR_Y-PROCESSFIELD_BACKGROUND-CAT_DEV_2022.03.29</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/PipScript_NIR_ProcessField_TU.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/</PipelineRootPath>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/</PipelineRootPath>\n     <InputDataSet>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n@@ -101,9 +101,19 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>sourceCatalog</InputPortName>\n+            <InputPortName>obsCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>refCatalog</InputPortName>\n+            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n+            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -153,7 +163,11 @@\n         <Dependencies>\n             <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n+                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n+            </LinkedBy>\n+            <LinkedBy refPort=\"dithers\">\n+                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>\n         </Dependencies>\n",
                            "Updating NIR_ProcessField_Background pipeline",
                            "Marco Frailis",
                            "2022-08-25T14:39:17.000+02:00",
                            "017aafd7c7da1bfd67eff9dbabbfa598c8c9494f"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_H_ProcessField_TU.xml": [
                        [
                            "@@ -1,183 +0,0 @@\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_H-PROCESSFIELD_TU-CAT_DEV_2022.03.29</Id>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n-    <InputDataSetPlan>\n-        <KeyProductInputDataPlan>\n-            <InputPortName>dithers</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>4</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>nirConfig</InputPortName>\n-            <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPH_Outfld_Teles_straylight*\"</FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>presolution</InputPortName>\n-            <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterdark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterflat</InputPortName>\n-            <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>largeflat</InputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>obsCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>refCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>detectorsPhotomOffsets</InputPortName>\n-            <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n-            <InputQuerySpecPlan>(detectorsPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (detectorsPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_H\") AND (detectorsPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-        <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>tilesPhotomOffsets</InputPortName>\n-            <DataProductType>DpdNirRelPhotoFieldCalibration</DataProductType>\n-            <InputQuerySpecPlan>(tilesPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tilesPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_H\") AND (tilesPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>absPhotoData</InputPortName>\n-            <DataProductType>DpdNirAbsPhotoCalibration</DataProductType>\n-            <InputQuerySpecPlan>(absPhotoData.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (absPhotoData.Data.Filter.Name.FilterName == \"NIR_H\")  AND (absPhotoData.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-    </InputDataSetPlan> \n-    <OutputDataSet>\n-        <OutputDataProduct>\n-            <OutputPortName>stk_image_xml</OutputPortName>\n-            <DataProductType>DpdNirStackedFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>cal_images_xml</OutputPortName>\n-            <DataProductType>DpdNirCalibratedFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>stk_catalog_xml</OutputPortName>\n-            <DataProductType>DpdNirStackedFrameCatalog</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>cal_catalogs_xml</OutputPortName>\n-            <DataProductType>DpdNirCalibratedFrameCatalog</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n-</tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_H-PROCESSFIELD_TU-CAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -150,18 +140,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>stk_image_xml</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_H-PROCESSFIELD_TU-CAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -150,18 +140,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>stk_image_xml</OutputPortName>\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ],
                        [
                            "@@ -11,8 +11,8 @@\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/PipScript_NIR_ProcessField_TU.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/</PipelineRootPath>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n     <InputDataSet>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n@@ -101,9 +101,19 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>sourceCatalog</InputPortName>\n+            <InputPortName>obsCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>refCatalog</InputPortName>\n+            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n+            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -143,7 +153,11 @@\n         <Dependencies>\n             <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n+                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n+            </LinkedBy>\n+            <LinkedBy refPort=\"dithers\">\n+                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>\n         </Dependencies>\n",
                            "Merge branch 'mfrailis/single_ref_catalog' into 'develop'",
                            "Federico Rizzo",
                            "2022-08-25T13:02:38.000+00:00",
                            "b6d1c9dfc97e07ea9e27420c61b8dd50b403dd58"
                        ],
                        [
                            "@@ -11,8 +11,8 @@\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/PipScript_NIR_ProcessField_TU.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/</PipelineRootPath>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n     <InputDataSet>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n@@ -101,9 +101,19 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>sourceCatalog</InputPortName>\n+            <InputPortName>obsCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>refCatalog</InputPortName>\n+            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n+            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -143,7 +153,11 @@\n         <Dependencies>\n             <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n+                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n+            </LinkedBy>\n+            <LinkedBy refPort=\"dithers\">\n+                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>\n         </Dependencies>\n",
                            "Removing NIR_ProcessField_TU workflow by simplifying the input ports of the Astrometric calibration and the Ghost masking steps. Now the NIR_ProcessField pipeline accepts both a VIS stack catalog or a TU catalog",
                            "Marco Frailis",
                            "2022-08-23T16:15:31.000+00:00",
                            "4ac0d3337800354945a5d027eb9f978289094cbe"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_J_ProcessField.xml": [
                        [
                            "@@ -1,183 +0,0 @@\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_J-PROCESSFIELD_VIS-CAT_DEV_2022.03.29</Id>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n-    <InputDataSetPlan>\n-        <KeyProductInputDataPlan>\n-            <InputPortName>dithers</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>4</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>nirConfig</InputPortName>\n-            <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPH_Outfld_Teles_straylight*\"</FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>presolution</InputPortName>\n-            <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterdark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_J\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterflat</InputPortName>\n-            <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_J\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>largeflat</InputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_J\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>obsCatalog</InputPortName>\n-            <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n-            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>refCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>             \n-        <InputDataPlan>\n-            <InputPortName>detectorsPhotomOffsets</InputPortName>\n-            <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n-            <InputQuerySpecPlan>(detectorsPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (detectorsPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_J\") AND (detectorsPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-        <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>tilesPhotomOffsets</InputPortName>\n-            <DataProductType>DpdNirRelPhotoFieldCalibration</DataProductType>\n-            <InputQuerySpecPlan>(tilesPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tilesPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_J\") AND (tilesPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>absPhotoData</InputPortName>\n-            <DataProductType>DpdNirAbsPhotoCalibration</DataProductType>\n-            <InputQuerySpecPlan>(absPhotoData.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (absPhotoData.Data.Filter.Name.FilterName == \"NIR_J\")  AND (absPhotoData.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-    </InputDataSetPlan> \n-    <OutputDataSet>\n-        <OutputDataProduct>\n-            <OutputPortName>stk_image_xml</OutputPortName>\n-            <DataProductType>DpdNirStackedFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>cal_images_xml</OutputPortName>\n-            <DataProductType>DpdNirCalibratedFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>stk_catalog_xml</OutputPortName>\n-            <DataProductType>DpdNirStackedFrameCatalog</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>cal_catalogs_xml</OutputPortName>\n-            <DataProductType>DpdNirCalibratedFrameCatalog</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n-</tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_J-PROCESSFIELD_VIS-CAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -150,18 +140,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that VIS catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>                        \n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>stk_image_xml</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_J-PROCESSFIELD_VIS-CAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -150,18 +140,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that VIS catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>                        \n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>stk_image_xml</OutputPortName>\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ],
                        [
                            "@@ -101,9 +101,9 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>viscatalog</InputPortName>\n+            <InputPortName>obsCatalog</InputPortName>\n             <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n-            <InputQuerySpecPlan>(viscatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (viscatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -111,9 +111,9 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>tucatalog</InputPortName>\n+            <InputPortName>refCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(tucatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tucatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -153,11 +153,11 @@\n         <Dependencies>\n             <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == viscatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that VIS catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == tucatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>                        \n         </Dependencies>\n",
                            "Merge branch 'mfrailis/single_ref_catalog' into 'develop'",
                            "Federico Rizzo",
                            "2022-08-25T13:02:38.000+00:00",
                            "b6d1c9dfc97e07ea9e27420c61b8dd50b403dd58"
                        ],
                        [
                            "@@ -101,9 +101,9 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>viscatalog</InputPortName>\n+            <InputPortName>obsCatalog</InputPortName>\n             <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n-            <InputQuerySpecPlan>(viscatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (viscatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -111,9 +111,9 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>tucatalog</InputPortName>\n+            <InputPortName>refCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(tucatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tucatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -153,11 +153,11 @@\n         <Dependencies>\n             <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == viscatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that VIS catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == tucatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>                        \n         </Dependencies>\n",
                            "Removing NIR_ProcessField_TU workflow by simplifying the input ports of the Astrometric calibration and the Ghost masking steps. Now the NIR_ProcessField pipeline accepts both a VIS stack catalog or a TU catalog",
                            "Marco Frailis",
                            "2022-08-23T16:15:31.000+00:00",
                            "4ac0d3337800354945a5d027eb9f978289094cbe"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_J_ProcessFieldSelfCal.xml": [
                        [
                            "@@ -1,183 +0,0 @@\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_J-PROCESSFIELDSELFCAL_VIS-CAT_DEV_2022.03.29</Id>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessFieldSelfCal.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n-    <InputDataSetPlan>\n-        <KeyProductInputDataPlan>\n-            <InputPortName>dithers</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>4</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>nirConfig</InputPortName>\n-            <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPH_Outfld_Teles_straylight*\"</FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>presolution</InputPortName>\n-            <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterdark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_J\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterflat</InputPortName>\n-            <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_J\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>largeflat</InputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_J\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>obsCatalog</InputPortName>\n-            <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n-            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>refCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>             \n-        <InputDataPlan>\n-            <InputPortName>detectorsPhotomOffsets</InputPortName>\n-            <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n-            <InputQuerySpecPlan>(detectorsPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (detectorsPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_J\") AND (detectorsPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-        <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>tilesPhotomOffsets</InputPortName>\n-            <DataProductType>DpdNirRelPhotoFieldCalibration</DataProductType>\n-            <InputQuerySpecPlan>(tilesPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tilesPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_J\") AND (tilesPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>absPhotoData</InputPortName>\n-            <DataProductType>DpdNirAbsPhotoCalibration</DataProductType>\n-            <InputQuerySpecPlan>(absPhotoData.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (absPhotoData.Data.Filter.Name.FilterName == \"NIR_J\")  AND (absPhotoData.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-    </InputDataSetPlan> \n-    <OutputDataSet>\n-        <OutputDataProduct>\n-            <OutputPortName>stk_image_xml</OutputPortName>\n-            <DataProductType>DpdNirStackedFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>cal_images_xml</OutputPortName>\n-            <DataProductType>DpdNirCalibratedFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>stk_catalog_xml</OutputPortName>\n-            <DataProductType>DpdNirStackedFrameCatalog</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>cal_catalogs_xml</OutputPortName>\n-            <DataProductType>DpdNirCalibratedFrameCatalog</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n-</tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_J-PROCESSFIELDSELFCAL_VIS-CAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessFieldSelfCal.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessFieldSelfCal.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -150,18 +140,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that VIS catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>                        \n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>stk_image_xml</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_J-PROCESSFIELDSELFCAL_VIS-CAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessFieldSelfCal.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessFieldSelfCal.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -150,18 +140,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that VIS catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>                        \n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>stk_image_xml</OutputPortName>\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ],
                        [
                            "@@ -0,0 +1,204 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n+    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n+    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n+    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+    <EdenVersion>Eden-3.0</EdenVersion>\n+    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+    <Id>PipDef_NIR_J-PROCESSFIELDSELFCAL_VIS-CAT_DEV_2022.03.29</Id>\n+    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n+    <PipelineContext>TEST_PV1</PipelineContext>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessFieldSelfCal.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n+    <InputDataSet>\n+        <KeyProductInputDataPlan>\n+            <InputPortName>dithers</InputPortName>\n+            <DataProductType>DpdNispRawFrame</DataProductType>\n+            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>4</Max>\n+            </Cardinality>\n+        </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>nirConfig</InputPortName>\n+            <DataProductType>DpdNirConfigurationSet</DataProductType>\n+            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>mdb</InputPortName>\n+            <DataProductType>DpdMdbDataBase</DataProductType>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <FileFiltering>\n+                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPH_Outfld_Teles_straylight*\"</FilesToInclude>\n+            </FileFiltering>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>presolution</InputPortName>\n+            <DataProductType>DpdNirGeometricDistortions</DataProductType>\n+            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>OPTIONAL</Optionality>\n+                <Min>0</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>masterdark</InputPortName>\n+            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n+            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n+            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_J\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>masterflat</InputPortName>\n+            <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n+            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_J\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>largeflat</InputPortName>\n+            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n+            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_J\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>badpixel</InputPortName>\n+            <DataProductType>DpdNirBadPixelMask</DataProductType>\n+            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>obsCatalog</InputPortName>\n+            <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n+            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>refCatalog</InputPortName>\n+            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n+            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>             \n+        <InputDataPlan>\n+            <InputPortName>detectorsPhotomOffsets</InputPortName>\n+            <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n+            <InputQuerySpecPlan>(detectorsPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (detectorsPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_J\") AND (detectorsPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+        <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>tilesPhotomOffsets</InputPortName>\n+            <DataProductType>DpdNirRelPhotoFieldCalibration</DataProductType>\n+            <InputQuerySpecPlan>(tilesPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tilesPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_J\") AND (tilesPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>absPhotoData</InputPortName>\n+            <DataProductType>DpdNirAbsPhotoCalibration</DataProductType>\n+            <InputQuerySpecPlan>(absPhotoData.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (absPhotoData.Data.Filter.Name.FilterName == \"NIR_J\")  AND (absPhotoData.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <Dependencies>\n+            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n+            <LinkedBy refPort=\"dithers\">\n+                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n+                <!--  Ensures that VIS catalog refers to the same OBS_ID as the raw frame  -->\n+            </LinkedBy>\n+            <LinkedBy refPort=\"dithers\">\n+                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n+                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n+            </LinkedBy>                        \n+        </Dependencies>\n+    </InputDataSet> \n+    <OutputDataSet>\n+        <OutputDataProduct>\n+            <OutputPortName>stk_image_xml</OutputPortName>\n+            <DataProductType>DpdNirStackedFrame</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+        <OutputDataProduct>\n+            <OutputPortName>cal_images_xml</OutputPortName>\n+            <DataProductType>DpdNirCalibratedFrame</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+        <OutputDataProduct>\n+            <OutputPortName>stk_catalog_xml</OutputPortName>\n+            <DataProductType>DpdNirStackedFrameCatalog</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+        <OutputDataProduct>\n+            <OutputPortName>cal_catalogs_xml</OutputPortName>\n+            <DataProductType>DpdNirCalibratedFrameCatalog</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+    </OutputDataSet>\n+    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n+</tsk1:PipelineDef>\n",
                            "update resources; new PipDefs for particular tasks",
                            "frizzo",
                            "2022-08-28T18:22:30.000+02:00",
                            "daa1bb97099babff7ff7ece5ed1667cff4733ec5"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_J_ProcessField_TU.xml": [
                        [
                            "@@ -1,183 +0,0 @@\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_J-PROCESSFIELD_TU-CAT_DEV_2022.03.29</Id>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n-    <InputDataSetPlan>\n-        <KeyProductInputDataPlan>\n-            <InputPortName>dithers</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>4</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>nirConfig</InputPortName>\n-            <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPH_Outfld_Teles_straylight*\"</FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>presolution</InputPortName>\n-            <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterdark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_J\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterflat</InputPortName>\n-            <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_J\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>largeflat</InputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_J\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>obsCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>refCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>        \n-        <InputDataPlan>\n-            <InputPortName>detectorsPhotomOffsets</InputPortName>\n-            <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n-            <InputQuerySpecPlan>(detectorsPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (detectorsPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_J\") AND (detectorsPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-        <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>tilesPhotomOffsets</InputPortName>\n-            <DataProductType>DpdNirRelPhotoFieldCalibration</DataProductType>\n-            <InputQuerySpecPlan>(tilesPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tilesPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_J\") AND (tilesPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>absPhotoData</InputPortName>\n-            <DataProductType>DpdNirAbsPhotoCalibration</DataProductType>\n-            <InputQuerySpecPlan>(absPhotoData.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (absPhotoData.Data.Filter.Name.FilterName == \"NIR_J\")  AND (absPhotoData.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-    </InputDataSetPlan> \n-    <OutputDataSet>\n-        <OutputDataProduct>\n-            <OutputPortName>stk_image_xml</OutputPortName>\n-            <DataProductType>DpdNirStackedFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>cal_images_xml</OutputPortName>\n-            <DataProductType>DpdNirCalibratedFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>stk_catalog_xml</OutputPortName>\n-            <DataProductType>DpdNirStackedFrameCatalog</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>cal_catalogs_xml</OutputPortName>\n-            <DataProductType>DpdNirCalibratedFrameCatalog</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n-</tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_J-PROCESSFIELD_TU-CAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -150,18 +140,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>            \n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>stk_image_xml</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_J-PROCESSFIELD_TU-CAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -150,18 +140,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>            \n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>stk_image_xml</OutputPortName>\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ],
                        [
                            "@@ -11,8 +11,8 @@\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/PipScript_NIR_ProcessField_TU.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/</PipelineRootPath>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n     <InputDataSet>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n@@ -101,15 +101,25 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>sourceCatalog</InputPortName>\n+            <InputPortName>obsCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>refCatalog</InputPortName>\n+            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n+            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>        \n         <InputDataPlan>\n             <InputPortName>detectorsPhotomOffsets</InputPortName>\n             <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n@@ -143,9 +153,13 @@\n         <Dependencies>\n             <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>\n+            <LinkedBy refPort=\"dithers\">\n+                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n+                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n+            </LinkedBy>            \n         </Dependencies>\n     </InputDataSet> \n     <OutputDataSet>\n",
                            "Merge branch 'mfrailis/single_ref_catalog' into 'develop'",
                            "Federico Rizzo",
                            "2022-08-25T13:02:38.000+00:00",
                            "b6d1c9dfc97e07ea9e27420c61b8dd50b403dd58"
                        ],
                        [
                            "@@ -11,8 +11,8 @@\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/PipScript_NIR_ProcessField_TU.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/</PipelineRootPath>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n     <InputDataSet>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n@@ -101,15 +101,25 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>sourceCatalog</InputPortName>\n+            <InputPortName>obsCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>refCatalog</InputPortName>\n+            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n+            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>        \n         <InputDataPlan>\n             <InputPortName>detectorsPhotomOffsets</InputPortName>\n             <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n@@ -143,9 +153,13 @@\n         <Dependencies>\n             <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>\n+            <LinkedBy refPort=\"dithers\">\n+                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n+                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n+            </LinkedBy>            \n         </Dependencies>\n     </InputDataSet> \n     <OutputDataSet>\n",
                            "Removing NIR_ProcessField_TU workflow by simplifying the input ports of the Astrometric calibration and the Ghost masking steps. Now the NIR_ProcessField pipeline accepts both a VIS stack catalog or a TU catalog",
                            "Marco Frailis",
                            "2022-08-23T16:15:31.000+00:00",
                            "4ac0d3337800354945a5d027eb9f978289094cbe"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_ProcessField.xml": [
                        [
                            "@@ -1,5 +1,5 @@\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_H-PROCESSFIELD_VIS-CAT_DEV_2022.03.29</Id>\n+    <Id>PipDef_NIR_PROCESSFIELD_VIS_CAT_2023.08.08</Id>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n@@ -7,8 +7,7 @@\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"UNKNOWN\") AND (dithers.Data.ObservationSequence.CalblockId == \"UNKNOWN\") AND (dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -18,7 +17,7 @@\n         <InputDataPlan>\n             <InputPortName>nirConfig</InputPortName>\n             <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>nirConfig.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -28,9 +27,9 @@\n         <InputDataPlan>\n             <InputPortName>mdb</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPH_Outfld_Teles_straylight*\"</FilesToInclude>\n+                <FilesToInclude>\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISP[JHY]_Outfld_Teles_straylight*\",\"NISPDetectorTable*\",\"NISPDetectorSlots*\",\"EUC_NISP_NLPHOTO-*\", \"EUC_NISP_NLSPECTRO-*\",\"EUC_NISP_GAIN-*\",\"EUC_FM_NIP_[JHY]_SCS-*\",\"NIPGhostsShifts*\"</FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -41,7 +40,7 @@\n         <InputDataPlan>\n             <InputPortName>presolution</InputPortName>\n             <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>presolution.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>OPTIONAL</Optionality>\n                 <Min>0</Min>\n@@ -51,8 +50,7 @@\n         <InputDataPlan>\n             <InputPortName>masterdark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>masterdark.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -62,7 +60,7 @@\n         <InputDataPlan>\n             <InputPortName>masterflat</InputPortName>\n             <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>masterflat.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -72,7 +70,7 @@\n         <InputDataPlan>\n             <InputPortName>largeflat</InputPortName>\n             <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>largeflat.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -82,8 +80,7 @@\n         <InputDataPlan>\n             <InputPortName>badpixel</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badpixel.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -93,7 +90,10 @@\n         <InputDataPlan>\n             <InputPortName>obsCatalog</InputPortName>\n             <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n-            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\"</InputQuerySpecPlan>\n+             <LinkedBy>\n+                <Query>obsCatalog.Data.ObservationId == dithers.Data.ObservationSequence.ObservationId</Query>\n+            </LinkedBy>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -102,19 +102,22 @@\n         </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>refCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <DataProductType>DpdExtGaiaCutout</DataProductType>\n+            <InputQuerySpecPlan>(refCatalog.Header.DataSetRelease == \"UNKNOWN\") AND (refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n+             <LinkedBy>\n+                <Query>dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(0.01,100) refCatalog.Data.CatalogCoverage.Polygon</Query>\n+            </LinkedBy>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>1</Max>\n+                <Max>100</Max>\n             </Cardinality>\n         </InputDataPlan>        \n         <InputDataPlan>\n             <InputPortName>detectorsPhotomOffsets</InputPortName>\n             <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n-            <InputQuerySpecPlan>(detectorsPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (detectorsPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_H\") AND (detectorsPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-        <Cardinality>\n+            <InputQuerySpecPlan>detectorsPhotomOffsets.Header.ProductId.LimitedString == \"UNKNOWN\" </InputQuerySpecPlan>\n+            <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n@@ -123,7 +126,7 @@\n         <InputDataPlan>\n             <InputPortName>tilesPhotomOffsets</InputPortName>\n             <DataProductType>DpdNirRelPhotoFieldCalibration</DataProductType>\n-            <InputQuerySpecPlan>(tilesPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tilesPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_H\") AND (tilesPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>tilesPhotomOffsets.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -133,7 +136,7 @@\n         <InputDataPlan>\n             <InputPortName>absPhotoData</InputPortName>\n             <DataProductType>DpdNirAbsPhotoCalibration</DataProductType>\n-            <InputQuerySpecPlan>(absPhotoData.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (absPhotoData.Data.Filter.Name.FilterName == \"NIR_H\")  AND (absPhotoData.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>absPhotoData.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -157,7 +160,7 @@\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>1</Max>\n+                <Max>4</Max>\n             </Cardinality>\n         </OutputDataProduct>\n         <OutputDataProduct>\n@@ -175,9 +178,9 @@\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>1</Max>\n+                <Max>4</Max>\n             </Cardinality>\n         </OutputDataProduct>\n     </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n+    <EstimatedWorkdirSizeGB>90</EstimatedWorkdirSizeGB>\n </tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,5 +1,5 @@\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_H-PROCESSFIELD_VIS-CAT_DEV_2023.08.08</Id>\n+    <Id>PipDef_NIR_PROCESSFIELD_VIS_CAT_2023.08.08</Id>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n@@ -7,7 +7,7 @@\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"UNKNOWN\") AND (dithers.Data.ObservationSequence.CalblockId == \"UNKNOWN\") AND (dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"UNKNOWN\") AND (dithers.Data.ObservationSequence.CalblockId == \"UNKNOWN\") AND (dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n",
                            "Updated most of the pipeline definitions for PV",
                            "Marco Frailis",
                            "2023-08-09T17:51:09.000+00:00",
                            "e29a28ee79e24fa3d4416124617710741b3d82b1"
                        ],
                        [
                            "@@ -1,5 +1,5 @@\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_H-PROCESSFIELD_VIS-CAT_DEV_2022.03.29</Id>\n+    <Id>PipDef_NIR_H-PROCESSFIELD_VIS-CAT_DEV_2023.08.08</Id>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n@@ -7,8 +7,7 @@\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"UNKNOWN\") AND (dithers.Data.ObservationSequence.CalblockId == \"UNKNOWN\") AND (dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -18,7 +17,7 @@\n         <InputDataPlan>\n             <InputPortName>nirConfig</InputPortName>\n             <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>nirConfig.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -28,9 +27,9 @@\n         <InputDataPlan>\n             <InputPortName>mdb</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPH_Outfld_Teles_straylight*\"</FilesToInclude>\n+                <FilesToInclude>\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISP[JHY]_Outfld_Teles_straylight*\",\"NISPDetectorTable*\",\"NISPDetectorSlots*\",\"EUC_NISP_NLPHOTO-*\", \"EUC_NISP_NLSPECTRO-*\",\"EUC_NISP_GAIN-*\",\"EUC_FM_NIP_[JHY]_SCS-*\",\"NIPGhostsShifts*\"</FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -41,7 +40,7 @@\n         <InputDataPlan>\n             <InputPortName>presolution</InputPortName>\n             <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>presolution.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>OPTIONAL</Optionality>\n                 <Min>0</Min>\n@@ -51,8 +50,7 @@\n         <InputDataPlan>\n             <InputPortName>masterdark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>masterdark.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -62,7 +60,7 @@\n         <InputDataPlan>\n             <InputPortName>masterflat</InputPortName>\n             <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>masterflat.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -72,7 +70,7 @@\n         <InputDataPlan>\n             <InputPortName>largeflat</InputPortName>\n             <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>largeflat.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -82,8 +80,7 @@\n         <InputDataPlan>\n             <InputPortName>badpixel</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badpixel.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -93,7 +90,10 @@\n         <InputDataPlan>\n             <InputPortName>obsCatalog</InputPortName>\n             <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n-            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\"</InputQuerySpecPlan>\n+             <LinkedBy>\n+                <Query>obsCatalog.Data.ObservationId == dithers.Data.ObservationSequence.ObservationId</Query>\n+            </LinkedBy>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -102,19 +102,22 @@\n         </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>refCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <DataProductType>DpdExtGaiaCutout</DataProductType>\n+            <InputQuerySpecPlan>(refCatalog.Header.DataSetRelease == \"UNKNOWN\") AND (refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n+             <LinkedBy>\n+                <Query>dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(0.01,100) refCatalog.Data.CatalogCoverage.Polygon</Query>\n+            </LinkedBy>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>1</Max>\n+                <Max>100</Max>\n             </Cardinality>\n         </InputDataPlan>        \n         <InputDataPlan>\n             <InputPortName>detectorsPhotomOffsets</InputPortName>\n             <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n-            <InputQuerySpecPlan>(detectorsPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (detectorsPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_H\") AND (detectorsPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-        <Cardinality>\n+            <InputQuerySpecPlan>detectorsPhotomOffsets.Header.ProductId.LimitedString == \"UNKNOWN\" </InputQuerySpecPlan>\n+            <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n@@ -123,7 +126,7 @@\n         <InputDataPlan>\n             <InputPortName>tilesPhotomOffsets</InputPortName>\n             <DataProductType>DpdNirRelPhotoFieldCalibration</DataProductType>\n-            <InputQuerySpecPlan>(tilesPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tilesPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_H\") AND (tilesPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>tilesPhotomOffsets.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -133,7 +136,7 @@\n         <InputDataPlan>\n             <InputPortName>absPhotoData</InputPortName>\n             <DataProductType>DpdNirAbsPhotoCalibration</DataProductType>\n-            <InputQuerySpecPlan>(absPhotoData.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (absPhotoData.Data.Filter.Name.FilterName == \"NIR_H\")  AND (absPhotoData.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>absPhotoData.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -157,7 +160,7 @@\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>1</Max>\n+                <Max>4</Max>\n             </Cardinality>\n         </OutputDataProduct>\n         <OutputDataProduct>\n@@ -175,9 +178,9 @@\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>1</Max>\n+                <Max>4</Max>\n             </Cardinality>\n         </OutputDataProduct>\n     </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n+    <EstimatedWorkdirSizeGB>90</EstimatedWorkdirSizeGB>\n </tsk1:PipelineDef>\n",
                            "First set of updates to the pipeline confgurations",
                            "Marco Frailis",
                            "2023-08-09T16:08:24.000+00:00",
                            "3b320c03b4e8940500253e078cb2afb087747ac4"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_ProcessFieldSelfCal.xml": [
                        [
                            "@@ -1,5 +1,5 @@\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_H-PROCESSFIELDSELFCAL_VIS-CAT_DEV_2022.03.29</Id>\n+    <Id>PipDef_NIR_PROCESSFIELDSELFCAL_VIS_CAT_2023.08.08</Id>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessFieldSelfCal.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n@@ -7,18 +7,17 @@\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"UNKNOWN\") AND (dithers.Data.ObservationSequence.CalblockId == \"UNKNOWN\") AND (dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>4</Max>\n+                <Max>60</Max>\n             </Cardinality>\n         </KeyProductInputDataPlan>\n         <InputDataPlan>\n             <InputPortName>nirConfig</InputPortName>\n             <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>nirConfig.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -28,9 +27,9 @@\n         <InputDataPlan>\n             <InputPortName>mdb</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPH_Outfld_Teles_straylight*\"</FilesToInclude>\n+                <FilesToInclude>\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISP[JHY]_Outfld_Teles_straylight*\",\"NISPDetectorTable*\",\"NISPDetectorSlots*\",\"EUC_NISP_NLPHOTO-*\", \"EUC_NISP_NLSPECTRO-*\",\"EUC_NISP_GAIN-*\",\"EUC_FM_NIP_[JHY]_SCS-*\",\"NIPGhostsShifts*\"</FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -41,7 +40,7 @@\n         <InputDataPlan>\n             <InputPortName>presolution</InputPortName>\n             <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>presolution.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>OPTIONAL</Optionality>\n                 <Min>0</Min>\n@@ -51,8 +50,7 @@\n         <InputDataPlan>\n             <InputPortName>masterdark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>masterdark.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -62,7 +60,7 @@\n         <InputDataPlan>\n             <InputPortName>masterflat</InputPortName>\n             <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>masterflat.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -72,7 +70,7 @@\n         <InputDataPlan>\n             <InputPortName>largeflat</InputPortName>\n             <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>largeflat.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -82,8 +80,7 @@\n         <InputDataPlan>\n             <InputPortName>badpixel</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badpixel.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -93,7 +90,10 @@\n         <InputDataPlan>\n             <InputPortName>obsCatalog</InputPortName>\n             <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n-            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\"</InputQuerySpecPlan>\n+             <LinkedBy>\n+                <Query>obsCatalog.Data.ObservationId == dithers.Data.ObservationSequence.ObservationId</Query>\n+            </LinkedBy>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -102,18 +102,21 @@\n         </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>refCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <DataProductType>DpdExtGaiaCutout</DataProductType>\n+            <InputQuerySpecPlan>(refCatalog.Header.DataSetRelease == \"UNKNOWN\") AND (refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n+             <LinkedBy>\n+                <Query>dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(0.01,100) refCatalog.Data.CatalogCoverage.Polygon</Query>\n+            </LinkedBy>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>1</Max>\n+                <Max>600</Max>\n             </Cardinality>\n         </InputDataPlan>        \n         <InputDataPlan>\n             <InputPortName>detectorsPhotomOffsets</InputPortName>\n             <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n-            <InputQuerySpecPlan>(detectorsPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (detectorsPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_H\") AND (detectorsPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>detectorsPhotomOffsets.Header.ProductId.LimitedString == \"UNKNOWN\" </InputQuerySpecPlan>\n         <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -123,7 +126,7 @@\n         <InputDataPlan>\n             <InputPortName>tilesPhotomOffsets</InputPortName>\n             <DataProductType>DpdNirRelPhotoFieldCalibration</DataProductType>\n-            <InputQuerySpecPlan>(tilesPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tilesPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_H\") AND (tilesPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>tilesPhotomOffsets.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -133,7 +136,7 @@\n         <InputDataPlan>\n             <InputPortName>absPhotoData</InputPortName>\n             <DataProductType>DpdNirAbsPhotoCalibration</DataProductType>\n-            <InputQuerySpecPlan>(absPhotoData.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (absPhotoData.Data.Filter.Name.FilterName == \"NIR_H\")  AND (absPhotoData.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>absPhotoData.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -157,7 +160,7 @@\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>1</Max>\n+                <Max>60</Max>\n             </Cardinality>\n         </OutputDataProduct>\n         <OutputDataProduct>\n@@ -175,9 +178,9 @@\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>1</Max>\n+                <Max>60</Max>\n             </Cardinality>\n         </OutputDataProduct>\n     </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n+    <EstimatedWorkdirSizeGB>1000</EstimatedWorkdirSizeGB>\n </tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,5 +1,5 @@\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_H-PROCESSFIELDSELFCAL_VIS-CAT_DEV_2023.08.08</Id>\n+    <Id>PipDef_NIR_PROCESSFIELDSELFCAL_VIS_CAT_2023.08.08</Id>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessFieldSelfCal.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n@@ -7,7 +7,7 @@\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"UNKNOWN\") AND (dithers.Data.ObservationSequence.CalblockId == \"UNKNOWN\") AND (dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"UNKNOWN\") AND (dithers.Data.ObservationSequence.CalblockId == \"UNKNOWN\") AND (dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n",
                            "Updated most of the pipeline definitions for PV",
                            "Marco Frailis",
                            "2023-08-09T17:51:09.000+00:00",
                            "e29a28ee79e24fa3d4416124617710741b3d82b1"
                        ],
                        [
                            "@@ -1,5 +1,5 @@\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_H-PROCESSFIELDSELFCAL_VIS-CAT_DEV_2022.03.29</Id>\n+    <Id>PipDef_NIR_H-PROCESSFIELDSELFCAL_VIS-CAT_DEV_2023.08.08</Id>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessFieldSelfCal.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n@@ -7,18 +7,17 @@\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"UNKNOWN\") AND (dithers.Data.ObservationSequence.CalblockId == \"UNKNOWN\") AND (dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>4</Max>\n+                <Max>60</Max>\n             </Cardinality>\n         </KeyProductInputDataPlan>\n         <InputDataPlan>\n             <InputPortName>nirConfig</InputPortName>\n             <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>nirConfig.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -28,9 +27,9 @@\n         <InputDataPlan>\n             <InputPortName>mdb</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPH_Outfld_Teles_straylight*\"</FilesToInclude>\n+                <FilesToInclude>\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISP[JHY]_Outfld_Teles_straylight*\",\"NISPDetectorTable*\",\"NISPDetectorSlots*\",\"EUC_NISP_NLPHOTO-*\", \"EUC_NISP_NLSPECTRO-*\",\"EUC_NISP_GAIN-*\",\"EUC_FM_NIP_[JHY]_SCS-*\",\"NIPGhostsShifts*\"</FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -41,7 +40,7 @@\n         <InputDataPlan>\n             <InputPortName>presolution</InputPortName>\n             <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>presolution.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>OPTIONAL</Optionality>\n                 <Min>0</Min>\n@@ -51,8 +50,7 @@\n         <InputDataPlan>\n             <InputPortName>masterdark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>masterdark.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -62,7 +60,7 @@\n         <InputDataPlan>\n             <InputPortName>masterflat</InputPortName>\n             <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>masterflat.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -72,7 +70,7 @@\n         <InputDataPlan>\n             <InputPortName>largeflat</InputPortName>\n             <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>largeflat.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -82,8 +80,7 @@\n         <InputDataPlan>\n             <InputPortName>badpixel</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badpixel.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -93,7 +90,10 @@\n         <InputDataPlan>\n             <InputPortName>obsCatalog</InputPortName>\n             <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n-            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\"</InputQuerySpecPlan>\n+             <LinkedBy>\n+                <Query>obsCatalog.Data.ObservationId == dithers.Data.ObservationSequence.ObservationId</Query>\n+            </LinkedBy>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -102,18 +102,21 @@\n         </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>refCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <DataProductType>DpdExtGaiaCutout</DataProductType>\n+            <InputQuerySpecPlan>(refCatalog.Header.DataSetRelease == \"UNKNOWN\") AND (refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n+             <LinkedBy>\n+                <Query>dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(0.01,100) refCatalog.Data.CatalogCoverage.Polygon</Query>\n+            </LinkedBy>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>1</Max>\n+                <Max>600</Max>\n             </Cardinality>\n         </InputDataPlan>        \n         <InputDataPlan>\n             <InputPortName>detectorsPhotomOffsets</InputPortName>\n             <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n-            <InputQuerySpecPlan>(detectorsPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (detectorsPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_H\") AND (detectorsPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>detectorsPhotomOffsets.Header.ProductId.LimitedString == \"UNKNOWN\" </InputQuerySpecPlan>\n         <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -123,7 +126,7 @@\n         <InputDataPlan>\n             <InputPortName>tilesPhotomOffsets</InputPortName>\n             <DataProductType>DpdNirRelPhotoFieldCalibration</DataProductType>\n-            <InputQuerySpecPlan>(tilesPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tilesPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_H\") AND (tilesPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>tilesPhotomOffsets.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -133,7 +136,7 @@\n         <InputDataPlan>\n             <InputPortName>absPhotoData</InputPortName>\n             <DataProductType>DpdNirAbsPhotoCalibration</DataProductType>\n-            <InputQuerySpecPlan>(absPhotoData.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (absPhotoData.Data.Filter.Name.FilterName == \"NIR_H\")  AND (absPhotoData.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>absPhotoData.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -157,7 +160,7 @@\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>1</Max>\n+                <Max>60</Max>\n             </Cardinality>\n         </OutputDataProduct>\n         <OutputDataProduct>\n@@ -175,9 +178,9 @@\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>1</Max>\n+                <Max>60</Max>\n             </Cardinality>\n         </OutputDataProduct>\n     </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n+    <EstimatedWorkdirSizeGB>1000</EstimatedWorkdirSizeGB>\n </tsk1:PipelineDef>\n",
                            "First set of updates to the pipeline confgurations",
                            "Marco Frailis",
                            "2023-08-09T16:08:24.000+00:00",
                            "3b320c03b4e8940500253e078cb2afb087747ac4"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_Y_ProcessField.xml": [
                        [
                            "@@ -1,183 +0,0 @@\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_Y-PROCESSFIELD_VIS-CAT_DEV_2022.03.29</Id>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n-    <InputDataSetPlan>\n-        <KeyProductInputDataPlan>\n-            <InputPortName>dithers</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"Y\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"Y\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>4</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>nirConfig</InputPortName>\n-            <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPH_Outfld_Teles_straylight*\"</FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>presolution</InputPortName>\n-            <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterdark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_Y\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterflat</InputPortName>\n-            <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_Y\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>largeflat</InputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_Y\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>obsCatalog</InputPortName>\n-            <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n-            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>refCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>             \n-        <InputDataPlan>\n-            <InputPortName>detectorsPhotomOffsets</InputPortName>\n-            <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n-            <InputQuerySpecPlan>(detectorsPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (detectorsPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_Y\") AND (detectorsPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-        <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>tilesPhotomOffsets</InputPortName>\n-            <DataProductType>DpdNirRelPhotoFieldCalibration</DataProductType>\n-            <InputQuerySpecPlan>(tilesPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tilesPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_Y\") AND (tilesPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>absPhotoData</InputPortName>\n-            <DataProductType>DpdNirAbsPhotoCalibration</DataProductType>\n-            <InputQuerySpecPlan>(absPhotoData.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (absPhotoData.Data.Filter.Name.FilterName == \"NIR_Y\")  AND (absPhotoData.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-    </InputDataSetPlan> \n-    <OutputDataSet>\n-        <OutputDataProduct>\n-            <OutputPortName>stk_image_xml</OutputPortName>\n-            <DataProductType>DpdNirStackedFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>cal_images_xml</OutputPortName>\n-            <DataProductType>DpdNirCalibratedFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>stk_catalog_xml</OutputPortName>\n-            <DataProductType>DpdNirStackedFrameCatalog</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>cal_catalogs_xml</OutputPortName>\n-            <DataProductType>DpdNirCalibratedFrameCatalog</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n-</tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_Y-PROCESSFIELD_VIS-CAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -150,18 +140,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that VIS catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>                        \n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>stk_image_xml</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_Y-PROCESSFIELD_VIS-CAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -150,18 +140,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that VIS catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>                        \n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>stk_image_xml</OutputPortName>\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ],
                        [
                            "@@ -101,9 +101,9 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>viscatalog</InputPortName>\n+            <InputPortName>obsCatalog</InputPortName>\n             <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n-            <InputQuerySpecPlan>(viscatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (viscatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -111,9 +111,9 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>tucatalog</InputPortName>\n+            <InputPortName>refCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(tucatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tucatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -153,11 +153,11 @@\n         <Dependencies>\n             <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == viscatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that VIS catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == tucatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>                        \n         </Dependencies>\n",
                            "Merge branch 'mfrailis/single_ref_catalog' into 'develop'",
                            "Federico Rizzo",
                            "2022-08-25T13:02:38.000+00:00",
                            "b6d1c9dfc97e07ea9e27420c61b8dd50b403dd58"
                        ],
                        [
                            "@@ -101,9 +101,9 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>viscatalog</InputPortName>\n+            <InputPortName>obsCatalog</InputPortName>\n             <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n-            <InputQuerySpecPlan>(viscatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (viscatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -111,9 +111,9 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>tucatalog</InputPortName>\n+            <InputPortName>refCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(tucatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tucatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -153,11 +153,11 @@\n         <Dependencies>\n             <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == viscatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that VIS catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == tucatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>                        \n         </Dependencies>\n",
                            "Removing NIR_ProcessField_TU workflow by simplifying the input ports of the Astrometric calibration and the Ghost masking steps. Now the NIR_ProcessField pipeline accepts both a VIS stack catalog or a TU catalog",
                            "Marco Frailis",
                            "2022-08-23T16:15:31.000+00:00",
                            "4ac0d3337800354945a5d027eb9f978289094cbe"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_Y_ProcessFieldSelfCal.xml": [
                        [
                            "@@ -1,183 +0,0 @@\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_Y-PROCESSFIELDSELFCAL_VIS-CAT_DEV_2022.03.29</Id>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessFieldSelfCal.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n-    <InputDataSetPlan>\n-        <KeyProductInputDataPlan>\n-            <InputPortName>dithers</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"Y\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"Y\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>4</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>nirConfig</InputPortName>\n-            <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPH_Outfld_Teles_straylight*\"</FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>presolution</InputPortName>\n-            <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterdark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_Y\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterflat</InputPortName>\n-            <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_Y\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>largeflat</InputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_Y\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>obsCatalog</InputPortName>\n-            <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n-            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>refCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>             \n-        <InputDataPlan>\n-            <InputPortName>detectorsPhotomOffsets</InputPortName>\n-            <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n-            <InputQuerySpecPlan>(detectorsPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (detectorsPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_Y\") AND (detectorsPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-        <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>tilesPhotomOffsets</InputPortName>\n-            <DataProductType>DpdNirRelPhotoFieldCalibration</DataProductType>\n-            <InputQuerySpecPlan>(tilesPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tilesPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_Y\") AND (tilesPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>absPhotoData</InputPortName>\n-            <DataProductType>DpdNirAbsPhotoCalibration</DataProductType>\n-            <InputQuerySpecPlan>(absPhotoData.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (absPhotoData.Data.Filter.Name.FilterName == \"NIR_Y\")  AND (absPhotoData.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-    </InputDataSetPlan> \n-    <OutputDataSet>\n-        <OutputDataProduct>\n-            <OutputPortName>stk_image_xml</OutputPortName>\n-            <DataProductType>DpdNirStackedFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>cal_images_xml</OutputPortName>\n-            <DataProductType>DpdNirCalibratedFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>stk_catalog_xml</OutputPortName>\n-            <DataProductType>DpdNirStackedFrameCatalog</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>cal_catalogs_xml</OutputPortName>\n-            <DataProductType>DpdNirCalibratedFrameCatalog</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n-</tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_Y-PROCESSFIELDSELFCAL_VIS-CAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessFieldSelfCal.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessFieldSelfCal.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -150,18 +140,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that VIS catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>                        \n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>stk_image_xml</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_Y-PROCESSFIELDSELFCAL_VIS-CAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessFieldSelfCal.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessFieldSelfCal.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -150,18 +140,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that VIS catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>                        \n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>stk_image_xml</OutputPortName>\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ],
                        [
                            "@@ -0,0 +1,204 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n+    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n+    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n+    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+    <EdenVersion>Eden-3.0</EdenVersion>\n+    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+    <Id>PipDef_NIR_Y-PROCESSFIELDSELFCAL_VIS-CAT_DEV_2022.03.29</Id>\n+    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n+    <PipelineContext>TEST_PV1</PipelineContext>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessFieldSelfCal.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n+    <InputDataSet>\n+        <KeyProductInputDataPlan>\n+            <InputPortName>dithers</InputPortName>\n+            <DataProductType>DpdNispRawFrame</DataProductType>\n+            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"Y\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"Y\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>4</Max>\n+            </Cardinality>\n+        </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>nirConfig</InputPortName>\n+            <DataProductType>DpdNirConfigurationSet</DataProductType>\n+            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>mdb</InputPortName>\n+            <DataProductType>DpdMdbDataBase</DataProductType>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <FileFiltering>\n+                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPH_Outfld_Teles_straylight*\"</FilesToInclude>\n+            </FileFiltering>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>presolution</InputPortName>\n+            <DataProductType>DpdNirGeometricDistortions</DataProductType>\n+            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>OPTIONAL</Optionality>\n+                <Min>0</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>masterdark</InputPortName>\n+            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n+            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n+            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_Y\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>masterflat</InputPortName>\n+            <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n+            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_Y\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>largeflat</InputPortName>\n+            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n+            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_Y\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>badpixel</InputPortName>\n+            <DataProductType>DpdNirBadPixelMask</DataProductType>\n+            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>obsCatalog</InputPortName>\n+            <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n+            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>refCatalog</InputPortName>\n+            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n+            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>             \n+        <InputDataPlan>\n+            <InputPortName>detectorsPhotomOffsets</InputPortName>\n+            <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n+            <InputQuerySpecPlan>(detectorsPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (detectorsPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_Y\") AND (detectorsPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+        <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>tilesPhotomOffsets</InputPortName>\n+            <DataProductType>DpdNirRelPhotoFieldCalibration</DataProductType>\n+            <InputQuerySpecPlan>(tilesPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tilesPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_Y\") AND (tilesPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>absPhotoData</InputPortName>\n+            <DataProductType>DpdNirAbsPhotoCalibration</DataProductType>\n+            <InputQuerySpecPlan>(absPhotoData.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (absPhotoData.Data.Filter.Name.FilterName == \"NIR_Y\")  AND (absPhotoData.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <Dependencies>\n+            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n+            <LinkedBy refPort=\"dithers\">\n+                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n+                <!--  Ensures that VIS catalog refers to the same OBS_ID as the raw frame  -->\n+            </LinkedBy>\n+            <LinkedBy refPort=\"dithers\">\n+                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n+                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n+            </LinkedBy>                        \n+        </Dependencies>\n+    </InputDataSet> \n+    <OutputDataSet>\n+        <OutputDataProduct>\n+            <OutputPortName>stk_image_xml</OutputPortName>\n+            <DataProductType>DpdNirStackedFrame</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+        <OutputDataProduct>\n+            <OutputPortName>cal_images_xml</OutputPortName>\n+            <DataProductType>DpdNirCalibratedFrame</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+        <OutputDataProduct>\n+            <OutputPortName>stk_catalog_xml</OutputPortName>\n+            <DataProductType>DpdNirStackedFrameCatalog</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+        <OutputDataProduct>\n+            <OutputPortName>cal_catalogs_xml</OutputPortName>\n+            <DataProductType>DpdNirCalibratedFrameCatalog</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+    </OutputDataSet>\n+    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n+</tsk1:PipelineDef>\n",
                            "update resources; new PipDefs for particular tasks",
                            "frizzo",
                            "2022-08-28T18:22:30.000+02:00",
                            "daa1bb97099babff7ff7ece5ed1667cff4733ec5"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_Y_ProcessField_TU.xml": [
                        [
                            "@@ -1,183 +0,0 @@\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_Y-PROCESSFIELD_TU-CAT_DEV_2022.03.29</Id>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n-    <InputDataSetPlan>\n-        <KeyProductInputDataPlan>\n-            <InputPortName>dithers</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"Y\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"Y\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>4</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>nirConfig</InputPortName>\n-            <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPH_Outfld_Teles_straylight*\"</FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>presolution</InputPortName>\n-            <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterdark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_Y\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterflat</InputPortName>\n-            <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_Y\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>largeflat</InputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_Y\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>obsCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>refCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>        \n-        <InputDataPlan>\n-            <InputPortName>detectorsPhotomOffsets</InputPortName>\n-            <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n-            <InputQuerySpecPlan>(detectorsPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (detectorsPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_Y\") AND (detectorsPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-        <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>tilesPhotomOffsets</InputPortName>\n-            <DataProductType>DpdNirRelPhotoFieldCalibration</DataProductType>\n-            <InputQuerySpecPlan>(tilesPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tilesPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_Y\") AND (tilesPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>absPhotoData</InputPortName>\n-            <DataProductType>DpdNirAbsPhotoCalibration</DataProductType>\n-            <InputQuerySpecPlan>(absPhotoData.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (absPhotoData.Data.Filter.Name.FilterName == \"NIR_Y\")  AND (absPhotoData.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-    </InputDataSetPlan> \n-    <OutputDataSet>\n-        <OutputDataProduct>\n-            <OutputPortName>stk_image_xml</OutputPortName>\n-            <DataProductType>DpdNirStackedFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>cal_images_xml</OutputPortName>\n-            <DataProductType>DpdNirCalibratedFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>stk_catalog_xml</OutputPortName>\n-            <DataProductType>DpdNirStackedFrameCatalog</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>cal_catalogs_xml</OutputPortName>\n-            <DataProductType>DpdNirCalibratedFrameCatalog</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n-</tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_Y-PROCESSFIELD_TU-CAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -150,18 +140,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>            \n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>stk_image_xml</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_Y-PROCESSFIELD_TU-CAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -150,18 +140,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>            \n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>stk_image_xml</OutputPortName>\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ],
                        [
                            "@@ -11,8 +11,8 @@\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/PipScript_NIR_ProcessField_TU.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/</PipelineRootPath>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n     <InputDataSet>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n@@ -101,15 +101,25 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>sourceCatalog</InputPortName>\n+            <InputPortName>obsCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>refCatalog</InputPortName>\n+            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n+            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>        \n         <InputDataPlan>\n             <InputPortName>detectorsPhotomOffsets</InputPortName>\n             <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n@@ -143,9 +153,13 @@\n         <Dependencies>\n             <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>\n+            <LinkedBy refPort=\"dithers\">\n+                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n+                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n+            </LinkedBy>            \n         </Dependencies>\n     </InputDataSet> \n     <OutputDataSet>\n",
                            "Merge branch 'mfrailis/single_ref_catalog' into 'develop'",
                            "Federico Rizzo",
                            "2022-08-25T13:02:38.000+00:00",
                            "b6d1c9dfc97e07ea9e27420c61b8dd50b403dd58"
                        ],
                        [
                            "@@ -11,8 +11,8 @@\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/PipScript_NIR_ProcessField_TU.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/</PipelineRootPath>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n     <InputDataSet>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n@@ -101,15 +101,25 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>sourceCatalog</InputPortName>\n+            <InputPortName>obsCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>refCatalog</InputPortName>\n+            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n+            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>        \n         <InputDataPlan>\n             <InputPortName>detectorsPhotomOffsets</InputPortName>\n             <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n@@ -143,9 +153,13 @@\n         <Dependencies>\n             <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>\n+            <LinkedBy refPort=\"dithers\">\n+                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n+                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n+            </LinkedBy>            \n         </Dependencies>\n     </InputDataSet> \n     <OutputDataSet>\n",
                            "Removing NIR_ProcessField_TU workflow by simplifying the input ports of the Astrometric calibration and the Ghost masking steps. Now the NIR_ProcessField pipeline accepts both a VIS stack catalog or a TU catalog",
                            "Marco Frailis",
                            "2022-08-23T16:15:31.000+00:00",
                            "4ac0d3337800354945a5d027eb9f978289094cbe"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_SelfCalib_Pipeline/PipDef_NIR_H_SelfCalib.xml": [
                        [
                            "@@ -1,115 +0,0 @@\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_H-CALIB_LARGESCALEFLAT_DEV_2022.03.29</Id>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineScriptPath>NIR_SelfCalib_Pipeline/PipScript_NIR_SelfCalib.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n-    <InputDataSetPlan>\n-        <KeyProductInputDataPlan>\n-            <InputPortName>dithers</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"CALIB\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>4</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>nirConfig</InputPortName>\n-            <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\"</FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>presolution</InputPortName>\n-            <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterdark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterflat</InputPortName>\n-            <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>sourceCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Data.Release==\"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-    </InputDataSetPlan> \n-    <OutputDataSet>\n-        <OutputDataProduct>\n-            <OutputPortName>largeflat</OutputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>detcoeff</OutputPortName>\n-            <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n-</tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_H-CALIB_LARGESCALEFLAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_SelfCalib_Pipeline/PipScript_NIR_SelfCalib.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_SelfCalib_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_SelfCalib_Pipeline/PipScript_NIR_SelfCalib.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -93,21 +83,14 @@\n         <InputDataPlan>\n             <InputPortName>sourceCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != 'INVALID') AND (sourceCatalog.Data.Release==\"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Data.Release==\"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>largeflat</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_H-CALIB_LARGESCALEFLAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_SelfCalib_Pipeline/PipScript_NIR_SelfCalib.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_SelfCalib_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_SelfCalib_Pipeline/PipScript_NIR_SelfCalib.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -93,21 +83,14 @@\n         <InputDataPlan>\n             <InputPortName>sourceCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != 'INVALID') AND (sourceCatalog.Data.Release==\"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Data.Release==\"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>largeflat</OutputPortName>\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_SelfCalib_Pipeline/PipDef_NIR_SelfCalib.xml": [
                        [
                            "@@ -1,5 +1,5 @@\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_J-CALIB_LARGESCALEFLAT_DEV_2022.03.29</Id>\n+    <Id>PipDef_NIR_CALIB_LARGESCALEFLAT_2023.08.08</Id>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineScriptPath>NIR_SelfCalib_Pipeline/PipScript_NIR_SelfCalib.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n@@ -7,18 +7,17 @@\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"CALIB\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"UNKNOWN\") AND (dithers.Data.ObservationSequence.CalblockId == \"UNKNOWN\") AND (dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>4</Max>\n+                <Max>60</Max>\n             </Cardinality>\n         </KeyProductInputDataPlan>\n         <InputDataPlan>\n             <InputPortName>nirConfig</InputPortName>\n             <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>nirConfig.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -28,9 +27,9 @@\n         <InputDataPlan>\n             <InputPortName>mdb</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\"</FilesToInclude>\n+                <FilesToInclude>\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPDetectorTable*\",\"NISPDetectorSlots*\",\"EUC_NISP_NLPHOTO-*\",\"EUC_NISP_GAIN-*\"</FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -41,7 +40,7 @@\n         <InputDataPlan>\n             <InputPortName>presolution</InputPortName>\n             <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>presolution.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>OPTIONAL</Optionality>\n                 <Min>0</Min>\n@@ -51,8 +50,7 @@\n         <InputDataPlan>\n             <InputPortName>masterdark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_J\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>masterdark.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -62,7 +60,7 @@\n         <InputDataPlan>\n             <InputPortName>masterflat</InputPortName>\n             <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_J\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>masterflat.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -72,8 +70,7 @@\n         <InputDataPlan>\n             <InputPortName>badpixel</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badpixel.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -82,8 +79,11 @@\n         </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>sourceCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Data.Release==\"UNKNOWN\")</InputQuerySpecPlan>\n+            <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n+            <InputQuerySpecPlan>sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\"</InputQuerySpecPlan>\n+             <LinkedBy>\n+                <Query>sourceCatalog.Data.ObservationId == dithers.Data.ObservationSequence.ObservationId</Query>\n+            </LinkedBy>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -111,5 +111,5 @@\n             </Cardinality>\n         </OutputDataProduct>\n     </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n+    <EstimatedWorkdirSizeGB>500</EstimatedWorkdirSizeGB>\n </tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,5 +1,5 @@\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_H-CALIB_LARGESCALEFLAT_DEV_2022.03.29</Id>\n+    <Id>PipDef_NIR_CALIB_LARGESCALEFLAT_2023.08.08</Id>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineScriptPath>NIR_SelfCalib_Pipeline/PipScript_NIR_SelfCalib.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n@@ -7,7 +7,7 @@\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"UNKNOWN\") AND (dithers.Data.ObservationSequence.CalblockId == \"UNKNOWN\") AND (dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"UNKNOWN\") AND (dithers.Data.ObservationSequence.CalblockId == \"UNKNOWN\") AND (dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -111,5 +111,5 @@\n             </Cardinality>\n         </OutputDataProduct>\n     </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n+    <EstimatedWorkdirSizeGB>500</EstimatedWorkdirSizeGB>\n </tsk1:PipelineDef>\n",
                            "Updated most of the pipeline definitions for PV",
                            "Marco Frailis",
                            "2023-08-09T17:51:09.000+00:00",
                            "e29a28ee79e24fa3d4416124617710741b3d82b1"
                        ],
                        [
                            "@@ -7,18 +7,17 @@\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"CALIB\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"UNKNOWN\") AND (dithers.Data.ObservationSequence.CalblockId == \"UNKNOWN\") AND (dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>4</Max>\n+                <Max>60</Max>\n             </Cardinality>\n         </KeyProductInputDataPlan>\n         <InputDataPlan>\n             <InputPortName>nirConfig</InputPortName>\n             <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>nirConfig.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -28,9 +27,9 @@\n         <InputDataPlan>\n             <InputPortName>mdb</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\"</FilesToInclude>\n+                <FilesToInclude>\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPDetectorTable*\",\"NISPDetectorSlots*\",\"EUC_NISP_NLPHOTO-*\",\"EUC_NISP_GAIN-*\"</FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -41,7 +40,7 @@\n         <InputDataPlan>\n             <InputPortName>presolution</InputPortName>\n             <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>presolution.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>OPTIONAL</Optionality>\n                 <Min>0</Min>\n@@ -51,8 +50,7 @@\n         <InputDataPlan>\n             <InputPortName>masterdark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>masterdark.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -62,7 +60,7 @@\n         <InputDataPlan>\n             <InputPortName>masterflat</InputPortName>\n             <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>masterflat.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -72,8 +70,7 @@\n         <InputDataPlan>\n             <InputPortName>badpixel</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badpixel.Header.ProductId.LimitedString == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -82,8 +79,11 @@\n         </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>sourceCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Data.Release==\"UNKNOWN\")</InputQuerySpecPlan>\n+            <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n+            <InputQuerySpecPlan>sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\"</InputQuerySpecPlan>\n+             <LinkedBy>\n+                <Query>sourceCatalog.Data.ObservationId == dithers.Data.ObservationSequence.ObservationId</Query>\n+            </LinkedBy>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n",
                            "First set of updates to the pipeline confgurations",
                            "Marco Frailis",
                            "2023-08-09T16:08:24.000+00:00",
                            "3b320c03b4e8940500253e078cb2afb087747ac4"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_SelfCalib_Pipeline/PipDef_NIR_Y_SelfCalib.xml": [
                        [
                            "@@ -1,115 +0,0 @@\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_Y-CALIB_LARGESCALEFLAT_DEV_2022.03.29</Id>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineScriptPath>NIR_SelfCalib_Pipeline/PipScript_NIR_SelfCalib.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n-    <InputDataSetPlan>\n-        <KeyProductInputDataPlan>\n-            <InputPortName>dithers</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"CALIB\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"Y\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"Y\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>4</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>nirConfig</InputPortName>\n-            <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\"</FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>presolution</InputPortName>\n-            <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterdark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_Y\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterflat</InputPortName>\n-            <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_Y\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>sourceCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Data.Release==\"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-    </InputDataSetPlan> \n-    <OutputDataSet>\n-        <OutputDataProduct>\n-            <OutputPortName>largeflat</OutputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>detcoeff</OutputPortName>\n-            <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n-</tsk1:PipelineDef>\n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_Y-CALIB_LARGESCALEFLAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_SelfCalib_Pipeline/PipScript_NIR_SelfCalib.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_SelfCalib_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_SelfCalib_Pipeline/PipScript_NIR_SelfCalib.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -93,21 +83,14 @@\n         <InputDataPlan>\n             <InputPortName>sourceCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != 'INVALID') AND (sourceCatalog.Data.Release==\"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Data.Release==\"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>largeflat</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_Y-CALIB_LARGESCALEFLAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_SelfCalib_Pipeline/PipScript_NIR_SelfCalib.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_SelfCalib_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_SelfCalib_Pipeline/PipScript_NIR_SelfCalib.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -93,21 +83,14 @@\n         <InputDataPlan>\n             <InputPortName>sourceCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != 'INVALID') AND (sourceCatalog.Data.Release==\"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Data.Release==\"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>largeflat</OutputPortName>\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ]
                    ],
                    "NIR_IAL_Pipelines/tests/python/NIR_AbsolutePhotometry_Pipeline_test.py": [
                        [
                            "@@ -32,9 +32,8 @@ from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n \n absolute_photometry_package_def = getAuxiliaryPath('NIR_Pipelines/PackageDef_NIR.py')\n absolute_photometry_pipeline_script = getAuxiliaryPath('NIR_Pipelines/NIR_AbsolutePhotometry_Pipeline/PipScript_NIR_AbsolutePhotometry.py')\n-absolute_photometry_pipeline_def_Y = getAuxiliaryPath('NIR_Pipelines/NIR_AbsolutePhotometry_Pipeline/PipDef_NIR_Y_AbsolutePhotometry.xml')\n-absolute_photometry_pipeline_def_J = getAuxiliaryPath('NIR_Pipelines/NIR_AbsolutePhotometry_Pipeline/PipDef_NIR_J_AbsolutePhotometry.xml')\n-absolute_photometry_pipeline_def_H = getAuxiliaryPath('NIR_Pipelines/NIR_AbsolutePhotometry_Pipeline/PipDef_NIR_H_AbsolutePhotometry.xml')\n+absolute_photometry_pipeline_def = getAuxiliaryPath('NIR_Pipelines/NIR_AbsolutePhotometry_Pipeline/PipDef_NIR_AbsolutePhotometry.xml')\n+\n \n \n class TestAbsolutePhotometryPackageDef(PackageDefTester):\n@@ -46,13 +45,7 @@ class TestAbsolutePhotometryPipelineScript(PipelineScriptTester):\n \n class TestAbsolutePhotometryPipelineDefY(PipelineDefTester):\n    pipeline_script = absolute_photometry_pipeline_script\n-   pipeline_def = absolute_photometry_pipeline_def_Y\n-   \n-class TestAbsolutePhotometryPipelineDefJ(PipelineDefTester):\n-   pipeline_script = absolute_photometry_pipeline_script\n-   pipeline_def = absolute_photometry_pipeline_def_J\n+   pipeline_def = absolute_photometry_pipeline_def\n    \n-class TestAbsolutePhotometryPipelineDefH(PipelineDefTester):\n-   pipeline_script = absolute_photometry_pipeline_script\n-   pipeline_def = absolute_photometry_pipeline_def_H\n+\n \n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ]
                    ],
                    "NIR_IAL_Pipelines/tests/python/NIR_Baseline_Pipeline_test.py": [
                        [
                            "@@ -18,9 +18,9 @@\n #\n \n \"\"\"\n-File: tests/python/NIR_ProcessField_TU_Pipeline_test.py\n+File: tests/python/NIR_Baseline_Pipeline_test.py\n \n-Created on: 26/02/2021\n+Created on: 09/08/2023\n Author: mfrailis\n \"\"\"\n \n@@ -31,31 +31,23 @@ from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester\n from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n \n \n-process_field_package_def = getAuxiliaryPath('NIR_Pipelines/PackageDef_NIR.py')\n-process_field_pipeline_script = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py')\n-process_field_pipeline_def_Y = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_Y_ProcessField_TU.xml')\n-process_field_pipeline_def_J = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_J_ProcessField_TU.xml')\n-process_field_pipeline_def_H = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_H_ProcessField_TU.xml')\n+baseline_package_def = getAuxiliaryPath('NIR_Pipelines/PackageDef_NIR.py')\n+baseline_pipeline_script = getAuxiliaryPath('NIR_Pipelines/NIR_Baseline_Pipeline/PipScript_NIR_Baseline.py')\n+baseline_pipeline_def = getAuxiliaryPath('NIR_Pipelines/NIR_Baseline_Pipeline/PipDef_NIR_Baseline.xml')\n \n \n-class TestProcessFieldPackageDef(PackageDefTester):\n-   package_def = process_field_package_def\n+class TestMasterDarkPackageDef(PackageDefTester):\n+   package_def = baseline_package_def\n+\n+class TestMasterDarkPipelineScript(PipelineScriptTester):\n+   package_def = baseline_package_def\n+   pipeline_script = baseline_pipeline_script\n+\n+class TestMasterDarkPipelineDefY(PipelineDefTester):\n+   pipeline_script = baseline_pipeline_script\n+   pipeline_def = baseline_pipeline_def\n \n-class TestProcessFieldPipelineScript(PipelineScriptTester):\n-   package_def = process_field_package_def\n-   pipeline_script = process_field_pipeline_script\n \n-class TestProcessFieldPipelineDefY(PipelineDefTester):\n-   pipeline_script = process_field_pipeline_script\n-   pipeline_def = process_field_pipeline_def_Y\n-   \n-class TestProcessFieldPipelineDefJ(PipelineDefTester):\n-   pipeline_script = process_field_pipeline_script\n-   pipeline_def = process_field_pipeline_def_J\n-   \n-class TestProcessFieldPipelineDefH(PipelineDefTester):\n-   pipeline_script = process_field_pipeline_script\n-   pipeline_def = process_field_pipeline_def_H\n \n \n \n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ]
                    ],
                    "NIR_IAL_Pipelines/tests/python/NIR_DistortionModel_Pipeline_test.py": [
                        [
                            "@@ -33,9 +33,7 @@ from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n \n distortion_model_package_def = getAuxiliaryPath('NIR_Pipelines/PackageDef_NIR.py')\n distortion_model_pipeline_script = getAuxiliaryPath('NIR_Pipelines/NIR_DistortionModel_Pipeline/PipScript_NIR_DistortionModel.py')\n-distortion_model_pipeline_def_Y = getAuxiliaryPath('NIR_Pipelines/NIR_DistortionModel_Pipeline/PipDef_NIR_Y_DistortionModel.xml')\n-distortion_model_pipeline_def_J = getAuxiliaryPath('NIR_Pipelines/NIR_DistortionModel_Pipeline/PipDef_NIR_J_DistortionModel.xml')\n-distortion_model_pipeline_def_H = getAuxiliaryPath('NIR_Pipelines/NIR_DistortionModel_Pipeline/PipDef_NIR_H_DistortionModel.xml')\n+distortion_model_pipeline_def = getAuxiliaryPath('NIR_Pipelines/NIR_DistortionModel_Pipeline/PipDef_NIR_DistortionModel.xml')\n \n \n class TestDistortionModelPackageDef(PackageDefTester):\n@@ -47,15 +45,9 @@ class TestDistortionModelPipelineScript(PipelineScriptTester):\n \n class TestDistortionModelPipelineDefY(PipelineDefTester):\n    pipeline_script = distortion_model_pipeline_script\n-   pipeline_def = distortion_model_pipeline_def_Y\n+   pipeline_def = distortion_model_pipeline_def\n    \n-class TestDistortionModelPipelineDefJ(PipelineDefTester):\n-   pipeline_script = distortion_model_pipeline_script\n-   pipeline_def = distortion_model_pipeline_def_J\n-   \n-class TestDistortionModelPipelineDefH(PipelineDefTester):\n-   pipeline_script = distortion_model_pipeline_script\n-   pipeline_def = distortion_model_pipeline_def_H\n+\n \n \n \n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ]
                    ],
                    "NIR_IAL_Pipelines/tests/python/NIR_MasterDark_Pipeline_test.py": [
                        [
                            "@@ -33,9 +33,7 @@ from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n \n master_dark_package_def = getAuxiliaryPath('NIR_Pipelines/PackageDef_NIR.py')\n master_dark_pipeline_script = getAuxiliaryPath('NIR_Pipelines/NIR_MasterDark_Pipeline/PipScript_NIR_MasterDark.py')\n-master_dark_pipeline_def_Y = getAuxiliaryPath('NIR_Pipelines/NIR_MasterDark_Pipeline/PipDef_NIR_Y_MasterDark.xml')\n-master_dark_pipeline_def_J = getAuxiliaryPath('NIR_Pipelines/NIR_MasterDark_Pipeline/PipDef_NIR_J_MasterDark.xml')\n-master_dark_pipeline_def_H = getAuxiliaryPath('NIR_Pipelines/NIR_MasterDark_Pipeline/PipDef_NIR_H_MasterDark.xml')\n+master_dark_pipeline_def = getAuxiliaryPath('NIR_Pipelines/NIR_MasterDark_Pipeline/PipDef_NIR_MasterDark.xml')\n \n \n class TestMasterDarkPackageDef(PackageDefTester):\n@@ -47,15 +45,9 @@ class TestMasterDarkPipelineScript(PipelineScriptTester):\n \n class TestMasterDarkPipelineDefY(PipelineDefTester):\n    pipeline_script = master_dark_pipeline_script\n-   pipeline_def = master_dark_pipeline_def_Y\n-   \n-class TestMasterDarkPipelineDefJ(PipelineDefTester):\n-   pipeline_script = master_dark_pipeline_script\n-   pipeline_def = master_dark_pipeline_def_J\n-   \n-class TestMasterDarkPipelineDefH(PipelineDefTester):\n-   pipeline_script = master_dark_pipeline_script\n-   pipeline_def = master_dark_pipeline_def_H\n+   pipeline_def = master_dark_pipeline_def\n+\n+\n \n \n \n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ]
                    ],
                    "NIR_IAL_Pipelines/tests/python/NIR_MasterFlat_Pipeline_test.py": [
                        [
                            "@@ -33,9 +33,7 @@ from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n \n master_flat_package_def = getAuxiliaryPath('NIR_Pipelines/PackageDef_NIR.py')\n master_flat_pipeline_script = getAuxiliaryPath('NIR_Pipelines/NIR_MasterFlat_Pipeline/PipScript_NIR_MasterFlat.py')\n-master_flat_pipeline_def_Y = getAuxiliaryPath('NIR_Pipelines/NIR_MasterFlat_Pipeline/PipDef_NIR_Y_MasterFlat.xml')\n-master_flat_pipeline_def_J = getAuxiliaryPath('NIR_Pipelines/NIR_MasterFlat_Pipeline/PipDef_NIR_J_MasterFlat.xml')\n-master_flat_pipeline_def_H = getAuxiliaryPath('NIR_Pipelines/NIR_MasterFlat_Pipeline/PipDef_NIR_H_MasterFlat.xml')\n+master_flat_pipeline_def = getAuxiliaryPath('NIR_Pipelines/NIR_MasterFlat_Pipeline/PipDef_NIR_MasterFlat.xml')\n \n \n class TestMasterFlatPackageDef(PackageDefTester):\n@@ -47,15 +45,8 @@ class TestMasterFlatPipelineScript(PipelineScriptTester):\n \n class TestMasterFlatPipelineDefY(PipelineDefTester):\n    pipeline_script = master_flat_pipeline_script\n-   pipeline_def = master_flat_pipeline_def_Y\n-   \n-class TestMasterFlatPipelineDefJ(PipelineDefTester):\n-   pipeline_script = master_flat_pipeline_script\n-   pipeline_def = master_flat_pipeline_def_J\n-   \n-class TestMasterFlatPipelineDefH(PipelineDefTester):\n-   pipeline_script = master_flat_pipeline_script\n-   pipeline_def = master_flat_pipeline_def_H\n+   pipeline_def = master_flat_pipeline_def\n+\n \n \n \n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ]
                    ],
                    "NIR_IAL_Pipelines/tests/python/NIR_ProcessField_Background_test.py": [
                        [
                            "@@ -33,9 +33,8 @@ from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n \n process_field_package_def = getAuxiliaryPath('NIR_Pipelines/PackageDef_NIR.py')\n process_field_pipeline_script = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py')\n-process_field_pipeline_def_Y = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipDef_NIR_Y_ProcessField_Background.xml')\n-process_field_pipeline_def_J = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipDef_NIR_J_ProcessField_Background.xml')\n-process_field_pipeline_def_H = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipDef_NIR_H_ProcessField_Background.xml')\n+process_field_pipeline_def = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipDef_NIR_ProcessField_Background.xml')\n+\n \n \n class TestProcessFieldPackageDef(PackageDefTester):\n@@ -47,15 +46,9 @@ class TestProcessFieldPipelineScript(PipelineScriptTester):\n \n class TestProcessFieldPipelineDefY(PipelineDefTester):\n    pipeline_script = process_field_pipeline_script\n-   pipeline_def = process_field_pipeline_def_Y\n-   \n-class TestProcessFieldPipelineDefJ(PipelineDefTester):\n-   pipeline_script = process_field_pipeline_script\n-   pipeline_def = process_field_pipeline_def_J\n+   pipeline_def = process_field_pipeline_def\n    \n-class TestProcessFieldPipelineDefH(PipelineDefTester):\n-   pipeline_script = process_field_pipeline_script\n-   pipeline_def = process_field_pipeline_def_H\n+\n \n \n \n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -0,0 +1,61 @@\n+\n+#\n+# Copyright (C) 2012-2020 Euclid Science Ground Segment\n+#\n+# This library is free software; you can redistribute it and/or modify it under\n+# the terms of the GNU Lesser General Public License as published by the Free\n+# Software Foundation; either version 3.0 of the License, or (at your option)\n+# any later version.\n+#\n+# This library is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+# FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n+# details.\n+#\n+# You should have received a copy of the GNU Lesser General Public License\n+# along with this library; if not, write to the Free Software Foundation, Inc.,\n+# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+#\n+\n+\"\"\"\n+File: tests/python/NIR_ProcessField_Background_test.py\n+\n+Created on: 26/02/2021\n+Author: mfrailis\n+\"\"\"\n+\n+from ElementsKernel.Auxiliary import getAuxiliaryPath\n+\n+from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n+from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester\n+from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n+\n+\n+process_field_package_def = getAuxiliaryPath('NIR_Pipelines/PackageDef_NIR.py')\n+process_field_pipeline_script = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py')\n+process_field_pipeline_def_Y = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipDef_NIR_Y_ProcessField_Background.xml')\n+process_field_pipeline_def_J = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipDef_NIR_J_ProcessField_Background.xml')\n+process_field_pipeline_def_H = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipDef_NIR_H_ProcessField_Background.xml')\n+\n+\n+class TestProcessFieldPackageDef(PackageDefTester):\n+   package_def = process_field_package_def\n+\n+class TestProcessFieldPipelineScript(PipelineScriptTester):\n+   package_def = process_field_package_def\n+   pipeline_script = process_field_pipeline_script\n+\n+class TestProcessFieldPipelineDefY(PipelineDefTester):\n+   pipeline_script = process_field_pipeline_script\n+   pipeline_def = process_field_pipeline_def_Y\n+   \n+class TestProcessFieldPipelineDefJ(PipelineDefTester):\n+   pipeline_script = process_field_pipeline_script\n+   pipeline_def = process_field_pipeline_def_J\n+   \n+class TestProcessFieldPipelineDefH(PipelineDefTester):\n+   pipeline_script = process_field_pipeline_script\n+   pipeline_def = process_field_pipeline_def_H\n+\n+\n+\n",
                            "Merge branch 'mfrailis/single_ref_catalog' into 'develop'",
                            "Federico Rizzo",
                            "2022-08-25T13:02:38.000+00:00",
                            "b6d1c9dfc97e07ea9e27420c61b8dd50b403dd58"
                        ],
                        [
                            "@@ -0,0 +1,61 @@\n+\n+#\n+# Copyright (C) 2012-2020 Euclid Science Ground Segment\n+#\n+# This library is free software; you can redistribute it and/or modify it under\n+# the terms of the GNU Lesser General Public License as published by the Free\n+# Software Foundation; either version 3.0 of the License, or (at your option)\n+# any later version.\n+#\n+# This library is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+# FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n+# details.\n+#\n+# You should have received a copy of the GNU Lesser General Public License\n+# along with this library; if not, write to the Free Software Foundation, Inc.,\n+# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+#\n+\n+\"\"\"\n+File: tests/python/NIR_ProcessField_Background_test.py\n+\n+Created on: 26/02/2021\n+Author: mfrailis\n+\"\"\"\n+\n+from ElementsKernel.Auxiliary import getAuxiliaryPath\n+\n+from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n+from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester\n+from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n+\n+\n+process_field_package_def = getAuxiliaryPath('NIR_Pipelines/PackageDef_NIR.py')\n+process_field_pipeline_script = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py')\n+process_field_pipeline_def_Y = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipDef_NIR_Y_ProcessField_Background.xml')\n+process_field_pipeline_def_J = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipDef_NIR_J_ProcessField_Background.xml')\n+process_field_pipeline_def_H = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipDef_NIR_H_ProcessField_Background.xml')\n+\n+\n+class TestProcessFieldPackageDef(PackageDefTester):\n+   package_def = process_field_package_def\n+\n+class TestProcessFieldPipelineScript(PipelineScriptTester):\n+   package_def = process_field_package_def\n+   pipeline_script = process_field_pipeline_script\n+\n+class TestProcessFieldPipelineDefY(PipelineDefTester):\n+   pipeline_script = process_field_pipeline_script\n+   pipeline_def = process_field_pipeline_def_Y\n+   \n+class TestProcessFieldPipelineDefJ(PipelineDefTester):\n+   pipeline_script = process_field_pipeline_script\n+   pipeline_def = process_field_pipeline_def_J\n+   \n+class TestProcessFieldPipelineDefH(PipelineDefTester):\n+   pipeline_script = process_field_pipeline_script\n+   pipeline_def = process_field_pipeline_def_H\n+\n+\n+\n",
                            "Updating NIR_ProcessField_Background pipeline",
                            "Marco Frailis",
                            "2022-08-25T14:39:17.000+02:00",
                            "017aafd7c7da1bfd67eff9dbabbfa598c8c9494f"
                        ]
                    ],
                    "NIR_IAL_Pipelines/tests/python/NIR_ProcessField_Pipeline_test.py": [
                        [
                            "@@ -33,9 +33,7 @@ from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n \n process_field_package_def = getAuxiliaryPath('NIR_Pipelines/PackageDef_NIR.py')\n process_field_pipeline_script = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py')\n-process_field_pipeline_def_Y = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_Y_ProcessField.xml')\n-process_field_pipeline_def_J = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_J_ProcessField.xml')\n-process_field_pipeline_def_H = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_H_ProcessField.xml')\n+process_field_pipeline_def = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_ProcessField.xml')\n \n \n class TestProcessFieldPackageDef(PackageDefTester):\n@@ -45,17 +43,11 @@ class TestProcessFieldPipelineScript(PipelineScriptTester):\n    package_def = process_field_package_def\n    pipeline_script = process_field_pipeline_script\n \n-class TestProcessFieldPipelineDefY(PipelineDefTester):\n+class TestProcessFieldPipelineDef(PipelineDefTester):\n    pipeline_script = process_field_pipeline_script\n-   pipeline_def = process_field_pipeline_def_Y\n+   pipeline_def = process_field_pipeline_def\n    \n-class TestProcessFieldPipelineDefJ(PipelineDefTester):\n-   pipeline_script = process_field_pipeline_script\n-   pipeline_def = process_field_pipeline_def_J\n-   \n-class TestProcessFieldPipelineDefH(PipelineDefTester):\n-   pipeline_script = process_field_pipeline_script\n-   pipeline_def = process_field_pipeline_def_H\n+\n \n \n \n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ]
                    ],
                    "NIR_IAL_Pipelines/tests/python/NIR_ProcessField_SelfCal_test.py": [
                        [
                            "@@ -33,9 +33,7 @@ from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n \n selfCal_process_field_package_def = getAuxiliaryPath('NIR_Pipelines/PackageDef_NIR.py')\n selfCal_process_field_pipeline_script = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessFieldSelfCal.py')\n-selfCal_process_field_pipeline_def_Y = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_Y_ProcessFieldSelfCal.xml')\n-selfCal_process_field_pipeline_def_J = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_J_ProcessFieldSelfCal.xml')\n-selfCal_process_field_pipeline_def_H = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_H_ProcessFieldSelfCal.xml')\n+selfCal_process_field_pipeline_def = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_ProcessFieldSelfCal.xml')\n \n \n class TestProcessFieldPackageDef(PackageDefTester):\n@@ -47,15 +45,9 @@ class TestProcessFieldPipelineScript(PipelineScriptTester):\n \n class TestProcessFieldPipelineDefY(PipelineDefTester):\n    pipeline_script = selfCal_process_field_pipeline_script\n-   pipeline_def = selfCal_process_field_pipeline_def_Y\n-   \n-class TestProcessFieldPipelineDefJ(PipelineDefTester):\n-   pipeline_script = selfCal_process_field_pipeline_script\n-   pipeline_def = selfCal_process_field_pipeline_def_J\n-   \n-class TestProcessFieldPipelineDefH(PipelineDefTester):\n-   pipeline_script = selfCal_process_field_pipeline_script\n-   pipeline_def = selfCal_process_field_pipeline_def_H\n+   pipeline_def = selfCal_process_field_pipeline_def\n+\n+\n \n \n \n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -0,0 +1,61 @@\n+\n+#\n+# Copyright (C) 2012-2020 Euclid Science Ground Segment\n+#\n+# This library is free software; you can redistribute it and/or modify it under\n+# the terms of the GNU Lesser General Public License as published by the Free\n+# Software Foundation; either version 3.0 of the License, or (at your option)\n+# any later version.\n+#\n+# This library is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+# FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n+# details.\n+#\n+# You should have received a copy of the GNU Lesser General Public License\n+# along with this library; if not, write to the Free Software Foundation, Inc.,\n+# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+#\n+\n+\"\"\"\n+File: tests/python/NIR_ProcessField_Pipeline_test.py\n+\n+Created on: 26/02/2021\n+Author: mfrailis\n+\"\"\"\n+\n+from ElementsKernel.Auxiliary import getAuxiliaryPath\n+\n+from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n+from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester\n+from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n+\n+\n+selfCal_process_field_package_def = getAuxiliaryPath('NIR_Pipelines/PackageDef_NIR.py')\n+selfCal_process_field_pipeline_script = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessFieldSelfCal.py')\n+selfCal_process_field_pipeline_def_Y = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_Y_ProcessFieldSelfCal.xml')\n+selfCal_process_field_pipeline_def_J = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_J_ProcessFieldSelfCal.xml')\n+selfCal_process_field_pipeline_def_H = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_H_ProcessFieldSelfCal.xml')\n+\n+\n+class TestProcessFieldPackageDef(PackageDefTester):\n+   package_def = selfCal_process_field_package_def\n+\n+class TestProcessFieldPipelineScript(PipelineScriptTester):\n+   package_def = selfCal_process_field_package_def\n+   pipeline_script = selfCal_process_field_pipeline_script\n+\n+class TestProcessFieldPipelineDefY(PipelineDefTester):\n+   pipeline_script = selfCal_process_field_pipeline_script\n+   pipeline_def = selfCal_process_field_pipeline_def_Y\n+   \n+class TestProcessFieldPipelineDefJ(PipelineDefTester):\n+   pipeline_script = selfCal_process_field_pipeline_script\n+   pipeline_def = selfCal_process_field_pipeline_def_J\n+   \n+class TestProcessFieldPipelineDefH(PipelineDefTester):\n+   pipeline_script = selfCal_process_field_pipeline_script\n+   pipeline_def = selfCal_process_field_pipeline_def_H\n+\n+\n+\n",
                            "test new pipeline ProcessFieldSelfCal added",
                            "frizzo",
                            "2022-08-28T18:35:47.000+02:00",
                            "c63c8e704cf1538979c579052ce00307526c9878"
                        ]
                    ],
                    "NIR_IAL_Pipelines/tests/python/NIR_SelfCalib_Pipeline_test.py": [
                        [
                            "@@ -33,9 +33,7 @@ from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n \n self_calib_package_def = getAuxiliaryPath('NIR_Pipelines/PackageDef_NIR.py')\n self_calib_pipeline_script = getAuxiliaryPath('NIR_Pipelines/NIR_SelfCalib_Pipeline/PipScript_NIR_SelfCalib.py')\n-self_calib_pipeline_def_Y = getAuxiliaryPath('NIR_Pipelines/NIR_SelfCalib_Pipeline/PipDef_NIR_Y_SelfCalib.xml')\n-self_calib_pipeline_def_J = getAuxiliaryPath('NIR_Pipelines/NIR_SelfCalib_Pipeline/PipDef_NIR_J_SelfCalib.xml')\n-self_calib_pipeline_def_H = getAuxiliaryPath('NIR_Pipelines/NIR_SelfCalib_Pipeline/PipDef_NIR_H_SelfCalib.xml')\n+self_calib_pipeline_def = getAuxiliaryPath('NIR_Pipelines/NIR_SelfCalib_Pipeline/PipDef_NIR_SelfCalib.xml')\n \n \n class TestSelfCalibPackageDef(PackageDefTester):\n@@ -47,15 +45,9 @@ class TestSelfCalibPipelineScript(PipelineScriptTester):\n \n class TestSelfCalibPipelineDefY(PipelineDefTester):\n    pipeline_script = self_calib_pipeline_script\n-   pipeline_def = self_calib_pipeline_def_Y\n+   pipeline_def = self_calib_pipeline_def\n    \n-class TestSelfCalibPipelineDefJ(PipelineDefTester):\n-   pipeline_script = self_calib_pipeline_script\n-   pipeline_def = self_calib_pipeline_def_J\n-   \n-class TestSelfCalibPipelineDefH(PipelineDefTester):\n-   pipeline_script = self_calib_pipeline_script\n-   pipeline_def = self_calib_pipeline_def_H\n+\n \n \n \n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ]
                    ],
                    "README.md": [
                        [
                            "@@ -4,12 +4,19 @@\n \n Project containing the NIR IAL pipeline definitions, package definitions and pipeline scripts for the science and the calibration pipelines:\n \n+- **NIR_Baseline_Pipeline**: pipeline to be run for validation and checking purposes. It is dedicated\n+to CALBLOCK-PV-014 to generate the baseline map\n+- **NIR_BadPixel_Pipeline**: set of pipelines computing all bad pixels favours and generating a single\n+bad pixel mask which includes all flavours\n+- **NIR_NonLinearity_Pipeline**: calibration pipeline estimating a new non-linearity model from \n+dedicated NISP acquisitions performed in engineering mode\n - **NIR_MasterDark_Pipeline**: pipeline which requires in input a list of NIR raw dark frames and producing a master dark frame\n - **NIR_MasterFlat_Pipeline**: pipeline which requires in input a list of NIR raw flat frames and producing a master flat frame\n-- **NIR_SelfCalib_Pipeline**: reads a list of exposures in the Self-Calibration Field and estimate the large scale flat field corrections.\n-- **NIR_AbsolutePhotometry_Pipeline**: NIR calibration pipeline computes inverse values PHOTFNU, ZPAB, ZPVEGA along with their uncertainties\n - **NIR_DistortionModel_Pipeline**: pipeline which requires as input the self-calibration exposures, for just one filter, and producing a model of geometric distortions. This product is used as a pre-solution for the Astrometric calibration step in the NIR_ProcessField pipeline\n-- **NIR_Persistence_Pipeline**: TODO\n+- **NIR_SelfCalib_Pipeline**: reads a list of exposures in the Self-Calibration Field and estimate the large scale flat field corrections.\n+- **NIR_AbsolutePhotometry_Pipeline**: calibration pipeline which computes inverse values PHOTFNU, ZPAB, ZPVEGA along with their uncertainties\n+- **NIR_Persistence_Pipeline**: calibration pipeline which computes the persistence charge image of\n+each NISP exposure acquired\n - **NIR_ProcessField_Pipeline**: NIR operational scientific pipeline, processing an entire observation ID (4 dithers of a single filter)\n   and requiring the VIS stack catalog as input, in order to perform the astrometric calibration.\n   As output the pipeline produces NIR calibrated frames, the corresponding PSFs and background models and the corresponding calibrated catalogs, \n",
                            "Merge branch 'mfrailis/last_pv_updates' into 'develop'",
                            "Marco Frailis",
                            "2023-08-09T20:09:15.000+00:00",
                            "6f6eef17ab3969df5ef4681b67dcb815d0391b79"
                        ],
                        [
                            "@@ -1,5 +1,7 @@\n # NIR_IAL_Pipelines\n \n+[![pipeline status](https://gitlab.euclid-sgs.uk/PF-NIR/NIR_IAL_Pipelines/badges/develop/pipeline.svg)](https://gitlab.euclid-sgs.uk/PF-NIR/NIR_IAL_Pipelines/-/commits/develop)\n+\n Project containing the NIR IAL pipeline definitions, package definitions and pipeline scripts for the science and the calibration pipelines:\n \n - **NIR_MasterDark_Pipeline**: pipeline which requires in input a list of NIR raw dark frames and producing a master dark frame\n",
                            "Merge branch 'DM92_update' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-07-03T09:40:32.000+00:00",
                            "2071ea55716d41f9de141db558789bdee79cbbc1"
                        ],
                        [
                            "@@ -1,5 +1,7 @@\n # NIR_IAL_Pipelines\n \n+[![pipeline status](https://gitlab.euclid-sgs.uk/PF-NIR/NIR_IAL_Pipelines/badges/develop/pipeline.svg)](https://gitlab.euclid-sgs.uk/PF-NIR/NIR_IAL_Pipelines/-/commits/develop)\n+\n Project containing the NIR IAL pipeline definitions, package definitions and pipeline scripts for the science and the calibration pipelines:\n \n - **NIR_MasterDark_Pipeline**: pipeline which requires in input a list of NIR raw dark frames and producing a master dark frame\n",
                            "update to DM 9.2.0, Elements, jenkins, PipelineChecker. Adding CI file",
                            "Thomas Gasparetto",
                            "2023-07-03T09:40:32.000+00:00",
                            "c836a6652fe083eff2f72bdf00e1f1ab80dbc580"
                        ],
                        [
                            "@@ -6,11 +6,10 @@ Project containing the NIR IAL pipeline definitions, package definitions and pip\n - **NIR_MasterFlat_Pipeline**: pipeline which requires in input a list of NIR raw flat frames and producing a master flat frame\n - **NIR_SelfCalib_Pipeline**: reads a list of exposures in the Self-Calibration Field and estimate the large scale flat field corrections.\n - **NIR_AbsolutePhotometry_Pipeline**: NIR calibration pipeline computes inverse values PHOTFNU, ZPAB, ZPVEGA along with their uncertainties\n-- **NIR_DistortionModel_Pipeline**: TODO\n+- **NIR_DistortionModel_Pipeline**: pipeline which requires as input the self-calibration exposures, for just one filter, and producing a model of geometric distortions. This product is used as a pre-solution for the Astrometric calibration step in the NIR_ProcessField pipeline\n - **NIR_Persistence_Pipeline**: TODO\n - **NIR_ProcessField_Pipeline**: NIR operational scientific pipeline, processing an entire observation ID (4 dithers of a single filter)\n   and requiring the VIS stack catalog as input, in order to perform the astrometric calibration.\n   As output the pipeline produces NIR calibrated frames, the corresponding PSFs and background models and the corresponding calibrated catalogs, \n-  the stacked image and the corresponding PSF and extracted catalog. Among the input, this pipeline\n-- **NIR_ProcessField_TU_Pipeline**: NIR scientific pipeline, analogous to the NIR_ProcessField_Pipeline but requiring as input the \n-  SIM True Universe catalog instead of the VIS stack catalog\n+  the stacked image and the corresponding PSF and extracted catalog. Among the input, this pipeline.\n+\n",
                            "Updating readme",
                            "Marco Frailis",
                            "2022-08-25T15:51:03.000+00:00",
                            "f5b4e522b924ad74a4f27dffc69582957fb7ade5"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipDef_NIR_J_ProcessField_Background.xml": [
                        [
                            "@@ -1,193 +0,0 @@\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_J-PROCESSFIELD_BACKGROUND-CAT_DEV_2022.03.29</Id>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineScriptPath>NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n-    <InputDataSetPlan>\n-        <KeyProductInputDataPlan>\n-            <InputPortName>dithers</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>4</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>nirConfig</InputPortName>\n-            <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPH_Outfld_Teles_straylight*\"</FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>presolution</InputPortName>\n-            <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterdark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_J\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterflat</InputPortName>\n-            <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_J\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>largeflat</InputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_J\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>obsCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>refCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>detectorsPhotomOffsets</InputPortName>\n-            <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n-            <InputQuerySpecPlan>(detectorsPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (detectorsPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_J\") AND (detectorsPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-        <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>tilesPhotomOffsets</InputPortName>\n-            <DataProductType>DpdNirRelPhotoFieldCalibration</DataProductType>\n-            <InputQuerySpecPlan>(tilesPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tilesPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_J\") AND (tilesPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>absPhotoData</InputPortName>\n-            <DataProductType>DpdNirAbsPhotoCalibration</DataProductType>\n-            <InputQuerySpecPlan>(absPhotoData.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (absPhotoData.Data.Filter.Name.FilterName == \"NIR_J\")  AND (absPhotoData.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>relExposure</InputPortName>\n-            <DataProductType>DpdNirRelPhotoExpCalibration</DataProductType>\n-            <InputQuerySpecPlan>(relExposure.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (relExposure.Data.Filter.Name.FilterName == \"NIR_H\")  AND (relExposure.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-    </InputDataSetPlan> \n-    <OutputDataSet>\n-        <OutputDataProduct>\n-            <OutputPortName>stk_image_xml</OutputPortName>\n-            <DataProductType>DpdNirStackedFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>cal_images_xml</OutputPortName>\n-            <DataProductType>DpdNirCalibratedFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>stk_catalog_xml</OutputPortName>\n-            <DataProductType>DpdNirStackedFrameCatalog</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>cal_catalogs_xml</OutputPortName>\n-            <DataProductType>DpdNirCalibratedFrameCatalog</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n-</tsk1:PipelineDef>\n",
                            "Updating the ProcessField_Background pipeline definition",
                            "Marco Frailis",
                            "2023-08-09T20:02:48.000+00:00",
                            "df68a46abc3b52f0c6e2731c65697274ebb1a208"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_J-PROCESSFIELD_BACKGROUND-CAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -160,18 +150,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>stk_image_xml</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_J-PROCESSFIELD_BACKGROUND-CAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -160,18 +150,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>stk_image_xml</OutputPortName>\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ],
                        [
                            "@@ -7,12 +7,12 @@\n     xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n     <EdenVersion>Eden-3.0</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>PipDef_NIR_J-PROCESSFIELD_TU-CAT_DEV_2022.03.29</Id>\n+    <Id>PipDef_NIR_J-PROCESSFIELD_BACKGROUND-CAT_DEV_2022.03.29</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/PipScript_NIR_ProcessField_TU.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/</PipelineRootPath>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/</PipelineRootPath>\n     <InputDataSet>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n@@ -101,9 +101,19 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>sourceCatalog</InputPortName>\n+            <InputPortName>obsCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>refCatalog</InputPortName>\n+            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n+            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -153,7 +163,11 @@\n         <Dependencies>\n             <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n+                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n+            </LinkedBy>\n+            <LinkedBy refPort=\"dithers\">\n+                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>\n         </Dependencies>\n",
                            "Merge branch 'mfrailis/single_ref_catalog' into 'develop'",
                            "Federico Rizzo",
                            "2022-08-25T13:02:38.000+00:00",
                            "b6d1c9dfc97e07ea9e27420c61b8dd50b403dd58"
                        ],
                        [
                            "@@ -7,12 +7,12 @@\n     xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n     <EdenVersion>Eden-3.0</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>PipDef_NIR_J-PROCESSFIELD_TU-CAT_DEV_2022.03.29</Id>\n+    <Id>PipDef_NIR_J-PROCESSFIELD_BACKGROUND-CAT_DEV_2022.03.29</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/PipScript_NIR_ProcessField_TU.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/</PipelineRootPath>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/PipScript_NIR_ProcessField_Background.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Background_Pipeline/</PipelineRootPath>\n     <InputDataSet>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n@@ -101,9 +101,19 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>sourceCatalog</InputPortName>\n+            <InputPortName>obsCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>refCatalog</InputPortName>\n+            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n+            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -153,7 +163,11 @@\n         <Dependencies>\n             <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n+                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n+            </LinkedBy>\n+            <LinkedBy refPort=\"dithers\">\n+                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>\n         </Dependencies>\n",
                            "Updating NIR_ProcessField_Background pipeline",
                            "Marco Frailis",
                            "2022-08-25T14:39:17.000+02:00",
                            "017aafd7c7da1bfd67eff9dbabbfa598c8c9494f"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_SelfCalib_Pipeline/PipDef_NIR_J_SelfCalib.xml": [
                        [
                            "@@ -1,115 +0,0 @@\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-    <Id>PipDef_NIR_J-CALIB_LARGESCALEFLAT_DEV_2022.03.29</Id>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineScriptPath>NIR_SelfCalib_Pipeline/PipScript_NIR_SelfCalib.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n-    <InputDataSetPlan>\n-        <KeyProductInputDataPlan>\n-            <InputPortName>dithers</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"CALIB\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>4</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>nirConfig</InputPortName>\n-            <DataProductType>DpdNirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\"</FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>presolution</InputPortName>\n-            <DataProductType>DpdNirGeometricDistortions</DataProductType>\n-            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterdark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n-            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_J\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>masterflat</InputPortName>\n-            <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_J\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>sourceCatalog</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Data.Release==\"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-    </InputDataSetPlan> \n-    <OutputDataSet>\n-        <OutputDataProduct>\n-            <OutputPortName>largeflat</OutputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-        <OutputDataProduct>\n-            <OutputPortName>detcoeff</OutputPortName>\n-            <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n-</tsk1:PipelineDef>\n",
                            "First set of updates to the pipeline confgurations",
                            "Marco Frailis",
                            "2023-08-09T16:08:24.000+00:00",
                            "3b320c03b4e8940500253e078cb2afb087747ac4"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_J-CALIB_LARGESCALEFLAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_SelfCalib_Pipeline/PipScript_NIR_SelfCalib.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_SelfCalib_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_SelfCalib_Pipeline/PipScript_NIR_SelfCalib.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -93,21 +83,14 @@\n         <InputDataPlan>\n             <InputPortName>sourceCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != 'INVALID') AND (sourceCatalog.Data.Release==\"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Data.Release==\"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>largeflat</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_J-CALIB_LARGESCALEFLAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_SelfCalib_Pipeline/PipScript_NIR_SelfCalib.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_SelfCalib_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_SelfCalib_Pipeline/PipScript_NIR_SelfCalib.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -93,21 +83,14 @@\n         <InputDataPlan>\n             <InputPortName>sourceCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != 'INVALID') AND (sourceCatalog.Data.Release==\"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Data.Release==\"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>largeflat</OutputPortName>\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_Baseline_Pipeline/PipScript_NIR_Baseline.py": [
                        [
                            "@@ -0,0 +1,25 @@\n+from euclidwf.framework.workflow_dsl import pipeline, parallel\n+\n+from PackageDef_NIR import (\n+    runInitializeBaseline, makeBaseline)\n+\n+\n+@parallel(iterable=\"rawBaseline\")\n+def calibration(rawBaseline, mdb):\n+    step = runInitializeBaseline(infile=rawBaseline, mdbfile=mdb)\n+    return step\n+\n+\n+@pipeline(outputs=('outputs',))\n+def main(nirConfig, rawBaseline, mdb):\n+    calibrated = calibration(rawBaseline=rawBaseline, mdb=mdb)\n+    outputs = makeBaseline(darklist=calibrated, config=nirConfig)\n+    return outputs\n+\n+\n+if __name__ == '__main__':\n+    from euclidwf.framework.graph_builder import build_graph\n+    from euclidwf.utilities import visualizer\n+    pydron_graph=build_graph(main)\n+    print(str(pydron_graph))\n+    visualizer.visualize_graph(pydron_graph)\n",
                            "Merge branch 'add_baseline_pipeline' into 'develop'",
                            "Marco Frailis",
                            "2023-08-03T07:24:02.000+00:00",
                            "92a42a21a30cc50adf6e12d828f26b9455401e3c"
                        ],
                        [
                            "@@ -11,9 +11,9 @@ def calibration(rawBaseline, mdb):\n \n \n @pipeline(outputs=('outputs',))\n-def main(rawBaseline, mdb):\n+def main(nirConfig, rawBaseline, mdb):\n     calibrated = calibration(rawBaseline=rawBaseline, mdb=mdb)\n-    outputs = makeBaseline(darklist=calibrated)\n+    outputs = makeBaseline(darklist=calibrated, config=nirConfig)\n     return outputs\n \n \n",
                            "Fixing NIR_Baseline pipeline script",
                            "Marco Frailis",
                            "2023-08-03T09:09:14.000+02:00",
                            "92412e36057ba340a882fa3990da7d8199ad8653"
                        ],
                        [
                            "@@ -1,7 +1,7 @@\n from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n from PackageDef_NIR import (\n-    runInitializeBaseline, badPixMasking, crRejectionSF, makeBaseline)\n+    runInitializeBaseline, makeBaseline)\n \n \n @parallel(iterable=\"rawBaseline\")\n",
                            "update to baseline after INIT update",
                            "Thomas Gasparetto",
                            "2023-07-21T09:51:41.000+00:00",
                            "c7f79858ad4bd2775f00f9596b37644255c33300"
                        ],
                        [
                            "@@ -1,21 +1,19 @@\n from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n from PackageDef_NIR import (\n-    runInitializeBaseline, badPixMasking, crRejectionSF, makeBaselineStack)\n+    runInitializeBaseline, badPixMasking, crRejectionSF, makeBaseline)\n \n \n @parallel(iterable=\"rawBaseline\")\n-def calibration(rawBaseline, mdb, badpixel, nirconfig):\n+def calibration(rawBaseline, mdb):\n     step = runInitializeBaseline(infile=rawBaseline, mdbfile=mdb)\n-    step = badPixMasking(infile=step, xmlfile=badpixel)\n-    step = crRejectionSF(infile=step, config=nirconfig)\n     return step\n \n \n @pipeline(outputs=('outputs',))\n-def main(rawBaseline, mdb, nirConfig, badpixel):\n-    calibrated = calibration(rawBaseline=rawBaseline, mdb=mdb, badpixel=badpixel, nirconfig=nirConfig)\n-    outputs = makeBaseline(baselinelist=calibrated, config=nirConfig)\n+def main(rawBaseline, mdb):\n+    calibrated = calibration(rawBaseline=rawBaseline, mdb=mdb)\n+    outputs = makeBaseline(darklist=calibrated)\n     return outputs\n \n \n",
                            "removed useless steps in baseline pipeline. to be tested soon",
                            "Thomas Gasparetto",
                            "2023-07-20T16:23:54.000+02:00",
                            "c71c480afa86f9ff0ebc0d9c4190b3960fa281c1"
                        ],
                        [
                            "@@ -15,7 +15,7 @@ def calibration(rawBaseline, mdb, badpixel, nirconfig):\n @pipeline(outputs=('outputs',))\n def main(rawBaseline, mdb, nirConfig, badpixel):\n     calibrated = calibration(rawBaseline=rawBaseline, mdb=mdb, badpixel=badpixel, nirconfig=nirConfig)\n-    outputs = makeBaselineStack(baselinelist=calibrated, config=nirConfig)\n+    outputs = makeBaseline(baselinelist=calibrated, config=nirConfig)\n     return outputs\n \n \n",
                            "change name to makeBaseline",
                            "Thomas Gasparetto",
                            "2023-07-06T15:05:47.000+00:00",
                            "5bf8008f627ac24cdb85c4bd0707da08d6121ede"
                        ],
                        [
                            "@@ -0,0 +1,27 @@\n+from euclidwf.framework.workflow_dsl import pipeline, parallel\n+\n+from PackageDef_NIR import (\n+    runInitializeBaseline, badPixMasking, crRejectionSF, makeBaselineStack)\n+\n+\n+@parallel(iterable=\"rawBaseline\")\n+def calibration(rawBaseline, mdb, badpixel, nirconfig):\n+    step = runInitializeBaseline(infile=rawBaseline, mdbfile=mdb)\n+    step = badPixMasking(infile=step, xmlfile=badpixel)\n+    step = crRejectionSF(infile=step, config=nirconfig)\n+    return step\n+\n+\n+@pipeline(outputs=('outputs',))\n+def main(rawBaseline, mdb, nirConfig, badpixel):\n+    calibrated = calibration(rawBaseline=rawBaseline, mdb=mdb, badpixel=badpixel, nirconfig=nirConfig)\n+    outputs = makeBaselineStack(baselinelist=calibrated, config=nirConfig)\n+    return outputs\n+\n+\n+if __name__ == '__main__':\n+    from euclidwf.framework.graph_builder import build_graph\n+    from euclidwf.utilities import visualizer\n+    pydron_graph=build_graph(main)\n+    print(str(pydron_graph))\n+    visualizer.visualize_graph(pydron_graph)\n",
                            "added init and final task for Baseline. PipScript and PipDef for baseline",
                            "Thomas Gasparetto",
                            "2023-07-04T16:41:23.000+02:00",
                            "8ed228c41ddb9a901cca71ccb0fc1bb2af26fac3"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_Persistence_Pipeline/PipScript_NIR_Persistence.py": [
                        [
                            "@@ -28,7 +28,7 @@ def persistenceMaskList(targetexpolistxml, allexpolistfits, mdbxml):\n def nir_persistence(expolistxml, masklistxml,  mdbxml, badxml, config):\n     allexpolistfits = preprocessingList(expolistxml=expolistxml, mdbxml=mdbxml, badxml=badxml, config=config) # output = list of .fits\n     targetexpolistxml = selectExpos(expolist=expolistxml, masklist=masklistxml) # compare PTGID ? return json of xmls\n-    persistence_mask = persistenceMaskList(targetexpolistxml=targetexpolistxml, allexpolistfits=allexpolistfits, mdbxml=mdbxml) \n+    persistence_mask = persistenceMaskList(targetexpolistxml=targetexpolistxml, darkinput=allexpolistfits, mdbxml=mdbxml) \n     return persistence_mask #.json list of .xml\n \n if __name__ == '__main__':\n",
                            "Merge branch 'add_baseline_pipeline' into 'develop'",
                            "Marco Frailis",
                            "2023-08-03T07:24:02.000+00:00",
                            "92a42a21a30cc50adf6e12d828f26b9455401e3c"
                        ],
                        [
                            "@@ -24,12 +24,12 @@ def persistenceMaskList(targetexpolistxml, allexpolistfits, mdbxml):\n     return mask_xml #(.json list of xml files)\n \n \n-@pipeline(outputs=('persistence_xml'))\n+@pipeline(outputs=('persistence_mask'))\n def nir_persistence(expolistxml, masklistxml,  mdbxml, badxml, config):\n     allexpolistfits = preprocessingList(expolistxml=expolistxml, mdbxml=mdbxml, badxml=badxml, config=config) # output = list of .fits\n     targetexpolistxml = selectExpos(expolist=expolistxml, masklist=masklistxml) # compare PTGID ? return json of xmls\n-    masks = persistenceMaskList(targetexpolistxml=targetexpolistxml, allexpolistfits=allexpolistfits, mdbxml=mdbxml) \n-    return masks #.json list of .xml\n+    persistence_mask = persistenceMaskList(targetexpolistxml=targetexpolistxml, allexpolistfits=allexpolistfits, mdbxml=mdbxml) \n+    return persistence_mask #.json list of .xml\n \n if __name__ == '__main__':\n     from euclidwf.framework.graph_builder import build_graph\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -24,12 +24,12 @@ def persistenceMaskList(targetexpolistxml, allexpolistfits, mdbxml):\n     return mask_xml #(.json list of xml files)\n \n \n-@pipeline(outputs=('persistence_xml'))\n+@pipeline(outputs=('persistence_mask'))\n def nir_persistence(expolistxml, masklistxml,  mdbxml, badxml, config):\n     allexpolistfits = preprocessingList(expolistxml=expolistxml, mdbxml=mdbxml, badxml=badxml, config=config) # output = list of .fits\n     targetexpolistxml = selectExpos(expolist=expolistxml, masklist=masklistxml) # compare PTGID ? return json of xmls\n-    masks = persistenceMaskList(targetexpolistxml=targetexpolistxml, allexpolistfits=allexpolistfits, mdbxml=mdbxml) \n-    return masks #.json list of .xml\n+    persistence_mask = persistenceMaskList(targetexpolistxml=targetexpolistxml, allexpolistfits=allexpolistfits, mdbxml=mdbxml) \n+    return persistence_mask #.json list of .xml\n \n if __name__ == '__main__':\n     from euclidwf.framework.graph_builder import build_graph\n",
                            "fixing pipdef across all the projects. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:44.000+00:00",
                            "cc6b8029303139878e4280aa0f6c1dba75176b98"
                        ],
                        [
                            "@@ -2,27 +2,34 @@ from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n from PackageDef_NIR import (\n     runInitialize, badPixMasking, saturation, nonLinearity,\n-    persistenceMask, createPersistenceXml)\n-\n-@parallel(iterable='ditherExposure', flatten_all='True')\n-def nir_calib_dither(ditherExposure, mdb, badpixel,config):\n-    initExposure = runInitialize(infile=ditherExposure, mdbfile=mdb)\n-    badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n-    satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n-    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb, config=config)\n-    persistenceMaskFits = persistenceMask(infile=nonlinExposure)\n-    persistenceMaskXml = createPersistenceXml(persistence_mask=persistenceMaskFits)\n-    return persistenceMaskXml\n+    persistenceMask, createPersistenceXml, selectExpos)\n+\n+def preprocessing(expoxml, mdbxml, badxml, config):\n+    step = runInitialize( infile=expoxml, mdbfile=mdbxml)\n+    step = badPixMasking( infile=step,    xmlfile=badxml)\n+    step = saturation   ( infile=step,    xmlfile=mdbxml)\n+    step = nonLinearity ( infile=step,    xmlfile=mdbxml, config=config)\n+    return step #(fits)\n+\n+@parallel(iterable='expolistxml', flatten_all='True')\n+def preprocessingList(expolistxml, mdbxml, badxml, config):\n+    step = preprocessing(expolistxml, mdbxml, badxml, config)\n+    return step #(.json list of .fits)\n \n-@pipeline(outputs=('persistence_xml'))\n-def nir_persistence(dithers, mdb, badpixel,config):\n \n-    persistence_xml = nir_calib_dither(ditherExposure=dithers,\n-                                       mdb=mdb,\n-                                       badpixel=badpixel,\n-                                       config=config)\n+@parallel(iterable='targetexpolistxml', flatten_all='True')\n+def persistenceMaskList(targetexpolistxml, allexpolistfits, mdbxml):\n+    mask_fits = persistenceMask(infile=targetexpolistxml, prevlist=allexpolistfits, mdbxml=mdbxml) # persistence_mask.fits\n+    mask_xml  = createPersistenceXml(persistence_mask=mask_fits) # persistence_mask.xml\n+    return mask_xml #(.json list of xml files)\n \n-    return persistence_xml\n+\n+@pipeline(outputs=('persistence_xml'))\n+def nir_persistence(expolistxml, masklistxml,  mdbxml, badxml, config):\n+    allexpolistfits = preprocessingList(expolistxml=expolistxml, mdbxml=mdbxml, badxml=badxml, config=config) # output = list of .fits\n+    targetexpolistxml = selectExpos(expolist=expolistxml, masklist=masklistxml) # compare PTGID ? return json of xmls\n+    masks = persistenceMaskList(targetexpolistxml=targetexpolistxml, allexpolistfits=allexpolistfits, mdbxml=mdbxml) \n+    return masks #.json list of .xml\n \n if __name__ == '__main__':\n     from euclidwf.framework.graph_builder import build_graph\n@@ -30,3 +37,4 @@ if __name__ == '__main__':\n     pydron_graph=build_graph(nir_persistence)\n     print(str(pydron_graph))\n     visualizer.visualize_graph(pydron_graph)\n+\n",
                            "Merge branch 'persistence_pipeline' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-06-06T13:31:54.000+00:00",
                            "3c33960a4e37208f9e62ac0d6efafa8dc01e0e89"
                        ],
                        [
                            "@@ -2,27 +2,34 @@ from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n from PackageDef_NIR import (\n     runInitialize, badPixMasking, saturation, nonLinearity,\n-    persistenceMask, createPersistenceXml)\n-\n-@parallel(iterable='ditherExposure', flatten_all='True')\n-def nir_calib_dither(ditherExposure, mdb, badpixel,config):\n-    initExposure = runInitialize(infile=ditherExposure, mdbfile=mdb)\n-    badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n-    satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n-    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb, config=config)\n-    persistenceMaskFits = persistenceMask(infile=nonlinExposure)\n-    persistenceMaskXml = createPersistenceXml(persistence_mask=persistenceMaskFits)\n-    return persistenceMaskXml\n+    persistenceMask, createPersistenceXml, selectExpos)\n+\n+def preprocessing(expoxml, mdbxml, badxml, config):\n+    step = runInitialize( infile=expoxml, mdbfile=mdbxml)\n+    step = badPixMasking( infile=step,    xmlfile=badxml)\n+    step = saturation   ( infile=step,    xmlfile=mdbxml)\n+    step = nonLinearity ( infile=step,    xmlfile=mdbxml, config=config)\n+    return step #(fits)\n+\n+@parallel(iterable='expolistxml', flatten_all='True')\n+def preprocessingList(expolistxml, mdbxml, badxml, config):\n+    step = preprocessing(expolistxml, mdbxml, badxml, config)\n+    return step #(.json list of .fits)\n \n-@pipeline(outputs=('persistence_xml'))\n-def nir_persistence(dithers, mdb, badpixel,config):\n \n-    persistence_xml = nir_calib_dither(ditherExposure=dithers,\n-                                       mdb=mdb,\n-                                       badpixel=badpixel,\n-                                       config=config)\n+@parallel(iterable='targetexpolistxml', flatten_all='True')\n+def persistenceMaskList(targetexpolistxml, allexpolistfits, mdbxml):\n+    mask_fits = persistenceMask(infile=targetexpolistxml, prevlist=allexpolistfits, mdbxml=mdbxml) # persistence_mask.fits\n+    mask_xml  = createPersistenceXml(persistence_mask=mask_fits) # persistence_mask.xml\n+    return mask_xml #(.json list of xml files)\n \n-    return persistence_xml\n+\n+@pipeline(outputs=('persistence_xml'))\n+def nir_persistence(expolistxml, masklistxml,  mdbxml, badxml, config):\n+    allexpolistfits = preprocessingList(expolistxml=expolistxml, mdbxml=mdbxml, badxml=badxml, config=config) # output = list of .fits\n+    targetexpolistxml = selectExpos(expolist=expolistxml, masklist=masklistxml) # compare PTGID ? return json of xmls\n+    masks = persistenceMaskList(targetexpolistxml=targetexpolistxml, allexpolistfits=allexpolistfits, mdbxml=mdbxml) \n+    return masks #.json list of .xml\n \n if __name__ == '__main__':\n     from euclidwf.framework.graph_builder import build_graph\n@@ -30,3 +37,4 @@ if __name__ == '__main__':\n     pydron_graph=build_graph(nir_persistence)\n     print(str(pydron_graph))\n     visualizer.visualize_graph(pydron_graph)\n+\n",
                            "Persistence pipeline update",
                            "Thomas Gasparetto",
                            "2023-06-06T13:31:54.000+00:00",
                            "fed4493605efad0783166f0ebc97f09f106b8f4c"
                        ],
                        [
                            "@@ -5,21 +5,22 @@ from PackageDef_NIR import (\n     persistenceMask, createPersistenceXml)\n \n @parallel(iterable='ditherExposure', flatten_all='True')\n-def nir_calib_dither(ditherExposure, mdb, badpixel):\n+def nir_calib_dither(ditherExposure, mdb, badpixel,config):\n     initExposure = runInitialize(infile=ditherExposure, mdbfile=mdb)\n     badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n     satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n-    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb)\n+    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb, config=config)\n     persistenceMaskFits = persistenceMask(infile=nonlinExposure)\n     persistenceMaskXml = createPersistenceXml(persistence_mask=persistenceMaskFits)\n     return persistenceMaskXml\n \n @pipeline(outputs=('persistence_xml'))\n-def nir_persistence(dithers, mdb, badpixel):\n+def nir_persistence(dithers, mdb, badpixel,config):\n \n     persistence_xml = nir_calib_dither(ditherExposure=dithers,\n                                        mdb=mdb,\n-                                       badpixel=badpixel)\n+                                       badpixel=badpixel,\n+                                       config=config)\n \n     return persistence_xml\n \n",
                            "new config file input port for persistence pipeline due to NL update",
                            "Thomas Gasparetto",
                            "2023-05-04T10:11:27.000+00:00",
                            "677d6b3bd600c36920b491a6312bbf9481ecd4a4"
                        ]
                    ],
                    "Makefile": [
                        [
                            "@@ -44,170 +44,19 @@\n #\n ################################################################################\n \n-# settings\n-CMAKE := cmake\n-CTEST := ctest\n-NINJA := $(shell which ninja-build 2> /dev/null)\n-ifeq ($(NINJA),)\n-  NINJA := $(shell which ninja 2> /dev/null)\n-endif\n-\n-# Looking for the Custom make library\n-\n-CUSTOM_MAKE_LIB := Custom.mk\n-\n-ifneq ($(wildcard $(CURDIR)/make/$(CUSTOM_MAKE_LIB)),)\n-  CUSTOM_MAKE_LIB_FILE := $(CURDIR)/make/$(CUSTOM_MAKE_LIB)\n-else\n-  ifneq ($(CMAKE_PREFIX_PATH),)\n-    PREFIX_LIST := $(subst :, ,$(CMAKE_PREFIX_PATH))\n-    CUSTOM_MAKE_LIB_LIST := $(foreach dir,$(PREFIX_LIST),$(wildcard $(dir)/share/Elements/make/$(CUSTOM_MAKE_LIB) $(dir)/../make/$(CUSTOM_MAKE_LIB)))\n-  endif\n-  CUSTOM_MAKE_LIB_LIST += /usr/share/Elements/make/$(CUSTOM_MAKE_LIB)\n-  CUSTOM_MAKE_LIB_FILE := $(firstword $(CUSTOM_MAKE_LIB_LIST))\n-endif\n-\n-# Looking for the ToolChain\n-\n-TOOLCHAIN_NAME := ElementsToolChain.cmake\n+ELEMENTS_MAKE_LIB := Elements.mk\n \n-ifneq ($(wildcard $(CURDIR)/cmake/$(TOOLCHAIN_NAME)),)\n-  TOOLCHAIN_FILE := $(CURDIR)/cmake/$(TOOLCHAIN_NAME)\n+ifneq ($(wildcard $(CURDIR)/make/$(ELEMENTS_MAKE_LIB)),)\n+  ELEMENTS_MAKE_LIB_FILE := $(CURDIR)/make/$(ELEMENTS_MAKE_LIB)\n else\n   ifneq ($(CMAKE_PREFIX_PATH),)\n     PREFIX_LIST := $(subst :, ,$(CMAKE_PREFIX_PATH))\n-    TOOLCHAIN_LIST := $(foreach dir,$(PREFIX_LIST),$(wildcard $(dir)/lib*/cmake/ElementsProject/$(TOOLCHAIN_NAME) $(dir)/$(TOOLCHAIN_NAME)))\n-    TOOLCHAIN_FILE := $(firstword $(TOOLCHAIN_LIST))\n-  endif\n-endif\n-\n-override ALL_CMAKEFLAGS := -Wno-dev --no-warn-unused-cli\n-\n-ifneq ($(TOOLCHAIN_FILE),)\n-  # A toolchain has been found. Lets use it.\n-  override ALL_CMAKEFLAGS += -DCMAKE_TOOLCHAIN_FILE=$(TOOLCHAIN_FILE)\n-endif\n-\n-\n-BUILD_PREFIX_NAME := build\n-\n-override ALL_CMAKEFLAGS += -DUSE_LOCAL_INSTALLAREA=ON -DBUILD_PREFIX_NAME:STRING=$(BUILD_PREFIX_NAME)\n-override ALL_CMAKEFLAGS += -DUSE_VERSIONED_LIBRARIES=OFF\n-\n-ifndef BINARY_TAG\n-  ifdef CMAKECONFIG\n-    BINARY_TAG := ${CMAKECONFIG}\n-  else\n-    ifdef CMTCONFIG\n-      BINARY_TAG := ${CMTCONFIG}\n-    endif\n-  endif\n-endif\n-\n-ifdef BINARY_TAG\n-  BUILD_SUBDIR := $(BUILD_PREFIX_NAME).$(BINARY_TAG)\n-else\n-  BUILD_SUBDIR := $(BUILD_PREFIX_NAME)\n-endif\n-BUILDDIR := $(CURDIR)/$(BUILD_SUBDIR)\n-\n-# build tool\n-\n-ifneq ($(USE_NINJA),)\n-  # enable Ninja\n-  override ALL_CMAKEFLAGS += -GNinja\n-  BUILD_CONF_FILE := build.ninja\n-  BUILDFLAGS := $(NINJAFLAGS)\n-  ifneq ($(VERBOSE),)\n-    BUILDFLAGS := -v $(BUILDFLAGS)\n+    ELEMENTS_MAKE_LIB_LIST := $(foreach dir,$(PREFIX_LIST),$(wildcard $(dir)/share/Elements/make/$(ELEMENTS_MAKE_LIB) $(dir)/../make/$(ELEMENTS_MAKE_LIB)))\n   endif\n-else\n-  BUILD_CONF_FILE := Makefile\n-endif\n-BUILD_CMD := $(CMAKE) --build $(BUILD_SUBDIR) --target\n-\n-\n-# Use environment variable for extra flags\n-\n-# Replace the \":\" from eclipse variable list to spaces  \n-ifneq ($(EXPAND_FLAGS),)\n-  CMAKEFLAGS := $(subst :-, -,$(CMAKEFLAGS))\n-endif\n-\n-ifneq ($(CMAKEFLAGS),)\n-  override ALL_CMAKEFLAGS += $(CMAKEFLAGS)\n+  ELEMENTS_MAKE_LIB_LIST += /usr/share/Elements/make/$(ELEMENTS_MAKE_LIB)\n+  ELEMENTS_MAKE_LIB_FILE := $(firstword $(ELEMENTS_MAKE_LIB_LIST))\n endif\n \n-# default target\n-all:\n-\n-# deep clean\n-purge:\n-\t$(RM) -r $(BUILDDIR) $(CURDIR)/InstallArea/$(BINARY_TAG)\n-\tfind $(CURDIR) \"(\" -name \"InstallArea\" -prune -o -name \"*.pyc\" -o -name \"*.pyo\" \")\" -a -type f -exec $(RM) -v \\{} \\;\n-\tfind $(CURDIR) -depth -type d -name \"__pycache__\" -exec $(RM) -rv \\{} \\;\n-\n-# Remove all the possible directories and the whole InstallArea as well\n-mrproper:\n-\t$(RM) -r $(CURDIR)/build $(CURDIR)/build.* $(CURDIR)/InstallArea\n-\tfind $(CURDIR) \"(\" -name \"*.pyc\" -o -name \"*.pyo\" \")\" -a -type f -exec $(RM) -v \\{} \\;\n-\tfind $(CURDIR) -depth -type d -name \"__pycache__\" -exec $(RM) -rv \\{} \\;\n-\n-# delegate any target to the build directory (except 'purge')\n-ifneq ($(MAKECMDGOALS),purge)\n-ifneq ($(MAKECMDGOALS),mrproper)\n-%: $(BUILDDIR)/$(BUILD_CONF_FILE) FORCE\n-\t+$(BUILD_CMD) $* -- $(BUILDFLAGS)\n-endif\n-endif\n-\n-# aliases\n-.PHONY: configure tests FORCE\n-ifneq ($(wildcard $(BUILDDIR)/$(BUILD_CONF_FILE)),)\n-configure: rebuild_cache\n-else\n-configure: $(BUILDDIR)/$(BUILD_CONF_FILE)\n-endif\n-\t@ # do not delegate further\n-\n-\n-# This wrapping around the test target is used to ensure the generation of\n-# the XML output from ctest.\n-test: $(BUILDDIR)/$(BUILD_CONF_FILE)\n-\t$(RM) -r $(BUILDDIR)/Testing $(BUILDDIR)/html\n-\t-cd $(BUILDDIR) && $(CTEST) -T test $(ARGS)\n-\t+$(BUILD_CMD) JUnitSummary\n-\n-\n-# This target ensures that the \"all\" target is called before\n-# running the tests (unlike the \"test\" default target of CMake)\n-tests: all\n-\t$(RM) -r $(BUILDDIR)/Testing $(BUILDDIR)/html\n-\t-cd $(BUILDDIR) && $(CTEST) -T test $(ARGS)\n-\t+$(BUILD_CMD) JUnitSummary\n-\n-ifeq ($(VERBOSE),)\n-# less verbose install\n-# (emulate the default CMake install target)\n-install: all\n-\tcd $(BUILDDIR) && $(CMAKE) -P cmake_install.cmake | grep -v \"^-- Up-to-date:\"\n-endif\n-\n-# import the library to look for a custom Makefile\n--include $(CUSTOM_MAKE_LIB_FILE)\n-\n-# ensure that the target are always passed to the CMake Makefile\n-FORCE: ;\n-\n-# Makefiles are used as implicit targets in make, but we should not consider\n-# them for delegation.\n-$(MAKEFILE_LIST): ;\n-\n-\n-# trigger CMake configuration\n-$(BUILDDIR)/$(BUILD_CONF_FILE): | $(BUILDDIR)\n-\tcd $(BUILDDIR) && $(CMAKE) $(ALL_CMAKEFLAGS) $(CURDIR)\n-\n-$(BUILDDIR):\n-\tmkdir -p $(BUILDDIR)\n+$(info Using the $(ELEMENTS_MAKE_LIB_FILE) make library)\n+include $(ELEMENTS_MAKE_LIB_FILE)\n \n",
                            "updated MakeFile to be used in DM 9.2",
                            "Thomas Gasparetto",
                            "2023-07-04T12:38:37.000+02:00",
                            "3dd1b0c08f2f4b21aa1d2923e8ac798ab3bd0416"
                        ]
                    ],
                    ".gitlab-ci.yml": [
                        [
                            "@@ -0,0 +1,25 @@\n+image: lodeen:2.1.2\n+before_script:\n+     - source /cvmfs/euclid-dev.in2p3.fr/EDEN-3.1/bin/activate\n+\n+workflow:\n+  rules:\n+    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'\n+\n+variables:\n+  GIT_CLEAN_FLAGS: none\n+\n+stages:\n+     - build\n+     - test\n+\n+build:\n+    stage: build\n+    script:\n+     - make purge \n+     - make\n+\n+test:\n+    stage: test\n+    script:\n+     - make test ARGS=-VV\n",
                            "Merge branch 'DM92_update' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-07-03T09:40:32.000+00:00",
                            "2071ea55716d41f9de141db558789bdee79cbbc1"
                        ]
                    ],
                    ".jenkinsFile": [
                        [
                            "@@ -1,3 +1,3 @@\n #!groovy\n-@Library('integration-library@release-9') _\n-pipelineElements(artifactId:\"NIR_IAL_Pipelines\", component:'eden.3.0')\n+@Library(value='integration-library@release-10') _\n+pipelineElements(name:\"NIR_IAL_Pipelines\", component:'eden.3.1')\n",
                            "Merge branch 'DM92_update' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-07-03T09:40:32.000+00:00",
                            "2071ea55716d41f9de141db558789bdee79cbbc1"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_AbsolutePhotometry_Pipeline/PipDef_NIR_H_AbsolutePhotometry.xml": [
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_H-CALIB_ABSOLUTE-PHOTOMETRY_DEV_2022.03.29</Id> \n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_AbsolutePhotometry_Pipeline/PipScript_NIR_AbsolutePhotometry.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_AbsolutePhotometry_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_AbsolutePhotometry_Pipeline/PipScript_NIR_AbsolutePhotometry.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -103,7 +93,7 @@\n         <InputDataPlan>\n             <InputPortName>sourceCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != 'INVALID') AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -120,13 +110,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>abscal</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipDef_NIR_BadPixel.xml": [
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_CALIB_BADPIXEL_DEV_20210115</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_BadPixel.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_BadPixel_Pipeline/PipScript_NIR_BadPixel.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>inputdatalist</InputPortName>\n             <DataProductType>dpdNirBadPixelFlavorMask</DataProductType>\n@@ -36,7 +26,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-    </InputDataSet>\n+    </InputDataSetPlan>\n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>output</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -0,0 +1,51 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n+    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n+    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n+    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+    <EdenVersion>Eden-3.0</EdenVersion>\n+    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+    <Id>PipDef_NIR_CALIB_BADPIXEL_DEV_20210115</Id>\n+    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <PipelineContext>TEST_PV1</PipelineContext>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_BadPixel.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/</PipelineRootPath>\n+    <InputDataSet>\n+        <KeyProductInputDataPlan>\n+            <InputPortName>inputdatalist</InputPortName>\n+            <DataProductType>dpdNirBadPixelFlavorMask</DataProductType>\n+            <InputQuerySpecPlan>(inputdatalist.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (inputdatalist.Header.DataSetRelease == \"BPflavors_IPAC\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>112</Max>\n+            </Cardinality>\n+        </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>mdb</InputPortName>\n+            <DataProductType>DpdMdbDataBase</DataProductType>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <FileFiltering>\n+                 <FilesToInclude>\"NISPDetectorSlots*\", \"cds_noise_SCA*\"</FilesToInclude>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+    </InputDataSet>\n+    <OutputDataSet>\n+        <OutputDataProduct>\n+            <OutputPortName>output</OutputPortName>\n+            <DataProductType>dpdNirBadPixelMask</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+    </OutputDataSet>\n+</tsk1:PipelineDef>\n",
                            "Merge branch 'feature_BadPixMap' into 'develop'",
                            "Federico Rizzo",
                            "2023-02-28T08:54:45.000+00:00",
                            "a0a4304103636da871a1a3320b8a746fe4292bc5"
                        ],
                        [
                            "@@ -0,0 +1,51 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n+    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n+    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n+    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+    <EdenVersion>Eden-3.0</EdenVersion>\n+    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+    <Id>PipDef_NIR_CALIB_BADPIXEL_DEV_20210115</Id>\n+    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <PipelineContext>TEST_PV1</PipelineContext>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_BadPixel.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/</PipelineRootPath>\n+    <InputDataSet>\n+        <KeyProductInputDataPlan>\n+            <InputPortName>inputdatalist</InputPortName>\n+            <DataProductType>dpdNirBadPixelFlavorMask</DataProductType>\n+            <InputQuerySpecPlan>(inputdatalist.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (inputdatalist.Header.DataSetRelease == \"BPflavors_IPAC\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>112</Max>\n+            </Cardinality>\n+        </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>mdb</InputPortName>\n+            <DataProductType>DpdMdbDataBase</DataProductType>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <FileFiltering>\n+                 <FilesToInclude>\"NISPDetectorSlots*\", \"cds_noise_SCA*\"</FilesToInclude>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+    </InputDataSet>\n+    <OutputDataSet>\n+        <OutputDataProduct>\n+            <OutputPortName>output</OutputPortName>\n+            <DataProductType>dpdNirBadPixelMask</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+    </OutputDataSet>\n+</tsk1:PipelineDef>\n",
                            "BadPixelPipelines added",
                            "frizzo",
                            "2023-02-22T16:40:11.000+01:00",
                            "3762bdf8ac7f0e3dd8895eff8bb97fc138507622"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipDef_NIR_FindDeadPixels.xml": [
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_CALIB_DEADPIXEL_DEV_20210115</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindDeadPixels.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_BadPixel_Pipeline/PipScript_NIR_FindDeadPixels.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>exposurelist</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -46,7 +36,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-    </InputDataSet>\n+    </InputDataSetPlan>\n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>output</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -0,0 +1,61 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n+    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n+    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n+    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+    <EdenVersion>Eden-3.0</EdenVersion>\n+    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+    <Id>PipDef_NIR_CALIB_DEADPIXEL_DEV_20210115</Id>\n+    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <PipelineContext>TEST_PV1</PipelineContext>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindDeadPixels.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/</PipelineRootPath>\n+    <InputDataSet>\n+        <KeyProductInputDataPlan>\n+            <InputPortName>exposurelist</InputPortName>\n+            <DataProductType>DpdNispRawFrame</DataProductType>\n+            <InputQuerySpecPlan>(exposurelist.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (exposurelist.Header.DataSetRelease == \"TV1_BAD_PIXEL_LE1_NISP_PROC\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>12</Max>\n+            </Cardinality>\n+        </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>configfn</InputPortName>\n+            <DataProductType>DpdNirConfigurationSet</DataProductType>\n+            <InputQuerySpecPlan>configfn.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>mdb</InputPortName>\n+            <DataProductType>DpdMdbDataBase</DataProductType>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <FileFiltering>\n+                 <FilesToInclude>\"NISPDetectorSlots*\", \"NISPDisconectedPixelsFile*\"</FilesToInclude>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+    </InputDataSet>\n+    <OutputDataSet>\n+        <OutputDataProduct>\n+            <OutputPortName>output</OutputPortName>\n+            <DataProductType>dpdNirBadPixelFlavorMask</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+    </OutputDataSet>\n+</tsk1:PipelineDef>\n",
                            "Merge branch 'feature_BadPixMap' into 'develop'",
                            "Federico Rizzo",
                            "2023-02-28T08:54:45.000+00:00",
                            "a0a4304103636da871a1a3320b8a746fe4292bc5"
                        ],
                        [
                            "@@ -0,0 +1,61 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n+    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n+    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n+    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+    <EdenVersion>Eden-3.0</EdenVersion>\n+    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+    <Id>PipDef_NIR_CALIB_DEADPIXEL_DEV_20210115</Id>\n+    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <PipelineContext>TEST_PV1</PipelineContext>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindDeadPixels.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/</PipelineRootPath>\n+    <InputDataSet>\n+        <KeyProductInputDataPlan>\n+            <InputPortName>exposurelist</InputPortName>\n+            <DataProductType>DpdNispRawFrame</DataProductType>\n+            <InputQuerySpecPlan>(exposurelist.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (exposurelist.Header.DataSetRelease == \"TV1_BAD_PIXEL_LE1_NISP_PROC\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>12</Max>\n+            </Cardinality>\n+        </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>configfn</InputPortName>\n+            <DataProductType>DpdNirConfigurationSet</DataProductType>\n+            <InputQuerySpecPlan>configfn.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>mdb</InputPortName>\n+            <DataProductType>DpdMdbDataBase</DataProductType>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <FileFiltering>\n+                 <FilesToInclude>\"NISPDetectorSlots*\", \"NISPDisconectedPixelsFile*\"</FilesToInclude>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+    </InputDataSet>\n+    <OutputDataSet>\n+        <OutputDataProduct>\n+            <OutputPortName>output</OutputPortName>\n+            <DataProductType>dpdNirBadPixelFlavorMask</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+    </OutputDataSet>\n+</tsk1:PipelineDef>\n",
                            "BadPixelPipelines added",
                            "frizzo",
                            "2023-02-22T16:40:11.000+01:00",
                            "3762bdf8ac7f0e3dd8895eff8bb97fc138507622"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipDef_NIR_FindHighLowBaselinePixels.xml": [
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_CALIB_HIGHLOWBASEPIXEL_DEV_20210115</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindHighLowBaselinePixels.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_BadPixel_Pipeline/PipScript_NIR_FindHighLowBaselinePixels.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>mdb</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n@@ -36,7 +26,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-    </InputDataSet>\n+    </InputDataSetPlan>\n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>output</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -0,0 +1,51 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n+    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n+    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n+    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+    <EdenVersion>Eden-3.0</EdenVersion>\n+    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+    <Id>PipDef_NIR_CALIB_HIGHLOWBASEPIXEL_DEV_20210115</Id>\n+    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <PipelineContext>TEST_PV1</PipelineContext>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindHighLowBaselinePixels.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/</PipelineRootPath>\n+    <InputDataSet>\n+        <KeyProductInputDataPlan>\n+            <InputPortName>mdb</InputPortName>\n+            <DataProductType>DpdMdbDataBase</DataProductType>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <FileFiltering>\n+                 <FilesToInclude>\"NISPDetectorSlots*\", \"NISPDetectorBaselineFile*\", \"NISPDetectorDNL*\"</FilesToInclude>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>configfn</InputPortName>\n+            <DataProductType>DpdNirConfigurationSet</DataProductType>\n+            <InputQuerySpecPlan>configfn.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+    </InputDataSet>\n+    <OutputDataSet>\n+        <OutputDataProduct>\n+            <OutputPortName>output</OutputPortName>\n+            <DataProductType>dpdNirBadPixelFlavorMask</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+    </OutputDataSet>\n+</tsk1:PipelineDef>\n",
                            "Merge branch 'feature_BadPixMap' into 'develop'",
                            "Federico Rizzo",
                            "2023-02-28T08:54:45.000+00:00",
                            "a0a4304103636da871a1a3320b8a746fe4292bc5"
                        ],
                        [
                            "@@ -0,0 +1,51 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n+    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n+    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n+    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+    <EdenVersion>Eden-3.0</EdenVersion>\n+    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+    <Id>PipDef_NIR_CALIB_HIGHLOWBASEPIXEL_DEV_20210115</Id>\n+    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <PipelineContext>TEST_PV1</PipelineContext>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindHighLowBaselinePixels.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/</PipelineRootPath>\n+    <InputDataSet>\n+        <KeyProductInputDataPlan>\n+            <InputPortName>mdb</InputPortName>\n+            <DataProductType>DpdMdbDataBase</DataProductType>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <FileFiltering>\n+                 <FilesToInclude>\"NISPDetectorSlots*\", \"NISPDetectorBaselineFile*\", \"NISPDetectorDNL*\"</FilesToInclude>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>configfn</InputPortName>\n+            <DataProductType>DpdNirConfigurationSet</DataProductType>\n+            <InputQuerySpecPlan>configfn.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+    </InputDataSet>\n+    <OutputDataSet>\n+        <OutputDataProduct>\n+            <OutputPortName>output</OutputPortName>\n+            <DataProductType>dpdNirBadPixelFlavorMask</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+    </OutputDataSet>\n+</tsk1:PipelineDef>\n",
                            "BadPixelPipelines added",
                            "frizzo",
                            "2023-02-22T16:40:11.000+01:00",
                            "3762bdf8ac7f0e3dd8895eff8bb97fc138507622"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipDef_NIR_FindHotPixels.xml": [
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_CALIB_HOTPIXEL_DEV_20210115</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindHotPixels.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_BadPixel_Pipeline/PipScript_NIR_FindHotPixels.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>exposurelist</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -46,7 +36,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-    </InputDataSet>\n+    </InputDataSetPlan>\n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>output</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -0,0 +1,61 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n+    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n+    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n+    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+    <EdenVersion>Eden-3.0</EdenVersion>\n+    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+    <Id>PipDef_NIR_CALIB_HOTPIXEL_DEV_20210115</Id>\n+    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <PipelineContext>TEST_PV1</PipelineContext>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindHotPixels.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/</PipelineRootPath>\n+    <InputDataSet>\n+        <KeyProductInputDataPlan>\n+            <InputPortName>exposurelist</InputPortName>\n+            <DataProductType>DpdNispRawFrame</DataProductType>\n+            <InputQuerySpecPlan>(exposurelist.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (exposurelist.Header.DataSetRelease == \"TV1_BAD_PIXEL_LE1_NISP_PROC\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>12</Max>\n+            </Cardinality>\n+        </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>configfn</InputPortName>\n+            <DataProductType>DpdNirConfigurationSet</DataProductType>\n+            <InputQuerySpecPlan>configfn.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>mdb</InputPortName>\n+            <DataProductType>DpdMdbDataBase</DataProductType>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <FileFiltering>\n+                 <FilesToInclude>\"NISPDetectorSlots*\"</FilesToInclude>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+    </InputDataSet>\n+    <OutputDataSet>\n+        <OutputDataProduct>\n+            <OutputPortName>output</OutputPortName>\n+            <DataProductType>dpdNirBadPixelFlavorMask</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+    </OutputDataSet>\n+</tsk1:PipelineDef>\n",
                            "Merge branch 'feature_BadPixMap' into 'develop'",
                            "Federico Rizzo",
                            "2023-02-28T08:54:45.000+00:00",
                            "a0a4304103636da871a1a3320b8a746fe4292bc5"
                        ],
                        [
                            "@@ -0,0 +1,61 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n+    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n+    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n+    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+    <EdenVersion>Eden-3.0</EdenVersion>\n+    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+    <Id>PipDef_NIR_CALIB_HOTPIXEL_DEV_20210115</Id>\n+    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <PipelineContext>TEST_PV1</PipelineContext>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindHotPixels.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/</PipelineRootPath>\n+    <InputDataSet>\n+        <KeyProductInputDataPlan>\n+            <InputPortName>exposurelist</InputPortName>\n+            <DataProductType>DpdNispRawFrame</DataProductType>\n+            <InputQuerySpecPlan>(exposurelist.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (exposurelist.Header.DataSetRelease == \"TV1_BAD_PIXEL_LE1_NISP_PROC\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>12</Max>\n+            </Cardinality>\n+        </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>configfn</InputPortName>\n+            <DataProductType>DpdNirConfigurationSet</DataProductType>\n+            <InputQuerySpecPlan>configfn.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>mdb</InputPortName>\n+            <DataProductType>DpdMdbDataBase</DataProductType>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <FileFiltering>\n+                 <FilesToInclude>\"NISPDetectorSlots*\"</FilesToInclude>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+    </InputDataSet>\n+    <OutputDataSet>\n+        <OutputDataProduct>\n+            <OutputPortName>output</OutputPortName>\n+            <DataProductType>dpdNirBadPixelFlavorMask</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+    </OutputDataSet>\n+</tsk1:PipelineDef>\n",
                            "BadPixelPipelines added",
                            "frizzo",
                            "2023-02-22T16:40:11.000+01:00",
                            "3762bdf8ac7f0e3dd8895eff8bb97fc138507622"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipDef_NIR_FindLowQEPixels.xml": [
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_CALIB_LOWQEPIXEL_DEV_20210115</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindLowQEPixels.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_BadPixel_Pipeline/PipScript_NIR_FindLowQEPixels.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>mdb</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n@@ -36,7 +26,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-    </InputDataSet>\n+    </InputDataSetPlan>\n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>output</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -0,0 +1,51 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n+    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n+    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n+    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+    <EdenVersion>Eden-3.0</EdenVersion>\n+    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+    <Id>PipDef_NIR_CALIB_LOWQEPIXEL_DEV_20210115</Id>\n+    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <PipelineContext>TEST_PV1</PipelineContext>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindLowQEPixels.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/</PipelineRootPath>\n+    <InputDataSet>\n+        <KeyProductInputDataPlan>\n+            <InputPortName>mdb</InputPortName>\n+            <DataProductType>DpdMdbDataBase</DataProductType>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <FileFiltering>\n+                 <FilesToInclude>\"NISPDetectorSlots*\", \"NISPQEFile*\"</FilesToInclude>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>configfn</InputPortName>\n+            <DataProductType>DpdNirConfigurationSet</DataProductType>\n+            <InputQuerySpecPlan>configfn.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+    </InputDataSet>\n+    <OutputDataSet>\n+        <OutputDataProduct>\n+            <OutputPortName>output</OutputPortName>\n+            <DataProductType>dpdNirBadPixelFlavorMask</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+    </OutputDataSet>\n+</tsk1:PipelineDef>\n",
                            "Merge branch 'feature_BadPixMap' into 'develop'",
                            "Federico Rizzo",
                            "2023-02-28T08:54:45.000+00:00",
                            "a0a4304103636da871a1a3320b8a746fe4292bc5"
                        ],
                        [
                            "@@ -0,0 +1,51 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n+    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n+    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n+    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+    <EdenVersion>Eden-3.0</EdenVersion>\n+    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+    <Id>PipDef_NIR_CALIB_LOWQEPIXEL_DEV_20210115</Id>\n+    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <PipelineContext>TEST_PV1</PipelineContext>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindLowQEPixels.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/</PipelineRootPath>\n+    <InputDataSet>\n+        <KeyProductInputDataPlan>\n+            <InputPortName>mdb</InputPortName>\n+            <DataProductType>DpdMdbDataBase</DataProductType>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <FileFiltering>\n+                 <FilesToInclude>\"NISPDetectorSlots*\", \"NISPQEFile*\"</FilesToInclude>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>configfn</InputPortName>\n+            <DataProductType>DpdNirConfigurationSet</DataProductType>\n+            <InputQuerySpecPlan>configfn.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+    </InputDataSet>\n+    <OutputDataSet>\n+        <OutputDataProduct>\n+            <OutputPortName>output</OutputPortName>\n+            <DataProductType>dpdNirBadPixelFlavorMask</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+    </OutputDataSet>\n+</tsk1:PipelineDef>\n",
                            "BadPixelPipelines added",
                            "frizzo",
                            "2023-02-22T16:40:11.000+01:00",
                            "3762bdf8ac7f0e3dd8895eff8bb97fc138507622"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipDef_NIR_FindSuperQEPixels.xml": [
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_CALIB_SUPERQEPIXEL_DEV_20210115</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindSuperQEPixels.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_BadPixel_Pipeline/PipScript_NIR_FindSuperQEPixels.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>mdb</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n@@ -36,7 +26,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-    </InputDataSet>\n+    </InputDataSetPlan>\n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>output</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -0,0 +1,51 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n+    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n+    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n+    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+    <EdenVersion>Eden-3.0</EdenVersion>\n+    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+    <Id>PipDef_NIR_CALIB_SUPERQEPIXEL_DEV_20210115</Id>\n+    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <PipelineContext>TEST_PV1</PipelineContext>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindSuperQEPixels.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/</PipelineRootPath>\n+    <InputDataSet>\n+        <KeyProductInputDataPlan>\n+            <InputPortName>mdb</InputPortName>\n+            <DataProductType>DpdMdbDataBase</DataProductType>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <FileFiltering>\n+                 <FilesToInclude>\"NISPDetectorSlots*\", \"NISPDisconectedPixelsFile*\", \"NISPQEFile*\"</FilesToInclude>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>configfn</InputPortName>\n+            <DataProductType>DpdNirConfigurationSet</DataProductType>\n+            <InputQuerySpecPlan>configfn.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+    </InputDataSet>\n+    <OutputDataSet>\n+        <OutputDataProduct>\n+            <OutputPortName>output</OutputPortName>\n+            <DataProductType>dpdNirBadPixelFlavorMask</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+    </OutputDataSet>\n+</tsk1:PipelineDef>\n",
                            "Merge branch 'feature_BadPixMap' into 'develop'",
                            "Federico Rizzo",
                            "2023-02-28T08:54:45.000+00:00",
                            "a0a4304103636da871a1a3320b8a746fe4292bc5"
                        ],
                        [
                            "@@ -0,0 +1,51 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n+    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n+    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n+    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+    <EdenVersion>Eden-3.0</EdenVersion>\n+    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+    <Id>PipDef_NIR_CALIB_SUPERQEPIXEL_DEV_20210115</Id>\n+    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <PipelineContext>TEST_PV1</PipelineContext>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindSuperQEPixels.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/</PipelineRootPath>\n+    <InputDataSet>\n+        <KeyProductInputDataPlan>\n+            <InputPortName>mdb</InputPortName>\n+            <DataProductType>DpdMdbDataBase</DataProductType>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <FileFiltering>\n+                 <FilesToInclude>\"NISPDetectorSlots*\", \"NISPDisconectedPixelsFile*\", \"NISPQEFile*\"</FilesToInclude>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>configfn</InputPortName>\n+            <DataProductType>DpdNirConfigurationSet</DataProductType>\n+            <InputQuerySpecPlan>configfn.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+    </InputDataSet>\n+    <OutputDataSet>\n+        <OutputDataProduct>\n+            <OutputPortName>output</OutputPortName>\n+            <DataProductType>dpdNirBadPixelFlavorMask</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+    </OutputDataSet>\n+</tsk1:PipelineDef>\n",
                            "BadPixelPipelines added",
                            "frizzo",
                            "2023-02-22T16:40:11.000+01:00",
                            "3762bdf8ac7f0e3dd8895eff8bb97fc138507622"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipDef_NIR_FindZeroQEPixels.xml": [
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_CALIB_ZEROQEPIXEL_DEV_20210115</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindZeroQEPixels.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_BadPixel_Pipeline/PipScript_NIR_FindZeroQEPixels.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>mdb</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n@@ -36,7 +26,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-    </InputDataSet>\n+    </InputDataSetPlan>\n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>output</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -0,0 +1,51 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n+    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n+    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n+    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+    <EdenVersion>Eden-3.0</EdenVersion>\n+    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+    <Id>PipDef_NIR_CALIB_ZEROQEPIXEL_DEV_20210115</Id>\n+    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <PipelineContext>TEST_PV1</PipelineContext>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindZeroQEPixels.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/</PipelineRootPath>\n+    <InputDataSet>\n+        <KeyProductInputDataPlan>\n+            <InputPortName>mdb</InputPortName>\n+            <DataProductType>DpdMdbDataBase</DataProductType>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <FileFiltering>\n+                 <FilesToInclude>\"NISPDetectorSlots*\", \"NISPQEFile*\"</FilesToInclude>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>configfn</InputPortName>\n+            <DataProductType>DpdNirConfigurationSet</DataProductType>\n+            <InputQuerySpecPlan>configfn.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+    </InputDataSet>\n+    <OutputDataSet>\n+        <OutputDataProduct>\n+            <OutputPortName>output</OutputPortName>\n+            <DataProductType>dpdNirBadPixelFlavorMask</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+    </OutputDataSet>\n+</tsk1:PipelineDef>\n",
                            "Merge branch 'feature_BadPixMap' into 'develop'",
                            "Federico Rizzo",
                            "2023-02-28T08:54:45.000+00:00",
                            "a0a4304103636da871a1a3320b8a746fe4292bc5"
                        ],
                        [
                            "@@ -0,0 +1,51 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n+    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n+    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n+    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+    <EdenVersion>Eden-3.0</EdenVersion>\n+    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+    <Id>PipDef_NIR_CALIB_ZEROQEPIXEL_DEV_20210115</Id>\n+    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <PipelineContext>TEST_PV1</PipelineContext>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindZeroQEPixels.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/</PipelineRootPath>\n+    <InputDataSet>\n+        <KeyProductInputDataPlan>\n+            <InputPortName>mdb</InputPortName>\n+            <DataProductType>DpdMdbDataBase</DataProductType>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <FileFiltering>\n+                 <FilesToInclude>\"NISPDetectorSlots*\", \"NISPQEFile*\"</FilesToInclude>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>configfn</InputPortName>\n+            <DataProductType>DpdNirConfigurationSet</DataProductType>\n+            <InputQuerySpecPlan>configfn.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+    </InputDataSet>\n+    <OutputDataSet>\n+        <OutputDataProduct>\n+            <OutputPortName>output</OutputPortName>\n+            <DataProductType>dpdNirBadPixelFlavorMask</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+    </OutputDataSet>\n+</tsk1:PipelineDef>\n",
                            "BadPixelPipelines added",
                            "frizzo",
                            "2023-02-22T16:40:11.000+01:00",
                            "3762bdf8ac7f0e3dd8895eff8bb97fc138507622"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_DistortionModel_Pipeline/PipDef_NIR_J_DistortionModel.xml": [
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_J-DISTORSIONMODEL_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_DistortionModel_Pipeline/PipScript_NIR_DistortionModel.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_DistortionModel_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_DistortionModel_Pipeline/PipScript_NIR_DistortionModel.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -79,16 +69,6 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <InputDataPlan>\n-            <InputPortName>largeflat</InputPortName>\n-            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n-            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_J\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>badpixel</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n@@ -103,21 +83,14 @@\n         <InputDataPlan>\n             <InputPortName>sourceCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != 'INVALID') AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(sourceCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (sourceCatalog.Header.DataSetRelease==\"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == sourceCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>distortionmodel</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_MasterDark_Pipeline/PipDef_NIR_H_MasterDark.xml": [
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_H-CALIB_MASTERDARK_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_MasterDark_Pipeline/PipScript_NIR_MasterDark.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_MasterDark_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_MasterDark_Pipeline/PipScript_NIR_MasterDark.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>rawDarks</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -58,10 +48,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>rawDarks.Data.Instrument.InstrumentName.InstrumentName</GroupedBy>\n-        </Dependencies>\n-    </InputDataSet>\n+    </InputDataSetPlan>\n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>outputs</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_MasterFlat_Pipeline/PipDef_NIR_J_MasterFlat.xml": [
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_J-CALIB_MASTERFLAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_MasterFlat_Pipeline/PipScript_NIR_MasterFlat.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_MasterFlat_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_MasterFlat_Pipeline/PipScript_NIR_MasterFlat.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>rawflatproducts</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -69,10 +59,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>rawflatproducts.Data.Instrument.InstrumentName.InstrumentName</GroupedBy>\n-        </Dependencies>        \n-    </InputDataSet>\n+    </InputDataSetPlan>\n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>small_scale_flat</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_Nonlinearity_Pipeline/PipDef_NIR_H_Nonlinearity.xml": [
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_H-CALIB_NONLINEARITY_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_Nonlinearity_Pipeline/PipScript_NIR_Nonlinearity.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_Nonlinearity_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_Nonlinearity_Pipeline/PipScript_NIR_Nonlinearity.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>xmllistfile</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -37,10 +27,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>xmllistfile.Header.DataSetRelease</GroupedBy>\n-        </Dependencies>\n-    </InputDataSet>\n+    </InputDataSetPlan>\n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>nl_coef_xml</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_Nonlinearity_Pipeline/PipDef_NIR_J_Nonlinearity.xml": [
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_J-CALIB_NONLINEARITY_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_Nonlinearity_Pipeline/PipScript_NIR_Nonlinearity.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_Nonlinearity_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_Nonlinearity_Pipeline/PipScript_NIR_Nonlinearity.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>xmllistfile</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -37,10 +27,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>xmllistfile.Header.DataSetRelease</GroupedBy>\n-        </Dependencies>\n-    </InputDataSet>\n+    </InputDataSetPlan>\n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>nl_coef_xml</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_Nonlinearity_Pipeline/PipDef_NIR_SPETRO_Nonlinearity.xml": [
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_SPECTRO-CALIB_NONLINEARITY_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_Nonlinearity_Pipeline/PipScript_NIR_Nonlinearity.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_Nonlinearity_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_Nonlinearity_Pipeline/PipScript_NIR_Nonlinearity.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>xmllistfile</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -37,10 +27,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>xmllistfile.Header.DataSetRelease</GroupedBy>\n-        </Dependencies>\n-    </InputDataSet>\n+    </InputDataSetPlan>\n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>nl_coef_xml</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_Nonlinearity_Pipeline/PipDef_NIR_Y_Nonlinearity.xml": [
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_Y-CALIB_NONLINEARITY_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_Nonlinearity_Pipeline/PipScript_NIR_Nonlinearity.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_Nonlinearity_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_Nonlinearity_Pipeline/PipScript_NIR_Nonlinearity.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>xmllistfile</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -37,10 +27,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n          </InputDataPlan>\n-         <Dependencies>\n-             <GroupedBy>xmllistfile.Header.DataSetRelease</GroupedBy>\n-         </Dependencies>\n-     </InputDataSet>\n+     </InputDataSetPlan>\n      <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>nl_coef_xml</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_Persistence_Pipeline/PipDef_NIR_H_Persistence.xml": [
                        [
                            "@@ -1,30 +1,30 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_H-PERSISTENCE_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_Persistence_Pipeline/PipScript_NIR_Persistence.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_Persistence_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_Persistence_Pipeline/PipScript_NIR_Persistence.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n-            <InputPortName>dithers</InputPortName>\n+            <InputPortName>expolistxml</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(expolistxml.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (expolistxml.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (expolistxml.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (expolistxml.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (expolistxml.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(expolistxml.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (expolistxml.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (expolistxml.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (expolistxml.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>4</Max>\n             </Cardinality>\n         </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>masklistxml</InputPortName>\n+            <DataProductType>DpdNirPersistenceMask</DataProductType>\n+            <InputQuerySpecPlan>masklistxml.Data.ObservationDateTime.OBT == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>config</InputPortName>\n             <DataProductType>DpdNirConfigurationSet</DataProductType>\n@@ -36,11 +36,11 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n+            <InputPortName>mdbxml</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>mdbxml.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n             <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\"</FilesToInclude>\n+                <FilesToInclude>\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\"</FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -49,23 +49,20 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n+            <InputPortName>badxml</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badxml.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badxml.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.Instrument.InstrumentName.InstrumentName</GroupedBy>\n-        </Dependencies> \n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n-            <OutputPortName>persistence_xml</OutputPortName>\n+            <OutputPortName>persistence_mask</OutputPortName>\n             <DataProductType>DpdNirPersistenceMask</DataProductType>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -25,6 +25,16 @@\n                 <Max>4</Max>\n             </Cardinality>\n         </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>config</InputPortName>\n+            <DataProductType>DpdNirConfigurationSet</DataProductType>\n+            <InputQuerySpecPlan>config.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>mdb</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n",
                            "new config file input port for persistence pipeline due to NL update",
                            "Thomas Gasparetto",
                            "2023-05-04T10:11:27.000+00:00",
                            "677d6b3bd600c36920b491a6312bbf9481ecd4a4"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_Persistence_Pipeline/PipDef_NIR_J_Persistence.xml": [
                        [
                            "@@ -1,30 +1,30 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_J-PERSISTENCE_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_Persistence_Pipeline/PipScript_NIR_Persistence.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_Persistence_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_Persistence_Pipeline/PipScript_NIR_Persistence.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n-            <InputPortName>dithers</InputPortName>\n+            <InputPortName>expolistxml</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(expolistxml.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (expolistxml.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (expolistxml.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (expolistxml.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (expolistxml.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(expolistxml.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (expolistxml.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (expolistxml.Data.FilterWheelPos.FilterWheelPosition == \"J\") AND (expolistxml.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>4</Max>\n             </Cardinality>\n         </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>masklistxml</InputPortName>\n+            <DataProductType>DpdNirPersistenceMask</DataProductType>\n+            <InputQuerySpecPlan>masklistxml.Data.ObservationDateTime.OBT == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>config</InputPortName>\n             <DataProductType>DpdNirConfigurationSet</DataProductType>\n@@ -36,11 +36,11 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n+            <InputPortName>mdbxml</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>mdbxml.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n             <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\"</FilesToInclude>\n+                <FilesToInclude>\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\"</FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -49,23 +49,20 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n+            <InputPortName>badxml</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badxml.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badxml.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.Instrument.InstrumentName.InstrumentName</GroupedBy>\n-        </Dependencies>         \n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n-            <OutputPortName>persistence_xml</OutputPortName>\n+            <OutputPortName>persistence_mask</OutputPortName>\n             <DataProductType>DpdNirPersistenceMask</DataProductType>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -25,6 +25,16 @@\n                 <Max>4</Max>\n             </Cardinality>\n         </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>config</InputPortName>\n+            <DataProductType>DpdNirConfigurationSet</DataProductType>\n+            <InputQuerySpecPlan>config.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>mdb</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n",
                            "new config file input port for persistence pipeline due to NL update",
                            "Thomas Gasparetto",
                            "2023-05-04T10:11:27.000+00:00",
                            "677d6b3bd600c36920b491a6312bbf9481ecd4a4"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_Persistence_Pipeline/PipDef_NIR_Y_Persistence.xml": [
                        [
                            "@@ -1,30 +1,30 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_Y-PERSISTENCE_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_Persistence_Pipeline/PipScript_NIR_Persistence.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_Persistence_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_Persistence_Pipeline/PipScript_NIR_Persistence.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n-            <InputPortName>dithers</InputPortName>\n+            <InputPortName>expolistxml</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"Y\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"Y\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(expolistxml.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (expolistxml.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (expolistxml.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (expolistxml.Data.FilterWheelPos.FilterWheelPosition == \"Y\") AND (expolistxml.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(expolistxml.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (expolistxml.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (expolistxml.Data.FilterWheelPos.FilterWheelPosition == \"Y\") AND (expolistxml.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>4</Max>\n             </Cardinality>\n         </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>masklistxml</InputPortName>\n+            <DataProductType>DpdNirPersistenceMask</DataProductType>\n+            <InputQuerySpecPlan>masklistxml.Data.ObservationDateTime.OBT == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>config</InputPortName>\n             <DataProductType>DpdNirConfigurationSet</DataProductType>\n@@ -36,11 +36,11 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n+            <InputPortName>mdbxml</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>mdbxml.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n             <FileFiltering>\n-                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\"</FilesToInclude>\n+                <FilesToInclude>\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\"</FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -49,23 +49,20 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>badpixel</InputPortName>\n+            <InputPortName>badxml</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n-            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badxml.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badxml.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n-        </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.Instrument.InstrumentName.InstrumentName</GroupedBy>\n-        </Dependencies>         \n-    </InputDataSet> \n+        </InputDataPlan>      \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n-            <OutputPortName>persistence_xml</OutputPortName>\n+            <OutputPortName>persistence_mask</OutputPortName>\n             <DataProductType>DpdNirPersistenceMask</DataProductType>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -25,6 +25,16 @@\n                 <Max>4</Max>\n             </Cardinality>\n         </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>config</InputPortName>\n+            <DataProductType>DpdNirConfigurationSet</DataProductType>\n+            <InputQuerySpecPlan>config.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n         <InputDataPlan>\n             <InputPortName>mdb</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n",
                            "new config file input port for persistence pipeline due to NL update",
                            "Thomas Gasparetto",
                            "2023-05-04T10:11:27.000+00:00",
                            "677d6b3bd600c36920b491a6312bbf9481ecd4a4"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_H_ProcessField.xml": [
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_H-PROCESSFIELD_VIS-CAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -150,18 +140,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that VIS catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>            \n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>stk_image_xml</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -101,9 +101,9 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>viscatalog</InputPortName>\n+            <InputPortName>obsCatalog</InputPortName>\n             <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n-            <InputQuerySpecPlan>(viscatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (viscatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -111,9 +111,9 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>tucatalog</InputPortName>\n+            <InputPortName>refCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(tucatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tucatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -153,11 +153,11 @@\n         <Dependencies>\n             <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == viscatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that VIS catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == tucatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>            \n         </Dependencies>\n",
                            "Merge branch 'mfrailis/single_ref_catalog' into 'develop'",
                            "Federico Rizzo",
                            "2022-08-25T13:02:38.000+00:00",
                            "b6d1c9dfc97e07ea9e27420c61b8dd50b403dd58"
                        ],
                        [
                            "@@ -101,9 +101,9 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>viscatalog</InputPortName>\n+            <InputPortName>obsCatalog</InputPortName>\n             <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n-            <InputQuerySpecPlan>(viscatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (viscatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -111,9 +111,9 @@\n             </Cardinality>\n         </InputDataPlan>\n         <InputDataPlan>\n-            <InputPortName>tucatalog</InputPortName>\n+            <InputPortName>refCatalog</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>(tucatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tucatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -153,11 +153,11 @@\n         <Dependencies>\n             <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == viscatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that VIS catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>\n             <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == tucatalog.Data.ObservationId</Query>\n+                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n                 <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n             </LinkedBy>            \n         </Dependencies>\n",
                            "Removing NIR_ProcessField_TU workflow by simplifying the input ports of the Astrometric calibration and the Ghost masking steps. Now the NIR_ProcessField pipeline accepts both a VIS stack catalog or a TU catalog",
                            "Marco Frailis",
                            "2022-08-23T16:15:31.000+00:00",
                            "4ac0d3337800354945a5d027eb9f978289094cbe"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_H_ProcessFieldSelfCal.xml": [
                        [
                            "@@ -1,19 +1,9 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n-    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n-    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n-    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-    <EdenVersion>Eden-3.0</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n     <Id>PipDef_NIR_H-PROCESSFIELDSELFCAL_VIS-CAT_DEV_2022.03.29</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>TEST_PV1</PipelineContext>\n-    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessFieldSelfCal.py</PipelineScriptPath>\n-    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n-    <InputDataSet>\n+    <PipelineScriptPath>NIR_ProcessField_Pipeline/PipScript_NIR_ProcessFieldSelfCal.py</PipelineScriptPath>\n+    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/NIR_Pipelines/</PipelineRootPath>\n+    <InputDataSetPlan>\n         <KeyProductInputDataPlan>\n             <InputPortName>dithers</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n@@ -150,18 +140,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-        <Dependencies>\n-            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that VIS catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>\n-            <LinkedBy refPort=\"dithers\">\n-                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n-                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n-            </LinkedBy>            \n-        </Dependencies>\n-    </InputDataSet> \n+    </InputDataSetPlan> \n     <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>stk_image_xml</OutputPortName>\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ],
                        [
                            "@@ -0,0 +1,204 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<tsk1:PipelineDef xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n+    xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n+    xmlns:tsk=\"http://euclid.esa.org/schema/sys/tsk\"\n+    xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+    <EdenVersion>Eden-3.0</EdenVersion>\n+    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n+    <Id>PipDef_NIR_H-PROCESSFIELDSELFCAL_VIS-CAT_DEV_2022.03.29</Id>\n+    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n+    <PipelineContext>TEST_PV1</PipelineContext>\n+    <PipelineScriptPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessFieldSelfCal.py</PipelineScriptPath>\n+    <PipelineRootPath>/cvmfs/euclid-dev.in2p3.fr/CentOS7/EDEN-3.0/opt/euclid/NIR_IAL_Pipelines/@CMAKE_PROJECT_VERSION@/InstallArea/x86_64-conda_cos6-gcc73-o2g/auxdir/NIR_Pipelines/NIR_ProcessField_Pipeline/</PipelineRootPath>\n+    <InputDataSet>\n+        <KeyProductInputDataPlan>\n+            <InputPortName>dithers</InputPortName>\n+            <DataProductType>DpdNispRawFrame</DataProductType>\n+            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ObservationSequence.ObservationId == \"UNKNOWN\") AND (dithers.Data.ImgType.Category.ProductCategory == \"SCIENCE\") AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(dithers.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (dithers.Data.ImgSpatialFootprint.Polygon INTERSECT(UNKNOWN,UNKNOWN) POLYGON(UNKNOWN)) AND (dithers.Data.FilterWheelPos.FilterWheelPosition == \"H\") AND (dithers.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>4</Max>\n+            </Cardinality>\n+        </KeyProductInputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>nirConfig</InputPortName>\n+            <DataProductType>DpdNirConfigurationSet</DataProductType>\n+            <InputQuerySpecPlan>nirConfig.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>mdb</InputPortName>\n+            <DataProductType>DpdMdbDataBase</DataProductType>\n+            <InputQuerySpecPlan>mdb.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <FileFiltering>\n+                <FilesToInclude>\"EUC_NISP_H2RG-NONLINEARITY*\",\"EUC_NISP-P*\",\"EUC_NISP_Satu*\",\"EUC_NISP_SINGLE*\",\"EUC_NIR_DISTOR*\",\"NISP_Det_PSF*\",\"NISPH_Outfld_Teles_straylight*\"</FilesToInclude>\n+            </FileFiltering>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>presolution</InputPortName>\n+            <DataProductType>DpdNirGeometricDistortions</DataProductType>\n+            <InputQuerySpecPlan>presolution.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>OPTIONAL</Optionality>\n+                <Min>0</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>masterdark</InputPortName>\n+            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n+            <!--  MasterDark must have same exposure time for filter, we currently use filter to select, only one instance ingested  -->\n+            <InputQuerySpecPlan>(masterdark.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterdark.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterdark.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>masterflat</InputPortName>\n+            <DataProductType>DpdNirMasterFlatFrame</DataProductType>\n+            <InputQuerySpecPlan>(masterflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (masterflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (masterflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>largeflat</InputPortName>\n+            <DataProductType>DpdNirLargeFlatFrame</DataProductType>\n+            <InputQuerySpecPlan>(largeflat.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (largeflat.Data.Filter.Name.FilterName == \"NIR_H\") AND (largeflat.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>badpixel</InputPortName>\n+            <DataProductType>DpdNirBadPixelMask</DataProductType>\n+            <InputQuerySpecPlan>badpixel.Header.ProductId.ObjectId == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>badpixel.Header.DataSetRelease == \"UNKNOWN\"</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>obsCatalog</InputPortName>\n+            <DataProductType>DpdVisStackedFrameCatalog</DataProductType>\n+            <InputQuerySpecPlan>(obsCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (obsCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>refCatalog</InputPortName>\n+            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n+            <InputQuerySpecPlan>(refCatalog.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (refCatalog.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>        \n+        <InputDataPlan>\n+            <InputPortName>detectorsPhotomOffsets</InputPortName>\n+            <DataProductType>DpdNirRelPhotoDetCalibration</DataProductType>\n+            <InputQuerySpecPlan>(detectorsPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (detectorsPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_H\") AND (detectorsPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+        <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>tilesPhotomOffsets</InputPortName>\n+            <DataProductType>DpdNirRelPhotoFieldCalibration</DataProductType>\n+            <InputQuerySpecPlan>(tilesPhotomOffsets.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (tilesPhotomOffsets.Data.Filter.Name.FilterName == \"NIR_H\") AND (tilesPhotomOffsets.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <InputDataPlan>\n+            <InputPortName>absPhotoData</InputPortName>\n+            <DataProductType>DpdNirAbsPhotoCalibration</DataProductType>\n+            <InputQuerySpecPlan>(absPhotoData.Header.ManualValidationStatus.ManualValidationStatus != \"INVALID\") AND (absPhotoData.Data.Filter.Name.FilterName == \"NIR_H\")  AND (absPhotoData.Header.DataSetRelease == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+        <Dependencies>\n+            <GroupedBy>dithers.Data.ObservationSequence.ObservationId</GroupedBy>\n+            <LinkedBy refPort=\"dithers\">\n+                <Query>dithers.Data.ObservationSequence.ObservationId == obsCatalog.Data.ObservationId</Query>\n+                <!--  Ensures that VIS catalog refers to the same OBS_ID as the raw frame  -->\n+            </LinkedBy>\n+            <LinkedBy refPort=\"dithers\">\n+                <Query>dithers.Data.ObservationSequence.ObservationId == refCatalog.Data.ObservationId</Query>\n+                <!--  Ensures that TU catalog refers to the same OBS_ID as the raw frame  -->\n+            </LinkedBy>            \n+        </Dependencies>\n+    </InputDataSet> \n+    <OutputDataSet>\n+        <OutputDataProduct>\n+            <OutputPortName>stk_image_xml</OutputPortName>\n+            <DataProductType>DpdNirStackedFrame</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+        <OutputDataProduct>\n+            <OutputPortName>cal_images_xml</OutputPortName>\n+            <DataProductType>DpdNirCalibratedFrame</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+        <OutputDataProduct>\n+            <OutputPortName>stk_catalog_xml</OutputPortName>\n+            <DataProductType>DpdNirStackedFrameCatalog</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+        <OutputDataProduct>\n+            <OutputPortName>cal_catalogs_xml</OutputPortName>\n+            <DataProductType>DpdNirCalibratedFrameCatalog</DataProductType>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </OutputDataProduct>\n+    </OutputDataSet>\n+    <EstimatedWorkdirSizeGB>2</EstimatedWorkdirSizeGB>\n+</tsk1:PipelineDef>\n",
                            "update resources; new PipDefs for particular tasks",
                            "frizzo",
                            "2022-08-28T18:22:30.000+02:00",
                            "daa1bb97099babff7ff7ece5ed1667cff4733ec5"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_SelfCalib_Pipeline/PipScript_NIR_SelfCalib_WithPersistence.py": [
                        [
                            "@@ -0,0 +1,44 @@\n+\n+from euclidwf.framework.workflow_dsl import pipeline, parallel\n+\n+from PackageDef_NIR import (\n+    runInitialize, badPixMasking, saturation, nonLinearity, darkSubtract,\n+    smallFlatCorrect, doAstromSelfCal, makeSelfCalib, persistenceApply)\n+\n+@parallel(iterable=\"ditherExposure\")\n+def nir_calib_dither(ditherExposure, mdb, masterdark, masterflat, badpixel, config, masklist):\n+    initExposure = runInitialize(infile=ditherExposure, mdbfile=mdb)\n+    badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n+    satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n+    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb, config=config)\n+    persistenceExposure = persistenceApply(infile=nonlinExposure, masklist=masklist)\n+    darkExposure = darkSubtract(infile=persistenceExposure, masterdark=masterdark)\n+    flatExposure = smallFlatCorrect(infile=darkExposure, masterflat=masterflat)\n+    return flatExposure\n+\n+\n+@pipeline(outputs=('largeflat','detcoeff'))\n+def nir_selfcalib(nirConfig, dithers, mdb, masterdark, masterflat, badpixel,\n+                  sourceCatalog, presolution, masklist):\n+\n+    flats = nir_calib_dither(ditherExposure=dithers, mdb=mdb,\n+                             masterdark=masterdark, masterflat=masterflat, \n+                             badpixel=badpixel, config=nirConfig, masklist=masklist)\n+\n+    calibDithers_preLargeScale, astrometricCatalogs, fullcatalog = doAstromSelfCal(listofdithers=flats,\n+                                  ref_catalog=sourceCatalog,\n+                                  presolution=presolution,\n+                                  config=nirConfig)\n+\n+    largeflat, detcoeff = makeSelfCalib(inlist=astrometricCatalogs, mdbfile=mdb)\n+\n+    return largeflat,detcoeff\n+\n+\n+\n+if __name__ == '__main__':\n+    from euclidwf.framework.graph_builder import build_graph\n+    from euclidwf.utilities import visualizer\n+    pydron_graph=build_graph(nir_selfcalib)\n+    print(str(pydron_graph))\n+    visualizer.visualize_graph(pydron_graph)\n",
                            "fixing pipdef for Datamodel 9.1.5 Update. Unit Tests are passing now locally. Adding a PipScript of SelfCal with Persistence. Update to ports to Persistence PipScript ",
                            "Thomas Gasparetto",
                            "2023-06-21T15:34:45.000+00:00",
                            "ddfc0b575762b7fa7266553f7775d74f66d72692"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_MasterFlat_Pipeline/PipScript_NIR_MasterFlat.py": [
                        [
                            "@@ -6,12 +6,12 @@ from PackageDef_NIR import (\n \n \n @parallel(iterable=\"rawflatproducts\")\n-def calibration(rawflatproducts, mdbxml, badpixelsxml, masterdarkxml):\n+def calibration(rawflatproducts, mdbxml, badpixelsxml, masterdarkxml, config):\n \n     step = runInitialize(infile=rawflatproducts, mdbfile=mdbxml)\n     step = badPixMasking(infile=step, xmlfile=badpixelsxml)\n     step = saturation(infile=step, xmlfile=mdbxml)\n-    step = nonLinearity(infile=step, xmlfile=mdbxml)\n+    step = nonLinearity(infile=step, xmlfile=mdbxml, config=config)\n     step = darkSubtract(infile=step, masterdark=masterdarkxml)\n \n     return step\n@@ -24,7 +24,8 @@ def main(rawflatproducts, config, mdbxml, badpixelsxml, masterdarkxml):\n         rawflatproducts=rawflatproducts,\n         mdbxml=mdbxml,\n         badpixelsxml=badpixelsxml,\n-        masterdarkxml=masterdarkxml\n+        masterdarkxml=masterdarkxml,\n+        config=config\n     )\n \n     small_scale_flat = makeSmallScaleFlat(\n",
                            "Merge branch 'cycle18_dm91_fixes' into 'develop'",
                            "Thomas Gasparetto",
                            "2023-05-03T15:11:35.000+00:00",
                            "eb283372eb67490540acf763239f735251196af6"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_BadPixel.py": [
                        [
                            "@@ -0,0 +1,15 @@\n+from euclidwf.framework.workflow_dsl import pipeline, parallel\n+from PackageDef_NIR import makeNirBadPixelsMask\n+\n+@pipeline(outputs=('output',))\n+def main(mdb, inputdatalist):\n+    #make the final mask    \n+    output = makeNirBadPixelsMask(mdbfile=mdb, inputdatalist=inputdatalist)\n+    return output\n+\n+if __name__ == '__main__':\n+    from euclidwf.framework.graph_builder import build_graph\n+    from euclidwf.utilities import visualizer\n+    pydron_graph=build_graph(main)\n+    print(str(pydron_graph))\n+    visualizer.visualize_graph(pydron_graph)\n",
                            "Merge branch 'feature_BadPixMap' into 'develop'",
                            "Federico Rizzo",
                            "2023-02-28T08:54:45.000+00:00",
                            "a0a4304103636da871a1a3320b8a746fe4292bc5"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindDeadPixels.py": [
                        [
                            "@@ -0,0 +1,15 @@\n+from euclidwf.framework.workflow_dsl import pipeline\n+from PackageDef_NIR import findDeadPixels\n+\n+@pipeline(outputs=('outfile',))\n+def main(mdb, nirConfig, dithers):\n+    #make the final mask    \n+    outfile = findDeadPixels(mdbfile=mdb, config=nirConfig, exposurelist=dithers)\n+    return outfile\n+\n+if __name__ == '__main__':\n+    from euclidwf.framework.graph_builder import build_graph\n+    from euclidwf.utilities import visualizer\n+    pydron_graph=build_graph(main)\n+    print(str(pydron_graph))\n+    visualizer.visualize_graph(pydron_graph)\n",
                            "Merge branch 'feature_BadPixMap' into 'develop'",
                            "Federico Rizzo",
                            "2023-02-28T08:54:45.000+00:00",
                            "a0a4304103636da871a1a3320b8a746fe4292bc5"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindHighLowBaselinePixels.py": [
                        [
                            "@@ -0,0 +1,15 @@\n+from euclidwf.framework.workflow_dsl import pipeline\n+from PackageDef_NIR import findHighLowBaselinePixels\n+\n+@pipeline(outputs=('output',))\n+def main(mdb, nirConfig):\n+    #make the final mask    \n+    output = findHighLowBaselinePixels(mdbfile=mdb, config=nirConfig)\n+    return output\n+\n+if __name__ == '__main__':\n+    from euclidwf.framework.graph_builder import build_graph\n+    from euclidwf.utilities import visualizer\n+    pydron_graph=build_graph(main)\n+    print(str(pydron_graph))\n+    visualizer.visualize_graph(pydron_graph)\n",
                            "Merge branch 'feature_BadPixMap' into 'develop'",
                            "Federico Rizzo",
                            "2023-02-28T08:54:45.000+00:00",
                            "a0a4304103636da871a1a3320b8a746fe4292bc5"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindHotPixels.py": [
                        [
                            "@@ -0,0 +1,15 @@\n+from euclidwf.framework.workflow_dsl import pipeline\n+from PackageDef_NIR import findHotPixels\n+\n+@pipeline(outputs=('output',))\n+def main(mdb, nirConfig, dithers):\n+    #make the final mask    \n+    outputs = findHotPixels(mdbfile=mdb, config=nirConfig, exposurelist=dithers)\n+    return outputs\n+\n+if __name__ == '__main__':\n+    from euclidwf.framework.graph_builder import build_graph\n+    from euclidwf.utilities import visualizer\n+    pydron_graph=build_graph(main)\n+    print(str(pydron_graph))\n+    visualizer.visualize_graph(pydron_graph)\n",
                            "Merge branch 'feature_BadPixMap' into 'develop'",
                            "Federico Rizzo",
                            "2023-02-28T08:54:45.000+00:00",
                            "a0a4304103636da871a1a3320b8a746fe4292bc5"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindLowQEPixels.py": [
                        [
                            "@@ -0,0 +1,15 @@\n+from euclidwf.framework.workflow_dsl import pipeline\n+from PackageDef_NIR import findLowQEPixels\n+\n+@pipeline(outputs=('output',))\n+def main(mdb, nirConfig):\n+    #make the final mask    \n+    output = findLowQEPixels(mdbfile=mdb, config=nirConfig)\n+    return output\n+\n+if __name__ == '__main__':\n+    from euclidwf.framework.graph_builder import build_graph\n+    from euclidwf.utilities import visualizer\n+    pydron_graph=build_graph(main)\n+    print(str(pydron_graph))\n+    visualizer.visualize_graph(pydron_graph)\n",
                            "Merge branch 'feature_BadPixMap' into 'develop'",
                            "Federico Rizzo",
                            "2023-02-28T08:54:45.000+00:00",
                            "a0a4304103636da871a1a3320b8a746fe4292bc5"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindSuperQEPixels.py": [
                        [
                            "@@ -0,0 +1,15 @@\n+from euclidwf.framework.workflow_dsl import pipeline\n+from PackageDef_NIR import findSuperQEPixels\n+\n+@pipeline(outputs=('output',))\n+def main(mdb, nirConfig):\n+    #make the final mask    \n+    output = findSuperQEPixels(mdbfile=mdb, config=nirConfig)\n+    return output\n+\n+if __name__ == '__main__':\n+    from euclidwf.framework.graph_builder import build_graph\n+    from euclidwf.utilities import visualizer\n+    pydron_graph=build_graph(main)\n+    print(str(pydron_graph))\n+    visualizer.visualize_graph(pydron_graph)\n",
                            "Merge branch 'feature_BadPixMap' into 'develop'",
                            "Federico Rizzo",
                            "2023-02-28T08:54:45.000+00:00",
                            "a0a4304103636da871a1a3320b8a746fe4292bc5"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/PipScript_NIR_FindZeroQEPixels.py": [
                        [
                            "@@ -0,0 +1,15 @@\n+from euclidwf.framework.workflow_dsl import pipeline\n+from PackageDef_NIR import findZeroQEPixels\n+\n+@pipeline(outputs=('output',))\n+def main(mdb, nirConfig):\n+    #make the final mask    \n+    output = findZeroQEPixels(mdbfile=mdb, config=nirConfig)\n+    return output\n+\n+if __name__ == '__main__':\n+    from euclidwf.framework.graph_builder import build_graph\n+    from euclidwf.utilities import visualizer\n+    pydron_graph=build_graph(main)\n+    print(str(pydron_graph))\n+    visualizer.visualize_graph(pydron_graph)\n",
                            "Merge branch 'feature_BadPixMap' into 'develop'",
                            "Federico Rizzo",
                            "2023-02-28T08:54:45.000+00:00",
                            "a0a4304103636da871a1a3320b8a746fe4292bc5"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_BadPixel_Pipeline/__init__.py": [
                        [
                            "",
                            "Merge branch 'feature_BadPixMap' into 'develop'",
                            "Federico Rizzo",
                            "2023-02-28T08:54:45.000+00:00",
                            "a0a4304103636da871a1a3320b8a746fe4292bc5"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/PipScript_NIR_ProcessField_TU.py": [
                        [
                            "@@ -1,106 +0,0 @@\n-from euclidwf.framework.workflow_dsl import pipeline, parallel\n-\n-from PackageDef_NIR import (\n-        runInitialize, badPixMasking, saturation, nonLinearity, darkSubtract, \n-        backEstimate, smallFlatCorrect, largeFlatCorrect, psfForDither, \n-        relPhotoExp, relPhotoCalib, absPhotoCalib, doResampling, crRejectionMF,\n-        doStacking, psfForStack, catalogPhotDither, catalogPhotStack, \n-        extractLists2, createScientificDpds, crRejectionSF, doAstromProcessFieldTU, gsclMaskingProcessFieldTU)\n-\n-\n-@parallel(iterable='ditherExposure')\n-def nir_calib_dither(nirConfig, ditherExposure, mdb, masterdark, masterflat, largeflat, badpixel):\n-    initExposure = runInitialize(infile=ditherExposure, mdbfile=mdb)\n-    badPixelMasked = badPixMasking(infile=initExposure, xmlfile=badpixel)\n-    satExposure = saturation(infile=badPixelMasked, xmlfile=mdb)\n-    nonlinExposure = nonLinearity(infile=satExposure, xmlfile=mdb)\n-    darkExposure = darkSubtract(infile=nonlinExposure, masterdark=masterdark)\n-    crExposure = crRejectionSF(infile=darkExposure, config=nirConfig)\n-    smallflatExposure = smallFlatCorrect(infile=crExposure, masterflat=masterflat)\n-    largeflatExposure = largeFlatCorrect(infile=smallflatExposure, flat=largeflat)\n-    background = backEstimate(input=largeflatExposure)\n-    return largeflatExposure, background\n-\n-\n-@parallel(iterable=['infile', 'listofpsffiles'])\n-def p_photoCalib(infile, rel_cal_data, rel_exposure_xml, tilesPhotomOffsets, abs_cal_data, listofpsffiles, mdbfile, sourceCatalog):\n-    relcalibrated = relPhotoCalib(infile=infile,\n-                                  in_calibration_detectors=rel_cal_data,\n-                                  in_calibration_exposure=rel_exposure_xml,\n-                                  in_calibration_field=tilesPhotomOffsets)\n-    abscalibrated = absPhotoCalib(infile=relcalibrated, cal_data=abs_cal_data)\n-    gsclmasked = gsclMaskingProcessFieldTU(infile=abscalibrated, mdbxml=mdbfile, SIM_catalog=sourceCatalog)\n-    catalog = catalogPhotDither(infile=gsclmasked, listofpsffiles=listofpsffiles)\n-    return gsclmasked, catalog\n-\n-\n-@pipeline(outputs=('cal_images_xml', 'cal_catalogs_xml', 'stk_image_xml', 'stk_catalog_xml'))\n-def nir_pipeline(nirConfig, dithers, mdb, masterdark, masterflat, largeflat, badpixel,\n-                 sourceCatalog, presolution, detectorsPhotomOffsets, absPhotoData, tilesPhotomOffsets):\n-\n-    tmp = nir_calib_dither(nirConfig=nirConfig,\n-                           ditherExposure=dithers,\n-                           mdb=mdb,\n-                           badpixel=badpixel, masterdark=masterdark,\n-                           masterflat=masterflat, largeflat=largeflat)\n-\n-    pre_processed, background = extractLists2(inlist=tmp)\n-\n-    listofpsflists_dither = psfForDither(listofimages=pre_processed,\n-                                         mdbfile=mdb, cal_data=absPhotoData,\n-                                         config=nirConfig)\n-\n-    astromCalibDithers, fullcatalog = doAstromProcessFieldTU(listofdithers=pre_processed,\n-                                                             listofpsflists=listofpsflists_dither,\n-                                                             SIM_catalog=sourceCatalog,\n-                                                             presolution=presolution,\n-                                                             config=nirConfig)\n-\n-    rel_exposure_xml = relPhotoExp(in_full_catalog=fullcatalog,\n-                                   in_calibration_detectors=detectorsPhotomOffsets)\n-\n-    tmp = p_photoCalib(infile=astromCalibDithers,\n-                       rel_cal_data=detectorsPhotomOffsets,\n-                       rel_exposure_xml=rel_exposure_xml,\n-                       tilesPhotomOffsets=tilesPhotomOffsets,\n-                       abs_cal_data=absPhotoData,\n-                       listofpsffiles=listofpsflists_dither,\n-                       mdbfile=mdb,\n-                       sourceCatalog=sourceCatalog)\n-\n-    gsclmasked, catalog = extractLists2(inlist=tmp)\n-\n-    resampled = doResampling(listofcaldithers=gsclmasked,\n-                             listofbackgrounds=background,\n-                             config=nirConfig)\n-\n-    resampledCRFlagged = crRejectionMF(dith_file=resampled)\n-\n-    stackedImage = doStacking(listofresampled=resampledCRFlagged,\n-                              config=nirConfig)\n-\n-    listofpsflists_stacked = psfForStack(listofimages=stackedImage,\n-                                         mdbfile=mdb, cal_data=absPhotoData,\n-                                         config=nirConfig)\n-\n-    catalogStack = catalogPhotStack(infile=stackedImage,\n-                                    listofpsflists=listofpsflists_stacked)\n-\n-    cal_images_xml, cal_catalogs_xml, stk_image_xml, stk_catalog_xml = \\\n-        createScientificDpds(cal_images=gsclmasked,\n-                             cal_background=background,\n-                             cal_psf=listofpsflists_dither,\n-                             cal_catalogs=catalog,\n-                             stk_image=stackedImage,\n-                             stk_psf=listofpsflists_stacked,\n-                             stk_catalog=catalogStack)\n-\n-    return cal_images_xml, cal_catalogs_xml, stk_image_xml, stk_catalog_xml\n-\n-\n-if __name__ == '__main__':\n-    from euclidwf.framework.graph_builder import build_graph\n-    from euclidwf.utilities import visualizer\n-    pydron_graph=build_graph(nir_pipeline)\n-    print(str(pydron_graph))\n-    visualizer.visualize_graph(pydron_graph)\n",
                            "Merge branch 'mfrailis/single_ref_catalog' into 'develop'",
                            "Federico Rizzo",
                            "2022-08-25T13:02:38.000+00:00",
                            "b6d1c9dfc97e07ea9e27420c61b8dd50b403dd58"
                        ]
                    ],
                    "NIR_IAL_Pipelines/auxdir/NIR_Pipelines/NIR_ProcessField_TU_Pipeline/__init__.py": [
                        [
                            "",
                            "Merge branch 'mfrailis/single_ref_catalog' into 'develop'",
                            "Federico Rizzo",
                            "2022-08-25T13:02:38.000+00:00",
                            "b6d1c9dfc97e07ea9e27420c61b8dd50b403dd58"
                        ]
                    ],
                    "NIR_IAL_Pipelines/tests/python/NIR_ProcessField_TU_Pipeline_test.py": [
                        [
                            "@@ -32,10 +32,10 @@ from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n \n \n process_field_package_def = getAuxiliaryPath('NIR_Pipelines/PackageDef_NIR.py')\n-process_field_pipeline_script = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_TU_Pipeline/PipScript_NIR_ProcessField_TU.py')\n-process_field_pipeline_def_Y = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_TU_Pipeline/PipDef_NIR_Y_ProcessField_TU.xml')\n-process_field_pipeline_def_J = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_TU_Pipeline/PipDef_NIR_J_ProcessField_TU.xml')\n-process_field_pipeline_def_H = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_TU_Pipeline/PipDef_NIR_H_ProcessField_TU.xml')\n+process_field_pipeline_script = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Pipeline/PipScript_NIR_ProcessField.py')\n+process_field_pipeline_def_Y = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_Y_ProcessField_TU.xml')\n+process_field_pipeline_def_J = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_J_ProcessField_TU.xml')\n+process_field_pipeline_def_H = getAuxiliaryPath('NIR_Pipelines/NIR_ProcessField_Pipeline/PipDef_NIR_H_ProcessField_TU.xml')\n \n \n class TestProcessFieldPackageDef(PackageDefTester):\n",
                            "Merge branch 'mfrailis/single_ref_catalog' into 'develop'",
                            "Federico Rizzo",
                            "2022-08-25T13:02:38.000+00:00",
                            "b6d1c9dfc97e07ea9e27420c61b8dd50b403dd58"
                        ]
                    ]
                },
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": [
                    {
                        "name": "1.5.1",
                        "created_at": "2022-03-18T09:14:13.000+01:00",
                        "author_name": "Marco Frailis"
                    },
                    {
                        "name": "2.1.1",
                        "created_at": "2022-09-02T16:43:21.000+02:00",
                        "author_name": "frizzo"
                    },
                    {
                        "name": "2.2.0",
                        "created_at": "2023-06-26T19:09:18.000+02:00",
                        "author_name": "Thomas Gasparetto"
                    },
                    {
                        "name": "2.3.1",
                        "created_at": "2023-08-09T21:58:44.000+00:00",
                        "author_name": "Marco Frailis"
                    },
                    {
                        "name": "2.4.0",
                        "created_at": "2023-08-17T21:34:04.000+00:00",
                        "author_name": "Marco Frailis"
                    },
                    {
                        "name": "2.4.1",
                        "created_at": "2023-08-22T16:51:07.000+02:00",
                        "author_name": "Marco Frailis"
                    }
                ]
            }
        }
    }
}