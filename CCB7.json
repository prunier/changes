{
    "LE2": {
        "PF-SIR": {
            "PF-SIR/gsutils": {
                "start date": "2023-06-09 09:00",
                "end date": "2023-08-16 15:00",
                "start tag": "-",
                "end tag": "-",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-SIR/data-product-doc": {
                "start date": "2023-06-09 09:00",
                "end date": "2023-08-16 15:00",
                "start tag": "> v1.0",
                "end tag": "> v1.0",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": [
                    {
                        "name": "v1.0",
                        "created_at": "2022-10-05T22:55:45.000+00:00",
                        "author_name": "Herve Aussel"
                    }
                ]
            },
            "PF-SIR/SIR_CalibrationFiles": {
                "start date": "2023-06-09 09:00",
                "end date": "2023-08-16 15:00",
                "start tag": "> DM9_PV2_TIPS_007",
                "end tag": "> DM9.2_PVRH2_REAL_001",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": [
                    {
                        "name": "DM9_PV2_TIPS_007",
                        "created_at": "2023-05-19T14:11:37.000+00:00",
                        "author_name": "Marco Fumana"
                    },
                    {
                        "name": "DM9.2_PVRH2_REAL_001",
                        "created_at": "2023-07-24T07:56:17.000+00:00",
                        "author_name": "mfumana"
                    }
                ]
            },
            "PF-SIR/SIR_DQC_Pipeline": {
                "start date": "2023-06-09 09:00",
                "end date": "2023-08-16 15:00",
                "start tag": "-",
                "end tag": "-",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-SIR/SIR_Utilities": {
                "start date": "2023-06-09 09:00",
                "end date": "2023-08-16 15:00",
                "start tag": "-",
                "end tag": "-",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-SIR/SIR_IAL_Pipelines": {
                "start date": "2023-06-09 09:00",
                "end date": "2023-08-16 15:00",
                "start tag": "> 3.1.2",
                "end tag": "> 3.1.2",
                "count_files_modified": "79",
                "modifications_by_file": {
                    "CMakeLists.txt": [
                        [
                            "@@ -11,8 +11,8 @@ set(EDEN \"EDEN-3.1\")\n set(EDENUP \"EDEN-3.1\")\n \n \n-elements_project(SIR_IAL_Pipelines 4.0.0 USE Elements 6.2.1\n+elements_project(SIR_IAL_Pipelines 4.1 USE Elements 6.2.1\n                                            ST_DataModel 9.2.0\n-                                           SIR_Pipeline 4.0.0\n-                                           SIR_Calibration 4.0.0\n+                                           SIR_Pipeline 4.1\n+                                           SIR_Calibration 4.1\n                                            ST_PipelineChecker 1.5.0)\n",
                            "bump to 4.1",
                            "Tava",
                            "2023-08-14T08:16:28.000+02:00",
                            "56a70aefc9fdf0dab213fde23038ce284364fe84"
                        ],
                        [
                            "@@ -11,8 +11,8 @@ set(EDEN \"EDEN-3.1\")\n set(EDENUP \"EDEN-3.1\")\n \n \n-elements_project(SIR_IAL_Pipelines 4.1 USE Elements 6.2.1\n+elements_project(SIR_IAL_Pipelines 4.0.0 USE Elements 6.2.1\n                                            ST_DataModel 9.2.0\n-                                           SIR_Pipeline 4.1\n-                                           SIR_Calibration 4.1\n+                                           SIR_Pipeline 4.0.0\n+                                           SIR_Calibration 4.0.0\n                                            ST_PipelineChecker 1.5.0)\n",
                            "release ready",
                            "Tava",
                            "2023-08-14T08:14:09.000+02:00",
                            "5d78a448332cac64f5ac5f5a52305852908d29ee"
                        ],
                        [
                            "@@ -11,8 +11,8 @@ set(EDEN \"EDEN-3.1\")\n set(EDENUP \"EDEN-3.1\")\n \n \n-elements_project(SIR_IAL_Pipelines 4.0 USE Elements 6.2.1\n+elements_project(SIR_IAL_Pipelines 4.1 USE Elements 6.2.1\n                                            ST_DataModel 9.2.0\n-                                           SIR_Pipeline 4.0\n-                                           SIR_Calibration 4.0\n+                                           SIR_Pipeline 4.1\n+                                           SIR_Calibration 4.1\n                                            ST_PipelineChecker 1.5.0)\n",
                            "bump to 4.1",
                            "Tava",
                            "2023-08-14T08:12:16.000+02:00",
                            "48387614aa729046824d1111302e8ecb9739faa3"
                        ],
                        [
                            "@@ -3,15 +3,15 @@ CMAKE_MINIMUM_REQUIRED(VERSION 2.8.5)\n find_package(ElementsProject)\n \n # globals\n-set(IAL_CONTEXT \"TEST_PV2\")\n-set(EDEN \"EDEN-3.0\")\n+#set(IAL_CONTEXT \"TEST_PV2\")\n+set(EDEN \"EDEN-3.1\")\n #\"Eden-3.0-dev\")\n \n \n-set(EDENUP \"EDEN-3.0\")\n+set(EDENUP \"EDEN-3.1\")\n \n \n-elements_project(SIR_IAL_Pipelines 6.0 USE Elements 6.2.1\n+elements_project(SIR_IAL_Pipelines 4.0 USE Elements 6.2.1\n                                            ST_DataModel 9.2.0\n                                            SIR_Pipeline 4.0\n                                            SIR_Calibration 4.0\n",
                            "fix conflicts",
                            "Tava",
                            "2023-08-11T15:25:37.000+02:00",
                            "1b2acb85658922752d5b00da63aa243243f437c4"
                        ],
                        [
                            "@@ -3,15 +3,16 @@ CMAKE_MINIMUM_REQUIRED(VERSION 2.8.5)\n find_package(ElementsProject)\n \n # globals\n-set(IAL_CONTEXT \"TEST_PV1\")\n-set(EDEN \"Eden-3.0-dev\")\n+set(IAL_CONTEXT \"TEST_PV2\")\n+set(EDEN \"EDEN-3.0\")\n+#\"Eden-3.0-dev\")\n \n \n set(EDENUP \"EDEN-3.0\")\n \n \n-elements_project(SIR_IAL_Pipelines 3.2 USE Elements 6.0.1\n-                                           ST_DataModel 9.0.2\n-                                           SIR_Pipeline 3.1\n-                                           SIR_Calibration 3.1\n-                                           ST_PipelineChecker 1.2.3)\n+elements_project(SIR_IAL_Pipelines 4.0 USE Elements 6.2.1\n+                                           ST_DataModel 9.2.0\n+                                           SIR_Pipeline 4.0\n+                                           SIR_Calibration 4.0\n+                                           ST_PipelineChecker 1.5.0)\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -3,15 +3,16 @@ CMAKE_MINIMUM_REQUIRED(VERSION 2.8.5)\n find_package(ElementsProject)\n \n # globals\n-set(IAL_CONTEXT \"TEST_PV1\")\n-set(EDEN \"Eden-3.0-dev\")\n+set(IAL_CONTEXT \"TEST_PV2\")\n+set(EDEN \"EDEN-3.0\")\n+#\"Eden-3.0-dev\")\n \n \n set(EDENUP \"EDEN-3.0\")\n \n \n-elements_project(SIR_IAL_Pipelines 3.2 USE Elements 6.0.1\n-                                           ST_DataModel 9.0.2\n-                                           SIR_Pipeline 3.1\n-                                           SIR_Calibration 3.1\n-                                           ST_PipelineChecker 1.2.3)\n+elements_project(SIR_IAL_Pipelines 4.0 USE Elements 6.2.1\n+                                           ST_DataModel 9.2.0\n+                                           SIR_Pipeline 4.0\n+                                           SIR_Calibration 4.0\n+                                           ST_PipelineChecker 1.5.0)\n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -3,15 +3,16 @@ CMAKE_MINIMUM_REQUIRED(VERSION 2.8.5)\n find_package(ElementsProject)\n \n # globals\n-set(IAL_CONTEXT \"TEST_PV1\")\n-set(EDEN \"Eden-3.0-dev\")\n+set(IAL_CONTEXT \"TEST_PV2\")\n+set(EDEN \"EDEN-3.0\")\n+#\"Eden-3.0-dev\")\n \n \n set(EDENUP \"EDEN-3.0\")\n \n \n-elements_project(SIR_IAL_Pipelines 3.2 USE Elements 6.0.1\n-                                           ST_DataModel 9.0.2\n-                                           SIR_Pipeline 3.1\n-                                           SIR_Calibration 3.1\n-                                           ST_PipelineChecker 1.2.3)\n+elements_project(SIR_IAL_Pipelines 6.0 USE Elements 6.2.1\n+                                           ST_DataModel 9.2.0\n+                                           SIR_Pipeline 4.0\n+                                           SIR_Calibration 4.0\n+                                           ST_PipelineChecker 1.5.0)\n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/PackageDef_SIR.py": [
                        [
                            "@@ -13,11 +13,11 @@ from euclidwf.framework.taskdefs import Output\n from euclidwf.framework.taskdefs import ComputingResources\n \n \n-sir_version = '4.0.0'\n+sir_version = '4.1'\n #'@SIR_USE_VERSION@'\n-sir_cal_version = '4.0.0'\n+sir_cal_version = '4.1'\n #'@SIR_CAL_USE_VERSION@'\n-nir_version = '2.3.0' # DM 9.4\n+nir_version = '2.3' # DM 9.4\n \n \n ##  -------------------- SIR \"Extract spectra\" packages --------------------- ##\n",
                            "bump to 4.1",
                            "Tava",
                            "2023-08-14T08:16:28.000+02:00",
                            "56a70aefc9fdf0dab213fde23038ce284364fe84"
                        ],
                        [
                            "@@ -13,11 +13,11 @@ from euclidwf.framework.taskdefs import Output\n from euclidwf.framework.taskdefs import ComputingResources\n \n \n-sir_version = '4.1'\n+sir_version = '4.0.0'\n #'@SIR_USE_VERSION@'\n-sir_cal_version = '4.1'\n+sir_cal_version = '4.0.0'\n #'@SIR_CAL_USE_VERSION@'\n-nir_version = '2.3' # DM 9.4\n+nir_version = '2.3.0' # DM 9.4\n \n \n ##  -------------------- SIR \"Extract spectra\" packages --------------------- ##\n",
                            "release ready",
                            "Tava",
                            "2023-08-14T08:14:09.000+02:00",
                            "5d78a448332cac64f5ac5f5a52305852908d29ee"
                        ],
                        [
                            "@@ -1,5 +1,5 @@\n # ---------------------------------------------------------------------------- #\n-# Package definition for all SIR pipelines\n+# Package definition for all SIR pipelines > 4.0\n #\n # file: PackageDef_SIR.py\n # date: Apr 2022\n@@ -27,7 +27,7 @@ nir_initalize = Executable(command = f\"E-Run NIR_Init {nir_version} NIR_runIniti\n                                       Input(\"mdbfile\")],\n                            outputs = [Output(\"outfile\", mime_type=\"fits\"),\n                                       Output(\"outchi2\", mime_type=\"fits\")],\n-                         resources = ComputingResources(cores=1, ram=2.0, walltime=1.0)\n+                         resources = ComputingResources(cores=1, ram=2.5, walltime=1.0)\n )\n \n \n@@ -43,7 +43,7 @@ mask_saturation = Executable(command = f\"E-Run NIR_NonLinearSaturation {nir_vers\n                          inputs = [Input(\"infile\"),\n                                    Input(\"xmlfile\")],\n                         outputs = [Output(\"outfile\", mime_type=\"fits\")],\n-                      resources = ComputingResources(cores=1, ram=2.0, walltime=1.0)\n+                      resources = ComputingResources(cores=1, ram=2.1, walltime=1.0)\n )\n \n # apply gain\n@@ -51,7 +51,7 @@ correct_nonlinear = Executable(command = f\"E-Run NIR_NonLinearSaturation {nir_ve\n                            inputs = [Input(\"infile\"),\n                                      Input(\"xmlfile\")],\n                           outputs = [Output(\"outfile\", mime_type=\"fits\")],\n-                        resources = ComputingResources(cores=1, ram=2.0, walltime=1.0)\n+                        resources = ComputingResources(cores=1, ram=4.0, walltime=1.0)\n )\n \n \n@@ -64,7 +64,7 @@ subtract_dark = Executable(command = f\"E-Run NIR_DarkBiasSubtraction {nir_versio\n \n \n # --- SIR related\n-cr_rejection = Executable(command = f\"E-Run SIR_Pipeline {sir_version} CrRejectionSpec --no-ipc\",\n+cosmic_rejection = Executable(command = f\"E-Run SIR_Pipeline {sir_version} CrRejectionSpec --no-ipc\",\n                           inputs = [Input(\"grism\"),\n                                     Input(\"chi2file\"),\n                                     Input(\"config\")],\n@@ -73,7 +73,7 @@ cr_rejection = Executable(command = f\"E-Run SIR_Pipeline {sir_version} CrRejecti\n                         )\n \n \n-end_preprocessing = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_EndPreprocessing\",\n+sir_initialize = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_Init\",\n                                inputs = [Input(\"fits_file\"),\n                                          Input(\"le1_dp\"),\n                                          Input(\"mdb\")],\n@@ -81,17 +81,8 @@ end_preprocessing = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_\n                         resources=ComputingResources(cores=1, ram=1.0, walltime=1.0)\n )\n \n-# REPLACE end_preprocessing\n-sir_init = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_Init\",\n-                               inputs = [Input(\"fits_file\"),\n-                                         Input(\"le1_dp\"),\n-                                         Input(\"mdb\")],\n-                              outputs = [Output(\"sci_frame\")],\n-                        resources=ComputingResources(cores=1, ram=1.0, walltime=1.0)\n-)\n-\n-# (detector scaling replaces QE correction\n-detectorScaling=Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_ApplyDetectorScaling\",\n+# REPLACE QE correction\n+detector_scaling=Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_ApplyDetectorScaling\",\n                             inputs = [Input(\"sci_frame_fits\"),\n                                       Input(\"mdb\"),\n                                       Input(\"zodiacal_light\")],\n@@ -105,9 +96,9 @@ locate_spectra = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_Spe\n                                         Input(\"mer_cat\", content_type=\"listfile\"),\n                                         Input(\"mdb\"),\n                                         Input(\"opt_model\"),\n+                                        Input(\"crv_model\"),\n                                         Input(\"ids_model\"),\n-                                        Input(\"config\"),\n-                                        Input(\"crv_model\")],\n+                                        Input(\"config\")],\n                              outputs = [Output(\"loc_table\", mime_type=\"json\")],\n                            resources = ComputingResources(cores=1, ram=3.0, walltime=1.0)\n )\n@@ -116,9 +107,9 @@ locate_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_\n                                         Input(\"tu_cat\", content_type=\"listfile\"),\n                                         Input(\"mdb\"),\n                                         Input(\"opt_model\"),\n+                                        Input(\"crv_model\"), \n                                         Input(\"ids_model\"),\n-                                        Input(\"config\"),\n-                                        Input(\"crv_model\")],\n+                                        Input(\"config\")],\n                              outputs = [Output(\"loc_table\", mime_type=\"json\")],\n                            resources = ComputingResources(cores=1, ram=3.0, walltime=1.0)\n )\n@@ -131,6 +122,7 @@ subtract_bkg = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_Backg\n                                           outputs = [Output(\"bksub_frame\")],\n                                         resources = ComputingResources(cores=1, ram=2.0, walltime=1.0)\n )\n+\n subtract_bkg_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_BackgroundSubtraction --overwrite\",\n                                            inputs = [Input(\"sci_frame\"),\n                                                      Input(\"loc_table\"),\n@@ -140,7 +132,6 @@ subtract_bkg_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_Ba\n                                         resources = ComputingResources(cores=1, ram=2.0, walltime=1.0)\n )\n \n-# technical, no science\n splitLocTable = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_splitLocTable\",\n                             inputs = [Input(\"input_json\", content_type=\"listfile\")],\n                            outputs = [Output(\"LT_json\", mime_type=\"json\", content_type=\"listfile\"),\n@@ -148,6 +139,7 @@ splitLocTable = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_spli\n                                       Output(\"LTXML_json\",mime_type=\"json\",content_type=\"listfile\")],\n                          resources = ComputingResources(cores=1, ram=1.0, walltime=1.0)\n )\n+\n splitLocTable_all = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_splitLocTable --unpack\",\n                             inputs = [Input(\"input_json\", content_type=\"listfile\")],\n                            outputs = [Output(\"LT_json\", mime_type=\"json\", content_type=\"listfile\"),\n@@ -160,49 +152,47 @@ apply_decontamination = Executable(command = f\"E-Run SIR_Pipeline {sir_version}\n                                      inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n                                                Input(\"loc_table\"),\n                                                Input(\"cutouts\", content_type=\"listfile\"),\n-                                               Input(\"config\"),\n-                                               Input(\"mdb\")],\n+                                               Input(\"mdb\"),\n+                                               Input(\"config\")],\n                                     outputs = [Output(\"dec_spectra\", mime_type=\"json\", content_type=\"listfile\")],\n                                   resources = ComputingResources(cores=1, ram=12.0, walltime=4.0)\n )\n-\n-\n apply_decontamination_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraDecontamination --overwrite --cutouts='None'\",\n                                        inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n                                                  Input(\"loc_table\"),\n-                                                 Input(\"config\"),\n-                                                 Input(\"mdb\")],\n+                                                 Input(\"mdb\"),\n+                                                 Input(\"config\")],\n                                       outputs = [Output(\"dec_spectra\", mime_type=\"json\", content_type=\"listfile\")],\n                                     resources = ComputingResources(cores=1, ram=12.0, walltime=4.0)\n )\n \n \n-extract_spectra = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraExtraction --overwrite\",\n-                                inputs = [Input(\"loc_table\"),\n-                                          Input(\"dec_spectra\", content_type=\"listfile\"),\n-                                          Input(\"mer_cat\", content_type=\"listfile\"),\n-                                          Input(\"mdb\"),\n-                                          Input(\"config\")],\n-                               outputs = [Output(\"extr_spectra\", mime_type=\"json\")],\n-                             resources = ComputingResources(cores=1, ram=12.0, walltime=2.0)\n-)\n+# extract_spectra = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraExtraction --overwrite\",\n+#                                 inputs = [Input(\"loc_table\"),\n+#                                           Input(\"dec_spectra\", content_type=\"listfile\"),\n+#                                           Input(\"mer_cat\", content_type=\"listfile\"),\n+#                                           Input(\"mdb\"),\n+#                                           Input(\"config\")],\n+#                                outputs = [Output(\"extr_spectra\", mime_type=\"json\")],\n+#                              resources = ComputingResources(cores=1, ram=12.0, walltime=2.0)\n+# )\n \n-optextract_spectra = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraExtraction --overwrite\",\n-                                inputs = [Input(\"loc_table\"),\n-                                          Input(\"dec_spectra\", content_type=\"listfile\"),\n-                                          Input(\"mer_cat\", content_type=\"listfile\"),\n-                                          Input(\"mdb\"),\n-                                          Input(\"cutouts\",content_type=\"listfile\"),\n-                                          Input(\"sci_frames\",content_type=\"listfile\"),\n-                                          Input(\"config\")],\n-                               outputs = [Output(\"extr_spectra\", mime_type=\"json\")],\n-                             resources = ComputingResources(cores=1, ram=12.0, walltime=2.0)\n+extract_spectra = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraExtraction --overwrite\",\n+                              inputs = [Input(\"loc_table\"),\n+                                        Input(\"dec_spectra\", content_type=\"listfile\"),\n+                                        Input(\"mer_cat\",     content_type=\"listfile\"),\n+                                        Input(\"sci_frames\",  content_type=\"listfile\"),\n+                                        Input(\"cutouts\",     content_type=\"listfile\"),\n+                                        Input(\"mdb\"),\n+                                        Input(\"config\")],\n+                             outputs = [Output(\"extr_spectra\", mime_type=\"json\")],\n+                           resources = ComputingResources(cores=1, ram=12.0, walltime=2.0)\n )\n \n extract_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraExtraction --overwrite\",\n                                 inputs = [Input(\"loc_table\"),\n                                           Input(\"dec_spectra\", content_type=\"listfile\"),\n-                                          Input(\"tu_cat\", content_type=\"listfile\"),\n+                                          Input(\"tu_cat\",      content_type=\"listfile\"),\n                                           Input(\"mdb\"),\n                                           Input(\"config\")],\n                                outputs = [Output(\"extr_spectra\", mime_type=\"json\")],\n@@ -212,12 +202,12 @@ extract_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR\n relflux_correction=Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_RelativeFluxCorrection\",\n                               inputs = [Input(\"extr_spectra_list\", content_type=\"listfile\"),\n                                         Input(\"ms_flat\"),\n+                                        Input(\"mdbfile\"),\n                                         Input(\"config\")],\n                              outputs = [Output(\"output_list\", content_type=\"listfile\", mime_type=\"json\")],\n                            resources = ComputingResources(cores=1, ram=2, walltime=4.0)\n )\n \n-\n absflux_correction=Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_AbsoluteFluxCalibration\",\n                               inputs = [Input(\"extr_spectra_list\", content_type=\"listfile\"),\n                                         Input(\"mdb\"),\n@@ -226,40 +216,40 @@ absflux_correction=Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_A\n                            resources = ComputingResources(cores=1, ram=2, walltime=1.0)\n )\n \n-\n-sirCreateCut = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_CreateCutOuts\",\n-                           inputs = [Input(\"cat\", content_type=\"listfile\"),\n-                                     Input(\"mosaic\", content_type=\"listfile\"),\n-                                     Input(\"segmap\", content_type=\"listfile\")],\n-                          outputs = [Output(\"cutouts\", mime_type=\"json\", content_type=\"listfile\")],\n-                        resources = ComputingResources(cores=1, ram=4.0, walltime=4.0)\n+sir_create_cut = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_CreateCutOuts\",\n+                             inputs = [Input(\"cat\",    content_type=\"listfile\"),\n+                                       Input(\"mosaic\", content_type=\"listfile\"),\n+                                       Input(\"segmap\", content_type=\"listfile\")],\n+                            outputs = [Output(\"cutouts\", mime_type=\"json\", content_type=\"listfile\")],\n+                          resources = ComputingResources(cores=1, ram=4.0, walltime=4.0)\n )\n+\n # ---------------------------------------------------------------------------- #\n # ---------------------------------------------------------------------------- #\n \n \n \n ##  -------------------- SIR \"Combine spectra\" packages --------------------- ##\n-\n combine_spectra = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraCombination --dataset='1D FLUX'\",\n                                     inputs = [Input(\"extr_spectra_list\", content_type=\"listfile\"),\n+                                              Input(\"mer_cat\"),\n                                               Input(\"mdb\"),\n-                                              Input(\"config\"),\n-                                              Input(\"mer_cat\")],\n-                                   outputs = [Output(\"comb_spectra\", mime_type=\"json\", content_type=\"listfile\")],\n+                                              Input(\"config\")],\n+                                   outputs = [Output(\"comb_spectra\", mime_type=\"json\", content_type=\"listfile\"),\n+                                              Output(\"final_spectra\", mime_type=\"xml\")],\n                                  resources = ComputingResources(cores=1, ram=8.0, walltime=2.0)\n )\n \n combine_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraCombination --dataset='1D FLUX'\",\n                                     inputs = [Input(\"extr_spectra_list\", content_type=\"listfile\"),\n+                                              Input(\"tu_cat\"),\n                                               Input(\"mdb\"),\n-                                              Input(\"config\"),\n-                                              Input(\"tu_cat\")],\n-                                   outputs = [Output(\"comb_spectra\", mime_type=\"json\", content_type=\"listfile\")],\n+                                              Input(\"config\")],\n+                                   outputs = [Output(\"comb_spectra\", mime_type=\"json\", content_type=\"listfile\"),\n+                                              Output(\"final_spectra\", mime_type=\"xml\")],\n                                  resources = ComputingResources(cores=1, ram=8.0, walltime=2.0)\n )\n \n-\n sir_create_SPE_fits = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_CreateSPEFiles --overwrite\",\n                                  inputs = [Input(\"comb_spectra\",content_type=\"listfile\"),\n                                            Input(\"mer_cat\"),\n@@ -275,82 +265,36 @@ sir_create_SPE_fits_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version}\n                                   resources = ComputingResources(cores=1, ram=4.0, walltime=1.0)\n )\n \n-\n-\n-# ---------------------------------------------------------------------------- #\n # ---------------------------------------------------------------------------- #\n+##  --------------------- SIR \"Calibration \" packages ----------------------  ##\n \n-\n-##  -------------------- SIR \"Calibration\" packages --------------------- ##\n-\n-opt_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_OPTModelCalibration --overwrite\",\n-                            inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n-                                      Input(\"mdb\"),\n-                                      Input(\"opt_model\"),\n-                                      Input(\"tu_cat\", content_type=\"listfile\"),\n-                                      Input(\"config\")],\n-                           outputs = [Output(\"output_xml\")],\n-                         resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n+sort_by_grism = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_SortFrames_ByGrism\",\n+                            inputs = [Input(\"frames\", content_type=\"listfile\")],\n+                           outputs = [Output(\"out_file\", content_type=\"listfile\")],\n+                          resources = ComputingResources(cores=1, ram=1.0, walltime=1.0)\n )\n \n-rot_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_PivotModelCalibration --overwrite\",\n-                            inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n-                                      Input(\"mdb\"),\n-                                      Input(\"opt_model\"),\n-                                      Input(\"crv_model\"),\n-                                      Input(\"config\"),\n-                                      Input(\"tu_cat\", content_type=\"listfile\")],\n-                            outputs = [Output(\"output_xml\")],\n-                          resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n+# -- OPTICAL MODEL (PV 001) -- #\n+opt_model_cal_tu = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_OPTModelCalibration --overwrite\",\n+                               inputs = [Input(\"config\"),\n+                                         Input(\"sci_frame\", content_type=\"listfile\"),\n+                                         Input(\"tu_cat\", content_type=\"listfile\"),\n+                                         Input(\"mdb\"),\n+                                         Input(\"opt_model\")],\n+                              outputs = [Output(\"output_xml\")],\n+                            resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n )\n \n opt_model_cal_mer = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_OPTModelCalibration --overwrite\",\n-                            inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n-                                      Input(\"mdb\"),\n-                                      Input(\"opt_model\"),\n-                                      Input(\"mer_cat\", content_type=\"listfile\")],\n-                           outputs = [Output(\"output_xml\")],\n-                         resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n-)\n-\n-\n-ids_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_IDSModelCalibration --overwrite\",\n-                            inputs = [Input(\"dec_spectra\"),\n-                                      Input(\"sci_frame\"),\n-                                      Input(\"tu_cat\", content_type=\"listfile\"),\n-                                      Input(\"mdb\"),\n-                                      Input(\"opt_model\"),\n-                                      Input(\"crv_model\"),\n-                                      Input(\"ids_model\")],\n-                           outputs = [Output(\"output_xml\")],\n-                         resources = ComputingResources(cores=1, ram=8.0, walltime=2.0)\n-)\n-\n-crv_locate_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraLocation --overwrite --run_type=PN\",\n-                              inputs = [Input(\"sci_frame\"),\n-                                        Input(\"tu_cat\", content_type=\"listfile\"),\n-                                        Input(\"mdb\"),\n-                                        Input(\"opt_model\"),\n-                                        Input(\"ids_model\"),\n-                                        Input(\"config\"),\n-                                        Input(\"crv_model\")],\n-                             outputs = [Output(\"loc_table\", mime_type=\"json\")],\n-                           resources = ComputingResources(cores=1, ram=3.0, walltime=1.0)\n-)\n-\n-crv_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_CRVModelCalibration --overwrite\",\n                             inputs = [Input(\"config\"),\n                                       Input(\"sci_frame\", content_type=\"listfile\"),\n-                                      Input(\"tu_cat\", content_type=\"listfile\"),\n+                                      Input(\"mer_cat\", content_type=\"listfile\"),\n                                       Input(\"mdb\"),\n-                                      Input(\"opt_model\"),\n-                                      Input(\"ids_model\"),\n-                                      Input(\"crv_model\")],\n+                                      Input(\"opt_model\")],\n                            outputs = [Output(\"output_xml\")],\n                          resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n )\n \n-\n collect_cal_opt = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_MergeCalibOpt --validate\",\n                               inputs = [Input(\"calib_list\"),\n                                         Input(\"calib_base\")],\n@@ -358,6 +302,44 @@ collect_cal_opt = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version}\n                            resources = ComputingResources(cores=1, ram=1.0, walltime=1.0)\n )\n \n+\n+# # -- CENTER OF ROTATION MODEL -- #\n+# rot_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_PivotModelCalibration --overwrite\",\n+#                             inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n+#                                       Input(\"mdb\"),\n+#                                       Input(\"opt_model\"),\n+#                                       Input(\"crv_model\"),\n+#                                       Input(\"config\"),\n+#                                       Input(\"tu_cat\", content_type=\"listfile\")],\n+#                             outputs = [Output(\"output_xml\")],\n+#                           resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n+# )\n+\n+## --- CRV MODEL (PV 001) --- ##\n+crv_model_cal_tu = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_CRVModelCalibration --overwrite\",\n+                               inputs = [Input(\"config\"),\n+                                         Input(\"sci_frame\", content_type=\"listfile\"),\n+                                         Input(\"tu_cat\", content_type=\"listfile\"),\n+                                         Input(\"mdb\"),\n+                                         Input(\"opt_model\"),\n+                                         Input(\"ids_model\"),\n+                                         Input(\"crv_model\")],\n+                              outputs = [Output(\"output_xml\")],\n+                            resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n+)\n+\n+crv_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_CRVModelCalibration --overwrite\",\n+                   inputs = [Input(\"config\"),\n+                             Input(\"sci_frame\", content_type=\"listfile\"),\n+                             Input(\"mer_cat\", content_type=\"listfile\"),\n+                             Input(\"mdb\"),\n+                             Input(\"opt_model\"),\n+                             Input(\"ids_model\"),\n+                             Input(\"crv_model\")],\n+                  outputs = [Output(\"output_xml\")],\n+                resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n+)\n+\n collect_cal_crv = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_MergeCalibCrv --validate\",\n                               inputs = [Input(\"calib_list\"),\n                                         Input(\"calib_base\")],\n@@ -365,6 +347,58 @@ collect_cal_crv = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version}\n                            resources = ComputingResources(cores=1, ram=1.0, walltime=1.0)\n )\n \n+## -- IDS MODEL (PV 009) -- ##\n+ids_model_cal_tu = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_IDSModelCalibration --overwrite\",\n+                               inputs = [Input(\"config\"),\n+                                         Input(\"dec_spectra\"),\n+                                         Input(\"sci_frame\"),\n+                                         Input(\"tu_cat\", content_type=\"listfile\"),\n+                                         Input(\"mdb\"),\n+                                         Input(\"opt_model\"),\n+                                         Input(\"crv_model\"),\n+                                         Input(\"ids_model\")],\n+                              outputs = [Output(\"output_xml\")],\n+                            resources = ComputingResources(cores=1, ram=8.0, walltime=2.0)\n+)\n+\n+ids_model_cal_mer = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_IDSModelCalibration --overwrite\",\n+                                inputs = [Input(\"config\"),\n+                                          Input(\"dec_spectra\"),\n+                                          Input(\"sci_frame\"),\n+                                          Input(\"mer_cat\", content_type=\"listfile\"),\n+                                          Input(\"mdb\"),\n+                                          Input(\"opt_model\"),\n+                                          Input(\"crv_model\"),\n+                                          Input(\"ids_model\")],\n+                               outputs = [Output(\"output_xml\")],\n+                             resources = ComputingResources(cores=1, ram=8.0, walltime=2.0)\n+)\n+\n+ids_locate_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraLocation --overwrite --run_type=PN\",\n+                                    inputs = [Input(\"config\"),\n+                                              Input(\"sci_frame\"),\n+                                              Input(\"tu_cat\", content_type=\"listfile\"),\n+                                              Input(\"mdb\"),\n+                                              Input(\"opt_model\"),\n+                                              Input(\"crv_model\"),\n+                                              Input(\"ids_model\")],\n+                                   outputs = [Output(\"loc_table\", mime_type=\"json\")],\n+                                 resources = ComputingResources(cores=1, ram=3.0, walltime=1.0)\n+)\n+\n+ids_locate_spectra_mer = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraLocation --overwrite --run_type=PN\",\n+                                     inputs = [Input(\"config\"),\n+                                               Input(\"sci_frame\"),\n+                                               Input(\"mer_cat\", content_type=\"listfile\"),\n+                                               Input(\"mdb\"),\n+                                               Input(\"opt_model\"),\n+                                               Input(\"crv_model\"),\n+                                               Input(\"ids_model\")],\n+                                    outputs = [Output(\"loc_table\", mime_type=\"json\")],\n+                                  resources = ComputingResources(cores=1, ram=3.0, walltime=1.0)\n+)\n+\n+\n collect_cal_ids = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_MergeCalibIds --validate\",\n                               inputs = [Input(\"calib_list\"),\n                                         Input(\"calib_base\")],\n@@ -373,20 +407,18 @@ collect_cal_ids = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version}\n )\n \n \n-sort_by_grism = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_SortFrames_ByGrism\",\n-                              inputs = [Input(\"frames\", content_type=\"listfile\")],\n-                             outputs = [Output(\"out_file\", content_type=\"listfile\")],\n-                           resources = ComputingResources(cores=1, ram=1.0, walltime=1.0)\n-)\n-\n+## --- RELATIVE FLUX (PV 001) MODEL --- ##\n rel_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_RelFluxModelCalibration\",\n                             inputs = [Input(\"inlist\"),\n                                       Input(\"inloclist\"),\n-                                      Input(\"ms_flat\")],\n+                                      Input(\"ms_flat\"),\n+                                      Input(\"mdbfile\")],\n                            outputs = [Output(\"output_xml\")],\n                          resources = ComputingResources(cores=1, ram=12.0, walltime=12.0)\n )\n \n+\n+## --- ABSOLUTE FLUX (PV 003) MODEL --- ##\n abs_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} ComputeAbsoluteCalibration --saveplots Yes --magrange 'TU_MAG_H_2MASS,18.0,18.1' --survey_standard_stars  'WDJ175318.65+644502.15' --standards_mdb_element 'Survey.Calibration.Sources.ReferenceFlux'\",\n                             inputs = [Input(\"inlist\"),\n                                       Input(\"mdb\"),\n@@ -395,6 +427,17 @@ abs_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} C\n                          resources = ComputingResources(cores=1, ram=12.0, walltime=12.0)\n )\n \n+abs_locate_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraLocation --overwrite --run_type=WD\",\n+                              inputs = [Input(\"config\"),\n+                                        Input(\"sci_frame\"),\n+                                        Input(\"tu_cat\", content_type=\"listfile\"),\n+                                        Input(\"mdb\"),\n+                                        Input(\"opt_model\"),\n+                                        Input(\"crv_model\"),\n+                                        Input(\"ids_model\")],\n+                             outputs = [Output(\"loc_table\", mime_type=\"json\")],\n+                           resources = ComputingResources(cores=1, ram=3.0, walltime=1.0)\n+)\n \n # ---------------------------------------------------------------------------- #\n # ---------------------------------------------------------------------------- #\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ],
                        [
                            "@@ -13,9 +13,9 @@ from euclidwf.framework.taskdefs import Output\n from euclidwf.framework.taskdefs import ComputingResources\n \n \n-sir_version = '4.0'\n+sir_version = '4.1'\n #'@SIR_USE_VERSION@'\n-sir_cal_version = '4.0'\n+sir_cal_version = '4.1'\n #'@SIR_CAL_USE_VERSION@'\n nir_version = '2.3' # DM 9.4\n \n",
                            "bump to 4.1",
                            "Tava",
                            "2023-08-14T08:12:16.000+02:00",
                            "48387614aa729046824d1111302e8ecb9739faa3"
                        ],
                        [
                            "@@ -1,5 +1,5 @@\n # ---------------------------------------------------------------------------- #\n-# Package definition for all SIR pipelines\n+# Package definition for all SIR pipelines > 4.0\n #\n # file: PackageDef_SIR.py\n # date: Apr 2022\n@@ -27,7 +27,7 @@ nir_initalize = Executable(command = f\"E-Run NIR_Init {nir_version} NIR_runIniti\n                                       Input(\"mdbfile\")],\n                            outputs = [Output(\"outfile\", mime_type=\"fits\"),\n                                       Output(\"outchi2\", mime_type=\"fits\")],\n-                         resources = ComputingResources(cores=1, ram=2.0, walltime=1.0)\n+                         resources = ComputingResources(cores=1, ram=2.5, walltime=1.0)\n )\n \n \n@@ -43,7 +43,7 @@ mask_saturation = Executable(command = f\"E-Run NIR_NonLinearSaturation {nir_vers\n                          inputs = [Input(\"infile\"),\n                                    Input(\"xmlfile\")],\n                         outputs = [Output(\"outfile\", mime_type=\"fits\")],\n-                      resources = ComputingResources(cores=1, ram=2.0, walltime=1.0)\n+                      resources = ComputingResources(cores=1, ram=2.1, walltime=1.0)\n )\n \n # apply gain\n@@ -51,7 +51,7 @@ correct_nonlinear = Executable(command = f\"E-Run NIR_NonLinearSaturation {nir_ve\n                            inputs = [Input(\"infile\"),\n                                      Input(\"xmlfile\")],\n                           outputs = [Output(\"outfile\", mime_type=\"fits\")],\n-                        resources = ComputingResources(cores=1, ram=2.0, walltime=1.0)\n+                        resources = ComputingResources(cores=1, ram=4.0, walltime=1.0)\n )\n \n \n@@ -64,7 +64,7 @@ subtract_dark = Executable(command = f\"E-Run NIR_DarkBiasSubtraction {nir_versio\n \n \n # --- SIR related\n-cr_rejection = Executable(command = f\"E-Run SIR_Pipeline {sir_version} CrRejectionSpec --no-ipc\",\n+cosmic_rejection = Executable(command = f\"E-Run SIR_Pipeline {sir_version} CrRejectionSpec --no-ipc\",\n                           inputs = [Input(\"grism\"),\n                                     Input(\"chi2file\"),\n                                     Input(\"config\")],\n@@ -73,7 +73,7 @@ cr_rejection = Executable(command = f\"E-Run SIR_Pipeline {sir_version} CrRejecti\n                         )\n \n \n-end_preprocessing = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_EndPreprocessing\",\n+sir_initialize = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_Init\",\n                                inputs = [Input(\"fits_file\"),\n                                          Input(\"le1_dp\"),\n                                          Input(\"mdb\")],\n@@ -81,17 +81,8 @@ end_preprocessing = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_\n                         resources=ComputingResources(cores=1, ram=1.0, walltime=1.0)\n )\n \n-# REPLACE end_preprocessing\n-sir_init = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_Init\",\n-                               inputs = [Input(\"fits_file\"),\n-                                         Input(\"le1_dp\"),\n-                                         Input(\"mdb\")],\n-                              outputs = [Output(\"sci_frame\")],\n-                        resources=ComputingResources(cores=1, ram=1.0, walltime=1.0)\n-)\n-\n-# (detector scaling replaces QE correction\n-detectorScaling=Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_ApplyDetectorScaling\",\n+# REPLACE QE correction\n+detector_scaling=Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_ApplyDetectorScaling\",\n                             inputs = [Input(\"sci_frame_fits\"),\n                                       Input(\"mdb\"),\n                                       Input(\"zodiacal_light\")],\n@@ -105,9 +96,9 @@ locate_spectra = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_Spe\n                                         Input(\"mer_cat\", content_type=\"listfile\"),\n                                         Input(\"mdb\"),\n                                         Input(\"opt_model\"),\n+                                        Input(\"crv_model\"),\n                                         Input(\"ids_model\"),\n-                                        Input(\"config\"),\n-                                        Input(\"crv_model\")],\n+                                        Input(\"config\")],\n                              outputs = [Output(\"loc_table\", mime_type=\"json\")],\n                            resources = ComputingResources(cores=1, ram=3.0, walltime=1.0)\n )\n@@ -116,9 +107,9 @@ locate_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_\n                                         Input(\"tu_cat\", content_type=\"listfile\"),\n                                         Input(\"mdb\"),\n                                         Input(\"opt_model\"),\n+                                        Input(\"crv_model\"), \n                                         Input(\"ids_model\"),\n-                                        Input(\"config\"),\n-                                        Input(\"crv_model\")],\n+                                        Input(\"config\")],\n                              outputs = [Output(\"loc_table\", mime_type=\"json\")],\n                            resources = ComputingResources(cores=1, ram=3.0, walltime=1.0)\n )\n@@ -131,6 +122,7 @@ subtract_bkg = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_Backg\n                                           outputs = [Output(\"bksub_frame\")],\n                                         resources = ComputingResources(cores=1, ram=2.0, walltime=1.0)\n )\n+\n subtract_bkg_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_BackgroundSubtraction --overwrite\",\n                                            inputs = [Input(\"sci_frame\"),\n                                                      Input(\"loc_table\"),\n@@ -140,7 +132,6 @@ subtract_bkg_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_Ba\n                                         resources = ComputingResources(cores=1, ram=2.0, walltime=1.0)\n )\n \n-# technical, no science\n splitLocTable = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_splitLocTable\",\n                             inputs = [Input(\"input_json\", content_type=\"listfile\")],\n                            outputs = [Output(\"LT_json\", mime_type=\"json\", content_type=\"listfile\"),\n@@ -148,6 +139,7 @@ splitLocTable = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_spli\n                                       Output(\"LTXML_json\",mime_type=\"json\",content_type=\"listfile\")],\n                          resources = ComputingResources(cores=1, ram=1.0, walltime=1.0)\n )\n+\n splitLocTable_all = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_splitLocTable --unpack\",\n                             inputs = [Input(\"input_json\", content_type=\"listfile\")],\n                            outputs = [Output(\"LT_json\", mime_type=\"json\", content_type=\"listfile\"),\n@@ -160,49 +152,47 @@ apply_decontamination = Executable(command = f\"E-Run SIR_Pipeline {sir_version}\n                                      inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n                                                Input(\"loc_table\"),\n                                                Input(\"cutouts\", content_type=\"listfile\"),\n-                                               Input(\"config\"),\n-                                               Input(\"mdb\")],\n+                                               Input(\"mdb\"),\n+                                               Input(\"config\")],\n                                     outputs = [Output(\"dec_spectra\", mime_type=\"json\", content_type=\"listfile\")],\n                                   resources = ComputingResources(cores=1, ram=12.0, walltime=4.0)\n )\n-\n-\n apply_decontamination_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraDecontamination --overwrite --cutouts='None'\",\n                                        inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n                                                  Input(\"loc_table\"),\n-                                                 Input(\"config\"),\n-                                                 Input(\"mdb\")],\n+                                                 Input(\"mdb\"),\n+                                                 Input(\"config\")],\n                                       outputs = [Output(\"dec_spectra\", mime_type=\"json\", content_type=\"listfile\")],\n                                     resources = ComputingResources(cores=1, ram=12.0, walltime=4.0)\n )\n \n \n-extract_spectra = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraExtraction --overwrite\",\n-                                inputs = [Input(\"loc_table\"),\n-                                          Input(\"dec_spectra\", content_type=\"listfile\"),\n-                                          Input(\"mer_cat\", content_type=\"listfile\"),\n-                                          Input(\"mdb\"),\n-                                          Input(\"config\")],\n-                               outputs = [Output(\"extr_spectra\", mime_type=\"json\")],\n-                             resources = ComputingResources(cores=1, ram=12.0, walltime=2.0)\n-)\n+# extract_spectra = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraExtraction --overwrite\",\n+#                                 inputs = [Input(\"loc_table\"),\n+#                                           Input(\"dec_spectra\", content_type=\"listfile\"),\n+#                                           Input(\"mer_cat\", content_type=\"listfile\"),\n+#                                           Input(\"mdb\"),\n+#                                           Input(\"config\")],\n+#                                outputs = [Output(\"extr_spectra\", mime_type=\"json\")],\n+#                              resources = ComputingResources(cores=1, ram=12.0, walltime=2.0)\n+# )\n \n-optextract_spectra = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraExtraction --overwrite\",\n-                                inputs = [Input(\"loc_table\"),\n-                                          Input(\"dec_spectra\", content_type=\"listfile\"),\n-                                          Input(\"mer_cat\", content_type=\"listfile\"),\n-                                          Input(\"mdb\"),\n-                                          Input(\"cutouts\",content_type=\"listfile\"),\n-                                          Input(\"sci_frames\",content_type=\"listfile\"),\n-                                          Input(\"config\")],\n-                               outputs = [Output(\"extr_spectra\", mime_type=\"json\")],\n-                             resources = ComputingResources(cores=1, ram=12.0, walltime=2.0)\n+extract_spectra = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraExtraction --overwrite\",\n+                              inputs = [Input(\"loc_table\"),\n+                                        Input(\"dec_spectra\", content_type=\"listfile\"),\n+                                        Input(\"mer_cat\",     content_type=\"listfile\"),\n+                                        Input(\"sci_frames\",  content_type=\"listfile\"),\n+                                        Input(\"cutouts\",     content_type=\"listfile\"),\n+                                        Input(\"mdb\"),\n+                                        Input(\"config\")],\n+                             outputs = [Output(\"extr_spectra\", mime_type=\"json\")],\n+                           resources = ComputingResources(cores=1, ram=12.0, walltime=2.0)\n )\n \n extract_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraExtraction --overwrite\",\n                                 inputs = [Input(\"loc_table\"),\n                                           Input(\"dec_spectra\", content_type=\"listfile\"),\n-                                          Input(\"tu_cat\", content_type=\"listfile\"),\n+                                          Input(\"tu_cat\",      content_type=\"listfile\"),\n                                           Input(\"mdb\"),\n                                           Input(\"config\")],\n                                outputs = [Output(\"extr_spectra\", mime_type=\"json\")],\n@@ -212,12 +202,12 @@ extract_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR\n relflux_correction=Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_RelativeFluxCorrection\",\n                               inputs = [Input(\"extr_spectra_list\", content_type=\"listfile\"),\n                                         Input(\"ms_flat\"),\n+                                        Input(\"mdbfile\"),\n                                         Input(\"config\")],\n                              outputs = [Output(\"output_list\", content_type=\"listfile\", mime_type=\"json\")],\n                            resources = ComputingResources(cores=1, ram=2, walltime=4.0)\n )\n \n-\n absflux_correction=Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_AbsoluteFluxCalibration\",\n                               inputs = [Input(\"extr_spectra_list\", content_type=\"listfile\"),\n                                         Input(\"mdb\"),\n@@ -226,40 +216,40 @@ absflux_correction=Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_A\n                            resources = ComputingResources(cores=1, ram=2, walltime=1.0)\n )\n \n-\n-sirCreateCut = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_CreateCutOuts\",\n-                           inputs = [Input(\"cat\", content_type=\"listfile\"),\n-                                     Input(\"mosaic\", content_type=\"listfile\"),\n-                                     Input(\"segmap\", content_type=\"listfile\")],\n-                          outputs = [Output(\"cutouts\", mime_type=\"json\", content_type=\"listfile\")],\n-                        resources = ComputingResources(cores=1, ram=4.0, walltime=4.0)\n+sir_create_cut = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_CreateCutOuts\",\n+                             inputs = [Input(\"cat\",    content_type=\"listfile\"),\n+                                       Input(\"mosaic\", content_type=\"listfile\"),\n+                                       Input(\"segmap\", content_type=\"listfile\")],\n+                            outputs = [Output(\"cutouts\", mime_type=\"json\", content_type=\"listfile\")],\n+                          resources = ComputingResources(cores=1, ram=4.0, walltime=4.0)\n )\n+\n # ---------------------------------------------------------------------------- #\n # ---------------------------------------------------------------------------- #\n \n \n \n ##  -------------------- SIR \"Combine spectra\" packages --------------------- ##\n-\n combine_spectra = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraCombination --dataset='1D FLUX'\",\n                                     inputs = [Input(\"extr_spectra_list\", content_type=\"listfile\"),\n+                                              Input(\"mer_cat\"),\n                                               Input(\"mdb\"),\n-                                              Input(\"config\"),\n-                                              Input(\"mer_cat\")],\n-                                   outputs = [Output(\"comb_spectra\", mime_type=\"json\", content_type=\"listfile\")],\n+                                              Input(\"config\")],\n+                                   outputs = [Output(\"comb_spectra\", mime_type=\"json\", content_type=\"listfile\"),\n+                                              Output(\"final_spectra\", mime_type=\"xml\")],\n                                  resources = ComputingResources(cores=1, ram=8.0, walltime=2.0)\n )\n \n combine_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraCombination --dataset='1D FLUX'\",\n                                     inputs = [Input(\"extr_spectra_list\", content_type=\"listfile\"),\n+                                              Input(\"tu_cat\"),\n                                               Input(\"mdb\"),\n-                                              Input(\"config\"),\n-                                              Input(\"tu_cat\")],\n-                                   outputs = [Output(\"comb_spectra\", mime_type=\"json\", content_type=\"listfile\")],\n+                                              Input(\"config\")],\n+                                   outputs = [Output(\"comb_spectra\", mime_type=\"json\", content_type=\"listfile\"),\n+                                              Output(\"final_spectra\", mime_type=\"xml\")],\n                                  resources = ComputingResources(cores=1, ram=8.0, walltime=2.0)\n )\n \n-\n sir_create_SPE_fits = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_CreateSPEFiles --overwrite\",\n                                  inputs = [Input(\"comb_spectra\",content_type=\"listfile\"),\n                                            Input(\"mer_cat\"),\n@@ -275,82 +265,36 @@ sir_create_SPE_fits_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version}\n                                   resources = ComputingResources(cores=1, ram=4.0, walltime=1.0)\n )\n \n-\n-\n-# ---------------------------------------------------------------------------- #\n # ---------------------------------------------------------------------------- #\n+##  --------------------- SIR \"Calibration \" packages ----------------------  ##\n \n-\n-##  -------------------- SIR \"Calibration\" packages --------------------- ##\n-\n-opt_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_OPTModelCalibration --overwrite\",\n-                            inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n-                                      Input(\"mdb\"),\n-                                      Input(\"opt_model\"),\n-                                      Input(\"tu_cat\", content_type=\"listfile\"),\n-                                      Input(\"config\")],\n-                           outputs = [Output(\"output_xml\")],\n-                         resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n+sort_by_grism = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_SortFrames_ByGrism\",\n+                            inputs = [Input(\"frames\", content_type=\"listfile\")],\n+                           outputs = [Output(\"out_file\", content_type=\"listfile\")],\n+                          resources = ComputingResources(cores=1, ram=1.0, walltime=1.0)\n )\n \n-rot_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_PivotModelCalibration --overwrite\",\n-                            inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n-                                      Input(\"mdb\"),\n-                                      Input(\"opt_model\"),\n-                                      Input(\"crv_model\"),\n-                                      Input(\"config\"),\n-                                      Input(\"tu_cat\", content_type=\"listfile\")],\n-                            outputs = [Output(\"output_xml\")],\n-                          resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n+# -- OPTICAL MODEL (PV 001) -- #\n+opt_model_cal_tu = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_OPTModelCalibration --overwrite\",\n+                               inputs = [Input(\"config\"),\n+                                         Input(\"sci_frame\", content_type=\"listfile\"),\n+                                         Input(\"tu_cat\", content_type=\"listfile\"),\n+                                         Input(\"mdb\"),\n+                                         Input(\"opt_model\")],\n+                              outputs = [Output(\"output_xml\")],\n+                            resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n )\n \n opt_model_cal_mer = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_OPTModelCalibration --overwrite\",\n-                            inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n-                                      Input(\"mdb\"),\n-                                      Input(\"opt_model\"),\n-                                      Input(\"mer_cat\", content_type=\"listfile\")],\n-                           outputs = [Output(\"output_xml\")],\n-                         resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n-)\n-\n-\n-ids_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_IDSModelCalibration --overwrite\",\n-                            inputs = [Input(\"dec_spectra\"),\n-                                      Input(\"sci_frame\"),\n-                                      Input(\"tu_cat\", content_type=\"listfile\"),\n-                                      Input(\"mdb\"),\n-                                      Input(\"opt_model\"),\n-                                      Input(\"crv_model\"),\n-                                      Input(\"ids_model\")],\n-                           outputs = [Output(\"output_xml\")],\n-                         resources = ComputingResources(cores=1, ram=8.0, walltime=2.0)\n-)\n-\n-crv_locate_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraLocation --overwrite --run_type=PN\",\n-                              inputs = [Input(\"sci_frame\"),\n-                                        Input(\"tu_cat\", content_type=\"listfile\"),\n-                                        Input(\"mdb\"),\n-                                        Input(\"opt_model\"),\n-                                        Input(\"ids_model\"),\n-                                        Input(\"config\"),\n-                                        Input(\"crv_model\")],\n-                             outputs = [Output(\"loc_table\", mime_type=\"json\")],\n-                           resources = ComputingResources(cores=1, ram=3.0, walltime=1.0)\n-)\n-\n-crv_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_CRVModelCalibration --overwrite\",\n                             inputs = [Input(\"config\"),\n                                       Input(\"sci_frame\", content_type=\"listfile\"),\n-                                      Input(\"tu_cat\", content_type=\"listfile\"),\n+                                      Input(\"mer_cat\", content_type=\"listfile\"),\n                                       Input(\"mdb\"),\n-                                      Input(\"opt_model\"),\n-                                      Input(\"ids_model\"),\n-                                      Input(\"crv_model\")],\n+                                      Input(\"opt_model\")],\n                            outputs = [Output(\"output_xml\")],\n                          resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n )\n \n-\n collect_cal_opt = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_MergeCalibOpt --validate\",\n                               inputs = [Input(\"calib_list\"),\n                                         Input(\"calib_base\")],\n@@ -358,6 +302,44 @@ collect_cal_opt = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version}\n                            resources = ComputingResources(cores=1, ram=1.0, walltime=1.0)\n )\n \n+\n+# # -- CENTER OF ROTATION MODEL -- #\n+# rot_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_PivotModelCalibration --overwrite\",\n+#                             inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n+#                                       Input(\"mdb\"),\n+#                                       Input(\"opt_model\"),\n+#                                       Input(\"crv_model\"),\n+#                                       Input(\"config\"),\n+#                                       Input(\"tu_cat\", content_type=\"listfile\")],\n+#                             outputs = [Output(\"output_xml\")],\n+#                           resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n+# )\n+\n+## --- CRV MODEL (PV 001) --- ##\n+crv_model_cal_tu = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_CRVModelCalibration --overwrite\",\n+                               inputs = [Input(\"config\"),\n+                                         Input(\"sci_frame\", content_type=\"listfile\"),\n+                                         Input(\"tu_cat\", content_type=\"listfile\"),\n+                                         Input(\"mdb\"),\n+                                         Input(\"opt_model\"),\n+                                         Input(\"ids_model\"),\n+                                         Input(\"crv_model\")],\n+                              outputs = [Output(\"output_xml\")],\n+                            resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n+)\n+\n+crv_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_CRVModelCalibration --overwrite\",\n+                   inputs = [Input(\"config\"),\n+                             Input(\"sci_frame\", content_type=\"listfile\"),\n+                             Input(\"mer_cat\", content_type=\"listfile\"),\n+                             Input(\"mdb\"),\n+                             Input(\"opt_model\"),\n+                             Input(\"ids_model\"),\n+                             Input(\"crv_model\")],\n+                  outputs = [Output(\"output_xml\")],\n+                resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n+)\n+\n collect_cal_crv = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_MergeCalibCrv --validate\",\n                               inputs = [Input(\"calib_list\"),\n                                         Input(\"calib_base\")],\n@@ -365,6 +347,58 @@ collect_cal_crv = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version}\n                            resources = ComputingResources(cores=1, ram=1.0, walltime=1.0)\n )\n \n+## -- IDS MODEL (PV 009) -- ##\n+ids_model_cal_tu = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_IDSModelCalibration --overwrite\",\n+                               inputs = [Input(\"config\"),\n+                                         Input(\"dec_spectra\"),\n+                                         Input(\"sci_frame\"),\n+                                         Input(\"tu_cat\", content_type=\"listfile\"),\n+                                         Input(\"mdb\"),\n+                                         Input(\"opt_model\"),\n+                                         Input(\"crv_model\"),\n+                                         Input(\"ids_model\")],\n+                              outputs = [Output(\"output_xml\")],\n+                            resources = ComputingResources(cores=1, ram=8.0, walltime=2.0)\n+)\n+\n+ids_model_cal_mer = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_IDSModelCalibration --overwrite\",\n+                                inputs = [Input(\"config\"),\n+                                          Input(\"dec_spectra\"),\n+                                          Input(\"sci_frame\"),\n+                                          Input(\"mer_cat\", content_type=\"listfile\"),\n+                                          Input(\"mdb\"),\n+                                          Input(\"opt_model\"),\n+                                          Input(\"crv_model\"),\n+                                          Input(\"ids_model\")],\n+                               outputs = [Output(\"output_xml\")],\n+                             resources = ComputingResources(cores=1, ram=8.0, walltime=2.0)\n+)\n+\n+ids_locate_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraLocation --overwrite --run_type=PN\",\n+                                    inputs = [Input(\"config\"),\n+                                              Input(\"sci_frame\"),\n+                                              Input(\"tu_cat\", content_type=\"listfile\"),\n+                                              Input(\"mdb\"),\n+                                              Input(\"opt_model\"),\n+                                              Input(\"crv_model\"),\n+                                              Input(\"ids_model\")],\n+                                   outputs = [Output(\"loc_table\", mime_type=\"json\")],\n+                                 resources = ComputingResources(cores=1, ram=3.0, walltime=1.0)\n+)\n+\n+ids_locate_spectra_mer = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraLocation --overwrite --run_type=PN\",\n+                                     inputs = [Input(\"config\"),\n+                                               Input(\"sci_frame\"),\n+                                               Input(\"mer_cat\", content_type=\"listfile\"),\n+                                               Input(\"mdb\"),\n+                                               Input(\"opt_model\"),\n+                                               Input(\"crv_model\"),\n+                                               Input(\"ids_model\")],\n+                                    outputs = [Output(\"loc_table\", mime_type=\"json\")],\n+                                  resources = ComputingResources(cores=1, ram=3.0, walltime=1.0)\n+)\n+\n+\n collect_cal_ids = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_MergeCalibIds --validate\",\n                               inputs = [Input(\"calib_list\"),\n                                         Input(\"calib_base\")],\n@@ -373,20 +407,18 @@ collect_cal_ids = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version}\n )\n \n \n-sort_by_grism = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_SortFrames_ByGrism\",\n-                              inputs = [Input(\"frames\", content_type=\"listfile\")],\n-                             outputs = [Output(\"out_file\", content_type=\"listfile\")],\n-                           resources = ComputingResources(cores=1, ram=1.0, walltime=1.0)\n-)\n-\n+## --- RELATIVE FLUX (PV 001) MODEL --- ##\n rel_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_RelFluxModelCalibration\",\n                             inputs = [Input(\"inlist\"),\n                                       Input(\"inloclist\"),\n-                                      Input(\"ms_flat\")],\n+                                      Input(\"ms_flat\"),\n+                                      Input(\"mdbfile\")],\n                            outputs = [Output(\"output_xml\")],\n                          resources = ComputingResources(cores=1, ram=12.0, walltime=12.0)\n )\n \n+\n+## --- ABSOLUTE FLUX (PV 003) MODEL --- ##\n abs_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} ComputeAbsoluteCalibration --saveplots Yes --magrange 'TU_MAG_H_2MASS,18.0,18.1' --survey_standard_stars  'WDJ175318.65+644502.15' --standards_mdb_element 'Survey.Calibration.Sources.ReferenceFlux'\",\n                             inputs = [Input(\"inlist\"),\n                                       Input(\"mdb\"),\n@@ -395,6 +427,17 @@ abs_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} C\n                          resources = ComputingResources(cores=1, ram=12.0, walltime=12.0)\n )\n \n+abs_locate_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraLocation --overwrite --run_type=WD\",\n+                              inputs = [Input(\"config\"),\n+                                        Input(\"sci_frame\"),\n+                                        Input(\"tu_cat\", content_type=\"listfile\"),\n+                                        Input(\"mdb\"),\n+                                        Input(\"opt_model\"),\n+                                        Input(\"crv_model\"),\n+                                        Input(\"ids_model\")],\n+                             outputs = [Output(\"loc_table\", mime_type=\"json\")],\n+                           resources = ComputingResources(cores=1, ram=3.0, walltime=1.0)\n+)\n \n # ---------------------------------------------------------------------------- #\n # ---------------------------------------------------------------------------- #\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-08-11T13:26:05.000+00:00",
                            "cd1e0e365b7e715442dd953c1a7933510e884df7"
                        ],
                        [
                            "@@ -1,5 +1,5 @@\n # ---------------------------------------------------------------------------- #\n-# Package definition for all SIR pipelines\n+# Package definition for all SIR pipelines > 4.0\n #\n # file: PackageDef_SIR.py\n # date: Apr 2022\n@@ -27,7 +27,7 @@ nir_initalize = Executable(command = f\"E-Run NIR_Init {nir_version} NIR_runIniti\n                                       Input(\"mdbfile\")],\n                            outputs = [Output(\"outfile\", mime_type=\"fits\"),\n                                       Output(\"outchi2\", mime_type=\"fits\")],\n-                         resources = ComputingResources(cores=1, ram=2.0, walltime=1.0)\n+                         resources = ComputingResources(cores=1, ram=2.5, walltime=1.0)\n )\n \n \n@@ -43,7 +43,7 @@ mask_saturation = Executable(command = f\"E-Run NIR_NonLinearSaturation {nir_vers\n                          inputs = [Input(\"infile\"),\n                                    Input(\"xmlfile\")],\n                         outputs = [Output(\"outfile\", mime_type=\"fits\")],\n-                      resources = ComputingResources(cores=1, ram=2.0, walltime=1.0)\n+                      resources = ComputingResources(cores=1, ram=2.1, walltime=1.0)\n )\n \n # apply gain\n@@ -51,7 +51,7 @@ correct_nonlinear = Executable(command = f\"E-Run NIR_NonLinearSaturation {nir_ve\n                            inputs = [Input(\"infile\"),\n                                      Input(\"xmlfile\")],\n                           outputs = [Output(\"outfile\", mime_type=\"fits\")],\n-                        resources = ComputingResources(cores=1, ram=2.0, walltime=1.0)\n+                        resources = ComputingResources(cores=1, ram=4.0, walltime=1.0)\n )\n \n \n@@ -64,7 +64,7 @@ subtract_dark = Executable(command = f\"E-Run NIR_DarkBiasSubtraction {nir_versio\n \n \n # --- SIR related\n-cr_rejection = Executable(command = f\"E-Run SIR_Pipeline {sir_version} CrRejectionSpec --no-ipc\",\n+cosmic_rejection = Executable(command = f\"E-Run SIR_Pipeline {sir_version} CrRejectionSpec --no-ipc\",\n                           inputs = [Input(\"grism\"),\n                                     Input(\"chi2file\"),\n                                     Input(\"config\")],\n@@ -73,7 +73,7 @@ cr_rejection = Executable(command = f\"E-Run SIR_Pipeline {sir_version} CrRejecti\n                         )\n \n \n-end_preprocessing = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_EndPreprocessing\",\n+sir_initialize = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_Init\",\n                                inputs = [Input(\"fits_file\"),\n                                          Input(\"le1_dp\"),\n                                          Input(\"mdb\")],\n@@ -81,17 +81,8 @@ end_preprocessing = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_\n                         resources=ComputingResources(cores=1, ram=1.0, walltime=1.0)\n )\n \n-# REPLACE end_preprocessing\n-sir_init = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_Init\",\n-                               inputs = [Input(\"fits_file\"),\n-                                         Input(\"le1_dp\"),\n-                                         Input(\"mdb\")],\n-                              outputs = [Output(\"sci_frame\")],\n-                        resources=ComputingResources(cores=1, ram=1.0, walltime=1.0)\n-)\n-\n-# (detector scaling replaces QE correction\n-detectorScaling=Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_ApplyDetectorScaling\",\n+# REPLACE QE correction\n+detector_scaling=Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_ApplyDetectorScaling\",\n                             inputs = [Input(\"sci_frame_fits\"),\n                                       Input(\"mdb\"),\n                                       Input(\"zodiacal_light\")],\n@@ -105,9 +96,9 @@ locate_spectra = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_Spe\n                                         Input(\"mer_cat\", content_type=\"listfile\"),\n                                         Input(\"mdb\"),\n                                         Input(\"opt_model\"),\n+                                        Input(\"crv_model\"),\n                                         Input(\"ids_model\"),\n-                                        Input(\"config\"),\n-                                        Input(\"crv_model\")],\n+                                        Input(\"config\")],\n                              outputs = [Output(\"loc_table\", mime_type=\"json\")],\n                            resources = ComputingResources(cores=1, ram=3.0, walltime=1.0)\n )\n@@ -116,9 +107,9 @@ locate_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_\n                                         Input(\"tu_cat\", content_type=\"listfile\"),\n                                         Input(\"mdb\"),\n                                         Input(\"opt_model\"),\n+                                        Input(\"crv_model\"), \n                                         Input(\"ids_model\"),\n-                                        Input(\"config\"),\n-                                        Input(\"crv_model\")],\n+                                        Input(\"config\")],\n                              outputs = [Output(\"loc_table\", mime_type=\"json\")],\n                            resources = ComputingResources(cores=1, ram=3.0, walltime=1.0)\n )\n@@ -131,6 +122,7 @@ subtract_bkg = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_Backg\n                                           outputs = [Output(\"bksub_frame\")],\n                                         resources = ComputingResources(cores=1, ram=2.0, walltime=1.0)\n )\n+\n subtract_bkg_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_BackgroundSubtraction --overwrite\",\n                                            inputs = [Input(\"sci_frame\"),\n                                                      Input(\"loc_table\"),\n@@ -140,7 +132,6 @@ subtract_bkg_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_Ba\n                                         resources = ComputingResources(cores=1, ram=2.0, walltime=1.0)\n )\n \n-# technical, no science\n splitLocTable = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_splitLocTable\",\n                             inputs = [Input(\"input_json\", content_type=\"listfile\")],\n                            outputs = [Output(\"LT_json\", mime_type=\"json\", content_type=\"listfile\"),\n@@ -148,6 +139,7 @@ splitLocTable = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_spli\n                                       Output(\"LTXML_json\",mime_type=\"json\",content_type=\"listfile\")],\n                          resources = ComputingResources(cores=1, ram=1.0, walltime=1.0)\n )\n+\n splitLocTable_all = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_splitLocTable --unpack\",\n                             inputs = [Input(\"input_json\", content_type=\"listfile\")],\n                            outputs = [Output(\"LT_json\", mime_type=\"json\", content_type=\"listfile\"),\n@@ -160,49 +152,47 @@ apply_decontamination = Executable(command = f\"E-Run SIR_Pipeline {sir_version}\n                                      inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n                                                Input(\"loc_table\"),\n                                                Input(\"cutouts\", content_type=\"listfile\"),\n-                                               Input(\"config\"),\n-                                               Input(\"mdb\")],\n+                                               Input(\"mdb\"),\n+                                               Input(\"config\")],\n                                     outputs = [Output(\"dec_spectra\", mime_type=\"json\", content_type=\"listfile\")],\n                                   resources = ComputingResources(cores=1, ram=12.0, walltime=4.0)\n )\n-\n-\n apply_decontamination_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraDecontamination --overwrite --cutouts='None'\",\n                                        inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n                                                  Input(\"loc_table\"),\n-                                                 Input(\"config\"),\n-                                                 Input(\"mdb\")],\n+                                                 Input(\"mdb\"),\n+                                                 Input(\"config\")],\n                                       outputs = [Output(\"dec_spectra\", mime_type=\"json\", content_type=\"listfile\")],\n                                     resources = ComputingResources(cores=1, ram=12.0, walltime=4.0)\n )\n \n \n-extract_spectra = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraExtraction --overwrite\",\n-                                inputs = [Input(\"loc_table\"),\n-                                          Input(\"dec_spectra\", content_type=\"listfile\"),\n-                                          Input(\"mer_cat\", content_type=\"listfile\"),\n-                                          Input(\"mdb\"),\n-                                          Input(\"config\")],\n-                               outputs = [Output(\"extr_spectra\", mime_type=\"json\")],\n-                             resources = ComputingResources(cores=1, ram=12.0, walltime=2.0)\n-)\n+# extract_spectra = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraExtraction --overwrite\",\n+#                                 inputs = [Input(\"loc_table\"),\n+#                                           Input(\"dec_spectra\", content_type=\"listfile\"),\n+#                                           Input(\"mer_cat\", content_type=\"listfile\"),\n+#                                           Input(\"mdb\"),\n+#                                           Input(\"config\")],\n+#                                outputs = [Output(\"extr_spectra\", mime_type=\"json\")],\n+#                              resources = ComputingResources(cores=1, ram=12.0, walltime=2.0)\n+# )\n \n-optextract_spectra = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraExtraction --overwrite\",\n-                                inputs = [Input(\"loc_table\"),\n-                                          Input(\"dec_spectra\", content_type=\"listfile\"),\n-                                          Input(\"mer_cat\", content_type=\"listfile\"),\n-                                          Input(\"mdb\"),\n-                                          Input(\"cutouts\",content_type=\"listfile\"),\n-                                          Input(\"sci_frames\",content_type=\"listfile\"),\n-                                          Input(\"config\")],\n-                               outputs = [Output(\"extr_spectra\", mime_type=\"json\")],\n-                             resources = ComputingResources(cores=1, ram=12.0, walltime=2.0)\n+extract_spectra = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraExtraction --overwrite\",\n+                              inputs = [Input(\"loc_table\"),\n+                                        Input(\"dec_spectra\", content_type=\"listfile\"),\n+                                        Input(\"mer_cat\",     content_type=\"listfile\"),\n+                                        Input(\"sci_frames\",  content_type=\"listfile\"),\n+                                        Input(\"cutouts\",     content_type=\"listfile\"),\n+                                        Input(\"mdb\"),\n+                                        Input(\"config\")],\n+                             outputs = [Output(\"extr_spectra\", mime_type=\"json\")],\n+                           resources = ComputingResources(cores=1, ram=12.0, walltime=2.0)\n )\n \n extract_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraExtraction --overwrite\",\n                                 inputs = [Input(\"loc_table\"),\n                                           Input(\"dec_spectra\", content_type=\"listfile\"),\n-                                          Input(\"tu_cat\", content_type=\"listfile\"),\n+                                          Input(\"tu_cat\",      content_type=\"listfile\"),\n                                           Input(\"mdb\"),\n                                           Input(\"config\")],\n                                outputs = [Output(\"extr_spectra\", mime_type=\"json\")],\n@@ -212,12 +202,12 @@ extract_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR\n relflux_correction=Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_RelativeFluxCorrection\",\n                               inputs = [Input(\"extr_spectra_list\", content_type=\"listfile\"),\n                                         Input(\"ms_flat\"),\n+                                        Input(\"mdbfile\"),\n                                         Input(\"config\")],\n                              outputs = [Output(\"output_list\", content_type=\"listfile\", mime_type=\"json\")],\n                            resources = ComputingResources(cores=1, ram=2, walltime=4.0)\n )\n \n-\n absflux_correction=Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_AbsoluteFluxCalibration\",\n                               inputs = [Input(\"extr_spectra_list\", content_type=\"listfile\"),\n                                         Input(\"mdb\"),\n@@ -226,40 +216,40 @@ absflux_correction=Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_A\n                            resources = ComputingResources(cores=1, ram=2, walltime=1.0)\n )\n \n-\n-sirCreateCut = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_CreateCutOuts\",\n-                           inputs = [Input(\"cat\", content_type=\"listfile\"),\n-                                     Input(\"mosaic\", content_type=\"listfile\"),\n-                                     Input(\"segmap\", content_type=\"listfile\")],\n-                          outputs = [Output(\"cutouts\", mime_type=\"json\", content_type=\"listfile\")],\n-                        resources = ComputingResources(cores=1, ram=4.0, walltime=4.0)\n+sir_create_cut = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_CreateCutOuts\",\n+                             inputs = [Input(\"cat\",    content_type=\"listfile\"),\n+                                       Input(\"mosaic\", content_type=\"listfile\"),\n+                                       Input(\"segmap\", content_type=\"listfile\")],\n+                            outputs = [Output(\"cutouts\", mime_type=\"json\", content_type=\"listfile\")],\n+                          resources = ComputingResources(cores=1, ram=4.0, walltime=4.0)\n )\n+\n # ---------------------------------------------------------------------------- #\n # ---------------------------------------------------------------------------- #\n \n \n \n ##  -------------------- SIR \"Combine spectra\" packages --------------------- ##\n-\n combine_spectra = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraCombination --dataset='1D FLUX'\",\n                                     inputs = [Input(\"extr_spectra_list\", content_type=\"listfile\"),\n+                                              Input(\"mer_cat\"),\n                                               Input(\"mdb\"),\n-                                              Input(\"config\"),\n-                                              Input(\"mer_cat\")],\n-                                   outputs = [Output(\"comb_spectra\", mime_type=\"json\", content_type=\"listfile\")],\n+                                              Input(\"config\")],\n+                                   outputs = [Output(\"comb_spectra\", mime_type=\"json\", content_type=\"listfile\"),\n+                                              Output(\"final_spectra\", mime_type=\"xml\")],\n                                  resources = ComputingResources(cores=1, ram=8.0, walltime=2.0)\n )\n \n combine_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraCombination --dataset='1D FLUX'\",\n                                     inputs = [Input(\"extr_spectra_list\", content_type=\"listfile\"),\n+                                              Input(\"tu_cat\"),\n                                               Input(\"mdb\"),\n-                                              Input(\"config\"),\n-                                              Input(\"tu_cat\")],\n-                                   outputs = [Output(\"comb_spectra\", mime_type=\"json\", content_type=\"listfile\")],\n+                                              Input(\"config\")],\n+                                   outputs = [Output(\"comb_spectra\", mime_type=\"json\", content_type=\"listfile\"),\n+                                              Output(\"final_spectra\", mime_type=\"xml\")],\n                                  resources = ComputingResources(cores=1, ram=8.0, walltime=2.0)\n )\n \n-\n sir_create_SPE_fits = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_CreateSPEFiles --overwrite\",\n                                  inputs = [Input(\"comb_spectra\",content_type=\"listfile\"),\n                                            Input(\"mer_cat\"),\n@@ -275,82 +265,36 @@ sir_create_SPE_fits_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version}\n                                   resources = ComputingResources(cores=1, ram=4.0, walltime=1.0)\n )\n \n-\n-\n-# ---------------------------------------------------------------------------- #\n # ---------------------------------------------------------------------------- #\n+##  --------------------- SIR \"Calibration \" packages ----------------------  ##\n \n-\n-##  -------------------- SIR \"Calibration\" packages --------------------- ##\n-\n-opt_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_OPTModelCalibration --overwrite\",\n-                            inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n-                                      Input(\"mdb\"),\n-                                      Input(\"opt_model\"),\n-                                      Input(\"tu_cat\", content_type=\"listfile\"),\n-                                      Input(\"config\")],\n-                           outputs = [Output(\"output_xml\")],\n-                         resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n+sort_by_grism = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_SortFrames_ByGrism\",\n+                            inputs = [Input(\"frames\", content_type=\"listfile\")],\n+                           outputs = [Output(\"out_file\", content_type=\"listfile\")],\n+                          resources = ComputingResources(cores=1, ram=1.0, walltime=1.0)\n )\n \n-rot_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_PivotModelCalibration --overwrite\",\n-                            inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n-                                      Input(\"mdb\"),\n-                                      Input(\"opt_model\"),\n-                                      Input(\"crv_model\"),\n-                                      Input(\"config\"),\n-                                      Input(\"tu_cat\", content_type=\"listfile\")],\n-                            outputs = [Output(\"output_xml\")],\n-                          resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n+# -- OPTICAL MODEL (PV 001) -- #\n+opt_model_cal_tu = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_OPTModelCalibration --overwrite\",\n+                               inputs = [Input(\"config\"),\n+                                         Input(\"sci_frame\", content_type=\"listfile\"),\n+                                         Input(\"tu_cat\", content_type=\"listfile\"),\n+                                         Input(\"mdb\"),\n+                                         Input(\"opt_model\")],\n+                              outputs = [Output(\"output_xml\")],\n+                            resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n )\n \n opt_model_cal_mer = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_OPTModelCalibration --overwrite\",\n-                            inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n-                                      Input(\"mdb\"),\n-                                      Input(\"opt_model\"),\n-                                      Input(\"mer_cat\", content_type=\"listfile\")],\n-                           outputs = [Output(\"output_xml\")],\n-                         resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n-)\n-\n-\n-ids_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_IDSModelCalibration --overwrite\",\n-                            inputs = [Input(\"dec_spectra\"),\n-                                      Input(\"sci_frame\"),\n-                                      Input(\"tu_cat\", content_type=\"listfile\"),\n-                                      Input(\"mdb\"),\n-                                      Input(\"opt_model\"),\n-                                      Input(\"crv_model\"),\n-                                      Input(\"ids_model\")],\n-                           outputs = [Output(\"output_xml\")],\n-                         resources = ComputingResources(cores=1, ram=8.0, walltime=2.0)\n-)\n-\n-crv_locate_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraLocation --overwrite --run_type=PN\",\n-                              inputs = [Input(\"sci_frame\"),\n-                                        Input(\"tu_cat\", content_type=\"listfile\"),\n-                                        Input(\"mdb\"),\n-                                        Input(\"opt_model\"),\n-                                        Input(\"ids_model\"),\n-                                        Input(\"config\"),\n-                                        Input(\"crv_model\")],\n-                             outputs = [Output(\"loc_table\", mime_type=\"json\")],\n-                           resources = ComputingResources(cores=1, ram=3.0, walltime=1.0)\n-)\n-\n-crv_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_CRVModelCalibration --overwrite\",\n                             inputs = [Input(\"config\"),\n                                       Input(\"sci_frame\", content_type=\"listfile\"),\n-                                      Input(\"tu_cat\", content_type=\"listfile\"),\n+                                      Input(\"mer_cat\", content_type=\"listfile\"),\n                                       Input(\"mdb\"),\n-                                      Input(\"opt_model\"),\n-                                      Input(\"ids_model\"),\n-                                      Input(\"crv_model\")],\n+                                      Input(\"opt_model\")],\n                            outputs = [Output(\"output_xml\")],\n                          resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n )\n \n-\n collect_cal_opt = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_MergeCalibOpt --validate\",\n                               inputs = [Input(\"calib_list\"),\n                                         Input(\"calib_base\")],\n@@ -358,6 +302,44 @@ collect_cal_opt = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version}\n                            resources = ComputingResources(cores=1, ram=1.0, walltime=1.0)\n )\n \n+\n+# # -- CENTER OF ROTATION MODEL -- #\n+# rot_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_PivotModelCalibration --overwrite\",\n+#                             inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n+#                                       Input(\"mdb\"),\n+#                                       Input(\"opt_model\"),\n+#                                       Input(\"crv_model\"),\n+#                                       Input(\"config\"),\n+#                                       Input(\"tu_cat\", content_type=\"listfile\")],\n+#                             outputs = [Output(\"output_xml\")],\n+#                           resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n+# )\n+\n+## --- CRV MODEL (PV 001) --- ##\n+crv_model_cal_tu = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_CRVModelCalibration --overwrite\",\n+                               inputs = [Input(\"config\"),\n+                                         Input(\"sci_frame\", content_type=\"listfile\"),\n+                                         Input(\"tu_cat\", content_type=\"listfile\"),\n+                                         Input(\"mdb\"),\n+                                         Input(\"opt_model\"),\n+                                         Input(\"ids_model\"),\n+                                         Input(\"crv_model\")],\n+                              outputs = [Output(\"output_xml\")],\n+                            resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n+)\n+\n+crv_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_CRVModelCalibration --overwrite\",\n+                   inputs = [Input(\"config\"),\n+                             Input(\"sci_frame\", content_type=\"listfile\"),\n+                             Input(\"mer_cat\", content_type=\"listfile\"),\n+                             Input(\"mdb\"),\n+                             Input(\"opt_model\"),\n+                             Input(\"ids_model\"),\n+                             Input(\"crv_model\")],\n+                  outputs = [Output(\"output_xml\")],\n+                resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n+)\n+\n collect_cal_crv = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_MergeCalibCrv --validate\",\n                               inputs = [Input(\"calib_list\"),\n                                         Input(\"calib_base\")],\n@@ -365,6 +347,58 @@ collect_cal_crv = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version}\n                            resources = ComputingResources(cores=1, ram=1.0, walltime=1.0)\n )\n \n+## -- IDS MODEL (PV 009) -- ##\n+ids_model_cal_tu = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_IDSModelCalibration --overwrite\",\n+                               inputs = [Input(\"config\"),\n+                                         Input(\"dec_spectra\"),\n+                                         Input(\"sci_frame\"),\n+                                         Input(\"tu_cat\", content_type=\"listfile\"),\n+                                         Input(\"mdb\"),\n+                                         Input(\"opt_model\"),\n+                                         Input(\"crv_model\"),\n+                                         Input(\"ids_model\")],\n+                              outputs = [Output(\"output_xml\")],\n+                            resources = ComputingResources(cores=1, ram=8.0, walltime=2.0)\n+)\n+\n+ids_model_cal_mer = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_IDSModelCalibration --overwrite\",\n+                                inputs = [Input(\"config\"),\n+                                          Input(\"dec_spectra\"),\n+                                          Input(\"sci_frame\"),\n+                                          Input(\"mer_cat\", content_type=\"listfile\"),\n+                                          Input(\"mdb\"),\n+                                          Input(\"opt_model\"),\n+                                          Input(\"crv_model\"),\n+                                          Input(\"ids_model\")],\n+                               outputs = [Output(\"output_xml\")],\n+                             resources = ComputingResources(cores=1, ram=8.0, walltime=2.0)\n+)\n+\n+ids_locate_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraLocation --overwrite --run_type=PN\",\n+                                    inputs = [Input(\"config\"),\n+                                              Input(\"sci_frame\"),\n+                                              Input(\"tu_cat\", content_type=\"listfile\"),\n+                                              Input(\"mdb\"),\n+                                              Input(\"opt_model\"),\n+                                              Input(\"crv_model\"),\n+                                              Input(\"ids_model\")],\n+                                   outputs = [Output(\"loc_table\", mime_type=\"json\")],\n+                                 resources = ComputingResources(cores=1, ram=3.0, walltime=1.0)\n+)\n+\n+ids_locate_spectra_mer = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraLocation --overwrite --run_type=PN\",\n+                                     inputs = [Input(\"config\"),\n+                                               Input(\"sci_frame\"),\n+                                               Input(\"mer_cat\", content_type=\"listfile\"),\n+                                               Input(\"mdb\"),\n+                                               Input(\"opt_model\"),\n+                                               Input(\"crv_model\"),\n+                                               Input(\"ids_model\")],\n+                                    outputs = [Output(\"loc_table\", mime_type=\"json\")],\n+                                  resources = ComputingResources(cores=1, ram=3.0, walltime=1.0)\n+)\n+\n+\n collect_cal_ids = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_MergeCalibIds --validate\",\n                               inputs = [Input(\"calib_list\"),\n                                         Input(\"calib_base\")],\n@@ -373,20 +407,18 @@ collect_cal_ids = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version}\n )\n \n \n-sort_by_grism = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_SortFrames_ByGrism\",\n-                              inputs = [Input(\"frames\", content_type=\"listfile\")],\n-                             outputs = [Output(\"out_file\", content_type=\"listfile\")],\n-                           resources = ComputingResources(cores=1, ram=1.0, walltime=1.0)\n-)\n-\n+## --- RELATIVE FLUX (PV 001) MODEL --- ##\n rel_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_RelFluxModelCalibration\",\n                             inputs = [Input(\"inlist\"),\n                                       Input(\"inloclist\"),\n-                                      Input(\"ms_flat\")],\n+                                      Input(\"ms_flat\"),\n+                                      Input(\"mdbfile\")],\n                            outputs = [Output(\"output_xml\")],\n                          resources = ComputingResources(cores=1, ram=12.0, walltime=12.0)\n )\n \n+\n+## --- ABSOLUTE FLUX (PV 003) MODEL --- ##\n abs_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} ComputeAbsoluteCalibration --saveplots Yes --magrange 'TU_MAG_H_2MASS,18.0,18.1' --survey_standard_stars  'WDJ175318.65+644502.15' --standards_mdb_element 'Survey.Calibration.Sources.ReferenceFlux'\",\n                             inputs = [Input(\"inlist\"),\n                                       Input(\"mdb\"),\n@@ -395,6 +427,17 @@ abs_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} C\n                          resources = ComputingResources(cores=1, ram=12.0, walltime=12.0)\n )\n \n+abs_locate_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_SpectraLocation --overwrite --run_type=WD\",\n+                              inputs = [Input(\"config\"),\n+                                        Input(\"sci_frame\"),\n+                                        Input(\"tu_cat\", content_type=\"listfile\"),\n+                                        Input(\"mdb\"),\n+                                        Input(\"opt_model\"),\n+                                        Input(\"crv_model\"),\n+                                        Input(\"ids_model\")],\n+                             outputs = [Output(\"loc_table\", mime_type=\"json\")],\n+                           resources = ComputingResources(cores=1, ram=3.0, walltime=1.0)\n+)\n \n # ---------------------------------------------------------------------------- #\n # ---------------------------------------------------------------------------- #\n",
                            "Dm92",
                            "Daniele Tavagnacco",
                            "2023-08-11T13:26:04.000+00:00",
                            "8f2c382ef62c644ad39624f32cf907557fade868"
                        ],
                        [
                            "@@ -13,12 +13,11 @@ from euclidwf.framework.taskdefs import Output\n from euclidwf.framework.taskdefs import ComputingResources\n \n \n-sir_version = '3.1'\n+sir_version = '4.0'\n #'@SIR_USE_VERSION@'\n-sir_cal_version = '3.1'\n+sir_cal_version = '4.0'\n #'@SIR_CAL_USE_VERSION@'\n-#'2.7.4'\n-nir_version = '2.1' # ciclo 13, nuova versione, era 2.0.0\n+nir_version = '2.3' # DM 9.4\n \n \n ##  -------------------- SIR \"Extract spectra\" packages --------------------- ##\n@@ -82,13 +81,21 @@ end_preprocessing = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_\n                         resources=ComputingResources(cores=1, ram=1.0, walltime=1.0)\n )\n \n+# REPLACE end_preprocessing\n+sir_init = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_Init\",\n+                               inputs = [Input(\"fits_file\"),\n+                                         Input(\"le1_dp\"),\n+                                         Input(\"mdb\")],\n+                              outputs = [Output(\"sci_frame\")],\n+                        resources=ComputingResources(cores=1, ram=1.0, walltime=1.0)\n+)\n \n # (detector scaling replaces QE correction\n detectorScaling=Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_ApplyDetectorScaling\",\n-                            inputs = [Input(\"sci_frames\"),\n+                            inputs = [Input(\"sci_frame_fits\"),\n                                       Input(\"mdb\"),\n                                       Input(\"zodiacal_light\")],\n-                            outputs=[Output(\"output_frames\",mime_type=\"json\")],\n+                            outputs=[Output(\"output_frame_fits\",mime_type=\"fits\")],\n                             resources = ComputingResources(cores=1,ram=2.0,walltime=2.0)\n )\n \n@@ -280,7 +287,8 @@ opt_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} S\n                             inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n                                       Input(\"mdb\"),\n                                       Input(\"opt_model\"),\n-                                      Input(\"tu_cat\", content_type=\"listfile\")],\n+                                      Input(\"tu_cat\", content_type=\"listfile\"),\n+                                      Input(\"config\")],\n                            outputs = [Output(\"output_xml\")],\n                          resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n )\n@@ -331,7 +339,8 @@ crv_locate_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version}\n )\n \n crv_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_CRVModelCalibration --overwrite\",\n-                            inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n+                            inputs = [Input(\"config\"),\n+                                      Input(\"sci_frame\", content_type=\"listfile\"),\n                                       Input(\"tu_cat\", content_type=\"listfile\"),\n                                       Input(\"mdb\"),\n                                       Input(\"opt_model\"),\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -13,12 +13,11 @@ from euclidwf.framework.taskdefs import Output\n from euclidwf.framework.taskdefs import ComputingResources\n \n \n-sir_version = '3.1'\n+sir_version = '4.0'\n #'@SIR_USE_VERSION@'\n-sir_cal_version = '3.1'\n+sir_cal_version = '4.0'\n #'@SIR_CAL_USE_VERSION@'\n-#'2.7.4'\n-nir_version = '2.1' # ciclo 13, nuova versione, era 2.0.0\n+nir_version = '2.3' # DM 9.4\n \n \n ##  -------------------- SIR \"Extract spectra\" packages --------------------- ##\n@@ -82,13 +81,21 @@ end_preprocessing = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_\n                         resources=ComputingResources(cores=1, ram=1.0, walltime=1.0)\n )\n \n+# REPLACE end_preprocessing\n+sir_init = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_Init\",\n+                               inputs = [Input(\"fits_file\"),\n+                                         Input(\"le1_dp\"),\n+                                         Input(\"mdb\")],\n+                              outputs = [Output(\"sci_frame\")],\n+                        resources=ComputingResources(cores=1, ram=1.0, walltime=1.0)\n+)\n \n # (detector scaling replaces QE correction\n detectorScaling=Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_ApplyDetectorScaling\",\n-                            inputs = [Input(\"sci_frames\"),\n+                            inputs = [Input(\"sci_frame_fits\"),\n                                       Input(\"mdb\"),\n                                       Input(\"zodiacal_light\")],\n-                            outputs=[Output(\"output_frames\",mime_type=\"json\")],\n+                            outputs=[Output(\"output_frame_fits\",mime_type=\"fits\")],\n                             resources = ComputingResources(cores=1,ram=2.0,walltime=2.0)\n )\n \n@@ -280,7 +287,8 @@ opt_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} S\n                             inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n                                       Input(\"mdb\"),\n                                       Input(\"opt_model\"),\n-                                      Input(\"tu_cat\", content_type=\"listfile\")],\n+                                      Input(\"tu_cat\", content_type=\"listfile\"),\n+                                      Input(\"config\")],\n                            outputs = [Output(\"output_xml\")],\n                          resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n )\n@@ -331,7 +339,8 @@ crv_locate_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version}\n )\n \n crv_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_CRVModelCalibration --overwrite\",\n-                            inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n+                            inputs = [Input(\"config\"),\n+                                      Input(\"sci_frame\", content_type=\"listfile\"),\n                                       Input(\"tu_cat\", content_type=\"listfile\"),\n                                       Input(\"mdb\"),\n                                       Input(\"opt_model\"),\n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -13,12 +13,11 @@ from euclidwf.framework.taskdefs import Output\n from euclidwf.framework.taskdefs import ComputingResources\n \n \n-sir_version = '3.1'\n+sir_version = '4.0'\n #'@SIR_USE_VERSION@'\n-sir_cal_version = '3.1'\n+sir_cal_version = '4.0'\n #'@SIR_CAL_USE_VERSION@'\n-#'2.7.4'\n-nir_version = '2.1' # ciclo 13, nuova versione, era 2.0.0\n+nir_version = '2.3' # DM 9.4\n \n \n ##  -------------------- SIR \"Extract spectra\" packages --------------------- ##\n@@ -82,13 +81,21 @@ end_preprocessing = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_\n                         resources=ComputingResources(cores=1, ram=1.0, walltime=1.0)\n )\n \n+# REPLACE end_preprocessing\n+sir_init = Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_Init\",\n+                               inputs = [Input(\"fits_file\"),\n+                                         Input(\"le1_dp\"),\n+                                         Input(\"mdb\")],\n+                              outputs = [Output(\"sci_frame\")],\n+                        resources=ComputingResources(cores=1, ram=1.0, walltime=1.0)\n+)\n \n # (detector scaling replaces QE correction\n detectorScaling=Executable(command = f\"E-Run SIR_Pipeline {sir_version} SIR_ApplyDetectorScaling\",\n-                            inputs = [Input(\"sci_frames\"),\n+                            inputs = [Input(\"sci_frame_fits\"),\n                                       Input(\"mdb\"),\n                                       Input(\"zodiacal_light\")],\n-                            outputs=[Output(\"output_frames\",mime_type=\"json\")],\n+                            outputs=[Output(\"output_frame_fits\",mime_type=\"fits\")],\n                             resources = ComputingResources(cores=1,ram=2.0,walltime=2.0)\n )\n \n@@ -280,7 +287,8 @@ opt_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} S\n                             inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n                                       Input(\"mdb\"),\n                                       Input(\"opt_model\"),\n-                                      Input(\"tu_cat\", content_type=\"listfile\")],\n+                                      Input(\"tu_cat\", content_type=\"listfile\"),\n+                                      Input(\"config\")],\n                            outputs = [Output(\"output_xml\")],\n                          resources = ComputingResources(cores=1, ram=8.0, walltime=4.0)\n )\n@@ -331,7 +339,8 @@ crv_locate_spectra_tu = Executable(command = f\"E-Run SIR_Pipeline {sir_version}\n )\n \n crv_model_cal = Executable(command = f\"E-Run SIR_Calibration {sir_cal_version} SIR_CRVModelCalibration --overwrite\",\n-                            inputs = [Input(\"sci_frame\", content_type=\"listfile\"),\n+                            inputs = [Input(\"config\"),\n+                                      Input(\"sci_frame\", content_type=\"listfile\"),\n                                       Input(\"tu_cat\", content_type=\"listfile\"),\n                                       Input(\"mdb\"),\n                                       Input(\"opt_model\"),\n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    "README.md": [
                        [
                            "@@ -26,21 +26,18 @@ This is obtained using **two steps** when performing the **nominal** processing\n Or, for testing purposes, by using the pipelines that combine the two nominal steps:\n * [SIR_Process_Field](./SIR_IAL_Pipelines/doc/Field.md) To directly produce _DpdSirCombinedSpectra_ starting from _DpdNispRawFrame_\n * [SIR_Process_Field_Tu](./SIR_IAL_Pipelines/doc/Field_TU.md) To directly produce _DpdSirCombinedSpectra_ starting from _DpdNispRawFrame_, but using the _DpdTrueUniverseOutput_ object to identify the sources instead of the MER catalog\n-  \"\n-\n-Other testing pipelines\n-* [SIR_Process_Background](./SIR_IAL_Pipelines/doc/Background.md): process a _DpdNispRawFrame_ up to the BAckground subtraction step to produce background subtracted Frames _DpdSirScienceFrame_ (PV-006)\n \n ### Calibration \n \n-The SIR **calibration pipelines** are used to produce the 5 calibration objects needed by SIR pipeline to process the images. This pipelines **must be run in order** because each pipeline provides the input for the following pipeline\n+The SIR **calibration pipelines** are used to produce the 5 calibration products needed by SIR pipeline to process the images. This pipelines **must be run in order** because each pipeline provides the input for the following calibration object calculation\n \n+1) [SIR_Calibration_Opt_Mer](./SIR_IAL_Pipelines/doc/calib_opt_mer.md) Produces the _DpdSirOptModel_ optical calibration object using PV-001 field. The pipeline used to test the calibration object production using the TU as sources catalog is [SIR_Calibration_Opt_TU](./SIR_IAL_Pipelines/doc/calib_opt_tu.md)\n+2) [SIR_Calibration_Crv_Mer](./SIR_IAL_Pipelines/doc/calib_crv.md) Produces the _DpdSirCrvModel_ curvature calibration object using PV-001 field. The pipeline used to test the calibration object production using the TU as sources catalog is [SIR_Calibration_Crv_TU](./SIR_IAL_Pipelines/doc/calib_crv_tu.md)\n+3) [SIR_Calibration_Ids_Mer]() Produces the _DpdSirIdsModel_ inverse dispersion object using the PV-009 (PN) field. The pipeline used to test the calibration object production using the TU as sources catalog is [SIR_Calibration_Ids_TU](./SIR_IAL_Pipelines/doc/calib_ids_tu.md)\n \n-1) [SIR_Calibration_Opt](./SIR_IAL_Pipelines/doc/calib_opt.md) Produces the _DpdSirOptModel_ optical calibration object (PV-001)\n-2) [SIR_Calibration_Crv](./SIR_IAL_Pipelines/doc/calib_crv.md) Produces the _DpdSirCrvModel_ curvature clibration object (PV-001)\n-3) [SIR_Calibration_Ids]() Produces the _DpdSirIdsModel_ inverse dispersion object (PV-009)\n-4) [SIR_Calibration_Rel]() Produces the _DpdSirRelativeFluxScaling_ relative flux calibration object (PV-001)\n-5) [SIR_Calibration_Abs]() Produces the _DpdSirAbsoluteFluxScaling_ absolute flux calibration object (PV-003)\n+4) [SIR_Calibration_Rel_Mer]() Produces the _DpdSirRelativeFluxScaling_ relative flux calibration object using the PV-001 field. \n+The pipeline used to test the calibration object production using the TU as sources catalog is [SIR_Calibration_Rel_TU](./SIR_IAL_Pipelines/doc/calib_rel_tu.md)\n+5) [SIR_Calibration_Abs_Mer]() Produces the _DpdSirAbsoluteFluxScaling_ absolute flux calibration object using the PV-003 (WD) field. The pipeline used to test the calibration object production using the TU as sources catalog is [SIR_Calibration_Abs_TU](./SIR_IAL_Pipelines/doc/calib_abs_tu.md)\n \n \n \n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ],
                        [
                            "@@ -8,7 +8,7 @@ The IAL pipelines depend on multiple projects:\n * SIR_Pipeline\n * SIR_Calibration\n * NIR_Pipeline\n-* ST_DataModel\n+* ST_DataModel **9.2**\n \n ## Pipelines \n \n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -8,7 +8,7 @@ The IAL pipelines depend on multiple projects:\n * SIR_Pipeline\n * SIR_Calibration\n * NIR_Pipeline\n-* ST_DataModel\n+* ST_DataModel **9.2**\n \n ## Pipelines \n \n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -8,7 +8,7 @@ The IAL pipelines depend on multiple projects:\n * SIR_Pipeline\n * SIR_Calibration\n * NIR_Pipeline\n-* ST_DataModel\n+* ST_DataModel **9.2**\n \n ## Pipelines \n \n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Abs/PipScript_SIR_Calibration_Abs.py": [
                        [
                            "@@ -1,238 +0,0 @@\n-# ---------------------------------------------------------------------------- #\n-# Pipeline definition for SIR pipeline \"Calibration Absolute Flux\" PV-003\n-#\n-# ---------------------------------------------------------------------------- #\n-\n-from euclidwf.framework.workflow_dsl import pipeline\n-from euclidwf.framework.workflow_dsl import parallel\n-from PackageDef_SIR import *\n-\n-\n-@parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, det_scaling, config):\n-    \"\"\"SIR pre-processing block\n-\n-        This pipeline block prepare science-frame objects applying corrections\n-        and subtracking dark\n-\n-    Args:\n-        raw_dithers (xml): NISP raw-frame image object\n-        mdb (xml): Mission DataBase\n-        masterdark (xml): NIR DpdNirMasterDarkFrame image object\n-        badpixel (xml): NIR DpdNirBadPixelMask mask object\n-\n-    Returns:\n-        list: DpdSirScienceFrame dark-subtracted and corrected objects\n-\n-    Note:\n-        Is executed in parallel on the input DITHERS (DpdNispRawFrame)\n-    \"\"\"\n-\n-    initialized_expo, chi2 = nir_initalize(infile  = raw_dithers,\n-                                           mdbfile = mdb)\n-\n-    badpixmasked_expo = mask_badpixel(infile  = initialized_expo,\n-                                      xmlfile = badpixel)\n-\n-    saturamasked_expo = mask_saturation(infile  = badpixmasked_expo,\n-                                        xmlfile = mdb)\n-\n-    nonlineacorr_expo = correct_nonlinear(infile  = saturamasked_expo,\n-                                          xmlfile = mdb)\n-\n-    darksubtract_expo = subtract_dark(infile     = nonlineacorr_expo,\n-                                      masterdark = masterdark)\n-\n-    crreject_expo     = cr_rejection(grism    = darksubtract_expo,\n-                                     chi2file = chi2,\n-                                     config   = config)\n-\n-\n-    qe_frames         = detectorScaling(sci_frame_fits = crreject_expo, # FITS frames,\n-                                        zodiacal_light = det_scaling,\n-                                                   mdb = mdb)\n-\n-    # replaced by SIR INIT\n-    # science_frame = end_preprocessing(fits_file = qe_frames,\n-    #                                   le1_dp    = raw_dithers,\n-    #                                   mdb       = mdb)\n-\n-    science_frame = sir_init(fits_file = qe_frames,\n-                             le1_dp    = raw_dithers,\n-                             mdb       = mdb)\n-\n-    # explicit\n-    return science_frame\n-# ---------------------------------------------------------------------------- #\n-\n-@parallel(iterable='sci_frame',flatten_all=True)\n-def sir_processing(sci_frame, source_catalog, opt_model, ids_model, crv_model, mdb, sirconfig):\n-    \"\"\"_SIR processiong block\n-\n-        This pipeline block prepare science-frame subtracting background and\n-        prepare location tables for spectra extraction\n-\n-    Args:\n-        science_frame (DpdSirScienceFrame): preprocessed image\n-        source_catalog (DpdMerFinalCatalog): Catalog of sources\n-        mdb (DpdMdbDataBase): Mission \"database\" OBJECT (LoL)\n-        opt_model (DpdSirOptModel): OPT model calibration\n-        ids_model (DpdSirIdsModel): IDS model calibration\n-        crv_model (DpdSirCrvModel): CRV model calibration\n-        sirconfig (DpdSirConfigurationSet): pipeline configuration ini files\n-\n-    Returns:\n-        tuple: (\"location_table\" DpdSirLocationTable objects,\n-                \"science_frame\" DpdSirScienceFrame objects background subtracted)\n-\n-    Note:\n-        It's executed in parallel on science_frame objects\n-    \"\"\"\n-\n-    locations_table = locate_spectra_tu(sci_frame = sci_frame,\n-                                     opt_model = opt_model,\n-                                     ids_model = ids_model,\n-                                     crv_model = crv_model,\n-\t                \t                 tu_cat    = source_catalog,\n-                                     mdb       = mdb,\n-                                     config    = sirconfig)\n-\n-    bkgsub_sci_frame = subtract_bkg_tu(sci_frame = sci_frame,\n-                                    loc_table = locations_table,\n-                                    tu_cat    = source_catalog,\n-                                    config    = sirconfig)\n-\n-    return locations_table, bkgsub_sci_frame\n-# ---------------------------------------------------------------------------- #\n-\n-\n-\n-@parallel(iterable='loc_table', flatten_all='True')\n-def sir_decontamination(loc_table, sci_frame, mdb, sirconfig):\n-\n-    dec_spectra = apply_decontamination_tu(sci_frame = sci_frame,\n-                                           loc_table = loc_table,\n-                                             mdb     = mdb,\n-                                             config  = sirconfig)\n-\n-    return dec_spectra\n-# ---------------------------------------------------------------------------- #\n-\n-\n-\n-@parallel(iterable='loc_table', flatten_all='True')\n-def sir_extraction(loc_table, sci_frame, mdb, source_catalog, rel_calib, abs_calib, sirconfig):\n-    \"\"\"SIR extraction block\n-\n-        This pipeline block extract spectra from images and apply decontamination,\n-        relative and absolute flux calibration\n-\n-    Args:\n-        loc_table (DpdSirLocationTable): SIR objects location table product\n-        sci_frame (DpdSirScienceFrame): cleaned and background subtracted image\n-        mdb (DpdMdbDataBase): Mission \"database\" OBJECT (LoL)\n-        source_catalog (DpdMerFinalCatalog): Catalog of sources\n-        rel_flux (DpdSirRelativeFluxScaling): relative flux calibration object\n-        abs_calib (DpdSirAbsoluteFluxScaling): absolute calibration sensitvity object\n-        sirconfig (DpdSirConfigurationSet): pipeline configuration ini files\n-\n-    Returns:\n-        list: DpdSirExtractedSpectraCollection objects, with extracted spectra organized\n-              by tile\n-\n-    Note:\n-        It's executed in parallel on location_table objects\n-    \"\"\"\n-\n-    extr_spec = extract_spectra_tu(loc_table   = loc_table,\n-                                   dec_spectra = sci_frame,\n-                                   tu_cat      = source_catalog,\n-                                   mdb         = mdb,\n-                                   config      = sirconfig)\n-\n-    relflux_spec = relflux_correction(extr_spectra_list = extr_spec,\n-                                      ms_flat           = rel_calib,\n-                                      config            = sirconfig)\n-\n-    # NO NEED TO APPLY BECAUSE IS USING THE RELFLUX VALUES\n-    # absflux_spec = absflux_correction(extr_spectra_list = relflux_spec,\n-    #                                   sens              = abs_calib,\n-    #                                   mdb               = mdb)\n-\n-    # explicit\n-    #return absflux_spec\n-    return relflux_spec\n-# ---------------------------------------------------------------------------- #\n-\n-\n-## Pipeline ##\n-@pipeline(outputs=('new_abs_calib'))\n-def sir_pipeline(raw_frame, mdb, nir_dark, nir_badpix, tu_cat,\n-                 det_scaling, rel_calib, opt_model, ids_model, crv_model,\n-                 abs_calib, sir_config ):\n-\n-    \"\"\"SIR \"Extract\" pipeline\n-\n-       This pipeline process a single field, intended as an exposure with 4 dithers\n-       to produce extracted spectra objects, divided by tile, according to the tiles\n-       covering the observation.\n-       This is the first pipeline to run to produce intermediate SIR results\n-\n-\n-    Returns:\n-        list: _description_\n-\n-    Warning:\n-        For a single observation, tiles are not entirely covered. This means that\n-        nearby observations processed independently produce should be later collected\n-        by the \"combine pipeline\"\n-    \"\"\"\n-\n-    frames = sir_preprocessing(raw_dithers = raw_frame,\n-                               masterdark  = nir_dark,\n-                               badpixel    = nir_badpix,\n-                               det_scaling = det_scaling,\n-                               mdb         = mdb,\n-                               config      = sir_config)\n-\n-\n-    loc_and_frames = sir_processing(sci_frame = frames,\n-                                    source_catalog = tu_cat,\n-                                    opt_model = opt_model,\n-                                    ids_model = ids_model,\n-                                    crv_model = crv_model,\n-                                    mdb       = mdb,\n-                                    sirconfig = sir_config)\n-\n-    sorted_loc_tables, sci_frames, loc_tables = splitLocTable_all(input_json = loc_and_frames)\n-\n-\n-    deco_spectra = sir_decontamination(loc_table = sorted_loc_tables,\n-                                       sci_frame = sci_frames,\n-                                             mdb = mdb,\n-                                       sirconfig = sir_config)\n-\n-\n-    extr_spectra = sir_extraction(sci_frame = deco_spectra,\n-                                  loc_table = loc_tables,\n-                                  source_catalog = tu_cat,\n-                                  rel_calib  = rel_calib,\n-                                  abs_calib = abs_calib,\n-                                  mdb       = mdb,\n-                                  sirconfig = sir_config)\n-\n-    new_abs_calib = abs_model_cal(inlist = extr_spectra,\n-                                     mdb = mdb,\n-                               sensDpXml = abs_calib)\n-\n-    return new_abs_calib\n-\n-# ---------------------------------------------------------------------------- #\n-\n-\n-if __name__ == '__main__':\n-    from euclidwf.framework.graph_builder import build_graph\n-    from euclidwf.utilities import visualizer\n-    pydron_graph=build_graph(sir_pipeline)\n-    print(str(pydron_graph))\n-    visualizer.visualize_graph(pydron_graph)\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ],
                        [
                            "@@ -9,7 +9,7 @@ from PackageDef_SIR import *\n \n \n @parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n+def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, det_scaling, config):\n     \"\"\"SIR pre-processing block\n \n         This pipeline block prepare science-frame objects applying corrections\n@@ -47,9 +47,19 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n                                      chi2file = chi2,\n                                      config   = config)\n \n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n-                                      le1_dp    = raw_dithers,\n-                                      mdb       = mdb)\n+\n+    qe_frames         = detectorScaling(sci_frame_fits = crreject_expo, # FITS frames,\n+                                        zodiacal_light = det_scaling,\n+                                                   mdb = mdb)\n+\n+    # replaced by SIR INIT\n+    # science_frame = end_preprocessing(fits_file = qe_frames,\n+    #                                   le1_dp    = raw_dithers,\n+    #                                   mdb       = mdb)\n+\n+    science_frame = sir_init(fits_file = qe_frames,\n+                             le1_dp    = raw_dithers,\n+                             mdb       = mdb)\n \n     # explicit\n     return science_frame\n@@ -181,14 +191,12 @@ def sir_pipeline(raw_frame, mdb, nir_dark, nir_badpix, tu_cat,\n     frames = sir_preprocessing(raw_dithers = raw_frame,\n                                masterdark  = nir_dark,\n                                badpixel    = nir_badpix,\n+                               det_scaling = det_scaling,\n                                mdb         = mdb,\n                                config      = sir_config)\n \n-    qe_frames = detectorScaling(sci_frames     = frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb            = mdb)\n \n-    loc_and_frames = sir_processing(sci_frame = qe_frames,\n+    loc_and_frames = sir_processing(sci_frame = frames,\n                                     source_catalog = tu_cat,\n                                     opt_model = opt_model,\n                                     ids_model = ids_model,\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -9,7 +9,7 @@ from PackageDef_SIR import *\n \n \n @parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n+def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, det_scaling, config):\n     \"\"\"SIR pre-processing block\n \n         This pipeline block prepare science-frame objects applying corrections\n@@ -47,9 +47,19 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n                                      chi2file = chi2,\n                                      config   = config)\n \n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n-                                      le1_dp    = raw_dithers,\n-                                      mdb       = mdb)\n+\n+    qe_frames         = detectorScaling(sci_frame_fits = crreject_expo, # FITS frames,\n+                                        zodiacal_light = det_scaling,\n+                                                   mdb = mdb)\n+\n+    # replaced by SIR INIT\n+    # science_frame = end_preprocessing(fits_file = qe_frames,\n+    #                                   le1_dp    = raw_dithers,\n+    #                                   mdb       = mdb)\n+\n+    science_frame = sir_init(fits_file = qe_frames,\n+                             le1_dp    = raw_dithers,\n+                             mdb       = mdb)\n \n     # explicit\n     return science_frame\n@@ -181,14 +191,12 @@ def sir_pipeline(raw_frame, mdb, nir_dark, nir_badpix, tu_cat,\n     frames = sir_preprocessing(raw_dithers = raw_frame,\n                                masterdark  = nir_dark,\n                                badpixel    = nir_badpix,\n+                               det_scaling = det_scaling,\n                                mdb         = mdb,\n                                config      = sir_config)\n \n-    qe_frames = detectorScaling(sci_frames     = frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb            = mdb)\n \n-    loc_and_frames = sir_processing(sci_frame = qe_frames,\n+    loc_and_frames = sir_processing(sci_frame = frames,\n                                     source_catalog = tu_cat,\n                                     opt_model = opt_model,\n                                     ids_model = ids_model,\n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -9,7 +9,7 @@ from PackageDef_SIR import *\n \n \n @parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n+def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, det_scaling, config):\n     \"\"\"SIR pre-processing block\n \n         This pipeline block prepare science-frame objects applying corrections\n@@ -47,9 +47,19 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n                                      chi2file = chi2,\n                                      config   = config)\n \n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n-                                      le1_dp    = raw_dithers,\n-                                      mdb       = mdb)\n+\n+    qe_frames         = detectorScaling(sci_frame_fits = crreject_expo, # FITS frames,\n+                                        zodiacal_light = det_scaling,\n+                                                   mdb = mdb)\n+\n+    # replaced by SIR INIT\n+    # science_frame = end_preprocessing(fits_file = qe_frames,\n+    #                                   le1_dp    = raw_dithers,\n+    #                                   mdb       = mdb)\n+\n+    science_frame = sir_init(fits_file = qe_frames,\n+                             le1_dp    = raw_dithers,\n+                             mdb       = mdb)\n \n     # explicit\n     return science_frame\n@@ -181,14 +191,12 @@ def sir_pipeline(raw_frame, mdb, nir_dark, nir_badpix, tu_cat,\n     frames = sir_preprocessing(raw_dithers = raw_frame,\n                                masterdark  = nir_dark,\n                                badpixel    = nir_badpix,\n+                               det_scaling = det_scaling,\n                                mdb         = mdb,\n                                config      = sir_config)\n \n-    qe_frames = detectorScaling(sci_frames     = frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb            = mdb)\n \n-    loc_and_frames = sir_processing(sci_frame = qe_frames,\n+    loc_and_frames = sir_processing(sci_frame = frames,\n                                     source_catalog = tu_cat,\n                                     opt_model = opt_model,\n                                     ids_model = ids_model,\n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Abs_TU/PipDef_SIR_Calibration_Abs_TU.xml": [
                        [
                            "@@ -1,30 +1,25 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!-- THANK YOU ST FOR CHANGING EVERYTHING INTO A \"MINOR\" RELEASE OF THE DATAMODEL\n-     - very professional -\n--->\n-\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n-    <Id>SIR_Calibration_Abs_@CMAKE_PROJECT_VERSION@</Id>\n+    <Id>SIR_Calibration_Abs_TU_@CMAKE_PROJECT_VERSION@</Id>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineScriptPath>SIR_Calibration_Abs/PipScript_SIR_Calibration_Abs.py</PipelineScriptPath>\n+    <PipelineScriptPath>SIR_Calibration_Abs_TU/PipScript_SIR_Calibration_Abs_TU.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n \n     <InputDataSetPlan>\n-\n <!-- raw_frame -->\n         <KeyProductInputDataPlan>\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n-                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n-                (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n-                (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n-                (raw_frame.Data.GrismWheelTilt == \"UNKNOWN\") AND\n-                (raw_frame.Data.ObservationSequence.Exposure == UNKNOWN) AND\n+                (raw_frame.Header.ManualValidationStatus          != \"INVALID\")       AND\n+                (raw_frame.Header.DataSetRelease                  == \"UNKNOWN\")       AND\n+                (raw_frame.Data.ImgType.Technique                 == \"SPECTROIMAGE\")  AND\n+                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN)         AND\n+                (raw_frame.Data.ObservationSequence.PointingId    == UNKNOWN)         AND\n+                (raw_frame.Data.GrismWheelPos                     == \"UNKNOWN\")       AND\n+                (raw_frame.Data.GrismWheelTilt                    == \"UNKNOWN\")       AND\n+                (raw_frame.Data.ObservationSequence.Exposure      == UNKNOWN)         AND\n                 (raw_frame.Data.ObservationSequence.TotalExposure == UNKNOWN)\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -39,12 +34,12 @@\n             <InputPortName>tu_cat</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n             <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n+                (tu_cat.Header.ManualValidationStatus     != \"INVALID\")   AND\n+                (tu_cat.Header.DataSetRelease             == \"UNKNOWN\")   AND\n+                (tu_cat.Header.PPOId                      == \"UNKNOWN\")   AND\n                 (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n-                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")AND\n-                (tu_cat.Data.MagnitudeLimit != \"UNKNOWN\")\n+                (tu_cat.Data.EuclidPointingId             == \"UNKNOWN\")   AND\n+                (tu_cat.Data.MagnitudeLimit               != \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -66,7 +61,13 @@\n                     \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n                     \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n                     \"NISP_GrismTransmission*\" ,\n-                    \"NISPDetector*\"\n+                    \"NISPDetector*\",\n+                    \"NISPHTransmissionCurves*\",\n+                    \"NISPJTransmissionCurves*\",\n+                    \"NISPYTransmissionCurves*\",\n+                    \"PLMTransmissionNISPNominalEOLCBE*\",\n+                    \"Calibrators_SIM*\",\n+                    \"PN_line*\"\n                 </FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n@@ -81,7 +82,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n+                (sir_config.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -96,7 +97,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n+                (opt_model.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -106,13 +107,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- IDS Sir Configuration -->\n+<!-- CRV Sir Configuration -->\n         <InputDataPlan>\n-            <InputPortName>ids_model</InputPortName>\n-            <DataProductType>DpdSirIdsModel</DataProductType>\n+            <InputPortName>crv_model</InputPortName>\n+            <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (crv_model.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -121,13 +122,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- CRV Sir Configuration -->\n+<!-- IDS Sir Configuration -->\n         <InputDataPlan>\n-            <InputPortName>crv_model</InputPortName>\n-            <DataProductType>DpdSirCrvModel</DataProductType>\n+            <InputPortName>ids_model</InputPortName>\n+            <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (ids_model.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -136,13 +137,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- Detector scaling -->\n+<!-- Relative Flux scaling -->\n         <InputDataPlan>\n-            <InputPortName>det_scaling</InputPortName>\n-            <DataProductType>DpdSirDetectorScaling</DataProductType>\n+            <InputPortName>rel_calib</InputPortName>\n+            <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n-                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n+              (rel_calib.Header.ManualValidationStatus  != \"INVALID\") AND\n+              (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -156,7 +157,7 @@\n             <InputPortName>abs_calib</InputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n+                (abs_calib.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -166,13 +167,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- Relative Flux scaling -->\n+<!-- Detector scaling -->\n         <InputDataPlan>\n-            <InputPortName>rel_calib</InputPortName>\n-            <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n+            <InputPortName>det_scaling</InputPortName>\n+            <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n-              (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (det_scaling.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -186,7 +187,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n+                (nir_dark.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -201,7 +202,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n+                (nir_badpix.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -213,8 +214,8 @@\n \n     </InputDataSetPlan>\n \n-    <!-- Updated Absolute calibration product -->\n     <OutputDataSet>\n+<!-- Updated Absolute calibration product -->\n         <OutputDataProduct>\n             <OutputPortName>new_abs_calib</OutputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n@@ -226,6 +227,7 @@\n         </OutputDataProduct>\n \n     </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>200</EstimatedWorkdirSizeGB>\n+\n+    <EstimatedWorkdirSizeGB>800</EstimatedWorkdirSizeGB>\n \n </tsk1:PipelineDef>\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Abs_TU/PipScript_SIR_Calibration_Abs_TU.py": [
                        [
                            "@@ -0,0 +1,258 @@\n+# ---------------------------------------------------------------------------- #\n+# SIR pipeline \"Calibration Absolute Flux TU\" \n+#\n+# Calblock: PV-003\n+#\n+# Catalog: TU \n+#\n+# Date: August 2023\n+#\n+# Calibration step 5 following REL calibration\n+# ---------------------------------------------------------------------------- #\n+\n+from euclidwf.framework.workflow_dsl import pipeline\n+from euclidwf.framework.workflow_dsl import parallel\n+from PackageDef_SIR import *\n+\n+\n+@parallel(iterable='raw_frames', flatten_all='True')\n+def sir_preprocessing(raw_frames, mdb, dark, badpix, det_scaling, config):\n+    \"\"\"SIR pre-processing block\n+\n+        SIR pipeline block that prepares science_frame objects applying corrections,\n+        and rotating detectors layout of LE1 raw-frames \n+\n+    Args:\n+        raw_frames (XML list): Level 1 NISP DpdNispRawFrame image objects\n+        mdb (XML): DpdMdbDataBase object\n+        dark (XML): NIR DpdNirMasterDarkFrame image object\n+        badpix (XML): NIR DpdNirBadPixelMask mask object\n+        det_scaling (XML): QE correction SIR calibration object\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n+\n+    Returns:\n+        list: DpdSirScienceFrame dark-subtracted and corrected objects\n+\n+    Note:\n+        Is executed in parallel on the independent input raw_frames (DpdNispRawFrame)\n+\n+    Warning:\n+        The output frames have rotated detector layout after SIR_init step        \n+    \"\"\"\n+\n+    initialized_expo, chi2 = nir_initalize(infile  = raw_frames,\n+                                           mdbfile = mdb)\n+\n+    badpixmasked_expo = mask_badpixel(infile  = initialized_expo,\n+                                      xmlfile = badpix)\n+\n+    saturamasked_expo = mask_saturation(infile  = badpixmasked_expo,\n+                                        xmlfile = mdb)\n+\n+    nonlineacorr_expo = correct_nonlinear(infile  = saturamasked_expo,\n+                                          xmlfile = mdb)\n+\n+    darksubtract_expo = subtract_dark(infile     = nonlineacorr_expo,\n+                                      masterdark = dark)\n+\n+    cr_rejected_expo  = cosmic_rejection(grism    = darksubtract_expo,\n+                                         chi2file = chi2,\n+                                         config   = config)\n+    \n+    qe_corrected_expo = detector_scaling(sci_frame_fits = cr_rejected_expo,\n+                                         zodiacal_light = det_scaling,\n+                                         mdb = mdb)\n+\n+    science_frame     = sir_initialize(fits_file = qe_corrected_expo,\n+                                       le1_dp    = raw_frames,\n+                                       mdb       = mdb)\n+\n+    return science_frame\n+# ---------------------------------------------------------------------------- #\n+\n+\n+@parallel(iterable='sci_frames',flatten_all=True)\n+def sir_processing(sci_frames, catalog, opt_model, ids_model, crv_model, mdb, config):\n+    \"\"\"SIR processiong block\n+\n+        SIR pipeline block computing location tables and preparing background \n+        subtracted science-frames (images) needed for spectra extraction\n+\n+    Args:\n+        sci_frames (XML list): SIR preprocessed DpdSirScienceFrame images\n+        catalog (XML list): DpdTrueUniverseOutput or DpdMerFinalCatalog catalog of sources objects\n+        mdb (XML): DpdMdbDataBase object\n+        opt_model (XML): SIR DpdSirOptModel optical model\n+        ids_model (XML): SIR DpdSirIdsModel inverse dipersion solution model\n+        crv_model (XML): SIR DpdSirCrvModel curvature model\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n+\n+    Returns:\n+        tuple: (<DpdSirLocationTable> up to 16 objects, \n+                <DpdSirScienceFrame> 1 background subtracted object)\n+\n+    Note:\n+        It's executed in parallel on sci_frames objects\n+    \"\"\"\n+\n+    locations_tables = locate_spectra_tu(sci_frame = sci_frames,\n+                                         opt_model = opt_model,\n+                                         ids_model = ids_model,\n+                                         crv_model = crv_model,\n+                                         tu_cat    = catalog,\n+                                         mdb       = mdb,\n+                                         config    = config)\n+\n+    bkgsub_sci_frame = subtract_bkg_tu(sci_frame = sci_frames,\n+                                       loc_table = locations_tables,\n+                                       tu_cat    = catalog,\n+                                       config    = config)\n+\n+    return locations_tables, bkgsub_sci_frame\n+# ---------------------------------------------------------------------------- #\n+\n+\n+@parallel(iterable='loc_tables', flatten_all='True')\n+def sir_decontamination(loc_tables, sci_frames, mdb, config):\n+    \"\"\"SIR decontamination block\n+\n+        SIR pipeline block that decontaminate spectra\n+\n+    Args:\n+        loc_tables (list of lists): list of DpdSirLocationTable objects grouped by detector\n+        sci_frames (XML list): SIR processed (background subtracted) DpdSirScienceFrame images\n+        mdb (XML): DpdMdbDataBase object\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n+\n+    Returns:\n+        H5: Decontaminated spectra object for each location table\n+\n+    Note:\n+        It's executed in parallel on loc_tables objects\n+    \"\"\"\n+    dec_spectra = apply_decontamination_tu(sci_frame = sci_frames,\n+                                           loc_table = loc_tables,\n+                                           mdb       = mdb,\n+                                           config    = config)\n+\n+    return dec_spectra\n+# ---------------------------------------------------------------------------- #\n+\n+\n+\n+@parallel(iterable='loc_tables', flatten_all='True')\n+def sir_extraction(loc_tables, dec_spectra, mdb, catalog, rel_calib, config):\n+    \"\"\"SIR extraction block\n+\n+        SIR pipeline block that extract spectra and apply relative flux correction.\n+        Only relative flux calibration is applied to the extraxcted spectra in\n+        the ABS calibration pipeline\n+\n+    Args:\n+        loc_tables (list XML): DpdSirLocationTable objects\n+        dec_spectra (list XML): list of  \n+        mdb (XML): DpdMdbDataBase object\n+        catalog (XML list): DpdTrueUniverseOutput catalog of sources objects\n+        rel_flux (XML): SIR DpdSirRelativeFluxScaling relative flux calibration model\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n+\n+    Returns:\n+        list: DpdSirExtractedSpectraCollection objects\n+\n+    Note:\n+        It's executed in parallel on loc_tables objects\n+    \"\"\"\n+\n+    extr_spec = extract_spectra_tu(loc_table   = loc_tables,\n+                                   dec_spectra = dec_spectra,\n+                                   tu_cat      = catalog,\n+                                   mdb         = mdb,\n+                                   config      = config)\n+\n+    relflux_spec = relflux_correction(extr_spectra_list = extr_spec,\n+                                      ms_flat           = rel_calib,\n+                                      config            = config,\n+                                      mdbfile           = mdb)\n+\n+    return relflux_spec\n+# ---------------------------------------------------------------------------- #\n+\n+\n+# ---------------------------------------------------------------------------- #\n+# PIPELINE\n+# ---------------------------------------------------------------------------- #\n+@pipeline(outputs=('new_abs_calib'))\n+def sir_pipeline(raw_frame, \n+                 tu_cat,\n+                 mdb, \n+                 det_scaling,\n+                 opt_model,\n+                 crv_model,\n+                 ids_model, \n+                 rel_calib, \n+                 abs_calib,\n+                 nir_dark, \n+                 nir_badpix, \n+                 sir_config ):\n+    \"\"\"SIR \"ABS flux TU\" pipeline\n+\n+       This pipeline process 80 to 400 (80 per grism orientation) frames of PV 003  \n+       up to the relative flux calibration step selecting only the detectors \n+       containing the WD calibrator to produce the spectra needed for the \n+       ABS flux calibration product computation\n+       \n+       This CALIBRATION pipeline must run AFTER the REL-flux calibration pipeline\n+\n+    Returns:\n+        New ABS calibration product,that contains updated GRISM sections according to\n+        the GRISM dataset used as input. If 400 frames are provided, all the GRISMS\n+        are updated in the final product    \n+    \"\"\"\n+\n+    frames = sir_preprocessing(raw_frames  = raw_frame,\n+                               dark        = nir_dark,\n+                               badpix      = nir_badpix,\n+                               det_scaling = det_scaling,\n+                               mdb         = mdb,\n+                               config      = sir_config)\n+\n+\n+    loc_and_frames = sir_processing(sci_frames = frames,\n+                                    catalog    = tu_cat,\n+                                    opt_model  = opt_model,\n+                                    ids_model  = ids_model,\n+                                    crv_model  = crv_model,\n+                                    mdb        = mdb,\n+                                    sirconfig  = sir_config)\n+\n+    # in this calibration all location tables are independent\n+    single_loc_tables, sci_frames, loc_tables = splitLocTable_all(input_json = loc_and_frames)\n+\n+\n+    deco_spectra = sir_decontamination(loc_tables = single_loc_tables,\n+                                       sci_frames = sci_frames,\n+                                       mdb        = mdb,\n+                                       config     = sir_config)\n+\n+\n+    extr_spectra = sir_extraction(dec_spectra = deco_spectra,\n+                                  loc_table   = loc_tables,\n+                                  catalog     = tu_cat,\n+                                  rel_calib   = rel_calib,\n+                                  mdb         = mdb,\n+                                  config      = sir_config)\n+\n+    new_abs_calib = abs_model_cal(inlist    = extr_spectra,\n+                                  mdb       = mdb,\n+                                  sensDpXml = abs_calib)\n+\n+    return new_abs_calib\n+# ---------------------------------------------------------------------------- #\n+\n+\n+if __name__ == '__main__':\n+    from euclidwf.framework.graph_builder import build_graph\n+    from euclidwf.utilities import visualizer\n+    pydron_graph=build_graph(sir_pipeline)\n+    print(str(pydron_graph))\n+    visualizer.visualize_graph(pydron_graph)\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Abs_TU/__init__.py": [
                        [
                            "",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Crv/PipDef_SIR_Calibration_Crv.xml": [
                        [
                            "@@ -1,9 +1,4 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!-- THANK YOU ST FOR CHANGING EVERYTHING INTO A \"MINOR\" RELEASE OF THE DATAMODEL\n-     - very professional -\n--->\n-\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <Id>SIR_Calib_Crv_@CMAKE_PROJECT_VERSION@</Id>\n@@ -12,20 +7,19 @@\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n \n     <InputDataSetPlan>\n-\n <!-- raw_frames -->\n         <KeyProductInputDataPlan>\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n-                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n-                (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n-                (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n-                (raw_frame.Data.GrismWheelTilt == \"UNKNOWN\") AND\n-                (raw_frame.Data.ObservationSequence.Exposure == UNKNOWN) AND\n+                (raw_frame.Header.ManualValidationStatus          != \"INVALID\")       AND\n+                (raw_frame.Header.DataSetRelease                  == \"UNKNOWN\")       AND\n+                (raw_frame.Data.ImgType.Technique                 == \"SPECTROIMAGE\")  AND\n+                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN)         AND\n+                (raw_frame.Data.ObservationSequence.PointingId    == UNKNOWN)         AND\n+                (raw_frame.Data.GrismWheelPos                     == \"UNKNOWN\")       AND\n+                (raw_frame.Data.GrismWheelTilt                    == \"UNKNOWN\")       AND\n+                (raw_frame.Data.ObservationSequence.Exposure      == UNKNOWN)         AND\n                 (raw_frame.Data.ObservationSequence.TotalExposure == UNKNOWN)\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -35,52 +29,20 @@\n             </Cardinality>\n         </KeyProductInputDataPlan>\n \n-<!-- TU catalog -->\n-        <InputDataPlan>\n-            <InputPortName>tu_cat</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n-                (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n-                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\") AND\n-                (tu_cat.Data.MagnitudeLimit != \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1000</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- NIR master dark -->\n+<!-- Mer Final Catalogs -->\n         <InputDataPlan>\n-            <InputPortName>nir_dark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n+            <InputPortName>mer_catalog</InputPortName>\n+            <DataProductType>DpdMerFinalCatalog</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n-                (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (mer_catalog.Header.ManualValidationStatus              != \"INVALID\") AND\n+                (mer_catalog.Header.DataSetRelease                      == \"UNKNOWN\") AND\n+                (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN)) AND\n+                (mer_catalog.Data.TileIndex                             == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- NIR Bad Pixel mask -->\n-        <InputDataPlan>\n-            <InputPortName>nir_badpix</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n-                (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n+                <Max>30</Max>\n             </Cardinality>\n         </InputDataPlan>\n \n@@ -95,9 +57,13 @@\n                     \"EUC_NISP_NLSPECTRO*\" ,\n                     \"EUC_NISP_Saturation*\" ,\n                     \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n-                    \"NISP_GrismTransmission*\" ,\n-                    \"NISPDetector*\"\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n+                    \"NISP_GrismTransmission*\",\n+                    \"NISPDetector*\",\n+                    \"NISPHTransmissionCurves*\",\n+                    \"NISPJTransmissionCurves*\",\n+                    \"NISPYTransmissionCurves*\",\n+                    \"PLMTransmissionNISPNominalEOLCBE*\"\n                 </FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n@@ -107,13 +73,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- Detector scaling -->\n+<!-- Sir Configuration -->\n         <InputDataPlan>\n-            <InputPortName>det_scaling</InputPortName>\n-            <DataProductType>DpdSirDetectorScaling</DataProductType>\n+            <InputPortName>sir_config</InputPortName>\n+            <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n-                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (sir_config.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -127,7 +93,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n+                (opt_model.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -137,12 +103,27 @@\n             </Cardinality>\n         </InputDataPlan>\n \n+<!-- CRV Sir Configuration -->\n+        <InputDataPlan>\n+            <InputPortName>crv_model</InputPortName>\n+            <DataProductType>DpdSirCrvModel</DataProductType>\n+            <InputQuerySpecPlan>\n+                (crv_model.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\"\n+            )</InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+\n <!-- IDS Sir Configuration -->\n         <InputDataPlan>\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n+                (ids_model.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -152,14 +133,14 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- CRV Sir Configuration -->\n+<!-- Detector scaling -->\n         <InputDataPlan>\n-            <InputPortName>crv_model</InputPortName>\n-            <DataProductType>DpdSirCrvModel</DataProductType>\n+            <InputPortName>det_scaling</InputPortName>\n+            <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\"\n-            )</InputQuerySpecPlan>\n+                (det_scaling.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n+            </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -167,13 +148,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- Sir Configuration -->\n+<!-- NIR master dark -->\n         <InputDataPlan>\n-            <InputPortName>sir_config</InputPortName>\n-            <DataProductType>DpdSirConfigurationSet</DataProductType>\n+            <InputPortName>nir_dark</InputPortName>\n+            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n-                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (nir_dark.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -182,12 +163,27 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-    </InputDataSetPlan>\n+<!-- NIR Bad Pixel mask -->\n+        <InputDataPlan>\n+            <InputPortName>nir_badpix</InputPortName>\n+            <DataProductType>DpdNirBadPixelMask</DataProductType>\n+            <InputQuerySpecPlan>\n+                (nir_badpix.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n+            </InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n \n+    </InputDataSetPlan>\n \n     <OutputDataSet>\n+<!-- Updated CRV calibration product -->\n         <OutputDataProduct>\n-            <OutputPortName>crv_cal</OutputPortName>\n+            <OutputPortName>new_crv_cal_culo</OutputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ],
                        [
                            "@@ -1,24 +1,26 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-\n-    <EdenVersion>@EDEN@</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Calib_Crv_@CMAKE_PROJECT_VERSION@</Id> \n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n+\n+<!-- THANK YOU ST FOR CHANGING EVERYTHING INTO A \"MINOR\" RELEASE OF THE DATAMODEL\n+     - very professional -\n+-->\n+\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n+\n+    <Id>SIR_Calib_Crv_@CMAKE_PROJECT_VERSION@</Id>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineScriptPath>SIR_Calibration_Crv/PipScript_SIR_Calibration_Crv.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n-    <InputDataSet>\n+\n+    <InputDataSetPlan>\n \n <!-- raw_frames -->\n         <KeyProductInputDataPlan>\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n                 (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n                 (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n                 (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n@@ -38,16 +40,17 @@\n             <InputPortName>tu_cat</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n             <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND \n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (tu_cat.Header.PPOId == \"UNKNOWN\") AND \n+                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n+                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n                 (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n-                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")\n+                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\") AND\n+                (tu_cat.Data.MagnitudeLimit != \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>4</Max>\n+                <Max>1000</Max>\n             </Cardinality>\n         </InputDataPlan>\n \n@@ -56,7 +59,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -71,7 +74,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -89,11 +92,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\" , \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\" , \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\" , \n-                    \"NISP_GrismTransmission*\" , \n+                    \"EUC_NISP_NLSPECTRO*\" ,\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n+                    \"NISP_GrismTransmission*\" ,\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -109,7 +112,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -124,7 +127,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -139,7 +142,7 @@\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -154,7 +157,7 @@\n             <InputPortName>crv_model</InputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\"\n             )</InputQuerySpecPlan>\n             <Cardinality>\n@@ -169,8 +172,8 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n-                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\") \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n+                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -179,16 +182,7 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-\n-<!-- Input dependencies and relations for PLAN with multiple PPO-->\n-        <Dependencies>\n-            <GroupedBy>raw_frame.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"tu_cat\">\n-                <Query>raw_frame.Data.ObservationSequence.ObservationId == tu_cat.Data.EuclidPointingId</Query>\n-            </LinkedBy>\n-\n-        </Dependencies>\n-    </InputDataSet>\n+    </InputDataSetPlan>\n \n \n     <OutputDataSet>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -1,24 +1,26 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-\n-    <EdenVersion>@EDEN@</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Calib_Crv_@CMAKE_PROJECT_VERSION@</Id> \n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n+\n+<!-- THANK YOU ST FOR CHANGING EVERYTHING INTO A \"MINOR\" RELEASE OF THE DATAMODEL\n+     - very professional -\n+-->\n+\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n+\n+    <Id>SIR_Calib_Crv_@CMAKE_PROJECT_VERSION@</Id>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineScriptPath>SIR_Calibration_Crv/PipScript_SIR_Calibration_Crv.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n-    <InputDataSet>\n+\n+    <InputDataSetPlan>\n \n <!-- raw_frames -->\n         <KeyProductInputDataPlan>\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n                 (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n                 (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n                 (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n@@ -38,16 +40,17 @@\n             <InputPortName>tu_cat</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n             <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND \n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (tu_cat.Header.PPOId == \"UNKNOWN\") AND \n+                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n+                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n                 (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n-                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")\n+                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\") AND\n+                (tu_cat.Data.MagnitudeLimit != \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>4</Max>\n+                <Max>1000</Max>\n             </Cardinality>\n         </InputDataPlan>\n \n@@ -56,7 +59,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -71,7 +74,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -89,11 +92,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\" , \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\" , \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\" , \n-                    \"NISP_GrismTransmission*\" , \n+                    \"EUC_NISP_NLSPECTRO*\" ,\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n+                    \"NISP_GrismTransmission*\" ,\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -109,7 +112,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -124,7 +127,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -139,7 +142,7 @@\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -154,7 +157,7 @@\n             <InputPortName>crv_model</InputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\"\n             )</InputQuerySpecPlan>\n             <Cardinality>\n@@ -169,8 +172,8 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n-                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\") \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n+                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -179,16 +182,7 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-\n-<!-- Input dependencies and relations for PLAN with multiple PPO-->\n-        <Dependencies>\n-            <GroupedBy>raw_frame.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"tu_cat\">\n-                <Query>raw_frame.Data.ObservationSequence.ObservationId == tu_cat.Data.EuclidPointingId</Query>\n-            </LinkedBy>\n-\n-        </Dependencies>\n-    </InputDataSet>\n+    </InputDataSetPlan>\n \n \n     <OutputDataSet>\n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -1,24 +1,26 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-\n-    <EdenVersion>@EDEN@</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Calib_Crv_@CMAKE_PROJECT_VERSION@</Id> \n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n+\n+<!-- THANK YOU ST FOR CHANGING EVERYTHING INTO A \"MINOR\" RELEASE OF THE DATAMODEL\n+     - very professional -\n+-->\n+\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n+\n+    <Id>SIR_Calib_Crv_@CMAKE_PROJECT_VERSION@</Id>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineScriptPath>SIR_Calibration_Crv/PipScript_SIR_Calibration_Crv.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n-    <InputDataSet>\n+\n+    <InputDataSetPlan>\n \n <!-- raw_frames -->\n         <KeyProductInputDataPlan>\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n                 (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n                 (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n                 (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n@@ -38,16 +40,17 @@\n             <InputPortName>tu_cat</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n             <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND \n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (tu_cat.Header.PPOId == \"UNKNOWN\") AND \n+                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n+                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n                 (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n-                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")\n+                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\") AND\n+                (tu_cat.Data.MagnitudeLimit != \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>4</Max>\n+                <Max>1000</Max>\n             </Cardinality>\n         </InputDataPlan>\n \n@@ -56,7 +59,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -71,7 +74,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -89,11 +92,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\" , \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\" , \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\" , \n-                    \"NISP_GrismTransmission*\" , \n+                    \"EUC_NISP_NLSPECTRO*\" ,\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n+                    \"NISP_GrismTransmission*\" ,\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -109,7 +112,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -124,7 +127,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -139,7 +142,7 @@\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -154,7 +157,7 @@\n             <InputPortName>crv_model</InputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\"\n             )</InputQuerySpecPlan>\n             <Cardinality>\n@@ -169,8 +172,8 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n-                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\") \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n+                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -179,16 +182,7 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-\n-<!-- Input dependencies and relations for PLAN with multiple PPO-->\n-        <Dependencies>\n-            <GroupedBy>raw_frame.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"tu_cat\">\n-                <Query>raw_frame.Data.ObservationSequence.ObservationId == tu_cat.Data.EuclidPointingId</Query>\n-            </LinkedBy>\n-\n-        </Dependencies>\n-    </InputDataSet>\n+    </InputDataSetPlan>\n \n \n     <OutputDataSet>\n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Crv/PipScript_SIR_Calibration_Crv.py": [
                        [
                            "@@ -1,40 +1,51 @@\n # ---------------------------------------------------------------------------- #\n-# Pipeline definition for SIR pipeline \"Calibration CRV\"\n+# SIR pipeline \"Calibration CRV MER\" \n #\n-# THIS IS THE CALIBRATION STEP 2\n+# Calblock: PV-001\n+#\n+# Catalog: MER \n+#\n+# Date: August 2023\n+#\n+# Calibration step 2 following OPT calibration\n # ---------------------------------------------------------------------------- #\n \n+\n from euclidwf.framework.workflow_dsl import pipeline\n from euclidwf.framework.workflow_dsl import parallel\n from PackageDef_SIR import *\n \n \n-@parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, det_scaling, config):\n+@parallel(iterable='raw_frames', flatten_all='True')\n+def sir_preprocessing(raw_frames, mdb, dark, badpix, det_scaling, config):\n     \"\"\"SIR pre-processing block\n \n-        This pipeline block prepare science-frame objects applying corrections\n-        and subtracking dark\n+        SIR pipeline block that prepares science_frame objects applying corrections,\n+        and rotating detectors layout of LE1 raw-frames \n \n     Args:\n-        raw_dithers (xml): NISP raw-frame image object\n-        mdb (xml): Mission DataBase\n-        masterdark (xml): NIR DpdNirMasterDarkFrame image object\n-        badpixel (xml): NIR DpdNirBadPixelMask mask object\n-        det_scaling (xml): detector scaling product\n+        raw_frames (XML list): Level 1 NISP DpdNispRawFrame image objects\n+        mdb (XML): DpdMdbDataBase object\n+        dark (XML): NIR DpdNirMasterDarkFrame image object\n+        badpix (XML): NIR DpdNirBadPixelMask mask object\n+        det_scaling (XML): QE correction SIR calibration object\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n \n     Returns:\n         list: DpdSirScienceFrame dark-subtracted and corrected objects\n \n     Note:\n-        Is executed in parallel on the input DITHERS (DpdNispRawFrame)\n+        Is executed in parallel on the independent input raw_frames (DpdNispRawFrame)\n+\n+    Warning:\n+        The output frames have rotated detector layout after SIR_init step        \n     \"\"\"\n \n-    initialized_expo, chi2 = nir_initalize(infile  = raw_dithers,\n+    initialized_expo, chi2 = nir_initalize(infile  = raw_frames,\n                                            mdbfile = mdb)\n \n     badpixmasked_expo = mask_badpixel(infile  = initialized_expo,\n-                                      xmlfile = badpixel)\n+                                      xmlfile = badpix)\n \n     saturamasked_expo = mask_saturation(infile  = badpixmasked_expo,\n                                         xmlfile = mdb)\n@@ -43,103 +54,110 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, det_scaling, confi\n                                           xmlfile = mdb)\n \n     darksubtract_expo = subtract_dark(infile     = nonlineacorr_expo,\n-                                      masterdark = masterdark)\n+                                      masterdark = dark)\n \n-    crreject_expo     = cr_rejection(grism    = darksubtract_expo,\n-                                     chi2file = chi2,\n-                                     config   = config)\n+    cr_rejected_expo  = cosmic_rejection(grism    = darksubtract_expo,\n+                                         chi2file = chi2,\n+                                         config   = config)\n     \n-    qe_frames = detectorScaling(sci_frame_fits = crreject_expo, # FITS frames\n-                                zodiacal_light = det_scaling,\n-                                mdb = mdb)\n+    qe_corrected_expo = detector_scaling(sci_frame_fits = cr_rejected_expo,\n+                                         zodiacal_light = det_scaling,\n+                                         mdb = mdb)\n \n-    science_frame = sir_init(fits_file = qe_frames,\n-                             le1_dp    = raw_dithers,\n-                             mdb       = mdb)\n+    science_frame     = sir_initialize(fits_file = qe_corrected_expo,\n+                                       le1_dp    = raw_frames,\n+                                       mdb       = mdb)\n \n-    # explicit\n     return science_frame\n # ---------------------------------------------------------------------------- #\n \n \n \n @parallel(iterable='sci_frames', flatten_all='True')\n-def sir_calibration(sci_frames, tu_cat, opt_model, ids_model, crv_model, mdb, sir_config):\n-    \"\"\"_summary_\n+def sir_calibration(sci_frames, catalog, opt_model, ids_model, crv_model, mdb, config):\n+    \"\"\"SIR CRV calibration block\n+\n+        SIR pipeline block that perform CRV calibration using the list of frames provided\n \n     Args:\n-        frames (_type_): _description_\n-        tu_cat (_type_): _description_\n-        crv_model (_type_): _description_\n-        mdb (_type_): _description_\n+        sci_frames (XML list): SIR preprocessed DpdSirScienceFrame images with the same grism/tilt\n+        catalog (XML list): DpdTrueUniverseOutput or DpdMerFinalCatalog catalog of sources objects\n+        opt_model (XML): SIR DpdSirOptModel optical model\n+        ids_model (XML): SIR DpdSirIdsModel inverse dipersion solution model\n+        crv_model (XML): SIR DpdSirCrvModel curvature model used as First Guess\n+        mdb (XML): DpdMdbDataBase object\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n+\n+    Note:\n+        It's executed in parallel on sci_frames\n+        Every list of sci_frames MUST contain frames with same grism/tilt\n \n     Returns:\n-        _type_: _description_\n+        DpdSirCrvModel: calibration object for grism/tilt of frames provided\n     \"\"\"\n \n-    crv_cal = crv_model_cal(config    = sir_config,\n+    crv_cal = crv_model_cal(config    = config,\n                             sci_frame = sci_frames,\n                             opt_model = opt_model,\n                             ids_model = ids_model,\n                             crv_model = crv_model,\n-                               tu_cat = tu_cat,\n-                                  mdb = mdb)\n+                            mer_cat   = catalog,\n+                            mdb       = mdb)\n \n-    # explicit\n     return crv_cal\n # ---------------------------------------------------------------------------- #\n \n \n-\n # ---------------------------------------------------------------------------- #\n+# PIPELINE\n # ---------------------------------------------------------------------------- #\n-\n-\n-\n-@pipeline(outputs=('crv_cal',))\n-def sir_pipeline(raw_frame, tu_cat, nir_dark, nir_badpix, mdb, det_scaling, opt_model, ids_model, crv_model, sir_config):\n-    \"\"\"_summary_\n-\n-    Args:\n-        dithers (_type_): _description_\n-        tu_cat (_type_): _description_\n-        masterdark (_type_): _description_\n-        badpixel (_type_): _description_\n-        det_scaling (_type_): _description_\n-        opt_model (_type_): _description_\n-        config (_type_): _description_\n-        mdb (_type_): _description_\n+@pipeline(outputs=('new_crv_cal'))\n+def sir_pipeline(raw_frame, \n+                 mer_catalog, \n+                 mdb, \n+                 det_scaling, \n+                 opt_model,   \n+                 crv_model, \n+                 ids_model,\n+                 nir_dark, \n+                 nir_badpix,\n+                 sir_config):\n+    \"\"\"SIR \"CRV MER\" pipeline\n+\n+       This pipeline process 15 to 120 (15 per grism orientation for RGS and 60 for BGS) \n+       frames of PV 001 to update a First Guess CRV model calibration product provided  \n+       \n+       This CALIBRATION pipeline must run AFTER the OPT calibration pipeline\n \n     Returns:\n-        _type_: _description_\n+        New OPT calibration product, that contains updated GRISM sections according to\n+        the GRISM dataset used as input. If 120 frames are provided, all the GRISMS\n+        are updated in the final product    \n     \"\"\"\n-    # parallel on dithers (4)\n-    frames = sir_preprocessing(raw_dithers = raw_frame,\n-                               masterdark = nir_dark,\n-                               badpixel = nir_badpix,\n-                               det_scaling = det_scaling,\n-                               mdb = mdb,\n-                               config= sir_config)\n \n+    frames = sir_preprocessing(raw_frames  = raw_frame,\n+                               dark        = nir_dark,\n+                               badpix      = nir_badpix,\n+                               det_scaling = det_scaling,\n+                               mdb         = mdb,\n+                               config      = sir_config)\n     # group by grism, return list of files \"per grism\" with grouped frames names\n     frame_lists = sort_by_grism(frames=frames)\n \n-\n-    # parallel on grisms (4 grism x 15 frames each in RED selfcal)\n-    crv_cal_list = sir_calibration(sir_config = sir_config,\n+    # parallel on grisms (4 or 5 grism x 15 frames each in selfcal)\n+    crv_cal_list = sir_calibration(config     = sir_config,\n                                    sci_frames = frame_lists,\n-                                       tu_cat = tu_cat,\n-                                    crv_model = crv_model,\n-                                    opt_model = opt_model,\n-                                    ids_model = ids_model,\n-                                          mdb = mdb)\n+                                   catalog    = mer_catalog,\n+                                   crv_model  = crv_model,\n+                                   opt_model  = opt_model,\n+                                   ids_model  = ids_model,\n+                                   mdb        = mdb)\n \n-    # sum up calibrations on 4 dithers\n-    crv_cal = collect_cal_crv(calib_list=crv_cal_list,\n-                                calib_base=crv_model)\n+    # sum up calibrations on different grism/tilt\n+    new_crv_cal = collect_cal_crv(calib_list = crv_cal_list,\n+                                  calib_base = crv_model)\n \n-\n-    return crv_cal\n+    return new_crv_cal\n # ---------------------------------------------------------------------------- #\n \n \n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ],
                        [
                            "@@ -10,7 +10,7 @@ from PackageDef_SIR import *\n \n \n @parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n+def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, det_scaling, config):\n     \"\"\"SIR pre-processing block\n \n         This pipeline block prepare science-frame objects applying corrections\n@@ -21,6 +21,7 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n         mdb (xml): Mission DataBase\n         masterdark (xml): NIR DpdNirMasterDarkFrame image object\n         badpixel (xml): NIR DpdNirBadPixelMask mask object\n+        det_scaling (xml): detector scaling product\n \n     Returns:\n         list: DpdSirScienceFrame dark-subtracted and corrected objects\n@@ -47,10 +48,14 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n     crreject_expo     = cr_rejection(grism    = darksubtract_expo,\n                                      chi2file = chi2,\n                                      config   = config)\n+    \n+    qe_frames = detectorScaling(sci_frame_fits = crreject_expo, # FITS frames\n+                                zodiacal_light = det_scaling,\n+                                mdb = mdb)\n \n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n-                                      le1_dp    = raw_dithers,\n-                                      mdb       = mdb)\n+    science_frame = sir_init(fits_file = qe_frames,\n+                             le1_dp    = raw_dithers,\n+                             mdb       = mdb)\n \n     # explicit\n     return science_frame\n@@ -59,7 +64,7 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n \n \n @parallel(iterable='sci_frames', flatten_all='True')\n-def sir_calibration(sci_frames, tu_cat, opt_model, ids_model, crv_model, mdb):\n+def sir_calibration(sci_frames, tu_cat, opt_model, ids_model, crv_model, mdb, sir_config):\n     \"\"\"_summary_\n \n     Args:\n@@ -72,7 +77,8 @@ def sir_calibration(sci_frames, tu_cat, opt_model, ids_model, crv_model, mdb):\n         _type_: _description_\n     \"\"\"\n \n-    crv_cal = crv_model_cal(sci_frame = sci_frames,\n+    crv_cal = crv_model_cal(config    = sir_config,\n+                            sci_frame = sci_frames,\n                             opt_model = opt_model,\n                             ids_model = ids_model,\n                             crv_model = crv_model,\n@@ -107,24 +113,21 @@ def sir_pipeline(raw_frame, tu_cat, nir_dark, nir_badpix, mdb, det_scaling, opt_\n     Returns:\n         _type_: _description_\n     \"\"\"\n-\n     # parallel on dithers (4)\n     frames = sir_preprocessing(raw_dithers = raw_frame,\n                                masterdark = nir_dark,\n                                badpixel = nir_badpix,\n+                               det_scaling = det_scaling,\n                                mdb = mdb,\n                                config= sir_config)\n-    # all dithers\n-    qe_frames = detectorScaling(sci_frames = frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb = mdb)\n \n     # group by grism, return list of files \"per grism\" with grouped frames names\n-    frame_lists = sort_by_grism(frames=qe_frames)\n+    frame_lists = sort_by_grism(frames=frames)\n \n \n     # parallel on grisms (4 grism x 15 frames each in RED selfcal)\n-    crv_cal_list = sir_calibration(sci_frames = frame_lists,\n+    crv_cal_list = sir_calibration(sir_config = sir_config,\n+                                   sci_frames = frame_lists,\n                                        tu_cat = tu_cat,\n                                     crv_model = crv_model,\n                                     opt_model = opt_model,\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -10,7 +10,7 @@ from PackageDef_SIR import *\n \n \n @parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n+def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, det_scaling, config):\n     \"\"\"SIR pre-processing block\n \n         This pipeline block prepare science-frame objects applying corrections\n@@ -21,6 +21,7 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n         mdb (xml): Mission DataBase\n         masterdark (xml): NIR DpdNirMasterDarkFrame image object\n         badpixel (xml): NIR DpdNirBadPixelMask mask object\n+        det_scaling (xml): detector scaling product\n \n     Returns:\n         list: DpdSirScienceFrame dark-subtracted and corrected objects\n@@ -47,10 +48,14 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n     crreject_expo     = cr_rejection(grism    = darksubtract_expo,\n                                      chi2file = chi2,\n                                      config   = config)\n+    \n+    qe_frames = detectorScaling(sci_frame_fits = crreject_expo, # FITS frames\n+                                zodiacal_light = det_scaling,\n+                                mdb = mdb)\n \n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n-                                      le1_dp    = raw_dithers,\n-                                      mdb       = mdb)\n+    science_frame = sir_init(fits_file = qe_frames,\n+                             le1_dp    = raw_dithers,\n+                             mdb       = mdb)\n \n     # explicit\n     return science_frame\n@@ -59,7 +64,7 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n \n \n @parallel(iterable='sci_frames', flatten_all='True')\n-def sir_calibration(sci_frames, tu_cat, opt_model, ids_model, crv_model, mdb):\n+def sir_calibration(sci_frames, tu_cat, opt_model, ids_model, crv_model, mdb, sir_config):\n     \"\"\"_summary_\n \n     Args:\n@@ -72,7 +77,8 @@ def sir_calibration(sci_frames, tu_cat, opt_model, ids_model, crv_model, mdb):\n         _type_: _description_\n     \"\"\"\n \n-    crv_cal = crv_model_cal(sci_frame = sci_frames,\n+    crv_cal = crv_model_cal(config    = sir_config,\n+                            sci_frame = sci_frames,\n                             opt_model = opt_model,\n                             ids_model = ids_model,\n                             crv_model = crv_model,\n@@ -107,24 +113,21 @@ def sir_pipeline(raw_frame, tu_cat, nir_dark, nir_badpix, mdb, det_scaling, opt_\n     Returns:\n         _type_: _description_\n     \"\"\"\n-\n     # parallel on dithers (4)\n     frames = sir_preprocessing(raw_dithers = raw_frame,\n                                masterdark = nir_dark,\n                                badpixel = nir_badpix,\n+                               det_scaling = det_scaling,\n                                mdb = mdb,\n                                config= sir_config)\n-    # all dithers\n-    qe_frames = detectorScaling(sci_frames = frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb = mdb)\n \n     # group by grism, return list of files \"per grism\" with grouped frames names\n-    frame_lists = sort_by_grism(frames=qe_frames)\n+    frame_lists = sort_by_grism(frames=frames)\n \n \n     # parallel on grisms (4 grism x 15 frames each in RED selfcal)\n-    crv_cal_list = sir_calibration(sci_frames = frame_lists,\n+    crv_cal_list = sir_calibration(sir_config = sir_config,\n+                                   sci_frames = frame_lists,\n                                        tu_cat = tu_cat,\n                                     crv_model = crv_model,\n                                     opt_model = opt_model,\n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -10,7 +10,7 @@ from PackageDef_SIR import *\n \n \n @parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n+def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, det_scaling, config):\n     \"\"\"SIR pre-processing block\n \n         This pipeline block prepare science-frame objects applying corrections\n@@ -21,6 +21,7 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n         mdb (xml): Mission DataBase\n         masterdark (xml): NIR DpdNirMasterDarkFrame image object\n         badpixel (xml): NIR DpdNirBadPixelMask mask object\n+        det_scaling (xml): detector scaling product\n \n     Returns:\n         list: DpdSirScienceFrame dark-subtracted and corrected objects\n@@ -47,10 +48,14 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n     crreject_expo     = cr_rejection(grism    = darksubtract_expo,\n                                      chi2file = chi2,\n                                      config   = config)\n+    \n+    qe_frames = detectorScaling(sci_frame_fits = crreject_expo, # FITS frames\n+                                zodiacal_light = det_scaling,\n+                                mdb = mdb)\n \n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n-                                      le1_dp    = raw_dithers,\n-                                      mdb       = mdb)\n+    science_frame = sir_init(fits_file = qe_frames,\n+                             le1_dp    = raw_dithers,\n+                             mdb       = mdb)\n \n     # explicit\n     return science_frame\n@@ -59,7 +64,7 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n \n \n @parallel(iterable='sci_frames', flatten_all='True')\n-def sir_calibration(sci_frames, tu_cat, opt_model, ids_model, crv_model, mdb):\n+def sir_calibration(sci_frames, tu_cat, opt_model, ids_model, crv_model, mdb, sir_config):\n     \"\"\"_summary_\n \n     Args:\n@@ -72,7 +77,8 @@ def sir_calibration(sci_frames, tu_cat, opt_model, ids_model, crv_model, mdb):\n         _type_: _description_\n     \"\"\"\n \n-    crv_cal = crv_model_cal(sci_frame = sci_frames,\n+    crv_cal = crv_model_cal(config    = sir_config,\n+                            sci_frame = sci_frames,\n                             opt_model = opt_model,\n                             ids_model = ids_model,\n                             crv_model = crv_model,\n@@ -107,24 +113,21 @@ def sir_pipeline(raw_frame, tu_cat, nir_dark, nir_badpix, mdb, det_scaling, opt_\n     Returns:\n         _type_: _description_\n     \"\"\"\n-\n     # parallel on dithers (4)\n     frames = sir_preprocessing(raw_dithers = raw_frame,\n                                masterdark = nir_dark,\n                                badpixel = nir_badpix,\n+                               det_scaling = det_scaling,\n                                mdb = mdb,\n                                config= sir_config)\n-    # all dithers\n-    qe_frames = detectorScaling(sci_frames = frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb = mdb)\n \n     # group by grism, return list of files \"per grism\" with grouped frames names\n-    frame_lists = sort_by_grism(frames=qe_frames)\n+    frame_lists = sort_by_grism(frames=frames)\n \n \n     # parallel on grisms (4 grism x 15 frames each in RED selfcal)\n-    crv_cal_list = sir_calibration(sci_frames = frame_lists,\n+    crv_cal_list = sir_calibration(sir_config = sir_config,\n+                                   sci_frames = frame_lists,\n                                        tu_cat = tu_cat,\n                                     crv_model = crv_model,\n                                     opt_model = opt_model,\n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Crv_TU/PipDef_SIR_Calibration_Crv_TU.xml": [
                        [
                            "@@ -1,28 +1,26 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n-    <EdenVersion>@EDEN@</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Process_Background_@CMAKE_PROJECT_VERSION@</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n+    <Id>SIR_Calib_Crv_TU_@CMAKE_PROJECT_VERSION@</Id>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n-    <PipelineScriptPath>SIR_Process_Background/PipScript_SIR_Process_Background.py</PipelineScriptPath>\n+    <PipelineScriptPath>SIR_Calibration_Crv_TU/PipScript_SIR_Calibration_Crv_TU.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n-    <InputDataSet>\n \n+    <InputDataSetPlan>\n <!-- raw_frames -->\n         <KeyProductInputDataPlan>\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n-                (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n-                (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n-                (raw_frame.Data.GrismWheelTilt == \"UNKNOWN\")\n+                (raw_frame.Header.ManualValidationStatus          != \"INVALID\")       AND\n+                (raw_frame.Header.DataSetRelease                  == \"UNKNOWN\")       AND\n+                (raw_frame.Data.ImgType.Technique                 == \"SPECTROIMAGE\")  AND\n+                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN)         AND\n+                (raw_frame.Data.ObservationSequence.PointingId    == UNKNOWN)         AND\n+                (raw_frame.Data.GrismWheelPos                     == \"UNKNOWN\")       AND\n+                (raw_frame.Data.GrismWheelTilt                    == \"UNKNOWN\")       AND\n+                (raw_frame.Data.ObservationSequence.Exposure      == UNKNOWN)         AND\n+                (raw_frame.Data.ObservationSequence.TotalExposure == UNKNOWN)\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -31,6 +29,25 @@\n             </Cardinality>\n         </KeyProductInputDataPlan>\n \n+<!-- TU catalog -->\n+        <InputDataPlan>\n+            <InputPortName>tu_cat</InputPortName>\n+            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n+            <InputQuerySpecPlan>\n+                (tu_cat.Header.ManualValidationStatus     !=   \"INVALID\")   AND\n+                (tu_cat.Header.DataSetRelease             ==   \"UNKNOWN\")   AND\n+                (tu_cat.Header.PPOId                      ==   \"UNKNOWN\")   AND\n+                (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n+                (tu_cat.Data.EuclidPointingId             ==   \"UNKNOWN\")   AND\n+                (tu_cat.Data.MagnitudeLimit               !=   \"UNKNOWN\")\n+            </InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1000</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+\n <!-- MDB -->\n         <InputDataPlan>\n             <InputPortName>mdb</InputPortName>\n@@ -39,12 +56,16 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\" ,\n+                    \"EUC_NISP_NLSPECTRO*\" ,\n                     \"EUC_NISP_Saturation*\" ,\n                     \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n                     \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n                     \"NISP_GrismTransmission*\" ,\n-                    \"NISPDetector*\"\n+                    \"NISPDetector*\",\n+                    \"NISPHTransmissionCurves*\",\n+                    \"NISPJTransmissionCurves*\",\n+                    \"NISPYTransmissionCurves*\",\n+                    \"PLMTransmissionNISPNominalEOLCBE*\"\n                 </FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n@@ -59,7 +80,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n+                (sir_config.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -74,7 +95,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n+                (opt_model.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -84,28 +105,28 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- IDS Sir Configuration -->\n+<!-- CRV Sir Configuration -->\n         <InputDataPlan>\n-            <InputPortName>ids_model</InputPortName>\n-            <DataProductType>DpdSirIdsModel</DataProductType>\n+            <InputPortName>crv_model</InputPortName>\n+            <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n+                (crv_model.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\"\n+            )</InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-\n-<!-- CRV Sir Configuration -->\n+        \n+<!-- IDS Sir Configuration -->\n         <InputDataPlan>\n-            <InputPortName>crv_model</InputPortName>\n-            <DataProductType>DpdSirCrvModel</DataProductType>\n+            <InputPortName>ids_model</InputPortName>\n+            <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (ids_model.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -119,7 +140,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n+                (det_scaling.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -134,7 +155,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n+                (nir_dark.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -149,7 +170,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n+                (nir_badpix.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -159,48 +180,21 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- TU Catalog -->\n-        <InputDataPlan>\n-            <InputPortName>tu_cat</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n-                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\") AND\n-                (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>30</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-\n-<!-- mah... to pass the tests.... -->\n-        <Dependencies>\n-            <GroupedBy>raw_frame.Data.ObservationSequence.ObservationId</GroupedBy>\n-        </Dependencies>\n-    </InputDataSet>\n-\n+    </InputDataSetPlan>\n \n     <OutputDataSet>\n-\n-    <!-- SIR Science Frame background subtracted: side product -->\n+<!-- Updated CRV calibration product -->\n         <OutputDataProduct>\n-            <OutputPortName>sci_frames</OutputPortName>\n-            <DataProductType>DpdSirScienceFrame</DataProductType>\n+            <OutputPortName>new_crv_cal</OutputPortName>\n+            <DataProductType>DpdSirCrvModel</DataProductType>\n             <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>100</Max>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n             </Cardinality>\n         </OutputDataProduct>\n-\n-\n     </OutputDataSet>\n+\n     <EstimatedWorkdirSizeGB>200</EstimatedWorkdirSizeGB>\n \n </tsk1:PipelineDef>\n-\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Crv_TU/PipScript_SIR_Calibration_Crv_TU.py": [
                        [
                            "@@ -0,0 +1,169 @@\n+# ---------------------------------------------------------------------------- #\n+# SIR pipeline \"Calibration CRV TU\" \n+#\n+# Calblock: PV-001\n+#\n+# Catalog: TU \n+#\n+# Date: August 2023\n+#\n+# Calibration step 2 following OPT calibration\n+# ---------------------------------------------------------------------------- #\n+\n+\n+from euclidwf.framework.workflow_dsl import pipeline\n+from euclidwf.framework.workflow_dsl import parallel\n+from PackageDef_SIR import *\n+\n+\n+@parallel(iterable='raw_frames', flatten_all='True')\n+def sir_preprocessing(raw_frames, mdb, dark, badpix, det_scaling, config):\n+    \"\"\"SIR pre-processing block\n+\n+        SIR pipeline block that prepares science_frame objects applying corrections,\n+        and rotating detectors layout of LE1 raw-frames \n+\n+    Args:\n+        raw_frames (XML list): Level 1 NISP DpdNispRawFrame image objects\n+        mdb (XML): DpdMdbDataBase object\n+        dark (XML): NIR DpdNirMasterDarkFrame image object\n+        badpix (XML): NIR DpdNirBadPixelMask mask object\n+        det_scaling (XML): QE correction SIR calibration object\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n+\n+    Returns:\n+        list: DpdSirScienceFrame dark-subtracted and corrected objects\n+\n+    Note:\n+        Is executed in parallel on the independent input raw_frames (DpdNispRawFrame)\n+\n+    Warning:\n+        The output frames have rotated detector layout after SIR_init step        \n+    \"\"\"\n+\n+    initialized_expo, chi2 = nir_initalize(infile  = raw_frames,\n+                                           mdbfile = mdb)\n+\n+    badpixmasked_expo = mask_badpixel(infile  = initialized_expo,\n+                                      xmlfile = badpix)\n+\n+    saturamasked_expo = mask_saturation(infile  = badpixmasked_expo,\n+                                        xmlfile = mdb)\n+\n+    nonlineacorr_expo = correct_nonlinear(infile  = saturamasked_expo,\n+                                          xmlfile = mdb)\n+\n+    darksubtract_expo = subtract_dark(infile     = nonlineacorr_expo,\n+                                      masterdark = dark)\n+\n+    cr_rejected_expo  = cosmic_rejection(grism    = darksubtract_expo,\n+                                         chi2file = chi2,\n+                                         config   = config)\n+    \n+    qe_corrected_expo = detector_scaling(sci_frame_fits = cr_rejected_expo,\n+                                         zodiacal_light = det_scaling,\n+                                         mdb = mdb)\n+\n+    science_frame     = sir_initialize(fits_file = qe_corrected_expo,\n+                                       le1_dp    = raw_frames,\n+                                       mdb       = mdb)\n+\n+    return science_frame\n+# ---------------------------------------------------------------------------- #\n+\n+\n+@parallel(iterable='sci_frames', flatten_all='True')\n+def sir_calibration(sci_frames, catalog, opt_model, ids_model, crv_model, mdb, config):\n+    \"\"\"SIR CRV calibration block\n+\n+        SIR pipeline block that perform CRV calibration using the list of frames provided\n+\n+    Args:\n+        sci_frames (XML list): SIR preprocessed DpdSirScienceFrame images with the same grism/tilt\n+        catalog (XML list): DpdTrueUniverseOutput or DpdMerFinalCatalog catalog of sources objects\n+        opt_model (XML): SIR DpdSirOptModel optical model\n+        ids_model (XML): SIR DpdSirIdsModel inverse dipersion solution model\n+        crv_model (XML): SIR DpdSirCrvModel curvature model used as First Guess\n+        mdb (XML): DpdMdbDataBase object\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n+\n+    Note:\n+        It's executed in parallel on sci_frames\n+        Every list of sci_frames MUST contain frames with same grism/tilt\n+\n+    Returns:\n+        DpdSirCrvModel: calibration object for grism/tilt of frames provided\n+    \"\"\"\n+\n+    crv_cal = crv_model_cal_tu(config    = config,\n+                               sci_frame = sci_frames,\n+                               opt_model = opt_model,\n+                               ids_model = ids_model,\n+                               crv_model = crv_model,\n+                               tu_cat    = catalog,\n+                               mdb       = mdb)\n+\n+    return crv_cal\n+# ---------------------------------------------------------------------------- #\n+\n+\n+# ---------------------------------------------------------------------------- #\n+# PIPELINE\n+# ---------------------------------------------------------------------------- #\n+@pipeline(outputs=('new_crv_cal'))\n+def sir_pipeline(raw_frame, \n+                 tu_cat, \n+                 mdb, \n+                 det_scaling, \n+                 opt_model,   \n+                 crv_model, \n+                 ids_model,\n+                 nir_dark, \n+                 nir_badpix,\n+                 sir_config):\n+    \"\"\"SIR \"CRV TU\" pipeline\n+\n+       This pipeline process 15 to 120 (15 per grism orientation for RGS and 60 for BGS) \n+       frames of PV 001 to update a First Guess CRV model calibration product provided  \n+       \n+       This CALIBRATION pipeline must run AFTER the OPT calibration pipeline\n+\n+    Returns:\n+        New CRV calibration product, that contains updated GRISM sections according to\n+        the GRISM dataset used as input. If 120 frames are provided, all the GRISMS\n+        are updated in the final product    \n+    \"\"\"\n+\n+    frames = sir_preprocessing(raw_frames  = raw_frame,\n+                               dark        = nir_dark,\n+                               badpix      = nir_badpix,\n+                               det_scaling = det_scaling,\n+                               mdb         = mdb,\n+                               config      = sir_config)\n+\n+    # group by grism, return list of files \"per grism\" with grouped frames names\n+    frame_lists = sort_by_grism(frames=frames)\n+\n+    # parallel on grisms (4 or 5 grism x 15 frames each in selfcal)\n+    crv_cal_list = sir_calibration(config     = sir_config,\n+                                   sci_frames = frame_lists,\n+                                   catalog    = tu_cat,\n+                                   crv_model  = crv_model,\n+                                   opt_model  = opt_model,\n+                                   ids_model  = ids_model,\n+                                   mdb        = mdb)\n+\n+    # sum up calibrations on different grism/tilt\n+    new_crv_cal = collect_cal_crv(calib_list = crv_cal_list,\n+                                  calib_base = crv_model)\n+\n+    return new_crv_cal\n+# ---------------------------------------------------------------------------- #\n+\n+\n+if __name__ == '__main__':\n+    from euclidwf.framework.graph_builder import build_graph\n+    from euclidwf.utilities import visualizer\n+    pydron_graph=build_graph(sir_pipeline)\n+    print(str(pydron_graph))\n+    visualizer.visualize_graph(pydron_graph)\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Crv_TU/__init__.py": [
                        [
                            "",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Ids/PipScript_SIR_Calibration_Ids.py": [
                        [
                            "@@ -1,260 +0,0 @@\n-# ---------------------------------------------------------------------------- #\n-# Pipeline definition for SIR pipeline \"Calibration IDS\" PV-009\n-#\n-# ---------------------------------------------------------------------------- #\n-\n-from euclidwf.framework.workflow_dsl import pipeline\n-from euclidwf.framework.workflow_dsl import parallel\n-from PackageDef_SIR import *\n-\n-\n-@parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, det_scaling, config):\n-    \"\"\"SIR pre-processing block\n-\n-        This pipeline block prepare science-frame objects applying corrections\n-        and subtracking dark\n-\n-    Args:\n-        raw_dithers (xml): NISP raw-frame image object\n-        mdb (xml): Mission DataBase\n-        masterdark (xml): NIR DpdNirMasterDarkFrame image object\n-        badpixel (xml): NIR DpdNirBadPixelMask mask object\n-\n-    Returns:\n-        list: DpdSirScienceFrame dark-subtracted and corrected objects\n-\n-    Note:\n-        Is executed in parallel on the input DITHERS (DpdNispRawFrame)\n-    \"\"\"\n-\n-    initialized_expo, chi2 = nir_initalize(infile  = raw_dithers,\n-                                           mdbfile = mdb)\n-\n-    badpixmasked_expo = mask_badpixel(infile  = initialized_expo,\n-                                      xmlfile = badpixel)\n-\n-    saturamasked_expo = mask_saturation(infile  = badpixmasked_expo,\n-                                        xmlfile = mdb)\n-\n-    nonlineacorr_expo = correct_nonlinear(infile  = saturamasked_expo,\n-                                          xmlfile = mdb)\n-\n-    darksubtract_expo = subtract_dark(infile     = nonlineacorr_expo,\n-                                      masterdark = masterdark)\n-\n-    crreject_expo     = cr_rejection(grism    = darksubtract_expo,\n-                                     chi2file = chi2,\n-                                     config   = config)\n-\n-    qe_frames         = detectorScaling(sci_frame_fits = crreject_expo, # FITS frames,\n-                                        zodiacal_light = det_scaling,\n-                                                   mdb = mdb)\n-\n-    # replaced by SIR INIT\n-    # science_frame = end_preprocessing(fits_file = qe_frames,\n-    #                                   le1_dp    = raw_dithers,\n-    #                                   mdb       = mdb)\n-\n-    science_frame = sir_init(fits_file = qe_frames,\n-                             le1_dp    = raw_dithers,\n-                             mdb       = mdb)\n-\n-    # explicit\n-    return science_frame\n-# ---------------------------------------------------------------------------- #\n-\n-@parallel(iterable='sci_frame',flatten_all=True)\n-def sir_processing(sci_frame, source_catalog, opt_model, ids_model, crv_model, mdb, sirconfig):\n-    \"\"\"_SIR processiong block\n-\n-        This pipeline block prepare science-frame subtracting background and\n-        prepare location tables for spectra extraction\n-\n-    Args:\n-        science_frame (DpdSirScienceFrame): preprocessed image\n-        source_catalog (DpdMerFinalCatalog): Catalog of sources\n-        mdb (DpdMdbDataBase): Mission \"database\" OBJECT (LoL)\n-        opt_model (DpdSirOptModel): OPT model calibration\n-        ids_model (DpdSirIdsModel): IDS model calibration\n-        crv_model (DpdSirCrvModel): CRV model calibration\n-        sirconfig (DpdSirConfigurationSet): pipeline configuration ini files\n-\n-    Returns:\n-        tuple: (\"location_table\" DpdSirLocationTable objects,\n-                \"science_frame\" DpdSirScienceFrame objects background subtracted)\n-\n-    Note:\n-        It's executed in parallel on science_frame objects\n-    \"\"\"\n-\n-    locations_table = crv_locate_spectra_tu(sci_frame = sci_frame,\n-                                            opt_model = opt_model,\n-                                            ids_model = ids_model,\n-                                            crv_model = crv_model,\n-                                            tu_cat    = source_catalog,\n-                                            mdb       = mdb,\n-                                            config    = sirconfig)\n-\n-    bkgsub_sci_frame = subtract_bkg_tu(sci_frame = sci_frame,\n-                                      loc_table = locations_table,\n-                                      tu_cat    = source_catalog,\n-                                      config    = sirconfig)\n-\n-    return locations_table, bkgsub_sci_frame\n-# ---------------------------------------------------------------------------- #\n-\n-\n-\n-@parallel(iterable='loc_table', flatten_all='True')\n-def sir_decontamination(loc_table, sci_frame, mdb, sirconfig):\n-\n-    dec_spectra = apply_decontamination_tu(sci_frame = sci_frame,\n-                                           loc_table = loc_table,\n-                                             mdb     = mdb,\n-                                             config  = sirconfig)\n-\n-    return dec_spectra\n-# ---------------------------------------------------------------------------- #\n-\n-\n-\n-@parallel(iterable='loc_table', flatten_all='True')\n-def sir_extraction(loc_table, sci_frame, mdb, source_catalog, rel_calib, abs_calib, sirconfig):\n-    \"\"\"SIR extraction block\n-\n-        This pipeline block extract spectra from images and apply decontamination,\n-        relative and absolute flux calibration\n-\n-    Args:\n-        loc_table (DpdSirLocationTable): SIR objects location table product\n-        sci_frame (DpdSirScienceFrame): cleaned and background subtracted image\n-        mdb (DpdMdbDataBase): Mission \"database\" OBJECT (LoL)\n-        source_catalog (DpdMerFinalCatalog): Catalog of sources\n-        rel_flux (DpdSirRelativeFluxScaling): relative flux calibration object\n-        abs_calib (DpdSirAbsoluteFluxScaling): absolute calibration sensitvity object\n-        sirconfig (DpdSirConfigurationSet): pipeline configuration ini files\n-\n-    Returns:\n-        list: DpdSirExtractedSpectraCollection objects, with extracted spectra organized\n-              by tile\n-\n-    Note:\n-        It's executed in parallel on location_table objects\n-    \"\"\"\n-\n-    extr_spec = extract_spectra_tu(loc_table   = loc_table,\n-                                   dec_spectra = sci_frame,\n-                                   tu_cat      = source_catalog,\n-                                   mdb         = mdb,\n-                                   config      = sirconfig)\n-\n-    relflux_spec = relflux_correction(extr_spectra_list = extr_spec,\n-                                      ms_flat           = rel_calib,\n-                                      config            = sirconfig)\n-\n-    absflux_spec = absflux_correction(extr_spectra_list = relflux_spec,\n-                                      sens              = abs_calib,\n-                                      mdb               = mdb)\n-\n-    # explicit\n-    return absflux_spec\n-# ---------------------------------------------------------------------------- #\n-\n-\n-@parallel(iterable='sci_frame', flatten_all='True')\n-def sir_calibration(dec_spectra, sci_frame, tu_cat, mdb, opt_model, crv_model, ids_model):\n-    \"\"\"Compute IDS calibration for each group od frames\n-\n-    Args:\n-\n-    Returns:\n-        _type_: IDS model calibration for grism obtained from list of frames file\n-    \"\"\"\n-\n-    ids_cal = ids_model_cal(dec_spectra = dec_spectra,\n-                              sci_frame = sci_frame,\n-                                 tu_cat = tu_cat,\n-                                    mdb = mdb,\n-                              opt_model = opt_model,\n-                              crv_model = crv_model,\n-                              ids_model = ids_model)\n-\n-    # explicit\n-    return ids_cal\n-# ---------------------------------------------------------------------------- #\n-\n-\n-## Pipeline ##\n-@pipeline(outputs=('ids_calib'))\n-def sir_pipeline(raw_frame, mdb, nir_dark, nir_badpix, tu_cat,\n-                 det_scaling, opt_model, ids_model, crv_model, sir_config ):\n-\n-    \"\"\"SIR \"Extract\" pipeline\n-\n-       This pipeline process a single field, intended as an exposure with 4 dithers\n-       to produce extracted spectra objects, divided by tile, according to the tiles\n-       covering the observation.\n-       This is the first pipeline to run to produce intermediate SIR results\n-\n-\n-    Returns:\n-        list: _description_\n-\n-    Warning:\n-        For a single observation, tiles are not entirely covered. This means that\n-        nearby observations processed independently produce should be later collected\n-        by the \"combine pipeline\"\n-    \"\"\"\n-\n-    frames = sir_preprocessing(raw_dithers = raw_frame,\n-                               masterdark  = nir_dark,\n-                               badpixel    = nir_badpix,\n-                               det_scaling = det_scaling,\n-                               mdb         = mdb,\n-                               config      = sir_config)\n-\n-    loc_and_frames = sir_processing(sci_frame = frames,\n-                                    source_catalog = tu_cat,\n-                                    opt_model = opt_model,\n-                                    ids_model = ids_model,\n-                                    crv_model = crv_model,\n-                                    mdb       = mdb,\n-                                    sirconfig = sir_config)\n-\n-    # split all location tables to have 1 object per detector per observation\n-    sorted_loc_tables   , sci_frames, _ = splitLocTable_all(input_json = loc_and_frames)\n-\n-    # parallel on location table, now det by det by image (16x80xgrism)\n-    deco_spectra = sir_decontamination(loc_table = sorted_loc_tables,\n-                                       sci_frame = sci_frames,\n-                                             mdb = mdb,\n-                                       sirconfig = sir_config)\n-\n-    # group by grism, return list of files \"per grism\" with grouped frames names\n-    frame_lists = sort_by_grism(frames=sci_frames)\n-\n-    # parallel on grisms (N grisms x M frames each)\n-    ids_cal_list = sir_calibration(dec_spectra = deco_spectra,\n-                                   sci_frame = sci_frames,\n-                                      tu_cat = tu_cat,\n-                                         mdb = mdb,\n-                                   opt_model = opt_model,\n-                                   crv_model = crv_model,\n-                                   ids_model = ids_model)\n-\n-\n-    # update IDS calibration\n-    ids_calib = collect_cal_ids(calib_list = ids_cal_list,\n-                                calib_base = ids_model)\n-\n-    return ids_calib\n-# ---------------------------------------------------------------------------- #\n-\n-\n-if __name__ == '__main__':\n-    from euclidwf.framework.graph_builder import build_graph\n-    from euclidwf.utilities import visualizer\n-    pydron_graph=build_graph(sir_pipeline)\n-    print(str(pydron_graph))\n-    visualizer.visualize_graph(pydron_graph)\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ],
                        [
                            "@@ -9,7 +9,7 @@ from PackageDef_SIR import *\n \n \n @parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n+def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, det_scaling, config):\n     \"\"\"SIR pre-processing block\n \n         This pipeline block prepare science-frame objects applying corrections\n@@ -47,9 +47,18 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n                                      chi2file = chi2,\n                                      config   = config)\n \n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n-                                      le1_dp    = raw_dithers,\n-                                      mdb       = mdb)\n+    qe_frames         = detectorScaling(sci_frame_fits = crreject_expo, # FITS frames,\n+                                        zodiacal_light = det_scaling,\n+                                                   mdb = mdb)\n+\n+    # replaced by SIR INIT\n+    # science_frame = end_preprocessing(fits_file = qe_frames,\n+    #                                   le1_dp    = raw_dithers,\n+    #                                   mdb       = mdb)\n+\n+    science_frame = sir_init(fits_file = qe_frames,\n+                             le1_dp    = raw_dithers,\n+                             mdb       = mdb)\n \n     # explicit\n     return science_frame\n@@ -201,14 +210,11 @@ def sir_pipeline(raw_frame, mdb, nir_dark, nir_badpix, tu_cat,\n     frames = sir_preprocessing(raw_dithers = raw_frame,\n                                masterdark  = nir_dark,\n                                badpixel    = nir_badpix,\n+                               det_scaling = det_scaling,\n                                mdb         = mdb,\n                                config      = sir_config)\n \n-    qe_frames = detectorScaling(sci_frames     = frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb            = mdb)\n-\n-    loc_and_frames = sir_processing(sci_frame = qe_frames,\n+    loc_and_frames = sir_processing(sci_frame = frames,\n                                     source_catalog = tu_cat,\n                                     opt_model = opt_model,\n                                     ids_model = ids_model,\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -9,7 +9,7 @@ from PackageDef_SIR import *\n \n \n @parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n+def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, det_scaling, config):\n     \"\"\"SIR pre-processing block\n \n         This pipeline block prepare science-frame objects applying corrections\n@@ -47,9 +47,18 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n                                      chi2file = chi2,\n                                      config   = config)\n \n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n-                                      le1_dp    = raw_dithers,\n-                                      mdb       = mdb)\n+    qe_frames         = detectorScaling(sci_frame_fits = crreject_expo, # FITS frames,\n+                                        zodiacal_light = det_scaling,\n+                                                   mdb = mdb)\n+\n+    # replaced by SIR INIT\n+    # science_frame = end_preprocessing(fits_file = qe_frames,\n+    #                                   le1_dp    = raw_dithers,\n+    #                                   mdb       = mdb)\n+\n+    science_frame = sir_init(fits_file = qe_frames,\n+                             le1_dp    = raw_dithers,\n+                             mdb       = mdb)\n \n     # explicit\n     return science_frame\n@@ -201,14 +210,11 @@ def sir_pipeline(raw_frame, mdb, nir_dark, nir_badpix, tu_cat,\n     frames = sir_preprocessing(raw_dithers = raw_frame,\n                                masterdark  = nir_dark,\n                                badpixel    = nir_badpix,\n+                               det_scaling = det_scaling,\n                                mdb         = mdb,\n                                config      = sir_config)\n \n-    qe_frames = detectorScaling(sci_frames     = frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb            = mdb)\n-\n-    loc_and_frames = sir_processing(sci_frame = qe_frames,\n+    loc_and_frames = sir_processing(sci_frame = frames,\n                                     source_catalog = tu_cat,\n                                     opt_model = opt_model,\n                                     ids_model = ids_model,\n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -9,7 +9,7 @@ from PackageDef_SIR import *\n \n \n @parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n+def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, det_scaling, config):\n     \"\"\"SIR pre-processing block\n \n         This pipeline block prepare science-frame objects applying corrections\n@@ -47,9 +47,18 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n                                      chi2file = chi2,\n                                      config   = config)\n \n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n-                                      le1_dp    = raw_dithers,\n-                                      mdb       = mdb)\n+    qe_frames         = detectorScaling(sci_frame_fits = crreject_expo, # FITS frames,\n+                                        zodiacal_light = det_scaling,\n+                                                   mdb = mdb)\n+\n+    # replaced by SIR INIT\n+    # science_frame = end_preprocessing(fits_file = qe_frames,\n+    #                                   le1_dp    = raw_dithers,\n+    #                                   mdb       = mdb)\n+\n+    science_frame = sir_init(fits_file = qe_frames,\n+                             le1_dp    = raw_dithers,\n+                             mdb       = mdb)\n \n     # explicit\n     return science_frame\n@@ -201,14 +210,11 @@ def sir_pipeline(raw_frame, mdb, nir_dark, nir_badpix, tu_cat,\n     frames = sir_preprocessing(raw_dithers = raw_frame,\n                                masterdark  = nir_dark,\n                                badpixel    = nir_badpix,\n+                               det_scaling = det_scaling,\n                                mdb         = mdb,\n                                config      = sir_config)\n \n-    qe_frames = detectorScaling(sci_frames     = frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb            = mdb)\n-\n-    loc_and_frames = sir_processing(sci_frame = qe_frames,\n+    loc_and_frames = sir_processing(sci_frame = frames,\n                                     source_catalog = tu_cat,\n                                     opt_model = opt_model,\n                                     ids_model = ids_model,\n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Ids_TU/PipDef_SIR_Calibration_Ids_TU.xml": [
                        [
                            "@@ -1,26 +1,25 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n-    <Id>SIR_Calibration_Ids_@CMAKE_PROJECT_VERSION@</Id>\n+    <Id>SIR_Calibration_Ids_TU_@CMAKE_PROJECT_VERSION@</Id>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineScriptPath>SIR_Calibration_Ids/PipScript_SIR_Calibration_Ids.py</PipelineScriptPath>\n+    <PipelineScriptPath>SIR_Calibration_Ids_TU/PipScript_SIR_Calibration_Ids_TU.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n \n     <InputDataSetPlan>\n-\n <!-- raw_frame -->\n         <KeyProductInputDataPlan>\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n-                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n-                (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n-                (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n-                (raw_frame.Data.GrismWheelTilt == \"UNKNOWN\") AND\n-                (raw_frame.Data.ObservationSequence.Exposure == UNKNOWN) AND\n+                (raw_frame.Header.ManualValidationStatus          != \"INVALID\")       AND\n+                (raw_frame.Header.DataSetRelease                  == \"UNKNOWN\")       AND\n+                (raw_frame.Data.ImgType.Technique                 == \"SPECTROIMAGE\")  AND\n+                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN)         AND\n+                (raw_frame.Data.ObservationSequence.PointingId    == UNKNOWN)         AND\n+                (raw_frame.Data.GrismWheelPos                     == \"UNKNOWN\")       AND\n+                (raw_frame.Data.GrismWheelTilt                    == \"UNKNOWN\")       AND\n+                (raw_frame.Data.ObservationSequence.Exposure      == UNKNOWN)         AND\n                 (raw_frame.Data.ObservationSequence.TotalExposure == UNKNOWN)\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -35,12 +34,12 @@\n             <InputPortName>tu_cat</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n             <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n+                (tu_cat.Header.ManualValidationStatus     !=   \"INVALID\") AND\n+                (tu_cat.Header.DataSetRelease             ==   \"UNKNOWN\") AND\n+                (tu_cat.Header.PPOId                      ==   \"UNKNOWN\") AND\n                 (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n-                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")  AND\n-                (tu_cat.Data.MagnitudeLimit != \"UNKNOWN\")\n+                (tu_cat.Data.EuclidPointingId             ==   \"UNKNOWN\") AND\n+                (tu_cat.Data.MagnitudeLimit               !=   \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -62,7 +61,13 @@\n                     \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n                     \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n                     \"NISP_GrismTransmission*\" ,\n-                    \"NISPDetector*\"\n+                    \"NISPDetector*\",\n+                    \"NISPHTransmissionCurves*\",\n+                    \"NISPJTransmissionCurves*\",\n+                    \"NISPYTransmissionCurves*\",\n+                    \"PLMTransmissionNISPNominalEOLCBE*\",\n+                    \"Calibrators_SIM*\",\n+                    \"PN_line*\"\n                 </FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n@@ -77,7 +82,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n+                (sir_config.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -92,7 +97,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n+                (opt_model.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -102,13 +107,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- IDS Sir Configuration -->\n+<!-- CRV Sir Configuration -->\n         <InputDataPlan>\n-            <InputPortName>ids_model</InputPortName>\n-            <DataProductType>DpdSirIdsModel</DataProductType>\n+            <InputPortName>crv_model</InputPortName>\n+            <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (crv_model.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -117,13 +122,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- CRV Sir Configuration -->\n+<!-- IDS Sir Configuration -->\n         <InputDataPlan>\n-            <InputPortName>crv_model</InputPortName>\n-            <DataProductType>DpdSirCrvModel</DataProductType>\n+            <InputPortName>ids_model</InputPortName>\n+            <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (ids_model.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -137,7 +142,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n+                (det_scaling.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -152,7 +157,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n+                (nir_dark.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -167,7 +172,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n+                (nir_badpix.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -179,10 +184,10 @@\n \n     </InputDataSetPlan>\n \n-\n     <OutputDataSet>\n+<!-- Updated IDS calibration product -->\n         <OutputDataProduct>\n-            <OutputPortName>ids_calib</OutputPortName>\n+            <OutputPortName>new_ids_calib</OutputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -191,6 +196,7 @@\n             </Cardinality>\n         </OutputDataProduct>\n     </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>200</EstimatedWorkdirSizeGB>\n+\n+    <EstimatedWorkdirSizeGB>600</EstimatedWorkdirSizeGB>\n \n </tsk1:PipelineDef>\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Ids_TU/PipScript_SIR_Calibration_Ids_TU.py": [
                        [
                            "@@ -0,0 +1,258 @@\n+# ---------------------------------------------------------------------------- #\n+# SIR pipeline \"Calibration IDS TU\" \n+#\n+# Calblock: PV-009 (PN)\n+#\n+# Catalog: TU \n+#\n+# Date: August 2023\n+#\n+# Calibration step 3 following CRV calibration\n+# ---------------------------------------------------------------------------- #\n+\n+\n+from euclidwf.framework.workflow_dsl import pipeline\n+from euclidwf.framework.workflow_dsl import parallel\n+from PackageDef_SIR import *\n+\n+\n+@parallel(iterable='raw_frames', flatten_all='True')\n+def sir_preprocessing(raw_frames, mdb, dark, badpix, det_scaling, config):\n+    \"\"\"SIR pre-processing block\n+\n+        SIR pipeline block that prepares science_frame objects applying corrections,\n+        and rotating detectors layout of LE1 raw-frames \n+\n+    Args:\n+        raw_frames (XML list): Level 1 NISP DpdNispRawFrame image objects\n+        mdb (XML): DpdMdbDataBase object\n+        dark (XML): NIR DpdNirMasterDarkFrame image object\n+        badpix (XML): NIR DpdNirBadPixelMask mask object\n+        det_scaling (XML): QE correction SIR calibration object\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n+\n+    Returns:\n+        list: DpdSirScienceFrame dark-subtracted and corrected objects\n+\n+    Note:\n+        Is executed in parallel on the independent input raw_frames (DpdNispRawFrame)\n+\n+    Warning:\n+        The output frames have rotated detector layout after SIR_init step        \n+    \"\"\"\n+\n+    initialized_expo, chi2 = nir_initalize(infile  = raw_frames,\n+                                           mdbfile = mdb)\n+\n+    badpixmasked_expo = mask_badpixel(infile  = initialized_expo,\n+                                      xmlfile = badpix)\n+\n+    saturamasked_expo = mask_saturation(infile  = badpixmasked_expo,\n+                                        xmlfile = mdb)\n+\n+    nonlineacorr_expo = correct_nonlinear(infile  = saturamasked_expo,\n+                                          xmlfile = mdb)\n+\n+    darksubtract_expo = subtract_dark(infile     = nonlineacorr_expo,\n+                                      masterdark = dark)\n+\n+    cr_rejected_expo  = cosmic_rejection(grism    = darksubtract_expo,\n+                                         chi2file = chi2,\n+                                         config   = config)\n+    \n+    qe_corrected_expo = detector_scaling(sci_frame_fits = cr_rejected_expo,\n+                                         zodiacal_light = det_scaling,\n+                                         mdb = mdb)\n+\n+    science_frame     = sir_initialize(fits_file = qe_corrected_expo,\n+                                       le1_dp    = raw_frames,\n+                                       mdb       = mdb)\n+\n+    return science_frame\n+# ---------------------------------------------------------------------------- #\n+\n+\n+@parallel(iterable='sci_frames',flatten_all=True)\n+def sir_processing(sci_frames, catalog, opt_model, ids_model, crv_model, mdb, config):\n+    \"\"\"SIR processiong block\n+\n+        SIR pipeline block computing location tables and preparing background \n+        subtracted science-frames (images) needed for spectra extraction\n+\n+    Args:\n+        sci_frames (XML list): SIR preprocessed DpdSirScienceFrame images\n+        catalog (XML list): DpdTrueUniverseOutput or catalog of sources objects\n+        mdb (XML): DpdMdbDataBase object\n+        opt_model (XML): SIR DpdSirOptModel optical model\n+        ids_model (XML): SIR DpdSirIdsModel inverse dipersion solution model\n+        crv_model (XML): SIR DpdSirCrvModel curvature model\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n+\n+    Returns:\n+        tuple: (<DpdSirLocationTable> up to 16 objects, \n+                <DpdSirScienceFrame> 1 background subtracted object)\n+\n+    Note:\n+        It's executed in parallel on sci_frames objects\n+    \"\"\"\n+\n+    locations_tables = ids_locate_spectra_tu(sci_frame = sci_frames,\n+                                             opt_model = opt_model,\n+                                             ids_model = ids_model,\n+                                             crv_model = crv_model,\n+                                             tu_cat    = catalog,\n+                                             mdb       = mdb,\n+                                             config    = config)\n+\n+    bkgsub_sci_frame = subtract_bkg_tu(sci_frame = sci_frames,\n+                                       loc_table = locations_tables,\n+                                       tu_cat    = catalog,\n+                                       config    = config)\n+\n+    return locations_tables, bkgsub_sci_frame\n+# ---------------------------------------------------------------------------- #\n+\n+\n+@parallel(iterable='loc_tables', flatten_all='True')\n+def sir_decontamination(loc_tables, sci_frames, mdb, config):\n+    \"\"\"SIR decontamination block\n+\n+        SIR pipeline block that decontaminate spectra\n+\n+    Args:\n+        loc_tables (list of lists): list of DpdSirLocationTable objects grouped by detector\n+        sci_frames (XML list): SIR processed (background subtracted) DpdSirScienceFrame images\n+        mdb (XML): DpdMdbDataBase object\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n+\n+    Returns:\n+        H5: Decontaminated spectra object for each location table\n+\n+    Note:\n+        It's executed in parallel on loc_tables objects\n+    \"\"\"\n+    dec_spectra = apply_decontamination_tu(sci_frame = sci_frames,\n+                                           loc_table = loc_tables,\n+                                           mdb       = mdb,\n+                                           config    = config)\n+\n+    return dec_spectra\n+# ---------------------------------------------------------------------------- #\n+\n+\n+@parallel(iterable='sci_frames', flatten_all='True')\n+def sir_calibration(sci_frames, dec_spectra, catalog, mdb, opt_model, crv_model, ids_model, config):\n+    \"\"\"SIR IDS calibration block\n+\n+        This block perform IDS calibration using the list of frames provided ( each group od frames)\n+\n+    Args:\n+        sci_frames (XML list): SIR processed (background subtracted) DpdSirScienceFrame images\n+        dec_spectra (list XML): list of  \n+        catalog (XML list): DpdTrueUniverseOutput or DpdMerFinalCatalog catalog of sources objects\n+        mdb (XML): DpdMdbDataBase object\n+        opt_model (XML): SIR DpdSirOptModel optical model\n+        ids_model (XML): SIR DpdSirIdsModel inverse dipersion solution model used as First Guess\n+        crv_model (XML): SIR DpdSirCrvModel curvature model\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n+\n+            Note:\n+        It's executed in parallel on sci_frames lists.\n+        Every list of sci_frames must contain frames with same grism/tilt\n+\n+    Returns:\n+        DpdSirIDSModel: calibration object for grism/tilt of frames provided\n+    \"\"\"\n+    ids_cal = ids_model_cal_tu(dec_spectra = dec_spectra,\n+                               sci_frame   = sci_frames,\n+                               tu_cat      = catalog,\n+                               mdb         = mdb,\n+                               opt_model   = opt_model,\n+                               crv_model   = crv_model,\n+                               ids_model   = ids_model,\n+                               config      = config)\n+\n+    return ids_cal\n+# ---------------------------------------------------------------------------- #\n+\n+\n+# ---------------------------------------------------------------------------- #\n+# PIPELINE\n+# ---------------------------------------------------------------------------- #\n+@pipeline(outputs=('new_ids_calib'))\n+def sir_pipeline(raw_frame, \n+                 tu_cat,\n+                 mdb, \n+                 det_scaling,\n+                 opt_model,\n+                 crv_model,\n+                 ids_model, \n+                 nir_dark, \n+                 nir_badpix, \n+                 sir_config ):\n+    \"\"\"SIR \"IDS TU\" pipeline\n+\n+       This pipeline process 80 to 400 (80 per grism orientation) frames of PV 009  \n+       up to the decontamination step selecting only the detectors containing the \n+       PN calibrator to produce the spectra needed for the IDS calibration product \n+       computation\n+       \n+       This CALIBRATION pipeline must run AFTER the CRV calibration pipeline\n+\n+    Returns:\n+        New IDS calibration product,that contains updated GRISM sections according to\n+        the GRISM dataset used as input. If 400 frames are provided, all the GRISMS\n+        are updated in the final product    \n+    \"\"\"\n+\n+    frames = sir_preprocessing(raw_frames  = raw_frame,\n+                               dark        = nir_dark,\n+                               badpix      = nir_badpix,\n+                               det_scaling = det_scaling,\n+                               mdb         = mdb,\n+                               config      = sir_config)\n+\n+    loc_and_frames = sir_processing(sci_frames = frames,\n+                                    catalog    = tu_cat,\n+                                    opt_model  = opt_model,\n+                                    ids_model  = ids_model,\n+                                    crv_model  = crv_model,\n+                                    mdb        = mdb,\n+                                    config     = sir_config)\n+\n+    # in this calibration all location tables are independent\n+    single_loc_tables, sci_frames, _ = splitLocTable_all(input_json = loc_and_frames)\n+\n+    # parallel on location tables (1 selected detector x 80frames x N_grism)\n+    deco_spectra = sir_decontamination(loc_tables = single_loc_tables,\n+                                       sci_frames = sci_frames,\n+                                       mdb        = mdb,\n+                                       config     = sir_config)\n+\n+    # group by grism, return list of files \"per grism\" with grouped frames names\n+    frame_lists = sort_by_grism(frames=sci_frames)\n+\n+    # parallel on grisms (N grisms x M frames each)\n+    ids_cal_list = sir_calibration(dec_spectra = deco_spectra,  \n+                                   sci_frames  = frame_lists,    \n+                                   catalog     = tu_cat,\n+                                   mdb         = mdb,\n+                                   opt_model   = opt_model,\n+                                   crv_model   = crv_model,\n+                                   ids_model   = ids_model,\n+                                   config      = sir_config)\n+\n+    # sum up calibrations on different grism/tilt\n+    new_ids_calib = collect_cal_ids(calib_list = ids_cal_list,\n+                                    calib_base = ids_model)\n+\n+    return new_ids_calib\n+# ---------------------------------------------------------------------------- #\n+\n+\n+if __name__ == '__main__':\n+    from euclidwf.framework.graph_builder import build_graph\n+    from euclidwf.utilities import visualizer\n+    pydron_graph=build_graph(sir_pipeline)\n+    print(str(pydron_graph))\n+    visualizer.visualize_graph(pydron_graph)\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Ids_TU/__init__.py": [
                        [
                            "",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Opt/PipDef_SIR_Calibration_Opt.xml": [
                        [
                            "@@ -1,31 +1,25 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!-- THANK YOU ST FOR CHANGING EVERYTHING INTO A \"MINOR\" RELEASE OF THE DATAMODEL\n-     - very professional -\n--->\n-\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <Id>SIR_Calib_Opt_@CMAKE_PROJECT_VERSION@</Id>\n-    <ArchiveProcessingFlag>EAS_SERVICE_ONLY</ArchiveProcessingFlag>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineScriptPath>SIR_Calibration_Opt/PipScript_SIR_Calibration_Opt.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n \n     <InputDataSetPlan>\n-\n <!-- raw_frames -->\n         <KeyProductInputDataPlan>\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n-                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n-                (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n-                (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n-                (raw_frame.Data.GrismWheelTilt == \"UNKNOWN\") AND\n-                (raw_frame.Data.ObservationSequence.Exposure == UNKNOWN) AND\n+                (raw_frame.Header.ManualValidationStatus          != \"INVALID\")       AND\n+                (raw_frame.Header.DataSetRelease                  == \"UNKNOWN\")       AND\n+                (raw_frame.Data.ImgType.Technique                 == \"SPECTROIMAGE\")  AND\n+                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN)         AND\n+                (raw_frame.Data.ObservationSequence.PointingId    == UNKNOWN)         AND\n+                (raw_frame.Data.GrismWheelPos                     == \"UNKNOWN\")       AND\n+                (raw_frame.Data.GrismWheelTilt                    == \"UNKNOWN\")       AND\n+                (raw_frame.Data.ObservationSequence.Exposure      == UNKNOWN)         AND\n                 (raw_frame.Data.ObservationSequence.TotalExposure == UNKNOWN)\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -35,33 +29,43 @@\n             </Cardinality>\n         </KeyProductInputDataPlan>\n \n-<!-- TU catalog -->\n+<!-- Mer Final Catalogs -->\n         <InputDataPlan>\n-            <InputPortName>tu_cat</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n+            <InputPortName>mer_catalog</InputPortName>\n+            <DataProductType>DpdMerFinalCatalog</DataProductType>\n             <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n-                (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n-                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\") AND\n-                (tu_cat.Data.MagnitudeLimit != \"UNKNOWN\")\n+                (mer_catalog.Header.ManualValidationStatus              != \"INVALID\") AND\n+                (mer_catalog.Header.DataSetRelease                      == \"UNKNOWN\") AND\n+                (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN)) AND\n+                (mer_catalog.Data.TileIndex                             == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>100</Max>\n+                <Max>30</Max>\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- NIR master dark -->\n+<!-- MDB -->\n         <InputDataPlan>\n-            <InputPortName>nir_dark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n-                (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n+            <InputPortName>mdb</InputPortName>\n+            <DataProductType>DpdMdbDataBase</DataProductType>\n+            <InputQuerySpecPlan>(mdb.Header.ProductId.LimitedString == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <FileFiltering>\n+                <FilesToInclude>\n+                    \"EUC_NISP_GAIN*\",\n+                    \"EUC_NISP_NLSPECTRO*\" ,\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n+                    \"NISP_GrismTransmission*\",\n+                    \"NISPDetector*\",\n+                    \"NISPHTransmissionCurves*\",\n+                    \"NISPJTransmissionCurves*\",\n+                    \"NISPYTransmissionCurves*\",\n+                    \"PLMTransmissionNISPNominalEOLCBE*\"\n+                </FilesToInclude>\n+            </FileFiltering>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -69,13 +73,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- NIR Bad Pixel mask -->\n+<!-- Sir Configuration -->\n         <InputDataPlan>\n-            <InputPortName>nir_badpix</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n+            <InputPortName>sir_config</InputPortName>\n+            <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n-                (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (sir_config.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -84,22 +88,14 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- MDB -->\n+<!-- OPT Sir Configuration -->\n         <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>(mdb.Header.ProductId.LimitedString == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\n-                    \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_NLSPECTRO*\" ,\n-                    \"EUC_NISP_Saturation*\" ,\n-                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n-                    \"NISP_GrismTransmission*\" ,\n-                    \"NISPDetector*\"\n-                </FilesToInclude>\n-            </FileFiltering>\n+            <InputPortName>opt_model</InputPortName>\n+            <DataProductType>DpdSirOptModel</DataProductType>\n+            <InputQuerySpecPlan>\n+                (opt_model.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n+            </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -112,7 +108,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n+                (det_scaling.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -122,13 +118,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- OPT Sir Configuration -->\n+<!-- NIR master dark -->\n         <InputDataPlan>\n-            <InputPortName>opt_model</InputPortName>\n-            <DataProductType>DpdSirOptModel</DataProductType>\n+            <InputPortName>nir_dark</InputPortName>\n+            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (nir_dark.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -137,13 +133,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- Sir Configuration -->\n+<!-- NIR Bad Pixel mask -->\n         <InputDataPlan>\n-            <InputPortName>sir_config</InputPortName>\n-            <DataProductType>DpdSirConfigurationSet</DataProductType>\n+            <InputPortName>nir_badpix</InputPortName>\n+            <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n-                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (nir_badpix.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -154,10 +150,10 @@\n \n     </InputDataSetPlan>\n \n-\n     <OutputDataSet>\n+<!-- Updated OPT calibration product -->\n         <OutputDataProduct>\n-            <OutputPortName>opt_calib</OutputPortName>\n+            <OutputPortName>new_opt_cal</OutputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -165,6 +161,7 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </OutputDataProduct>\n+\n     </OutputDataSet>\n \n     <EstimatedWorkdirSizeGB>200</EstimatedWorkdirSizeGB>\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ],
                        [
                            "@@ -1,24 +1,26 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-\n-    <EdenVersion>@EDEN@</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Calib_Opt_@CMAKE_PROJECT_VERSION@</Id> \n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n+\n+<!-- THANK YOU ST FOR CHANGING EVERYTHING INTO A \"MINOR\" RELEASE OF THE DATAMODEL\n+     - very professional -\n+-->\n+\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n+\n+    <Id>SIR_Calib_Opt_@CMAKE_PROJECT_VERSION@</Id>\n+    <ArchiveProcessingFlag>EAS_SERVICE_ONLY</ArchiveProcessingFlag>\n     <PipelineScriptPath>SIR_Calibration_Opt/PipScript_SIR_Calibration_Opt.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n-    <InputDataSet>\n+\n+    <InputDataSetPlan>\n \n <!-- raw_frames -->\n         <KeyProductInputDataPlan>\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n                 (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n                 (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n                 (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n@@ -38,16 +40,17 @@\n             <InputPortName>tu_cat</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n             <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND \n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (tu_cat.Header.PPOId == \"UNKNOWN\") AND \n+                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n+                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n                 (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n-                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")\n+                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\") AND\n+                (tu_cat.Data.MagnitudeLimit != \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>4</Max>\n+                <Max>100</Max>\n             </Cardinality>\n         </InputDataPlan>\n \n@@ -56,7 +59,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -71,7 +74,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -89,11 +92,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\" , \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\" , \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\" , \n-                    \"NISP_GrismTransmission*\" , \n+                    \"EUC_NISP_NLSPECTRO*\" ,\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n+                    \"NISP_GrismTransmission*\" ,\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -109,8 +112,8 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n-                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\") \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n+                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -124,7 +127,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -139,8 +142,8 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n-                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\") \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n+                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -149,16 +152,7 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-\n-<!-- Input dependencies and relations for PLAN with multiple PPO-->\n-        <Dependencies>\n-            <GroupedBy>raw_frame.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"tu_cat\">\n-                <Query>raw_frame.Data.ObservationSequence.ObservationId == tu_cat.Data.EuclidPointingId</Query>\n-            </LinkedBy>\n-\n-        </Dependencies>\n-    </InputDataSet>\n+    </InputDataSetPlan>\n \n \n     <OutputDataSet>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -1,24 +1,26 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-\n-    <EdenVersion>@EDEN@</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Calib_Opt_@CMAKE_PROJECT_VERSION@</Id> \n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n+\n+<!-- THANK YOU ST FOR CHANGING EVERYTHING INTO A \"MINOR\" RELEASE OF THE DATAMODEL\n+     - very professional -\n+-->\n+\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n+\n+    <Id>SIR_Calib_Opt_@CMAKE_PROJECT_VERSION@</Id>\n+    <ArchiveProcessingFlag>EAS_SERVICE_ONLY</ArchiveProcessingFlag>\n     <PipelineScriptPath>SIR_Calibration_Opt/PipScript_SIR_Calibration_Opt.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n-    <InputDataSet>\n+\n+    <InputDataSetPlan>\n \n <!-- raw_frames -->\n         <KeyProductInputDataPlan>\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n                 (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n                 (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n                 (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n@@ -38,16 +40,17 @@\n             <InputPortName>tu_cat</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n             <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND \n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (tu_cat.Header.PPOId == \"UNKNOWN\") AND \n+                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n+                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n                 (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n-                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")\n+                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\") AND\n+                (tu_cat.Data.MagnitudeLimit != \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>4</Max>\n+                <Max>100</Max>\n             </Cardinality>\n         </InputDataPlan>\n \n@@ -56,7 +59,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -71,7 +74,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -89,11 +92,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\" , \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\" , \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\" , \n-                    \"NISP_GrismTransmission*\" , \n+                    \"EUC_NISP_NLSPECTRO*\" ,\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n+                    \"NISP_GrismTransmission*\" ,\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -109,8 +112,8 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n-                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\") \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n+                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -124,7 +127,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -139,8 +142,8 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n-                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\") \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n+                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -149,16 +152,7 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-\n-<!-- Input dependencies and relations for PLAN with multiple PPO-->\n-        <Dependencies>\n-            <GroupedBy>raw_frame.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"tu_cat\">\n-                <Query>raw_frame.Data.ObservationSequence.ObservationId == tu_cat.Data.EuclidPointingId</Query>\n-            </LinkedBy>\n-\n-        </Dependencies>\n-    </InputDataSet>\n+    </InputDataSetPlan>\n \n \n     <OutputDataSet>\n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -1,24 +1,26 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-\n-    <EdenVersion>@EDEN@</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Calib_Opt_@CMAKE_PROJECT_VERSION@</Id> \n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n+\n+<!-- THANK YOU ST FOR CHANGING EVERYTHING INTO A \"MINOR\" RELEASE OF THE DATAMODEL\n+     - very professional -\n+-->\n+\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n+\n+    <Id>SIR_Calib_Opt_@CMAKE_PROJECT_VERSION@</Id>\n+    <ArchiveProcessingFlag>EAS_SERVICE_ONLY</ArchiveProcessingFlag>\n     <PipelineScriptPath>SIR_Calibration_Opt/PipScript_SIR_Calibration_Opt.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n-    <InputDataSet>\n+\n+    <InputDataSetPlan>\n \n <!-- raw_frames -->\n         <KeyProductInputDataPlan>\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n                 (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n                 (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n                 (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n@@ -38,16 +40,17 @@\n             <InputPortName>tu_cat</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n             <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND \n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (tu_cat.Header.PPOId == \"UNKNOWN\") AND \n+                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n+                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n                 (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n-                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")\n+                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\") AND\n+                (tu_cat.Data.MagnitudeLimit != \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>4</Max>\n+                <Max>100</Max>\n             </Cardinality>\n         </InputDataPlan>\n \n@@ -56,7 +59,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -71,7 +74,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -89,11 +92,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\" , \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\" , \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\" , \n-                    \"NISP_GrismTransmission*\" , \n+                    \"EUC_NISP_NLSPECTRO*\" ,\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n+                    \"NISP_GrismTransmission*\" ,\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -109,8 +112,8 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n-                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\") \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n+                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -124,7 +127,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -139,8 +142,8 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n-                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\") \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n+                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -149,16 +152,7 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-\n-<!-- Input dependencies and relations for PLAN with multiple PPO-->\n-        <Dependencies>\n-            <GroupedBy>raw_frame.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"tu_cat\">\n-                <Query>raw_frame.Data.ObservationSequence.ObservationId == tu_cat.Data.EuclidPointingId</Query>\n-            </LinkedBy>\n-\n-        </Dependencies>\n-    </InputDataSet>\n+    </InputDataSetPlan>\n \n \n     <OutputDataSet>\n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Opt/PipScript_SIR_Calibration_Opt.py": [
                        [
                            "@@ -1,7 +1,13 @@\n # ---------------------------------------------------------------------------- #\n-# Pipeline definition for SIR pipeline \"Calibration OPT\"\n+# SIR pipeline \"Calibration OPT MER\" \n #\n-# THIS IS THE CALIBRATION STEP 1\n+# Calblock: PV-001\n+#\n+# Catalog: MER \n+#\n+# Date: August 2023\n+#\n+# Calibration step 1\n # ---------------------------------------------------------------------------- #\n \n from euclidwf.framework.workflow_dsl import pipeline\n@@ -9,31 +15,36 @@ from euclidwf.framework.workflow_dsl import parallel\n from PackageDef_SIR import *\n \n \n-@parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, det_scaling, config):\n+@parallel(iterable='raw_frames', flatten_all='True')\n+def sir_preprocessing(raw_frames, mdb, dark, badpix, det_scaling, config):\n     \"\"\"SIR pre-processing block\n \n-        This pipeline block prepare science-frame objects applying corrections\n-        and subtracking dark\n+        SIR pipeline block that prepares science_frame objects applying corrections,\n+        and rotating detectors layout of LE1 raw-frames \n \n     Args:\n-        raw_dithers (xml): NISP raw-frame image object\n-        mdb (xml): Mission DataBase\n-        masterdark (xml): NIR DpdNirMasterDarkFrame image object\n-        badpixel (xml): NIR DpdNirBadPixelMask mask object\n+        raw_frames (XML list): Level 1 NISP DpdNispRawFrame image objects\n+        mdb (XML): DpdMdbDataBase object\n+        dark (XML): NIR DpdNirMasterDarkFrame image object\n+        badpix (XML): NIR DpdNirBadPixelMask mask object\n+        det_scaling (XML): QE correction SIR calibration object\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n \n     Returns:\n         list: DpdSirScienceFrame dark-subtracted and corrected objects\n \n     Note:\n-        Is executed in parallel on the input DITHERS (DpdNispRawFrame)\n+        Is executed in parallel on the independent input raw_frames (DpdNispRawFrame)\n+\n+    Warning:\n+        The output frames have rotated detector layout after SIR_init step        \n     \"\"\"\n \n-    initialized_expo, chi2 = nir_initalize(infile  = raw_dithers,\n+    initialized_expo, chi2 = nir_initalize(infile  = raw_frames,\n                                            mdbfile = mdb)\n \n     badpixmasked_expo = mask_badpixel(infile  = initialized_expo,\n-                                      xmlfile = badpixel)\n+                                      xmlfile = badpix)\n \n     saturamasked_expo = mask_saturation(infile  = badpixmasked_expo,\n                                         xmlfile = mdb)\n@@ -42,53 +53,53 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, det_scaling, confi\n                                           xmlfile = mdb)\n \n     darksubtract_expo = subtract_dark(infile     = nonlineacorr_expo,\n-                                      masterdark = masterdark)\n-\n-    crreject_expo     = cr_rejection(grism    = darksubtract_expo,\n-                                     chi2file = chi2,\n-                                     config   = config)\n-\n-    qe_frames = detectorScaling(sci_frame_fits = crreject_expo, # FITS frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb = mdb)\n-\n-    # replaced by SIR INIT\n-    # science_frame = end_preprocessing(fits_file = qe_frames,\n-    #                                   le1_dp    = raw_dithers,\n-    #                                   mdb       = mdb)\n+                                      masterdark = dark)\n \n-    science_frame = sir_init(fits_file = qe_frames,\n-                             le1_dp    = raw_dithers,\n-                             mdb       = mdb)\n+    cr_rejected_expo  = cosmic_rejection(grism    = darksubtract_expo,\n+                                         chi2file = chi2,\n+                                         config   = config)\n+    \n+    qe_corrected_expo = detector_scaling(sci_frame_fits = cr_rejected_expo,\n+                                         zodiacal_light = det_scaling,\n+                                         mdb = mdb)\n \n+    science_frame     = sir_initialize(fits_file = qe_corrected_expo,\n+                                       le1_dp    = raw_frames,\n+                                       mdb       = mdb)\n \n-    # explicit\n     return science_frame\n # ---------------------------------------------------------------------------- #\n \n \n \n @parallel(iterable='sci_frames', flatten_all='True')\n-def sir_calibration(sci_frames, tu_cat, opt_model, mdb, sir_config):\n-    \"\"\"Compute OPT calibration for each group od frames\n+def sir_calibration(sci_frames, catalog, opt_model, mdb, config):\n+    \"\"\"SIR OPT calibration block\n+\n+        SIR pipeline block that perform OPT calibration using the list of frames provided\n \n     Args:\n-        frames (_type_): filename with list of all frames of the same grism\n-        tu_cat (_type_): catalog(s) covering all the frames ares\n-        opt_model (_type_): starting calibration\n-        mdb (_type_): mission data base\n+        sci_frames (XML list): SIR preprocessed DpdSirScienceFrame images with the same grism/tilt\n+        catalog (XML list): DpdTrueUniverseOutput or DpdMerFinalCatalog catalog of sources objects\n+        opt_model (XML): SIR DpdSirOptModel optical model usedas First Guess\n+        mdb (XML): DpdMdbDataBase object\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n+\n+    Note:\n+        It's executed in parallel on sci_frames\n+        Every list of sci_frames MUST contain frames with same grism/tilt\n \n     Returns:\n-        _type_: OPT model calibration for grism obtained from list of frames file\n+        DpdSirOptModel: calibration object for grism/tilt of frames provided\n     \"\"\"\n \n-    opt_cal = opt_model_cal(config    = sir_config,\n-                            sci_frame = sci_frames,\n-                            opt_model = opt_model,\n-                            tu_cat    = tu_cat,\n-                            mdb       = mdb)\n \n-    # explicit\n+    opt_cal = opt_model_cal_mer(config    = config,\n+                                sci_frame = sci_frames,\n+                                opt_model = opt_model,\n+                                mer_cat   = catalog,\n+                                mdb       = mdb)\n+\n     return opt_cal\n # ---------------------------------------------------------------------------- #\n \n@@ -99,53 +110,51 @@ def sir_calibration(sci_frames, tu_cat, opt_model, mdb, sir_config):\n \n \n \n-@pipeline(outputs=('opt_calib'))\n-def sir_pipeline(raw_frame, tu_cat, nir_dark, nir_badpix, mdb, det_scaling, opt_model, sir_config):\n-    \"\"\"_summary_\n+@pipeline(outputs=('new_opt_cal'))\n+def sir_pipeline(raw_frame, \n+                 mer_catalog, \n+                 mdb, \n+                 det_scaling, \n+                 opt_model, \n+                 nir_dark, \n+                 nir_badpix, \n+                 sir_config):\n+    \"\"\"SIR \"OPT MER\" pipeline\n \n-    Args:\n-        dithers (_type_): _description_\n-        tu_cat (_type_): _description_\n-        masterdark (_type_): _description_\n-        badpixel (_type_): _description_\n-        det_scaling (_type_): _description_\n-        opt_model (_type_): _description_\n-        config (_type_): _description_\n-        mdb (_type_): _description_\n+       This pipeline process 15 to 120 (15 per grism orientation for RGS and 60 for BGS) \n+       frames of PV 001 to update a First Guess OPT model calibration product provided  \n+       \n+       This CALIBRATION pipeline must run AFTER the OPT calibration pipeline\n \n     Returns:\n-        _type_: _description_\n+        New OPT calibration product, that contains updated GRISM sections according to\n+        the GRISM dataset used as input. If 120 frames are provided, all the GRISMS\n+        are updated in the final product    \n     \"\"\"\n \n-    # parallel on ALL frames (60)\n-    frames = sir_preprocessing(raw_dithers = raw_frame,\n-                               masterdark = nir_dark,\n-                               badpixel = nir_badpix,\n+    frames = sir_preprocessing(raw_frames  = raw_frame,\n+                               dark        = nir_dark,\n+                               badpix      = nir_badpix,\n                                det_scaling = det_scaling,\n-                               mdb = mdb,\n-                               config = sir_config)\n-    # all frames (60)\n-    # qe_frames = detectorScaling(sci_frames=frames,\n-    #                             zodiacal_light = det_scaling,\n-    #                             mdb = mdb)\n+                               mdb         = mdb,\n+                               config      = sir_config)\n \n     # group by grism, return list of files \"per grism\" with grouped frames names\n-    frame_lists = sort_by_grism(frames=frames) #qe_frames)\n+    frame_lists = sort_by_grism(frames=frames)\n \n \n-    # parallel on grisms (4 grism x 15 frames each in RED selfcal)\n-    opt_cal_list = sir_calibration(sir_config= sir_config,\n-                                   sci_frames= frame_lists,\n-                                   opt_model = opt_model, #(FIRST GUESS)\n-                                   tu_cat    = tu_cat,\n-                                   mdb       = mdb)\n+    # parallel on grisms (4 or 5 grism x 15 frames each in selfcal)\n+    opt_cal_list = sir_calibration(config      = sir_config,\n+                                   sci_frames = frame_lists,\n+                                   catalog    = mer_catalog,\n+                                   opt_model  = opt_model,\n+                                   mdb        = mdb)\n \n     # sum up calibrations on grisms in a single calibration product\n-    opt_calib = collect_cal_opt(calib_list = opt_cal_list,\n-                                calib_base = opt_model)\n-\n+    new_opt_cal = collect_cal_opt(calib_list = opt_cal_list,\n+                                  calib_base = opt_model)\n \n-    return opt_calib\n+    return new_opt_cal\n # ---------------------------------------------------------------------------- #\n \n \n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ],
                        [
                            "@@ -10,7 +10,7 @@ from PackageDef_SIR import *\n \n \n @parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n+def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, det_scaling, config):\n     \"\"\"SIR pre-processing block\n \n         This pipeline block prepare science-frame objects applying corrections\n@@ -48,9 +48,19 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n                                      chi2file = chi2,\n                                      config   = config)\n \n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n-                                      le1_dp    = raw_dithers,\n-                                      mdb       = mdb)\n+    qe_frames = detectorScaling(sci_frame_fits = crreject_expo, # FITS frames,\n+                                zodiacal_light = det_scaling,\n+                                mdb = mdb)\n+\n+    # replaced by SIR INIT\n+    # science_frame = end_preprocessing(fits_file = qe_frames,\n+    #                                   le1_dp    = raw_dithers,\n+    #                                   mdb       = mdb)\n+\n+    science_frame = sir_init(fits_file = qe_frames,\n+                             le1_dp    = raw_dithers,\n+                             mdb       = mdb)\n+\n \n     # explicit\n     return science_frame\n@@ -59,7 +69,7 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n \n \n @parallel(iterable='sci_frames', flatten_all='True')\n-def sir_calibration(sci_frames, tu_cat, opt_model, mdb):\n+def sir_calibration(sci_frames, tu_cat, opt_model, mdb, sir_config):\n     \"\"\"Compute OPT calibration for each group od frames\n \n     Args:\n@@ -72,7 +82,8 @@ def sir_calibration(sci_frames, tu_cat, opt_model, mdb):\n         _type_: OPT model calibration for grism obtained from list of frames file\n     \"\"\"\n \n-    opt_cal = opt_model_cal(sci_frame = sci_frames,\n+    opt_cal = opt_model_cal(config    = sir_config,\n+                            sci_frame = sci_frames,\n                             opt_model = opt_model,\n                             tu_cat    = tu_cat,\n                             mdb       = mdb)\n@@ -110,20 +121,22 @@ def sir_pipeline(raw_frame, tu_cat, nir_dark, nir_badpix, mdb, det_scaling, opt_\n     frames = sir_preprocessing(raw_dithers = raw_frame,\n                                masterdark = nir_dark,\n                                badpixel = nir_badpix,\n+                               det_scaling = det_scaling,\n                                mdb = mdb,\n-                               config= sir_config)\n+                               config = sir_config)\n     # all frames (60)\n-    qe_frames = detectorScaling(sci_frames=frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb = mdb)\n+    # qe_frames = detectorScaling(sci_frames=frames,\n+    #                             zodiacal_light = det_scaling,\n+    #                             mdb = mdb)\n \n     # group by grism, return list of files \"per grism\" with grouped frames names\n-    frame_lists = sort_by_grism(frames=qe_frames)\n+    frame_lists = sort_by_grism(frames=frames) #qe_frames)\n \n \n     # parallel on grisms (4 grism x 15 frames each in RED selfcal)\n-    opt_cal_list = sir_calibration(sci_frames= frame_lists,\n-                                   opt_model = opt_model,\n+    opt_cal_list = sir_calibration(sir_config= sir_config,\n+                                   sci_frames= frame_lists,\n+                                   opt_model = opt_model, #(FIRST GUESS)\n                                    tu_cat    = tu_cat,\n                                    mdb       = mdb)\n \n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -10,7 +10,7 @@ from PackageDef_SIR import *\n \n \n @parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n+def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, det_scaling, config):\n     \"\"\"SIR pre-processing block\n \n         This pipeline block prepare science-frame objects applying corrections\n@@ -48,9 +48,19 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n                                      chi2file = chi2,\n                                      config   = config)\n \n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n-                                      le1_dp    = raw_dithers,\n-                                      mdb       = mdb)\n+    qe_frames = detectorScaling(sci_frame_fits = crreject_expo, # FITS frames,\n+                                zodiacal_light = det_scaling,\n+                                mdb = mdb)\n+\n+    # replaced by SIR INIT\n+    # science_frame = end_preprocessing(fits_file = qe_frames,\n+    #                                   le1_dp    = raw_dithers,\n+    #                                   mdb       = mdb)\n+\n+    science_frame = sir_init(fits_file = qe_frames,\n+                             le1_dp    = raw_dithers,\n+                             mdb       = mdb)\n+\n \n     # explicit\n     return science_frame\n@@ -59,7 +69,7 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n \n \n @parallel(iterable='sci_frames', flatten_all='True')\n-def sir_calibration(sci_frames, tu_cat, opt_model, mdb):\n+def sir_calibration(sci_frames, tu_cat, opt_model, mdb, sir_config):\n     \"\"\"Compute OPT calibration for each group od frames\n \n     Args:\n@@ -72,7 +82,8 @@ def sir_calibration(sci_frames, tu_cat, opt_model, mdb):\n         _type_: OPT model calibration for grism obtained from list of frames file\n     \"\"\"\n \n-    opt_cal = opt_model_cal(sci_frame = sci_frames,\n+    opt_cal = opt_model_cal(config    = sir_config,\n+                            sci_frame = sci_frames,\n                             opt_model = opt_model,\n                             tu_cat    = tu_cat,\n                             mdb       = mdb)\n@@ -110,20 +121,22 @@ def sir_pipeline(raw_frame, tu_cat, nir_dark, nir_badpix, mdb, det_scaling, opt_\n     frames = sir_preprocessing(raw_dithers = raw_frame,\n                                masterdark = nir_dark,\n                                badpixel = nir_badpix,\n+                               det_scaling = det_scaling,\n                                mdb = mdb,\n-                               config= sir_config)\n+                               config = sir_config)\n     # all frames (60)\n-    qe_frames = detectorScaling(sci_frames=frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb = mdb)\n+    # qe_frames = detectorScaling(sci_frames=frames,\n+    #                             zodiacal_light = det_scaling,\n+    #                             mdb = mdb)\n \n     # group by grism, return list of files \"per grism\" with grouped frames names\n-    frame_lists = sort_by_grism(frames=qe_frames)\n+    frame_lists = sort_by_grism(frames=frames) #qe_frames)\n \n \n     # parallel on grisms (4 grism x 15 frames each in RED selfcal)\n-    opt_cal_list = sir_calibration(sci_frames= frame_lists,\n-                                   opt_model = opt_model,\n+    opt_cal_list = sir_calibration(sir_config= sir_config,\n+                                   sci_frames= frame_lists,\n+                                   opt_model = opt_model, #(FIRST GUESS)\n                                    tu_cat    = tu_cat,\n                                    mdb       = mdb)\n \n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -10,7 +10,7 @@ from PackageDef_SIR import *\n \n \n @parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n+def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, det_scaling, config):\n     \"\"\"SIR pre-processing block\n \n         This pipeline block prepare science-frame objects applying corrections\n@@ -48,9 +48,19 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n                                      chi2file = chi2,\n                                      config   = config)\n \n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n-                                      le1_dp    = raw_dithers,\n-                                      mdb       = mdb)\n+    qe_frames = detectorScaling(sci_frame_fits = crreject_expo, # FITS frames,\n+                                zodiacal_light = det_scaling,\n+                                mdb = mdb)\n+\n+    # replaced by SIR INIT\n+    # science_frame = end_preprocessing(fits_file = qe_frames,\n+    #                                   le1_dp    = raw_dithers,\n+    #                                   mdb       = mdb)\n+\n+    science_frame = sir_init(fits_file = qe_frames,\n+                             le1_dp    = raw_dithers,\n+                             mdb       = mdb)\n+\n \n     # explicit\n     return science_frame\n@@ -59,7 +69,7 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n \n \n @parallel(iterable='sci_frames', flatten_all='True')\n-def sir_calibration(sci_frames, tu_cat, opt_model, mdb):\n+def sir_calibration(sci_frames, tu_cat, opt_model, mdb, sir_config):\n     \"\"\"Compute OPT calibration for each group od frames\n \n     Args:\n@@ -72,7 +82,8 @@ def sir_calibration(sci_frames, tu_cat, opt_model, mdb):\n         _type_: OPT model calibration for grism obtained from list of frames file\n     \"\"\"\n \n-    opt_cal = opt_model_cal(sci_frame = sci_frames,\n+    opt_cal = opt_model_cal(config    = sir_config,\n+                            sci_frame = sci_frames,\n                             opt_model = opt_model,\n                             tu_cat    = tu_cat,\n                             mdb       = mdb)\n@@ -110,20 +121,22 @@ def sir_pipeline(raw_frame, tu_cat, nir_dark, nir_badpix, mdb, det_scaling, opt_\n     frames = sir_preprocessing(raw_dithers = raw_frame,\n                                masterdark = nir_dark,\n                                badpixel = nir_badpix,\n+                               det_scaling = det_scaling,\n                                mdb = mdb,\n-                               config= sir_config)\n+                               config = sir_config)\n     # all frames (60)\n-    qe_frames = detectorScaling(sci_frames=frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb = mdb)\n+    # qe_frames = detectorScaling(sci_frames=frames,\n+    #                             zodiacal_light = det_scaling,\n+    #                             mdb = mdb)\n \n     # group by grism, return list of files \"per grism\" with grouped frames names\n-    frame_lists = sort_by_grism(frames=qe_frames)\n+    frame_lists = sort_by_grism(frames=frames) #qe_frames)\n \n \n     # parallel on grisms (4 grism x 15 frames each in RED selfcal)\n-    opt_cal_list = sir_calibration(sci_frames= frame_lists,\n-                                   opt_model = opt_model,\n+    opt_cal_list = sir_calibration(sir_config= sir_config,\n+                                   sci_frames= frame_lists,\n+                                   opt_model = opt_model, #(FIRST GUESS)\n                                    tu_cat    = tu_cat,\n                                    mdb       = mdb)\n \n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Opt_Mer/PipScript_SIR_Calibration_Opt_Mer.py": [
                        [
                            "@@ -1,144 +0,0 @@\n-# ---------------------------------------------------------------------------- #\n-# Pipeline definition for SIR pipeline \"Calibration OPT\"\n-#\n-# THIS IS THE CALIBRATION STEP 1\n-# ---------------------------------------------------------------------------- #\n-\n-from euclidwf.framework.workflow_dsl import pipeline\n-from euclidwf.framework.workflow_dsl import parallel\n-from PackageDef_SIR import *\n-\n-\n-@parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n-    \"\"\"SIR pre-processing block\n-\n-        This pipeline block prepare science-frame objects applying corrections\n-        and subtracking dark\n-\n-    Args:\n-        raw_dithers (xml): NISP raw-frame image object\n-        mdb (xml): Mission DataBase\n-        masterdark (xml): NIR DpdNirMasterDarkFrame image object\n-        badpixel (xml): NIR DpdNirBadPixelMask mask object\n-\n-    Returns:\n-        list: DpdSirScienceFrame dark-subtracted and corrected objects\n-\n-    Note:\n-        Is executed in parallel on the input DITHERS (DpdNispRawFrame)\n-    \"\"\"\n-\n-    initialized_expo, chi2 = nir_initalize(infile  = raw_dithers,\n-                                           mdbfile = mdb)\n-\n-    badpixmasked_expo = mask_badpixel(infile  = initialized_expo,\n-                                      xmlfile = badpixel)\n-\n-    saturamasked_expo = mask_saturation(infile  = badpixmasked_expo,\n-                                        xmlfile = mdb)\n-\n-    nonlineacorr_expo = correct_nonlinear(infile  = saturamasked_expo,\n-                                          xmlfile = mdb)\n-\n-    darksubtract_expo = subtract_dark(infile     = nonlineacorr_expo,\n-                                      masterdark = masterdark)\n-\n-    crreject_expo     = cr_rejection(grism    = darksubtract_expo,\n-                                     chi2file = chi2,\n-                                     config   = config)\n-\n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n-                                      le1_dp    = raw_dithers,\n-                                      mdb       = mdb)\n-\n-    # explicit\n-    return science_frame\n-# ---------------------------------------------------------------------------- #\n-\n-\n-\n-@parallel(iterable='sci_frames', flatten_all='True')\n-def sir_calibration(sci_frames, mer_cat, opt_model, mdb):\n-    \"\"\"Compute OPT calibration for each group od frames\n-\n-    Args:\n-        frames (_type_): filename with list of all frames of the same grism\n-        mer_cat (_type_): catalog(s) covering all the frames ares\n-        opt_model (_type_): starting calibration\n-        mdb (_type_): mission data base\n-\n-    Returns:\n-        _type_: OPT model calibration for grism obtained from list of frames file\n-    \"\"\"\n-\n-    opt_cal = opt_model_cal_mer(sci_frame = sci_frames,\n-                            opt_model = opt_model,\n-                            mer_cat   = mer_cat,\n-                            mdb       = mdb)\n-\n-    # explicit\n-    return opt_cal\n-# ---------------------------------------------------------------------------- #\n-\n-\n-\n-# ---------------------------------------------------------------------------- #\n-# ---------------------------------------------------------------------------- #\n-\n-\n-\n-@pipeline(outputs=('opt_calib'))\n-def sir_pipeline(raw_frame, mer_catalog, nir_dark, nir_badpix, mdb, det_scaling, opt_model, sir_config):\n-    \"\"\"_summary_\n-\n-    Args:\n-        dithers (_type_): _description_\n-        mer_catalog (_type_): _description_\n-        masterdark (_type_): _description_\n-        badpixel (_type_): _description_\n-        det_scaling (_type_): _description_\n-        opt_model (_type_): _description_\n-        config (_type_): _description_\n-        mdb (_type_): _description_\n-\n-    Returns:\n-        _type_: _description_\n-    \"\"\"\n-\n-    # parallel on ALL frames (60)\n-    frames = sir_preprocessing(raw_dithers = raw_frame,\n-                               masterdark = nir_dark,\n-                               badpixel = nir_badpix,\n-                               mdb = mdb,\n-                               config= sir_config)\n-    # all frames (60)\n-    qe_frames = detectorScaling(sci_frames=frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb = mdb)\n-\n-    # group by grism, return list of files \"per grism\" with grouped frames names\n-    frame_lists = sort_by_grism(frames=qe_frames)\n-\n-\n-    # parallel on grisms (4 grism x 15 frames each in RED selfcal)\n-    opt_cal_list = sir_calibration(sci_frames= frame_lists,\n-                                   mer_cat   = mer_catalog,\n-                                   opt_model = opt_model,\n-                                   mdb       = mdb)\n-\n-    # sum up calibrations on grisms in a single calibration product\n-    opt_calib = collect_cal_opt(calib_list = opt_cal_list,\n-                                calib_base = opt_model)\n-\n-\n-    return opt_calib\n-# ---------------------------------------------------------------------------- #\n-\n-\n-if __name__ == '__main__':\n-    from euclidwf.framework.graph_builder import build_graph\n-    from euclidwf.utilities import visualizer\n-    pydron_graph=build_graph(sir_pipeline)\n-    print(str(pydron_graph))\n-    visualizer.visualize_graph(pydron_graph)\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Opt_TU/PipDef_SIR_Calibration_Opt_TU.xml": [
                        [
                            "@@ -1,29 +1,25 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n-    <EdenVersion>@EDEN@</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Calib_Opt_@CMAKE_PROJECT_VERSION@</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n-    <PipelineScriptPath>SIR_Calibration_Opt_Mer/PipScript_SIR_Calibration_Opt_Mer.py</PipelineScriptPath>\n+    <Id>SIR_Calib_Opt_TU_@CMAKE_PROJECT_VERSION@</Id>\n+    <ArchiveProcessingFlag>EAS_SERVICE_ONLY</ArchiveProcessingFlag>\n+    <PipelineScriptPath>SIR_Calibration_Opt_TU/PipScript_SIR_Calibration_Opt_TU.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n-    <InputDataSet>\n \n+    <InputDataSetPlan>\n <!-- raw_frames -->\n         <KeyProductInputDataPlan>\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n-                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n-                (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n-                (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n-                (raw_frame.Data.GrismWheelTilt == \"UNKNOWN\") AND\n-                (raw_frame.Data.ObservationSequence.Exposure == UNKNOWN) AND\n+                (raw_frame.Header.ManualValidationStatus          != \"INVALID\")       AND\n+                (raw_frame.Header.DataSetRelease                  == \"UNKNOWN\")       AND\n+                (raw_frame.Data.ImgType.Technique                 == \"SPECTROIMAGE\")  AND\n+                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN)         AND\n+                (raw_frame.Data.ObservationSequence.PointingId    == UNKNOWN)         AND\n+                (raw_frame.Data.GrismWheelPos                     == \"UNKNOWN\")       AND\n+                (raw_frame.Data.GrismWheelTilt                    == \"UNKNOWN\")       AND\n+                (raw_frame.Data.ObservationSequence.Exposure      == UNKNOWN)         AND\n                 (raw_frame.Data.ObservationSequence.TotalExposure == UNKNOWN)\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -33,30 +29,45 @@\n             </Cardinality>\n         </KeyProductInputDataPlan>\n \n-<!-- Mer Final Catalogs -->\n+<!-- TU catalog -->\n         <InputDataPlan>\n-            <InputPortName>mer_catalog</InputPortName>\n-            <DataProductType>DpdMerFinalCatalog</DataProductType>\n+            <InputPortName>tu_cat</InputPortName>\n+            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND\n-                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n+                (tu_cat.Header.ManualValidationStatus     !=   \"INVALID\") AND\n+                (tu_cat.Header.DataSetRelease             ==   \"UNKNOWN\") AND\n+                (tu_cat.Header.PPOId                      ==   \"UNKNOWN\") AND\n+                (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n+                (tu_cat.Data.EuclidPointingId             ==   \"UNKNOWN\") AND\n+                (tu_cat.Data.MagnitudeLimit               !=   \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>30</Max>\n+                <Max>100</Max>\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- NIR master dark -->\n+<!-- MDB -->\n         <InputDataPlan>\n-            <InputPortName>nir_dark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n-                (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n+            <InputPortName>mdb</InputPortName>\n+            <DataProductType>DpdMdbDataBase</DataProductType>\n+            <InputQuerySpecPlan>(mdb.Header.ProductId.LimitedString == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <FileFiltering>\n+                <FilesToInclude>\n+                    \"EUC_NISP_GAIN*\",\n+                    \"EUC_NISP_NLSPECTRO*\" ,\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n+                    \"NISP_GrismTransmission*\",\n+                    \"NISPDetector*\",\n+                    \"NISPHTransmissionCurves*\",\n+                    \"NISPJTransmissionCurves*\",\n+                    \"NISPYTransmissionCurves*\",\n+                    \"PLMTransmissionNISPNominalEOLCBE*\"\n+                </FilesToInclude>\n+            </FileFiltering>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -64,13 +75,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- NIR Bad Pixel mask -->\n+<!-- Sir Configuration -->\n         <InputDataPlan>\n-            <InputPortName>nir_badpix</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n+            <InputPortName>sir_config</InputPortName>\n+            <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n-                (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (sir_config.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -78,23 +89,15 @@\n                 <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n-\n-<!-- MDB -->\n+        \n+<!-- OPT Sir Configuration -->\n         <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>(mdb.Header.ProductId.LimitedString == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\n-                    \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\" ,\n-                    \"EUC_NISP_Saturation*\" ,\n-                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n-                    \"NISP_GrismTransmission*\" ,\n-                    \"NISPDetector*\"\n-                </FilesToInclude>\n-            </FileFiltering>\n+            <InputPortName>opt_model</InputPortName>\n+            <DataProductType>DpdSirOptModel</DataProductType>\n+            <InputQuerySpecPlan>\n+                (opt_model.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n+            </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n@@ -107,7 +110,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n+                (det_scaling.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -117,13 +120,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- OPT Sir Configuration -->\n+<!-- NIR master dark -->\n         <InputDataPlan>\n-            <InputPortName>opt_model</InputPortName>\n-            <DataProductType>DpdSirOptModel</DataProductType>\n+            <InputPortName>nir_dark</InputPortName>\n+            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (nir_dark.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -132,13 +135,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- Sir Configuration -->\n+<!-- NIR Bad Pixel mask -->\n         <InputDataPlan>\n-            <InputPortName>sir_config</InputPortName>\n-            <DataProductType>DpdSirConfigurationSet</DataProductType>\n+            <InputPortName>nir_badpix</InputPortName>\n+            <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n-                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (nir_badpix.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -147,21 +150,12 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-\n-<!-- Input dependencies and relations for PLAN with multiple PPO-->\n-        <Dependencies>\n-            <GroupedBy>raw_frame.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"mer_catalog\">\n-                <Query>raw_frame.Data.ObservationSequence.ObservationId == mer_catalog.Data.EuclidPointingId</Query>\n-            </LinkedBy>\n-\n-        </Dependencies>\n-    </InputDataSet>\n-\n+    </InputDataSetPlan>\n \n     <OutputDataSet>\n+<!-- Updated OPT calibration product -->\n         <OutputDataProduct>\n-            <OutputPortName>opt_calib</OutputPortName>\n+            <OutputPortName>new_opt_cal</OutputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Opt_TU/PipScript_SIR_Calibration_Opt_TU.py": [
                        [
                            "@@ -0,0 +1,160 @@\n+# ---------------------------------------------------------------------------- #\n+# SIR pipeline \"Calibration OPT TU\" \n+#\n+# Calblock: PV-001\n+#\n+# Catalog: TU \n+#\n+# Date: August 2023\n+#\n+# Calibration step 1 \n+# ---------------------------------------------------------------------------- #\n+\n+from euclidwf.framework.workflow_dsl import pipeline\n+from euclidwf.framework.workflow_dsl import parallel\n+from PackageDef_SIR import *\n+\n+\n+@parallel(iterable='raw_frames', flatten_all='True')\n+def sir_preprocessing(raw_frames, mdb, dark, badpix, det_scaling, config):\n+    \"\"\"SIR pre-processing block\n+\n+        SIR pipeline block that prepares science_frame objects applying corrections,\n+        and rotating detectors layout of LE1 raw-frames \n+\n+    Args:\n+        raw_frames (XML list): Level 1 NISP DpdNispRawFrame image objects\n+        mdb (XML): DpdMdbDataBase object\n+        dark (XML): NIR DpdNirMasterDarkFrame image object\n+        badpix (XML): NIR DpdNirBadPixelMask mask object\n+        det_scaling (XML): QE correction SIR calibration object\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n+\n+    Returns:\n+        list: DpdSirScienceFrame dark-subtracted and corrected objects\n+\n+    Note:\n+        Is executed in parallel on the independent input raw_frames (DpdNispRawFrame)\n+\n+    Warning:\n+        The output frames have rotated detector layout after SIR_init step        \n+    \"\"\"\n+\n+    initialized_expo, chi2 = nir_initalize(infile  = raw_frames,\n+                                           mdbfile = mdb)\n+\n+    badpixmasked_expo = mask_badpixel(infile  = initialized_expo,\n+                                      xmlfile = badpix)\n+\n+    saturamasked_expo = mask_saturation(infile  = badpixmasked_expo,\n+                                        xmlfile = mdb)\n+\n+    nonlineacorr_expo = correct_nonlinear(infile  = saturamasked_expo,\n+                                          xmlfile = mdb)\n+\n+    darksubtract_expo = subtract_dark(infile     = nonlineacorr_expo,\n+                                      masterdark = dark)\n+\n+    cr_rejected_expo  = cosmic_rejection(grism    = darksubtract_expo,\n+                                         chi2file = chi2,\n+                                         config   = config)\n+    \n+    qe_corrected_expo = detector_scaling(sci_frame_fits = cr_rejected_expo,\n+                                         zodiacal_light = det_scaling,\n+                                         mdb = mdb)\n+\n+    science_frame     = sir_initialize(fits_file = qe_corrected_expo,\n+                                       le1_dp    = raw_frames,\n+                                       mdb       = mdb)\n+\n+    return science_frame\n+# ---------------------------------------------------------------------------- #\n+\n+\n+@parallel(iterable='sci_frames', flatten_all='True')\n+def sir_calibration(sci_frames, catalog, opt_model, mdb, config):\n+    \"\"\"SIR OPT calibration block\n+\n+        SIR pipeline block that perform OPT calibration using the list of frames provided\n+\n+    Args:\n+        sci_frames (XML list): SIR preprocessed DpdSirScienceFrame images with the same grism/tilt\n+        catalog (XML list): DpdTrueUniverseOutput or DpdMerFinalCatalog catalog of sources objects\n+        opt_model (XML): SIR DpdSirOptModel optical model usedas First Guess\n+        mdb (XML): DpdMdbDataBase object\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n+\n+    Note:\n+        It's executed in parallel on sci_frames\n+        Every list of sci_frames MUST contain frames with same grism/tilt\n+\n+    Returns:\n+        DpdSirOptModel: calibration object for grism/tilt of frames provided\n+    \"\"\"\n+\n+    opt_cal = opt_model_cal_tu(config    = config,\n+                               sci_frame = sci_frames,\n+                               opt_model = opt_model,\n+                               tu_cat    = catalog,\n+                               mdb       = mdb)\n+\n+    return opt_cal\n+# ---------------------------------------------------------------------------- #\n+\n+\n+# ---------------------------------------------------------------------------- #\n+# PIPELINE\n+# ---------------------------------------------------------------------------- #\n+@pipeline(outputs=('new_opt_cal'))\n+def sir_pipeline(raw_frame, \n+                 tu_cat,  \n+                 mdb, \n+                 det_scaling, \n+                 opt_model,\n+                 nir_dark, \n+                 nir_badpix, \n+                 sir_config):\n+    \"\"\"SIR \"OPT TU\" pipeline\n+\n+       This pipeline process 15 to 120 (15 per grism orientation for RGS and 60 for BGS) \n+       frames of PV 001 to update a First Guess CRV model calibration product provided  \n+       \n+       This CALIBRATION pipeline must run first\n+\n+    Returns:\n+        New OPT calibration product, that contains updated GRISM sections according to\n+        the GRISM dataset used as input. If 120 frames are provided, all the GRISMS\n+        are updated in the final product    \n+    \"\"\"\n+    \n+    frames = sir_preprocessing(raw_frames  = raw_frame,\n+                               dark        = nir_dark,\n+                               badpix      = nir_badpix,\n+                               det_scaling = det_scaling,\n+                               mdb         = mdb,\n+                               config      = sir_config)\n+\n+    # group by grism, return list of files \"per grism\" with grouped frames names\n+    frame_lists = sort_by_grism(frames=frames)\n+\n+    # parallel on grisms (4 or 5 grism x 15 frames each in selfcal)\n+    opt_cal_list = sir_calibration(config     = sir_config,\n+                                   sci_frames = frame_lists,\n+                                   opt_model  = opt_model,\n+                                   catalog    = tu_cat,\n+                                   mdb        = mdb)\n+\n+    # sum up calibrations on grisms in a single calibration product\n+    new_opt_cal = collect_cal_opt(calib_list = opt_cal_list,\n+                                  calib_base = opt_model)\n+\n+    return new_opt_cal\n+# ---------------------------------------------------------------------------- #\n+\n+\n+if __name__ == '__main__':\n+    from euclidwf.framework.graph_builder import build_graph\n+    from euclidwf.utilities import visualizer\n+    pydron_graph=build_graph(sir_pipeline)\n+    print(str(pydron_graph))\n+    visualizer.visualize_graph(pydron_graph)\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Opt_TU/__init__.py": [
                        [
                            "",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Rel/PipScript_SIR_Calibration_Rel.py": [
                        [
                            "@@ -1,231 +0,0 @@\n-# ---------------------------------------------------------------------------- #\n-# Pipeline definition for SIR pipeline \"Calibration REL\" PV-001\n-# Relative Flux calibration\n-# ---------------------------------------------------------------------------- #\n-\n-from euclidwf.framework.workflow_dsl import pipeline\n-from euclidwf.framework.workflow_dsl import parallel\n-from PackageDef_SIR import *\n- \n-\n-@parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, det_scaling, config):\n-    \"\"\"SIR pre-processing block\n-\n-        This pipeline block prepare science-frame objects applying corrections\n-        and subtracking dark\n-\n-    Args:\n-        raw_dithers (xml): NISP raw-frame image object\n-        mdb (xml): Mission DataBase\n-        masterdark (xml): NIR DpdNirMasterDarkFrame image object\n-        badpixel (xml): NIR DpdNirBadPixelMask mask object\n-\n-    Returns:\n-        list: DpdSirScienceFrame dark-subtracted and corrected objects\n-\n-    Note:\n-        Is executed in parallel on the input DITHERS (DpdNispRawFrame)\n-    \"\"\"\n-\n-    initialized_expo, chi2 = nir_initalize(infile  = raw_dithers,\n-                                           mdbfile = mdb)\n-\n-    badpixmasked_expo = mask_badpixel(infile  = initialized_expo,\n-                                      xmlfile = badpixel)\n-\n-    saturamasked_expo = mask_saturation(infile  = badpixmasked_expo,\n-                                        xmlfile = mdb)\n-\n-    nonlineacorr_expo = correct_nonlinear(infile  = saturamasked_expo,\n-                                          xmlfile = mdb)\n-\n-    darksubtract_expo = subtract_dark(infile     = nonlineacorr_expo,\n-                                      masterdark = masterdark)\n-\n-    crreject_expo     = cr_rejection(grism    = darksubtract_expo,\n-                                     chi2file = chi2,\n-                                     config   = config)\n-\n-    qe_frames = detectorScaling(sci_frame_fits = crreject_expo, # FITS frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb            = mdb)\n-\n-    science_frame = sir_init(fits_file = qe_frames,\n-                             le1_dp    = raw_dithers,\n-                             mdb       = mdb)\n-    # explicit\n-    return science_frame\n-# ---------------------------------------------------------------------------- #\n-\n-@parallel(iterable='sci_frame',flatten_all=True)\n-def sir_processing(sci_frame, source_catalog, opt_model, ids_model, crv_model, mdb, sirconfig):\n-    \"\"\"_SIR processiong block\n-\n-        This pipeline block prepare science-frame subtracting background and\n-        prepare location tables for spectra extraction\n-\n-    Args:\n-        science_frame (DpdSirScienceFrame): preprocessed image\n-        source_catalog (DpdMerFinalCatalog): Catalog of sources\n-        mdb (DpdMdbDataBase): Mission \"database\" OBJECT (LoL)\n-        opt_model (DpdSirOptModel): OPT model calibration\n-        ids_model (DpdSirIdsModel): IDS model calibration\n-        crv_model (DpdSirCrvModel): CRV model calibration\n-        sirconfig (DpdSirConfigurationSet): pipeline configuration ini files\n-\n-    Returns:\n-        tuple: (\"location_table\" DpdSirLocationTable objects,\n-                \"science_frame\" DpdSirScienceFrame objects background subtracted)\n-\n-    Note:\n-        It's executed in parallel on science_frame objects\n-    \"\"\"\n-\n-    locations_table = locate_spectra_tu(sci_frame = sci_frame,\n-                                        opt_model = opt_model,\n-                                        ids_model = ids_model,\n-                                        crv_model = crv_model,\n-                                        tu_cat    = source_catalog,\n-                                        mdb       = mdb,\n-                                        config    = sirconfig)\n-\n-    bkgsub_sci_frame = subtract_bkg_tu(sci_frame = sci_frame,\n-                                      loc_table = locations_table,\n-                                      tu_cat    = source_catalog,\n-                                      config    = sirconfig)\n-\n-    return locations_table, bkgsub_sci_frame\n-# ---------------------------------------------------------------------------- #\n-\n-\n-\n-@parallel(iterable='loc_table', flatten_all='True')\n-def sir_decontamination(loc_table, sci_frame, mdb, sirconfig):\n-\n-    dec_spectra = apply_decontamination_tu(sci_frame = sci_frame,\n-                                           loc_table = loc_table,\n-                                             mdb     = mdb,\n-                                             config  = sirconfig)\n-\n-    return dec_spectra\n-# ---------------------------------------------------------------------------- #\n-\n-\n-\n-@parallel(iterable='loc_table', flatten_all='True')\n-def sir_extraction(loc_table, sci_frame, mdb, source_catalog, sirconfig):\n-    \"\"\"SIR extraction block\n-\n-        This pipeline block extract spectra from images and apply decontamination,\n-        relative and absolute flux calibration\n-\n-    Args:\n-        loc_table (DpdSirLocationTable): SIR objects location table product\n-        sci_frame (DpdSirScienceFrame): cleaned and background subtracted image\n-        mdb (DpdMdbDataBase): Mission \"database\" OBJECT (LoL)\n-        source_catalog (DpdMerFinalCatalog): Catalog of sources\n-        rel_flux (DpdSirRelativeFluxScaling): relative flux calibration object\n-        abs_calib (DpdSirAbsoluteFluxScaling): absolute calibration sensitvity object\n-        sirconfig (DpdSirConfigurationSet): pipeline configuration ini files\n-\n-    Returns:\n-        list: DpdSirExtractedSpectraCollection objects, with extracted spectra organized\n-              by tile\n-\n-    Note:\n-        It's executed in parallel on location_table objects\n-    \"\"\"\n-\n-    extr_spec = extract_spectra_tu(loc_table   = loc_table,\n-                                   dec_spectra = sci_frame,\n-                                   tu_cat      = source_catalog,\n-                                   mdb         = mdb,\n-                                   config      = sirconfig)\n-\n-#### NOTE DA CAPIRE\n-    #return extr_spec\n-    relflux_spec = relflux_correction(extr_spectra_list = extr_spec,\n-                                      ms_flat           = rel_calib,\n-                                      config            = sirconfig)\n-    return relflux_spec\n-    # absflux_spec = absflux_correction(extr_spectra_list = relflux_spec,\n-    #                                   sens              = abs_calib,\n-    #                                   mdb               = mdb)\n-\n-    # # explicit\n-    # return absflux_spec\n-# ---------------------------------------------------------------------------- #\n-\n-\n-## Pipeline ##\n-@pipeline(outputs=('rel_flux'))\n-def sir_pipeline(raw_frame, mdb, nir_dark, nir_badpix, tu_cat,\n-                 det_scaling, rel_calib, opt_model, ids_model, crv_model,\n-                 abs_calib, sir_config ):\n-\n-    \"\"\"SIR \"Relative Flux calibration\" pipeline\n-\n-       This pipeline process all CALBLOCK-001 exposures (single grism exposure,\n-       15 or 60 exposures per grism) to exstract spectra and use them in the\n-       Relative Flux calibration product production\n-\n-    Returns:\n-        list: DpdSirRelativeFluxScaling product name\n-\n-    Warning:\n-        Exposures are threated independently in the decontamination step as SelfCal field\n-        CALBLOCK-001 do not have significant overlap between grisms.\n-        This means that the pipeline produces 16(detectors)*n(exposures) parallel decontamination\n-        jobs\n-    \"\"\"\n-\n-    frames = sir_preprocessing(raw_dithers = raw_frame,\n-                               masterdark  = nir_dark,\n-                               badpixel    = nir_badpix,\n-                               det_scaling = det_scaling,\n-                               mdb         = mdb,\n-                               config      = sir_config)\n-\n-    # qe_frames = detectorScaling(sci_frames     = frames,\n-    #                             zodiacal_light = det_scaling,\n-    #                             mdb            = mdb)\n-\n-    loc_and_frames = sir_processing(sci_frame = frames,\n-                                    source_catalog = tu_cat,\n-                                    opt_model = opt_model,\n-                                    ids_model = ids_model,\n-                                    crv_model = crv_model,\n-                                    mdb       = mdb,\n-                                    sirconfig = sir_config)\n-\n-    sorted_loc_tables, sci_frames, loc_tables = splitLocTable_all(input_json = loc_and_frames)\n-\n-\n-    deco_spectra = sir_decontamination(loc_table = sorted_loc_tables,\n-                                       sci_frame = sci_frames,\n-                                             mdb = mdb,\n-                                       sirconfig = sir_config)\n-\n-\n-    extr_spectra = sir_extraction(sci_frame = deco_spectra,\n-                                  loc_table = loc_tables,\n-                                  source_catalog = tu_cat,\n-                                  mdb       = mdb,\n-                                  sirconfig = sir_config)\n-\n-\n-    rel_flux = rel_model_cal(inlist = extr_spectra,\n-                             inloclist = loc_tables,\n-                             ms_flat = rel_calib)\n-\n-    return rel_flux\n-# ---------------------------------------------------------------------------- #\n-\n-\n-if __name__ == '__main__':\n-    from euclidwf.framework.graph_builder import build_graph\n-    from euclidwf.utilities import visualizer\n-    pydron_graph=build_graph(sir_pipeline)\n-    print(str(pydron_graph))\n-    visualizer.visualize_graph(pydron_graph)\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ],
                        [
                            "@@ -6,10 +6,10 @@\n from euclidwf.framework.workflow_dsl import pipeline\n from euclidwf.framework.workflow_dsl import parallel\n from PackageDef_SIR import *\n-\n+ \n \n @parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n+def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, det_scaling, config):\n     \"\"\"SIR pre-processing block\n \n         This pipeline block prepare science-frame objects applying corrections\n@@ -47,10 +47,13 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n                                      chi2file = chi2,\n                                      config   = config)\n \n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n-                                      le1_dp    = raw_dithers,\n-                                      mdb       = mdb)\n+    qe_frames = detectorScaling(sci_frame_fits = crreject_expo, # FITS frames,\n+                                zodiacal_light = det_scaling,\n+                                mdb            = mdb)\n \n+    science_frame = sir_init(fits_file = qe_frames,\n+                             le1_dp    = raw_dithers,\n+                             mdb       = mdb)\n     # explicit\n     return science_frame\n # ---------------------------------------------------------------------------- #\n@@ -140,6 +143,7 @@ def sir_extraction(loc_table, sci_frame, mdb, source_catalog, sirconfig):\n                                    mdb         = mdb,\n                                    config      = sirconfig)\n \n+#### NOTE DA CAPIRE\n     #return extr_spec\n     relflux_spec = relflux_correction(extr_spectra_list = extr_spec,\n                                       ms_flat           = rel_calib,\n@@ -179,14 +183,15 @@ def sir_pipeline(raw_frame, mdb, nir_dark, nir_badpix, tu_cat,\n     frames = sir_preprocessing(raw_dithers = raw_frame,\n                                masterdark  = nir_dark,\n                                badpixel    = nir_badpix,\n+                               det_scaling = det_scaling,\n                                mdb         = mdb,\n                                config      = sir_config)\n \n-    qe_frames = detectorScaling(sci_frames     = frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb            = mdb)\n+    # qe_frames = detectorScaling(sci_frames     = frames,\n+    #                             zodiacal_light = det_scaling,\n+    #                             mdb            = mdb)\n \n-    loc_and_frames = sir_processing(sci_frame = qe_frames,\n+    loc_and_frames = sir_processing(sci_frame = frames,\n                                     source_catalog = tu_cat,\n                                     opt_model = opt_model,\n                                     ids_model = ids_model,\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -6,10 +6,10 @@\n from euclidwf.framework.workflow_dsl import pipeline\n from euclidwf.framework.workflow_dsl import parallel\n from PackageDef_SIR import *\n-\n+ \n \n @parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n+def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, det_scaling, config):\n     \"\"\"SIR pre-processing block\n \n         This pipeline block prepare science-frame objects applying corrections\n@@ -47,10 +47,13 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n                                      chi2file = chi2,\n                                      config   = config)\n \n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n-                                      le1_dp    = raw_dithers,\n-                                      mdb       = mdb)\n+    qe_frames = detectorScaling(sci_frame_fits = crreject_expo, # FITS frames,\n+                                zodiacal_light = det_scaling,\n+                                mdb            = mdb)\n \n+    science_frame = sir_init(fits_file = qe_frames,\n+                             le1_dp    = raw_dithers,\n+                             mdb       = mdb)\n     # explicit\n     return science_frame\n # ---------------------------------------------------------------------------- #\n@@ -140,6 +143,7 @@ def sir_extraction(loc_table, sci_frame, mdb, source_catalog, sirconfig):\n                                    mdb         = mdb,\n                                    config      = sirconfig)\n \n+#### NOTE DA CAPIRE\n     #return extr_spec\n     relflux_spec = relflux_correction(extr_spectra_list = extr_spec,\n                                       ms_flat           = rel_calib,\n@@ -179,14 +183,15 @@ def sir_pipeline(raw_frame, mdb, nir_dark, nir_badpix, tu_cat,\n     frames = sir_preprocessing(raw_dithers = raw_frame,\n                                masterdark  = nir_dark,\n                                badpixel    = nir_badpix,\n+                               det_scaling = det_scaling,\n                                mdb         = mdb,\n                                config      = sir_config)\n \n-    qe_frames = detectorScaling(sci_frames     = frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb            = mdb)\n+    # qe_frames = detectorScaling(sci_frames     = frames,\n+    #                             zodiacal_light = det_scaling,\n+    #                             mdb            = mdb)\n \n-    loc_and_frames = sir_processing(sci_frame = qe_frames,\n+    loc_and_frames = sir_processing(sci_frame = frames,\n                                     source_catalog = tu_cat,\n                                     opt_model = opt_model,\n                                     ids_model = ids_model,\n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -6,10 +6,10 @@\n from euclidwf.framework.workflow_dsl import pipeline\n from euclidwf.framework.workflow_dsl import parallel\n from PackageDef_SIR import *\n-\n+ \n \n @parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n+def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, det_scaling, config):\n     \"\"\"SIR pre-processing block\n \n         This pipeline block prepare science-frame objects applying corrections\n@@ -47,10 +47,13 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n                                      chi2file = chi2,\n                                      config   = config)\n \n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n-                                      le1_dp    = raw_dithers,\n-                                      mdb       = mdb)\n+    qe_frames = detectorScaling(sci_frame_fits = crreject_expo, # FITS frames,\n+                                zodiacal_light = det_scaling,\n+                                mdb            = mdb)\n \n+    science_frame = sir_init(fits_file = qe_frames,\n+                             le1_dp    = raw_dithers,\n+                             mdb       = mdb)\n     # explicit\n     return science_frame\n # ---------------------------------------------------------------------------- #\n@@ -140,6 +143,7 @@ def sir_extraction(loc_table, sci_frame, mdb, source_catalog, sirconfig):\n                                    mdb         = mdb,\n                                    config      = sirconfig)\n \n+#### NOTE DA CAPIRE\n     #return extr_spec\n     relflux_spec = relflux_correction(extr_spectra_list = extr_spec,\n                                       ms_flat           = rel_calib,\n@@ -179,14 +183,15 @@ def sir_pipeline(raw_frame, mdb, nir_dark, nir_badpix, tu_cat,\n     frames = sir_preprocessing(raw_dithers = raw_frame,\n                                masterdark  = nir_dark,\n                                badpixel    = nir_badpix,\n+                               det_scaling = det_scaling,\n                                mdb         = mdb,\n                                config      = sir_config)\n \n-    qe_frames = detectorScaling(sci_frames     = frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb            = mdb)\n+    # qe_frames = detectorScaling(sci_frames     = frames,\n+    #                             zodiacal_light = det_scaling,\n+    #                             mdb            = mdb)\n \n-    loc_and_frames = sir_processing(sci_frame = qe_frames,\n+    loc_and_frames = sir_processing(sci_frame = frames,\n                                     source_catalog = tu_cat,\n                                     opt_model = opt_model,\n                                     ids_model = ids_model,\n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Rel_TU/PipDef_SIR_Calibration_Rel_TU.xml": [
                        [
                            "@@ -1,35 +1,31 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!-- THANK YOU ST FOR CHANGING EVERYTHING INTO A \"MINOR\" RELEASE OF THE DATAMODEL\n-     - very professional -\n--->\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n-    <Id>SIR_Calibration_Ids_@CMAKE_PROJECT_VERSION@</Id>\n+    <Id>SIR_Calibration_Rel_TU_@CMAKE_PROJECT_VERSION@</Id>\n     <ArchiveProcessingFlag>EAS_SERVICE_ONLY</ArchiveProcessingFlag>\n-    <PipelineScriptPath>SIR_Calibration_Rel/PipScript_SIR_Calibration_Rel.py</PipelineScriptPath>\n+    <PipelineScriptPath>SIR_Calibration_Rel_TU/PipScript_SIR_Calibration_Rel_TU.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n \n     <InputDataSetPlan>\n-\n <!-- raw_frame -->\n         <KeyProductInputDataPlan>\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n-                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n-                (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n-                (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n-                (raw_frame.Data.GrismWheelTilt == \"UNKNOWN\") AND\n-                (raw_frame.Data.ObservationSequence.Exposure == UNKNOWN) AND\n+                (raw_frame.Header.ManualValidationStatus          != \"INVALID\")       AND\n+                (raw_frame.Header.DataSetRelease                  == \"UNKNOWN\")       AND\n+                (raw_frame.Data.ImgType.Technique                 == \"SPECTROIMAGE\")  AND\n+                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN)         AND\n+                (raw_frame.Data.ObservationSequence.PointingId    == UNKNOWN)         AND\n+                (raw_frame.Data.GrismWheelPos                     == \"UNKNOWN\")       AND\n+                (raw_frame.Data.GrismWheelTilt                    == \"UNKNOWN\")       AND\n+                (raw_frame.Data.ObservationSequence.Exposure      == UNKNOWN)         AND\n                 (raw_frame.Data.ObservationSequence.TotalExposure == UNKNOWN)\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>4</Max>\n+                <Max>120</Max>\n             </Cardinality>\n         </KeyProductInputDataPlan>\n \n@@ -38,47 +34,17 @@\n             <InputPortName>tu_cat</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n             <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n+                (tu_cat.Header.ManualValidationStatus     !=   \"INVALID\") AND\n+                (tu_cat.Header.DataSetRelease             ==   \"UNKNOWN\") AND\n+                (tu_cat.Header.PPOId                      ==   \"UNKNOWN\") AND\n                 (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n-                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")AND\n-                (tu_cat.Data.MagnitudeLimit != \"UNKNOWN\")\n+                (tu_cat.Data.EuclidPointingId             ==   \"UNKNOWN\") AND\n+                (tu_cat.Data.MagnitudeLimit               !=   \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>1000</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- NIR master dark -->\n-        <InputDataPlan>\n-            <InputPortName>nir_dark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n-                (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- NIR Bad Pixel mask -->\n-        <InputDataPlan>\n-            <InputPortName>nir_badpix</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n-                (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n+                <Max>120</Max>\n             </Cardinality>\n         </InputDataPlan>\n \n@@ -95,7 +61,11 @@\n                     \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n                     \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n                     \"NISP_GrismTransmission*\" ,\n-                    \"NISPDetector*\"\n+                    \"NISPDetector*\",\n+                    \"NISPHTransmissionCurves*\",\n+                    \"NISPJTransmissionCurves*\",\n+                    \"NISPYTransmissionCurves*\",\n+                    \"PLMTransmissionNISPNominalEOLCBE*\"\n                 </FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n@@ -105,13 +75,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- Detector scaling -->\n+<!-- Sir Configuration -->\n         <InputDataPlan>\n-            <InputPortName>det_scaling</InputPortName>\n-            <DataProductType>DpdSirDetectorScaling</DataProductType>\n+            <InputPortName>sir_config</InputPortName>\n+            <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n-                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (sir_config.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -125,7 +95,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n+                (opt_model.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -135,12 +105,27 @@\n             </Cardinality>\n         </InputDataPlan>\n \n+<!-- CRV Sir Configuration -->\n+        <InputDataPlan>\n+            <InputPortName>crv_model</InputPortName>\n+            <DataProductType>DpdSirCrvModel</DataProductType>\n+            <InputQuerySpecPlan>\n+                (crv_model.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n+            </InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+\n <!-- IDS Sir Configuration -->\n         <InputDataPlan>\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n+                (ids_model.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -150,13 +135,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- CRV Sir Configuration -->\n+<!-- Relative Flux scaling -->\n         <InputDataPlan>\n-            <InputPortName>crv_model</InputPortName>\n-            <DataProductType>DpdSirCrvModel</DataProductType>\n+            <InputPortName>rel_calib</InputPortName>\n+            <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n+              (rel_calib.Header.ManualValidationStatus  != \"INVALID\") AND\n+              (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -165,14 +150,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-\n-<!-- Absolute flux scaling -->\n+<!-- Detector scaling -->\n         <InputDataPlan>\n-            <InputPortName>abs_calib</InputPortName>\n-            <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n+            <InputPortName>det_scaling</InputPortName>\n+            <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n-                (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (det_scaling.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -181,13 +165,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- Relative Flux scaling -->\n+<!-- NIR master dark -->\n         <InputDataPlan>\n-            <InputPortName>rel_calib</InputPortName>\n-            <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n+            <InputPortName>nir_dark</InputPortName>\n+            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n-              (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (nir_dark.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -196,13 +180,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- Sir Configuration -->\n+<!-- NIR Bad Pixel mask -->\n         <InputDataPlan>\n-            <InputPortName>sir_config</InputPortName>\n-            <DataProductType>DpdSirConfigurationSet</DataProductType>\n+            <InputPortName>nir_badpix</InputPortName>\n+            <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n-                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (nir_badpix.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -214,8 +198,9 @@\n     </InputDataSetPlan>\n \n     <OutputDataSet>\n+<!-- Updated Relative flux calibration product -->\n         <OutputDataProduct>\n-            <OutputPortName>rel_flux</OutputPortName>\n+            <OutputPortName>new_rel_flux</OutputPortName>\n             <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -224,6 +209,7 @@\n             </Cardinality>\n         </OutputDataProduct>\n     </OutputDataSet>\n+\n     <EstimatedWorkdirSizeGB>200</EstimatedWorkdirSizeGB>\n \n </tsk1:PipelineDef>\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Rel_TU/PipScript_SIR_Calibration_Rel_TU.py": [
                        [
                            "@@ -0,0 +1,258 @@\n+# ---------------------------------------------------------------------------- #\n+# SIR pipeline \"Calibration Relative Flux TU\" \n+#\n+# Calblock: PV-001\n+#\n+# Catalog: TU \n+#\n+# Date: August 2023\n+#\n+# Calibration step 4 following IDS calibration\n+# ---------------------------------------------------------------------------- #\n+\n+\n+from euclidwf.framework.workflow_dsl import pipeline\n+from euclidwf.framework.workflow_dsl import parallel\n+from PackageDef_SIR import *\n+ \n+\n+@parallel(iterable='raw_frames', flatten_all='True')\n+def sir_preprocessing(raw_frames, mdb, dark, badpix, det_scaling, config):\n+    \"\"\"SIR pre-processing block\n+\n+        SIR pipeline block that prepares science_frame objects applying corrections,\n+        and rotating detectors layout of LE1 raw-frames \n+\n+    Args:\n+        raw_frames (XML list): Level 1 NISP DpdNispRawFrame image objects\n+        mdb (XML): DpdMdbDataBase object\n+        dark (XML): NIR DpdNirMasterDarkFrame image object\n+        badpix (XML): NIR DpdNirBadPixelMask mask object\n+        det_scaling (XML): QE correction SIR calibration object\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n+\n+    Returns:\n+        list: DpdSirScienceFrame dark-subtracted and corrected objects\n+\n+    Note:\n+        Is executed in parallel on the independent input raw_frames (DpdNispRawFrame)\n+\n+    Warning:\n+        The output frames have rotated detector layout after SIR_init step        \n+    \"\"\"\n+\n+    initialized_expo, chi2 = nir_initalize(infile  = raw_frames,\n+                                           mdbfile = mdb)\n+\n+    badpixmasked_expo = mask_badpixel(infile  = initialized_expo,\n+                                      xmlfile = badpix)\n+\n+    saturamasked_expo = mask_saturation(infile  = badpixmasked_expo,\n+                                        xmlfile = mdb)\n+\n+    nonlineacorr_expo = correct_nonlinear(infile  = saturamasked_expo,\n+                                          xmlfile = mdb)\n+\n+    darksubtract_expo = subtract_dark(infile     = nonlineacorr_expo,\n+                                      masterdark = dark)\n+\n+    cr_rejected_expo  = cosmic_rejection(grism    = darksubtract_expo,\n+                                         chi2file = chi2,\n+                                         config   = config)\n+    \n+    qe_corrected_expo = detector_scaling(sci_frame_fits = cr_rejected_expo,\n+                                         zodiacal_light = det_scaling,\n+                                         mdb = mdb)\n+\n+    science_frame     = sir_initialize(fits_file = qe_corrected_expo,\n+                                       le1_dp    = raw_frames,\n+                                       mdb       = mdb)\n+\n+    return science_frame\n+# ---------------------------------------------------------------------------- #\n+\n+\n+@parallel(iterable='sci_frames',flatten_all=True)\n+def sir_processing(sci_frames, catalog, opt_model, ids_model, crv_model, mdb, config):\n+    \"\"\"SIR processiong block\n+\n+        SIR pipeline block computing location tables and preparing background \n+        subtracted science-frames (images) needed for spectra extraction\n+\n+    Args:\n+        sci_frames (XML list): SIR preprocessed DpdSirScienceFrame images\n+        catalog (XML list): DpdTrueUniverseOutput or DpdMerFinalCatalog catalog of sources objects\n+        mdb (XML): DpdMdbDataBase object\n+        opt_model (XML): SIR DpdSirOptModel optical model\n+        ids_model (XML): SIR DpdSirIdsModel inverse dipersion solution model\n+        crv_model (XML): SIR DpdSirCrvModel curvature model\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n+\n+    Returns:\n+        tuple: (<DpdSirLocationTable> up to 16 objects, \n+                <DpdSirScienceFrame> 1 background subtracted object)\n+\n+    Note:\n+        It's executed in parallel on sci_frames objects\n+    \"\"\"\n+\n+    locations_tables = locate_spectra_tu(sci_frame = sci_frames,\n+                                         opt_model = opt_model,\n+                                         ids_model = ids_model,\n+                                         crv_model = crv_model,\n+                                         tu_cat    = catalog,\n+                                         mdb       = mdb,\n+                                         config    = config)\n+\n+    bkgsub_sci_frame = subtract_bkg_tu(sci_frame = sci_frames,\n+                                       loc_table = locations_tables,\n+                                       tu_cat    = catalog,\n+                                       config    = config)\n+\n+    return locations_tables, bkgsub_sci_frame\n+# ---------------------------------------------------------------------------- #\n+\n+\n+@parallel(iterable='loc_tables', flatten_all='True')\n+def sir_decontamination(loc_tables, sci_frames, mdb, config):\n+    \"\"\"SIR decontamination block\n+\n+        SIR pipeline block that decontaminate spectra\n+\n+    Args:\n+        loc_tables (list of lists): list of DpdSirLocationTable objects grouped by detector\n+        sci_frames (XML list): SIR processed (background subtracted) DpdSirScienceFrame images\n+        mdb (XML): DpdMdbDataBase object\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n+\n+    Returns:\n+        H5: Decontaminated spectra object for each location table\n+\n+    Note:\n+        It's executed in parallel on loc_tables objects\n+    \"\"\"\n+    dec_spectra = apply_decontamination_tu(sci_frame = sci_frames,\n+                                           loc_table = loc_tables,\n+                                           mdb       = mdb,\n+                                           config    = config)\n+\n+    return dec_spectra\n+# ---------------------------------------------------------------------------- #\n+\n+\n+@parallel(iterable='loc_tables', flatten_all='True')\n+def sir_extraction(loc_tables, dec_spectra, catalog, mdb, rel_calib, config):\n+    \"\"\"SIR extraction block\n+\n+        SIR pipeline block that extract spectra and apply relative flux correction.\n+        Only relative flux calibration is applied to the extraxcted spectra in\n+        the ABS calibration pipeline\n+\n+    Args:\n+        loc_tables (list XML): DpdSirLocationTable objects\n+        dec_spectra (list XML): list of  \n+        catalog (XML list): DpdTrueUniverseOutput catalog of sources objects\n+        mdb (XML): DpdMdbDataBase object\n+        rel_flux XML): SIR DpdSirRelativeFluxScaling relative flux calibration model\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n+\n+    Returns:\n+        list: DpdSirExtractedSpectraCollection objects\n+\n+    Note:\n+        It's executed in parallel on loc_tables objects\n+    \"\"\"\n+\n+    extr_spec = extract_spectra_tu(loc_table   = loc_tables,\n+                                   dec_spectra = dec_spectra,\n+                                   tu_cat      = catalog,\n+                                   mdb         = mdb,\n+                                   config      = config)\n+\n+    relflux_spec = relflux_correction(extr_spectra_list = extr_spec,\n+                                      ms_flat           = rel_calib,\n+                                      config            = config,\n+                                      mdbfile           = mdb)\n+\n+    return relflux_spec\n+# ---------------------------------------------------------------------------- #\n+\n+\n+# ---------------------------------------------------------------------------- #\n+# PIPELINE\n+# ---------------------------------------------------------------------------- #\n+@pipeline(outputs=('new_rel_flux'))\n+def sir_pipeline(raw_frame, \n+                 tu_cat, \n+                 mdb, \n+                 det_scaling,  \n+                 opt_model,  \n+                 crv_model,\n+                 ids_model,\n+                 rel_calib,\n+                 nir_dark, \n+                 nir_badpix,\n+                 sir_config ):\n+    \"\"\"SIR \"REL Flux TU\" pipeline\n+\n+       This pipeline process 15 to 120 (15 per grism orientation pu 60  for BGS) frames\n+       of PV 001 up to the relative flux calibration step to produce the spectra needed \n+       to update the REL flux calibration product computation\n+       \n+       This CALIBRATION pipeline must run AFTER the IDS calibration pipeline\n+\n+    Returns:\n+        New REL calibration product,that contains updated GRISM sections according to\n+        the GRISM dataset used as input. If 400 frames are provided, all the GRISMS\n+        are updated in the final product    \n+    \"\"\"\n+\n+    frames = sir_preprocessing(raw_frames  = raw_frame,\n+                               dark        = nir_dark,\n+                               badpix      = nir_badpix,\n+                               det_scaling = det_scaling,\n+                               mdb         = mdb,\n+                               config      = sir_config)\n+\n+\n+    loc_and_frames = sir_processing(sci_frames = frames,\n+                                    catalog    = tu_cat,\n+                                    opt_model  = opt_model,\n+                                    ids_model  = ids_model,\n+                                    crv_model  = crv_model,\n+                                    mdb        = mdb,\n+                                    config     = sir_config)\n+\n+    # in this calibration all location tables are independent\n+    single_loc_tables, sci_frames, loc_tables = splitLocTable_all(input_json = loc_and_frames)\n+\n+\n+    deco_spectra = sir_decontamination(loc_tables = single_loc_tables,\n+                                       sci_frames = sci_frames,\n+                                       mdb        = mdb,\n+                                       config     = sir_config)\n+\n+\n+    extr_spectra = sir_extraction(loc_tables  = loc_tables,\n+                                  dec_spectra = deco_spectra,\n+                                  catalog     = tu_cat,\n+                                  mdb         = mdb,\n+                                  rel_calib   = rel_calib,\n+                                  config      = sir_config)\n+\n+    new_rel_flux = rel_model_cal(inlist    = extr_spectra,\n+                                 inloclist = loc_tables,\n+                                 ms_flat   = rel_calib,\n+                                 mdbfile   = mdb)\n+    \n+\n+    return new_rel_flux\n+# ---------------------------------------------------------------------------- #\n+\n+\n+if __name__ == '__main__':\n+    from euclidwf.framework.graph_builder import build_graph\n+    from euclidwf.utilities import visualizer\n+    pydron_graph=build_graph(sir_pipeline)\n+    print(str(pydron_graph))\n+    visualizer.visualize_graph(pydron_graph)\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Rel_TU/__init__.py": [
                        [
                            "",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Rot/PipDef_SIR_Calibration_Rot.xml": [
                        [
                            "@@ -1,194 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-\n-    <EdenVersion>@EDEN@</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Calib_Opt_@CMAKE_PROJECT_VERSION@</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n-    <PipelineScriptPath>SIR_Calibration_Rot/PipScript_SIR_Calibration_Rot.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n-    <InputDataSet>\n-\n-<!-- raw_frames -->\n-        <KeyProductInputDataPlan>\n-            <InputPortName>raw_frame</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n-                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n-                (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n-                (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n-                (raw_frame.Data.GrismWheelTilt == \"UNKNOWN\") AND\n-                (raw_frame.Data.ObservationSequence.Exposure == UNKNOWN) AND\n-                (raw_frame.Data.ObservationSequence.TotalExposure == UNKNOWN)\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>4</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-\n-<!-- TU catalog -->\n-        <InputDataPlan>\n-            <InputPortName>tu_cat</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n-                (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n-                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>4</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- NIR master dark -->\n-        <InputDataPlan>\n-            <InputPortName>nir_dark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n-                (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- NIR Bad Pixel mask -->\n-        <InputDataPlan>\n-            <InputPortName>nir_badpix</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n-                (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- MDB -->\n-        <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>(mdb.Header.ProductId.LimitedString == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\n-                    \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\" ,\n-                    \"EUC_NISP_Saturation*\" ,\n-                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n-                    \"NISP_GrismTransmission*\" ,\n-                    \"NISPDetector*\"\n-                </FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- Detector scaling -->\n-        <InputDataPlan>\n-            <InputPortName>det_scaling</InputPortName>\n-            <DataProductType>DpdSirDetectorScaling</DataProductType>\n-            <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n-                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- OPT Sir Configuration -->\n-        <InputDataPlan>\n-            <InputPortName>opt_model</InputPortName>\n-            <DataProductType>DpdSirOptModel</DataProductType>\n-            <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- CRV Sir Configuration -->\n-        <InputDataPlan>\n-            <InputPortName>crv_model</InputPortName>\n-            <DataProductType>DpdSirCrvModel</DataProductType>\n-            <InputQuerySpecPlan>\n-                (cvr_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-\n-<!-- Sir Configuration -->\n-        <InputDataPlan>\n-            <InputPortName>sir_config</InputPortName>\n-            <DataProductType>DpdSirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n-                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-\n-<!-- Input dependencies and relations for PLAN with multiple PPO-->\n-        <Dependencies>\n-            <GroupedBy>raw_frame.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"tu_cat\">\n-                <Query>raw_frame.Data.ObservationSequence.ObservationId == tu_cat.Data.EuclidPointingId</Query>\n-            </LinkedBy>\n-\n-        </Dependencies>\n-    </InputDataSet>\n-\n-\n-    <OutputDataSet>\n-        <OutputDataProduct>\n-            <OutputPortName>opt_calib</OutputPortName>\n-            <DataProductType>DpdSirOptModel</DataProductType>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-    </OutputDataSet>\n-\n-    <EstimatedWorkdirSizeGB>200</EstimatedWorkdirSizeGB>\n-\n-</tsk1:PipelineDef>\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ],
                        [
                            "@@ -1,11 +1,11 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Calib_Opt_@CMAKE_PROJECT_VERSION@</Id> \n+    <Id>SIR_Calib_Opt_@CMAKE_PROJECT_VERSION@</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n     <PipelineScriptPath>SIR_Calibration_Rot/PipScript_SIR_Calibration_Rot.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n@@ -16,9 +16,9 @@\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n                 (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n                 (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n                 (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n@@ -38,9 +38,9 @@\n             <InputPortName>tu_cat</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n             <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND \n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (tu_cat.Header.PPOId == \"UNKNOWN\") AND \n+                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n+                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n                 (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n                 (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n@@ -56,7 +56,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -71,7 +71,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -89,11 +89,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\" , \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\" , \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\" , \n-                    \"NISP_GrismTransmission*\" , \n+                    \"EUC_NISP_H2RG-NONLINEARITY*\" ,\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n+                    \"NISP_GrismTransmission*\" ,\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -109,8 +109,8 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n-                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\") \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n+                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -124,7 +124,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -155,8 +155,8 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n-                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\") \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n+                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -1,11 +1,11 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Calib_Opt_@CMAKE_PROJECT_VERSION@</Id> \n+    <Id>SIR_Calib_Opt_@CMAKE_PROJECT_VERSION@</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n     <PipelineScriptPath>SIR_Calibration_Rot/PipScript_SIR_Calibration_Rot.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n@@ -16,9 +16,9 @@\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n                 (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n                 (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n                 (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n@@ -38,9 +38,9 @@\n             <InputPortName>tu_cat</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n             <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND \n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (tu_cat.Header.PPOId == \"UNKNOWN\") AND \n+                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n+                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n                 (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n                 (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n@@ -56,7 +56,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -71,7 +71,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -89,11 +89,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\" , \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\" , \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\" , \n-                    \"NISP_GrismTransmission*\" , \n+                    \"EUC_NISP_H2RG-NONLINEARITY*\" ,\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n+                    \"NISP_GrismTransmission*\" ,\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -109,8 +109,8 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n-                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\") \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n+                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -124,7 +124,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -155,8 +155,8 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n-                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\") \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n+                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -1,11 +1,11 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Calib_Opt_@CMAKE_PROJECT_VERSION@</Id> \n+    <Id>SIR_Calib_Opt_@CMAKE_PROJECT_VERSION@</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n     <PipelineScriptPath>SIR_Calibration_Rot/PipScript_SIR_Calibration_Rot.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n@@ -16,9 +16,9 @@\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n                 (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n                 (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n                 (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n@@ -38,9 +38,9 @@\n             <InputPortName>tu_cat</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n             <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND \n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (tu_cat.Header.PPOId == \"UNKNOWN\") AND \n+                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n+                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n                 (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n                 (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n@@ -56,7 +56,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -71,7 +71,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -89,11 +89,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\" , \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\" , \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\" , \n-                    \"NISP_GrismTransmission*\" , \n+                    \"EUC_NISP_H2RG-NONLINEARITY*\" ,\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n+                    \"NISP_GrismTransmission*\" ,\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -109,8 +109,8 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n-                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\") \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n+                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -124,7 +124,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -155,8 +155,8 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n-                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\") \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n+                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Rot/PipScript_SIR_Calibration_Rot.py": [
                        [
                            "@@ -1,152 +0,0 @@\n-# ---------------------------------------------------------------------------- #\n-# Pipeline definition for SIR pipeline \"Calibration OPT\"\n-#\n-# THIS IS THE CALIBRATION STEP 1\n-# ---------------------------------------------------------------------------- #\n-\n-from euclidwf.framework.workflow_dsl import pipeline\n-from euclidwf.framework.workflow_dsl import parallel\n-from PackageDef_SIR import *\n-\n-\n-@parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n-    \"\"\"SIR pre-processing block\n-\n-        This pipeline block prepare science-frame objects applying corrections\n-        and subtracking dark\n-\n-    Args:\n-        raw_dithers (xml): NISP raw-frame image object\n-        mdb (xml): Mission DataBase\n-        masterdark (xml): NIR DpdNirMasterDarkFrame image object\n-        badpixel (xml): NIR DpdNirBadPixelMask mask object\n-\n-    Returns:\n-        list: DpdSirScienceFrame dark-subtracted and corrected objects\n-\n-    Note:\n-        Is executed in parallel on the input DITHERS (DpdNispRawFrame)\n-    \"\"\"\n-\n-    initialized_expo, chi2 = nir_initalize(infile  = raw_dithers,\n-                                           mdbfile = mdb)\n-\n-    badpixmasked_expo = mask_badpixel(infile  = initialized_expo,\n-                                      xmlfile = badpixel)\n-\n-    saturamasked_expo = mask_saturation(infile  = badpixmasked_expo,\n-                                        xmlfile = mdb)\n-\n-    nonlineacorr_expo = correct_nonlinear(infile  = saturamasked_expo,\n-                                          xmlfile = mdb)\n-\n-    darksubtract_expo = subtract_dark(infile     = nonlineacorr_expo,\n-                                      masterdark = masterdark)\n-\n-    crreject_expo     = cr_rejection(grism    = darksubtract_expo,\n-                                     chi2file = chi2,\n-                                     config   = config)\n-\n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n-                                      le1_dp    = raw_dithers,\n-                                      mdb       = mdb)\n-\n-    # explicit\n-    return science_frame\n-# ---------------------------------------------------------------------------- #\n-\n-\n-\n-@parallel(iterable='sci_frames', flatten_all='True')\n-def sir_calibration(sci_frames, tu_cat, opt_model, crv_model, mdb, sir_config):\n-    \"\"\"Compute Rot calibration for each group od frames\n-\n-    Args:\n-        frames (_type_): filename with list of all frames of the same grism\n-        tu_cat (_type_): catalog(s) covering all the frames ares\n-        opt_model (_type_): opt model from opt calibration run\n-        crv_model (_type_): crv model from crv calibration run\n-        mdb (_type_): mission data base\n-        sir_config (_type_): sir configuration set\n-\n-    Returns:\n-        _type_: OPT model calibration where rotation section is updated\n-    \"\"\"\n-\n-    opt_cal = rot_model_cal(sci_frame = sci_frames,\n-                            opt_model = opt_model,\n-                            crv_model = crv_model,\n-                            tu_cat    = tu_cat,\n-                            config    = sir_config,\n-                            mdb       = mdb)\n-\n-    # explicit\n-    return opt_cal\n-# ---------------------------------------------------------------------------- #\n-\n-\n-\n-# ---------------------------------------------------------------------------- #\n-# ---------------------------------------------------------------------------- #\n-\n-\n-\n-@pipeline(outputs=('opt_calib'))\n-def sir_pipeline(raw_frame, tu_cat, nir_dark, nir_badpix, mdb, det_scaling, opt_model, crv_model, sir_config):\n-    \"\"\"_summary_\n-\n-    Args:\n-        dithers (_type_): _description_\n-        tu_cat (_type_): _description_\n-        masterdark (_type_): _description_\n-        badpixel (_type_): _description_\n-        det_scaling (_type_): _description_\n-        opt_model (_type_): _description_\n-        crv_model (_type_): _description_\n-        config (_type_): _description_\n-        mdb (_type_): _description_\n-\n-    Returns:\n-        _type_: _description_\n-    \"\"\"\n-\n-    # parallel on ALL frames (60)\n-    frames = sir_preprocessing(raw_dithers = raw_frame,\n-                               masterdark = nir_dark,\n-                               badpixel = nir_badpix,\n-                               mdb = mdb,\n-                               config= sir_config)\n-    # all frames (60)\n-    qe_frames = detectorScaling(sci_frames=frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb = mdb)\n-\n-    # group by grism, return list of files \"per grism\" with grouped frames names\n-    frame_lists = sort_by_grism(frames=qe_frames)\n-\n-\n-    # parallel on grisms (4 grism x 15 frames each in RED selfcal)\n-    opt_cal_list = sir_calibration(sci_frames= frame_lists,\n-                                   opt_model = opt_model,\n-                                   crv_model = crv_model,\n-                                   tu_cat    = tu_cat,\n-                                   mdb       = mdb,\n-                                   sir_config    = sir_config)\n-\n-\n-    # sum up calibrations on grisms in a single calibration product\n-    opt_calib = collect_cal_opt(calib_list = opt_cal_list,\n-                                calib_base = opt_model)\n-\n-\n-    return opt_calib\n-# ---------------------------------------------------------------------------- #\n-\n-\n-if __name__ == '__main__':\n-    from euclidwf.framework.graph_builder import build_graph\n-    from euclidwf.utilities import visualizer\n-    pydron_graph=build_graph(sir_pipeline)\n-    print(str(pydron_graph))\n-    visualizer.visualize_graph(pydron_graph)\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Combine_Spectra/PipDef_SIR_Combine_Spectra.xml": [
                        [
                            "@@ -1,26 +1,21 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n-    <EdenVersion>@EDEN@</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n     <Id>SIR_Combine_Spectra_@CMAKE_PROJECT_VERSION@</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n     <PipelineScriptPath>SIR_Combine_Spectra/PipScript_SIR_Combine_Spectra.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n \n-    <InputDataSet>\n-\n+    <InputDataSetPlan>\n <!-- Mer Final Catalogs-->\n         <KeyProductInputDataPlan>\n             <InputPortName>mer_catalog</InputPortName>\n             <DataProductType>DpdMerFinalCatalog</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND\n-                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (mer_catalog.Header.ManualValidationStatus              != \"INVALID\") AND\n+                (mer_catalog.Header.DataSetRelease                      == \"UNKNOWN\") AND\n                 (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN)) AND\n-                (mer_catalog.Data.TileIndex == \"UNKNOWN\")\n+                (mer_catalog.Data.TileIndex                             == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -34,10 +29,10 @@\n             <InputPortName>extracted_spectra</InputPortName>\n             <DataProductType>DpdSirExtractedSpectraCollection</DataProductType>\n             <InputQuerySpecPlan>\n-                (extracted_spectra.Header.ManualValidationStatus != \"INVALID\") AND\n-                (extracted_spectra.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (extracted_spectra.Data.GrismWheelPos LIKE \"UNKNOWN\") AND\n-                (extracted_spectra.Data.TileIndexes IN (\"UNKNOWN\"))\n+                (extracted_spectra.Header.ManualValidationStatus !=   \"INVALID\")  AND\n+                (extracted_spectra.Header.DataSetRelease         ==   \"UNKNOWN\")  AND\n+                (extracted_spectra.Data.GrismWheelPos            LIKE \"UNKNOWN\")  AND\n+                (extracted_spectra.Data.TileIndexes              IN   (\"UNKNOWN\"))\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -54,12 +49,16 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\" ,\n+                    \"EUC_NISP_NLSPECTRO*\" ,\n                     \"EUC_NISP_Saturation*\" ,\n                     \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n                     \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n                     \"NISP_GrismTransmission*\" ,\n-                    \"NISPDetector*\"\n+                    \"NISPDetector*\",\n+                    \"NISPHTransmissionCurves*\",\n+                    \"NISPJTransmissionCurves*\",\n+                    \"NISPYTransmissionCurves*\",\n+                    \"PLMTransmissionNISPNominalEOLCBE*\"\n                 </FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n@@ -74,7 +73,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n+                (sir_config.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -84,18 +83,10 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- Input dependencies to filter query -->\n-        <Dependencies>\n-            <LinkedBy refPort=\"mer_catalog\">\n-                <Query>mer_catalog.Data.ObservationIdList.MerListOfObservationId == extracted_spectra.Data.Observation.ObservationId </Query>\n-            </LinkedBy>\n-        </Dependencies>\n-\n-    </InputDataSet>\n+    </InputDataSetPlan>\n \n     <OutputDataSet>\n-\n-    <!-- SIR Combined Spectra: main product for customers -->\n+<!-- SIR Combined Spectra 1D -->\n         <OutputDataProduct>\n             <OutputPortName>combined_spectra</OutputPortName>\n             <DataProductType>DpdSirCombinedSpectra</DataProductType>\n@@ -105,6 +96,7 @@\n                 <Max>100</Max>\n             </Cardinality>\n         </OutputDataProduct>\n+        \n     </OutputDataSet>\n \n     <EstimatedWorkdirSizeGB>100</EstimatedWorkdirSizeGB>\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ],
                        [
                            "@@ -1,15 +1,15 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Combine_Spectra_@CMAKE_PROJECT_VERSION@</Id> \n+    <Id>SIR_Combine_Spectra_@CMAKE_PROJECT_VERSION@</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n     <PipelineScriptPath>SIR_Combine_Spectra/PipScript_SIR_Combine_Spectra.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n- \n+\n     <InputDataSet>\n \n <!-- Mer Final Catalogs-->\n@@ -17,8 +17,8 @@\n             <InputPortName>mer_catalog</InputPortName>\n             <DataProductType>DpdMerFinalCatalog</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN)) AND\n                 (mer_catalog.Data.TileIndex == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n@@ -34,9 +34,9 @@\n             <InputPortName>extracted_spectra</InputPortName>\n             <DataProductType>DpdSirExtractedSpectraCollection</DataProductType>\n             <InputQuerySpecPlan>\n-                (extracted_spectra.Header.ManualValidationStatus != \"INVALID\") AND \n-                (extracted_spectra.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (extracted_spectra.Data.GrismWheelPos LIKE \"UNKNOWN\") AND \n+                (extracted_spectra.Header.ManualValidationStatus != \"INVALID\") AND\n+                (extracted_spectra.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (extracted_spectra.Data.GrismWheelPos LIKE \"UNKNOWN\") AND\n                 (extracted_spectra.Data.TileIndexes IN (\"UNKNOWN\"))\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -54,11 +54,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\" , \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\" , \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\" , \n-                    \"NISP_GrismTransmission*\" , \n+                    \"EUC_NISP_H2RG-NONLINEARITY*\" ,\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n+                    \"NISP_GrismTransmission*\" ,\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -74,7 +74,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -1,15 +1,15 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Combine_Spectra_@CMAKE_PROJECT_VERSION@</Id> \n+    <Id>SIR_Combine_Spectra_@CMAKE_PROJECT_VERSION@</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n     <PipelineScriptPath>SIR_Combine_Spectra/PipScript_SIR_Combine_Spectra.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n- \n+\n     <InputDataSet>\n \n <!-- Mer Final Catalogs-->\n@@ -17,8 +17,8 @@\n             <InputPortName>mer_catalog</InputPortName>\n             <DataProductType>DpdMerFinalCatalog</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN)) AND\n                 (mer_catalog.Data.TileIndex == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n@@ -34,9 +34,9 @@\n             <InputPortName>extracted_spectra</InputPortName>\n             <DataProductType>DpdSirExtractedSpectraCollection</DataProductType>\n             <InputQuerySpecPlan>\n-                (extracted_spectra.Header.ManualValidationStatus != \"INVALID\") AND \n-                (extracted_spectra.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (extracted_spectra.Data.GrismWheelPos LIKE \"UNKNOWN\") AND \n+                (extracted_spectra.Header.ManualValidationStatus != \"INVALID\") AND\n+                (extracted_spectra.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (extracted_spectra.Data.GrismWheelPos LIKE \"UNKNOWN\") AND\n                 (extracted_spectra.Data.TileIndexes IN (\"UNKNOWN\"))\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -54,11 +54,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\" , \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\" , \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\" , \n-                    \"NISP_GrismTransmission*\" , \n+                    \"EUC_NISP_H2RG-NONLINEARITY*\" ,\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n+                    \"NISP_GrismTransmission*\" ,\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -74,7 +74,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -1,15 +1,15 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Combine_Spectra_@CMAKE_PROJECT_VERSION@</Id> \n+    <Id>SIR_Combine_Spectra_@CMAKE_PROJECT_VERSION@</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n     <PipelineScriptPath>SIR_Combine_Spectra/PipScript_SIR_Combine_Spectra.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n- \n+\n     <InputDataSet>\n \n <!-- Mer Final Catalogs-->\n@@ -17,8 +17,8 @@\n             <InputPortName>mer_catalog</InputPortName>\n             <DataProductType>DpdMerFinalCatalog</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN)) AND\n                 (mer_catalog.Data.TileIndex == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n@@ -34,9 +34,9 @@\n             <InputPortName>extracted_spectra</InputPortName>\n             <DataProductType>DpdSirExtractedSpectraCollection</DataProductType>\n             <InputQuerySpecPlan>\n-                (extracted_spectra.Header.ManualValidationStatus != \"INVALID\") AND \n-                (extracted_spectra.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (extracted_spectra.Data.GrismWheelPos LIKE \"UNKNOWN\") AND \n+                (extracted_spectra.Header.ManualValidationStatus != \"INVALID\") AND\n+                (extracted_spectra.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (extracted_spectra.Data.GrismWheelPos LIKE \"UNKNOWN\") AND\n                 (extracted_spectra.Data.TileIndexes IN (\"UNKNOWN\"))\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -54,11 +54,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\" , \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\" , \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\" , \n-                    \"NISP_GrismTransmission*\" , \n+                    \"EUC_NISP_H2RG-NONLINEARITY*\" ,\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n+                    \"NISP_GrismTransmission*\" ,\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -74,7 +74,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Combine_Spectra/PipScript_SIR_Combine_Spectra.py": [
                        [
                            "@@ -7,8 +7,8 @@ from euclidwf.framework.workflow_dsl import pipeline\n from euclidwf.framework.workflow_dsl import parallel\n from PackageDef_SIR import *\n \n-@parallel(iterable='source_catalog', flatten_all='True')\n-def sir_combination(extr_spectra, mdb, source_catalog, sirconfig):\n+@parallel(iterable='catalog', flatten_all='True')\n+def sir_combination(catalog, spectra, mdb, config):\n     \"\"\"SIR combination block\n \n        This pipeline block combine extracted spectra according to the tile \n@@ -27,17 +27,12 @@ def sir_combination(extr_spectra, mdb, source_catalog, sirconfig):\n         It's executed in parallel on the catalog (tiles)    \n     \"\"\"\n \n-    h5_combined_spectra = combine_spectra(mer_cat = source_catalog,\n-                                          extr_spectra_list = extr_spectra,\n-                                          mdb = mdb,\n-                                          config = sirconfig)\n+    h5_combined, fits_combined = combine_spectra(mer_cat           = catalog,\n+                                                 extr_spectra_list = spectra,\n+                                                 mdb               = mdb,\n+                                                 config            = config)\n \n-    fits_combined_spectra = sir_create_SPE_fits(#mer_cat=source_catalog,\n-                                                comb_spectra = h5_combined_spectra,\n-                                                config = sirconfig)\n-\n-\n-    return fits_combined_spectra\n+    return fits_combined\n # ---------------------------------------------------------------------------- #\n \n \n@@ -45,10 +40,10 @@ def sir_combination(extr_spectra, mdb, source_catalog, sirconfig):\n @pipeline(outputs=('combined_spectra',))\n def sir_pipeline(mer_catalog, extracted_spectra, mdb, sir_config):\n \n-    combined_spectra = sir_combination(source_catalog = mer_catalog,\n-                                       extr_spectra  = extracted_spectra,\n-                                       mdb = mdb,\n-                                       sirconfig = sir_config)\n+    combined_spectra = sir_combination(catalog = mer_catalog,\n+                                       spectra = extracted_spectra,\n+                                       mdb     = mdb,\n+                                       config  = sir_config)\n                                        \n     return combined_spectra\n # ---------------------------------------------------------------------------- #\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ],
                        [
                            "@@ -32,7 +32,7 @@ def sir_combination(extr_spectra, mdb, source_catalog, sirconfig):\n                                           mdb = mdb,\n                                           config = sirconfig)\n \n-    fits_combined_spectra = sir_create_SPE_fits(mer_cat=source_catalog,\n+    fits_combined_spectra = sir_create_SPE_fits(#mer_cat=source_catalog,\n                                                 comb_spectra = h5_combined_spectra,\n                                                 config = sirconfig)\n \n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -32,7 +32,7 @@ def sir_combination(extr_spectra, mdb, source_catalog, sirconfig):\n                                           mdb = mdb,\n                                           config = sirconfig)\n \n-    fits_combined_spectra = sir_create_SPE_fits(mer_cat=source_catalog,\n+    fits_combined_spectra = sir_create_SPE_fits(#mer_cat=source_catalog,\n                                                 comb_spectra = h5_combined_spectra,\n                                                 config = sirconfig)\n \n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -32,7 +32,7 @@ def sir_combination(extr_spectra, mdb, source_catalog, sirconfig):\n                                           mdb = mdb,\n                                           config = sirconfig)\n \n-    fits_combined_spectra = sir_create_SPE_fits(mer_cat=source_catalog,\n+    fits_combined_spectra = sir_create_SPE_fits(#mer_cat=source_catalog,\n                                                 comb_spectra = h5_combined_spectra,\n                                                 config = sirconfig)\n \n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Extract_Spectra/PipDef_SIR_Extract_Spectra.xml": [
                        [
                            "@@ -1,29 +1,25 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n-    <EdenVersion>@EDEN@</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n     <Id>SIR_Extract_Spectra_@CMAKE_PROJECT_VERSION@</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n     <PipelineScriptPath>SIR_Extract_Spectra/PipScript_SIR_Extract_Spectra.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n-    <InputDataSet>\n-\n+ \n+    <InputDataSetPlan>\n <!-- raw_frames -->\n         <KeyProductInputDataPlan>\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n-                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n-                (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n-                (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n-                (raw_frame.Data.GrismWheelTilt == \"UNKNOWN\") AND\n-                (raw_frame.Data.ObservationSequence.Exposure == UNKNOWN) AND\n+                (raw_frame.Header.ManualValidationStatus          != \"INVALID\")       AND\n+                (raw_frame.Header.DataSetRelease                  == \"UNKNOWN\")       AND\n+                (raw_frame.Data.ImgType.Technique                 == \"SPECTROIMAGE\")  AND\n+                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN)         AND\n+                (raw_frame.Data.ObservationSequence.PointingId    == UNKNOWN)         AND\n+                (raw_frame.Data.GrismWheelPos                     == \"UNKNOWN\")       AND\n+                (raw_frame.Data.GrismWheelTilt                    == \"UNKNOWN\")       AND\n+                (raw_frame.Data.ObservationSequence.Exposure      == UNKNOWN)         AND\n                 (raw_frame.Data.ObservationSequence.TotalExposure == UNKNOWN)\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -33,6 +29,56 @@\n             </Cardinality>\n         </KeyProductInputDataPlan>\n \n+<!-- Mer Final Catalogs -->\n+        <InputDataPlan>\n+            <InputPortName>mer_catalog</InputPortName>\n+            <DataProductType>DpdMerFinalCatalog</DataProductType>\n+            <InputQuerySpecPlan>\n+                (mer_catalog.Header.ManualValidationStatus              != \"INVALID\") AND\n+                (mer_catalog.Header.DataSetRelease                      == \"UNKNOWN\") AND\n+                (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN)) AND\n+                (mer_catalog.Data.TileIndex                             == \"UNKNOWN\")\n+            </InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>30</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+\n+<!-- Mer Segmentation Maps -->\n+        <InputDataPlan>\n+            <InputPortName>mer_segmap</InputPortName>\n+            <DataProductType>DpdMerSegmentationMap</DataProductType>\n+            <InputQuerySpecPlan>\n+                (mer_segmap.Header.ManualValidationStatus              != \"INVALID\") AND\n+                (mer_segmap.Header.DataSetRelease                      == \"UNKNOWN\") AND\n+                (mer_segmap.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n+            </InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>30</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+\n+<!-- Mer Mosaic -->\n+        <InputDataPlan>\n+            <InputPortName>mer_mosaic</InputPortName>\n+            <DataProductType>DpdMerBksMosaic</DataProductType>\n+            <InputQuerySpecPlan>\n+                (mer_mosaic.Header.ManualValidationStatus              != \"INVALID\") AND\n+                (mer_mosaic.Header.DataSetRelease                      == \"UNKNOWN\") AND\n+                (mer_mosaic.Data.Filter.Name                           == \"UNKNOWN\") AND\n+                (mer_mosaic.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n+            </InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>30</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+\n <!-- MDB -->\n         <InputDataPlan>\n             <InputPortName>mdb</InputPortName>\n@@ -41,12 +87,16 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\",\n+                    \"EUC_NISP_NLSPECTRO*\" ,\n                     \"EUC_NISP_Saturation*\" ,\n-                    \"EUC_NISP_SINGLEFRAMEOUT*\",\n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n-                    \"NISP_GrismTransmission*\",\n-                    \"NISPDetector*\"\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n+                    \"NISP_GrismTransmission*\" ,\n+                    \"NISPDetector*\",\n+                    \"NISPHTransmissionCurves*\",\n+                    \"NISPJTransmissionCurves*\",\n+                    \"NISPYTransmissionCurves*\",\n+                    \"PLMTransmissionNISPNominalEOLCBE*\"\n                 </FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n@@ -61,7 +111,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n+                (sir_config.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -76,7 +126,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n+                (opt_model.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -86,13 +136,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- IDS Sir Configuration -->\n+<!-- CRV Sir Configuration -->\n         <InputDataPlan>\n-            <InputPortName>ids_model</InputPortName>\n-            <DataProductType>DpdSirIdsModel</DataProductType>\n+            <InputPortName>crv_model</InputPortName>\n+            <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (crv_model.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -101,13 +151,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- CRV Sir Configuration -->\n+<!-- IDS Sir Configuration -->\n         <InputDataPlan>\n-            <InputPortName>crv_model</InputPortName>\n-            <DataProductType>DpdSirCrvModel</DataProductType>\n+            <InputPortName>ids_model</InputPortName>\n+            <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (ids_model.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -116,13 +166,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- Detector scaling -->\n+<!-- Relative Flux scaling -->\n         <InputDataPlan>\n-            <InputPortName>det_scaling</InputPortName>\n-            <DataProductType>DpdSirDetectorScaling</DataProductType>\n+            <InputPortName>rel_calib</InputPortName>\n+            <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n-                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n+              (rel_calib.Header.ManualValidationStatus  != \"INVALID\") AND\n+              (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -136,7 +186,7 @@\n             <InputPortName>abs_calib</InputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n+                (abs_calib.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -146,13 +196,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- Relative Flux scaling -->\n+<!-- Detector scaling -->\n         <InputDataPlan>\n-            <InputPortName>rel_calib</InputPortName>\n-            <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n+            <InputPortName>det_scaling</InputPortName>\n+            <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n-              (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (det_scaling.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -166,7 +216,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n+                (nir_dark.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -181,7 +231,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n+                (nir_badpix.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -191,76 +241,10 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- Mer Final Catalogs -->\n-        <InputDataPlan>\n-            <InputPortName>mer_catalog</InputPortName>\n-            <DataProductType>DpdMerFinalCatalog</DataProductType>\n-            <InputQuerySpecPlan>\n-                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND\n-                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN)) AND\n-                (mer_catalog.Data.TileIndex == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>30</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- Mer Segmentation Maps -->\n-        <InputDataPlan>\n-            <InputPortName>mer_segmap</InputPortName>\n-            <DataProductType>DpdMerSegmentationMap</DataProductType>\n-            <InputQuerySpecPlan>\n-                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND\n-                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (mer_segmap.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>30</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- Mer Mosaic -->\n-        <InputDataPlan>\n-            <InputPortName>mer_mosaic</InputPortName>\n-            <DataProductType>DpdMerBksMosaic</DataProductType>\n-            <InputQuerySpecPlan>\n-                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND\n-                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND\n-                (mer_mosaic.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>30</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-\n-<!-- ... to pass the tests.... -->\n-        <Dependencies>\n-            <GroupedBy>raw_frame.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <!-- SEGMAP  cover NIS data-->\n-            <LinkedBy refPort=\"mer_catalog\">\n-                <!-- Ensures that masterflat cal date contains VIS Ob date -->\n-                <Query>mer_mosaic.Header.PPOId == mer_catalog.Header.PPOId</Query>\n-            </LinkedBy>\n-            <LinkedBy refPort=\"mer_catalog\">\n-                <!-- Ensures that masterflat cal date contains VIS Ob date -->\n-                <Query>mer_segmap.Header.PPOId == mer_catalog.Header.PPOId</Query>\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet>\n-\n+    </InputDataSetPlan>\n \n     <OutputDataSet>\n-\n-    <!-- SIR Location Table: side product -->\n+<!-- SIR Location Table: side product -->\n         <OutputDataProduct>\n             <OutputPortName>loc_tables</OutputPortName>\n             <DataProductType>DpdSirLocationTable</DataProductType>\n@@ -271,8 +255,8 @@\n             </Cardinality>\n         </OutputDataProduct>\n \n-    <!-- SIR Extracted Spectra: product to be processed to have final SIR output -->\n-            <OutputDataProduct>\n+<!-- SIR Extracted Spectra: product to be processed to have final SIR output -->\n+        <OutputDataProduct>\n             <OutputPortName>extr_spectra</OutputPortName>\n             <DataProductType>DpdSirExtractedSpectraCollection</DataProductType>\n             <Cardinality>\n@@ -282,7 +266,7 @@\n             </Cardinality>\n         </OutputDataProduct>\n \n-    <!-- SIR Science Frame background subtracted: side product -->\n+<!-- SIR Science Frame background subtracted: side product -->\n         <OutputDataProduct>\n             <OutputPortName>sci_frames</OutputPortName>\n             <DataProductType>DpdSirScienceFrame</DataProductType>\n@@ -292,9 +276,8 @@\n                 <Max>100</Max>\n             </Cardinality>\n         </OutputDataProduct>\n-\n-\n     </OutputDataSet>\n+\n     <EstimatedWorkdirSizeGB>200</EstimatedWorkdirSizeGB>\n \n </tsk1:PipelineDef>\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ],
                        [
                            "@@ -1,11 +1,11 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Extract_Spectra_@CMAKE_PROJECT_VERSION@</Id> \n+    <Id>SIR_Extract_Spectra_@CMAKE_PROJECT_VERSION@</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n     <PipelineScriptPath>SIR_Extract_Spectra/PipScript_SIR_Extract_Spectra.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n@@ -16,9 +16,9 @@\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n                 (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n                 (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n                 (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n@@ -41,11 +41,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\", \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\", \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\", \n-                    \"NISP_GrismTransmission*\", \n+                    \"EUC_NISP_H2RG-NONLINEARITY*\",\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\",\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n+                    \"NISP_GrismTransmission*\",\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -61,7 +61,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -76,7 +76,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -91,7 +91,7 @@\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -106,7 +106,7 @@\n             <InputPortName>crv_model</InputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -121,7 +121,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -136,7 +136,7 @@\n             <InputPortName>abs_calib</InputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n                 (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -151,7 +151,7 @@\n             <InputPortName>rel_calib</InputPortName>\n             <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n               (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -166,7 +166,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -181,7 +181,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -196,8 +196,8 @@\n             <InputPortName>mer_catalog</InputPortName>\n             <DataProductType>DpdMerFinalCatalog</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN)) AND\n                 (mer_catalog.Data.TileIndex == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n@@ -213,8 +213,8 @@\n             <InputPortName>mer_segmap</InputPortName>\n             <DataProductType>DpdMerSegmentationMap</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_segmap.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -229,9 +229,9 @@\n             <InputPortName>mer_mosaic</InputPortName>\n             <DataProductType>DpdMerBksMosaic</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND \n+                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND\n                 (mer_mosaic.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -1,11 +1,11 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Extract_Spectra_@CMAKE_PROJECT_VERSION@</Id> \n+    <Id>SIR_Extract_Spectra_@CMAKE_PROJECT_VERSION@</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n     <PipelineScriptPath>SIR_Extract_Spectra/PipScript_SIR_Extract_Spectra.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n@@ -16,9 +16,9 @@\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n                 (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n                 (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n                 (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n@@ -41,11 +41,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\", \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\", \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\", \n-                    \"NISP_GrismTransmission*\", \n+                    \"EUC_NISP_H2RG-NONLINEARITY*\",\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\",\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n+                    \"NISP_GrismTransmission*\",\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -61,7 +61,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -76,7 +76,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -91,7 +91,7 @@\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -106,7 +106,7 @@\n             <InputPortName>crv_model</InputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -121,7 +121,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -136,7 +136,7 @@\n             <InputPortName>abs_calib</InputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n                 (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -151,7 +151,7 @@\n             <InputPortName>rel_calib</InputPortName>\n             <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n               (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -166,7 +166,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -181,7 +181,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -196,8 +196,8 @@\n             <InputPortName>mer_catalog</InputPortName>\n             <DataProductType>DpdMerFinalCatalog</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN)) AND\n                 (mer_catalog.Data.TileIndex == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n@@ -213,8 +213,8 @@\n             <InputPortName>mer_segmap</InputPortName>\n             <DataProductType>DpdMerSegmentationMap</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_segmap.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -229,9 +229,9 @@\n             <InputPortName>mer_mosaic</InputPortName>\n             <DataProductType>DpdMerBksMosaic</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND \n+                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND\n                 (mer_mosaic.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -1,11 +1,11 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Extract_Spectra_@CMAKE_PROJECT_VERSION@</Id> \n+    <Id>SIR_Extract_Spectra_@CMAKE_PROJECT_VERSION@</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n     <PipelineScriptPath>SIR_Extract_Spectra/PipScript_SIR_Extract_Spectra.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n@@ -16,9 +16,9 @@\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n                 (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n                 (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n                 (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n@@ -41,11 +41,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\", \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\", \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\", \n-                    \"NISP_GrismTransmission*\", \n+                    \"EUC_NISP_H2RG-NONLINEARITY*\",\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\",\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n+                    \"NISP_GrismTransmission*\",\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -61,7 +61,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -76,7 +76,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -91,7 +91,7 @@\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -106,7 +106,7 @@\n             <InputPortName>crv_model</InputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -121,7 +121,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -136,7 +136,7 @@\n             <InputPortName>abs_calib</InputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n                 (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -151,7 +151,7 @@\n             <InputPortName>rel_calib</InputPortName>\n             <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n               (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -166,7 +166,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -181,7 +181,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -196,8 +196,8 @@\n             <InputPortName>mer_catalog</InputPortName>\n             <DataProductType>DpdMerFinalCatalog</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN)) AND\n                 (mer_catalog.Data.TileIndex == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n@@ -213,8 +213,8 @@\n             <InputPortName>mer_segmap</InputPortName>\n             <DataProductType>DpdMerSegmentationMap</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_segmap.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -229,9 +229,9 @@\n             <InputPortName>mer_mosaic</InputPortName>\n             <DataProductType>DpdMerBksMosaic</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND \n+                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND\n                 (mer_mosaic.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Extract_Spectra/PipScript_SIR_Extract_Spectra.py": [
                        [
                            "@@ -1,6 +1,13 @@\n # ---------------------------------------------------------------------------- #\n-# Pipeline definition for SIR pipeline \"Extract Spectra\" \n-# \n+# SIR pipeline for nominal ROS observation to Extract Spectra\n+#\n+# Field: ROS\n+#\n+# Catalog: MER \n+#\n+# Date: August 2023\n+#\n+# Nominal science processing\n # ---------------------------------------------------------------------------- #\n \n from euclidwf.framework.workflow_dsl import pipeline\n@@ -8,31 +15,36 @@ from euclidwf.framework.workflow_dsl import parallel\n from PackageDef_SIR import *\n \n \n-@parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n+@parallel(iterable='raw_frames', flatten_all='True')\n+def sir_preprocessing(raw_frames, mdb, dark, badpix, det_scaling, config):\n     \"\"\"SIR pre-processing block\n \n-        This pipeline block prepare science-frame objects applying corrections\n-        and subtracking dark\n-    \n+        SIR pipeline block that prepares science_frame objects applying corrections,\n+        and rotating detectors layout of LE1 raw-frames \n+\n     Args:\n-        raw_dithers (xml): NISP raw-frame image object\n-        mdb (xml): Mission DataBase\n-        masterdark (xml): NIR DpdNirMasterDarkFrame image object\n-        badpixel (xml): NIR DpdNirBadPixelMask mask object\n+        raw_frames (XML list): Level 1 NISP DpdNispRawFrame image objects\n+        mdb (XML): DpdMdbDataBase object\n+        dark (XML): NIR DpdNirMasterDarkFrame image object\n+        badpix (XML): NIR DpdNirBadPixelMask mask object\n+        det_scaling (XML): QE correction SIR calibration object\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n \n     Returns:\n         list: DpdSirScienceFrame dark-subtracted and corrected objects\n-    \n+\n     Note:\n-        Is executed in parallel on the input DITHERS (DpdNispRawFrame)\n+        Is executed in parallel on the independent input raw_frames (DpdNispRawFrame)\n+\n+    Warning:\n+        The output frames have rotated detector layout after SIR_init step        \n     \"\"\"\n \n-    initialized_expo, chi2 = nir_initalize(infile  = raw_dithers,\n+    initialized_expo, chi2 = nir_initalize(infile  = raw_frames,\n                                            mdbfile = mdb)\n \n     badpixmasked_expo = mask_badpixel(infile  = initialized_expo,\n-                                      xmlfile = badpixel)\n+                                      xmlfile = badpix)\n \n     saturamasked_expo = mask_saturation(infile  = badpixmasked_expo,\n                                         xmlfile = mdb)\n@@ -41,133 +53,169 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n                                           xmlfile = mdb)\n \n     darksubtract_expo = subtract_dark(infile     = nonlineacorr_expo,\n-                                      masterdark = masterdark)\n+                                      masterdark = dark)\n \n-    crreject_expo     = cr_rejection(grism    = darksubtract_expo,\n-                                     chi2file = chi2,\n-                                     config   = config)\n+    cr_rejected_expo  = cosmic_rejection(grism    = darksubtract_expo,\n+                                         chi2file = chi2,\n+                                         config   = config)\n+    \n+    qe_corrected_expo = detector_scaling(sci_frame_fits = cr_rejected_expo,\n+                                         zodiacal_light = det_scaling,\n+                                         mdb = mdb)\n \n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n-                                      le1_dp    = raw_dithers,\n-                                      mdb       = mdb)\n+    science_frame     = sir_initialize(fits_file = qe_corrected_expo,\n+                                       le1_dp    = raw_frames,\n+                                       mdb       = mdb)\n \n-    # explicit\n     return science_frame\n # ---------------------------------------------------------------------------- #\n \n-@parallel(iterable='sci_frame',flatten_all=True)\n-def sir_processing(sci_frame, source_catalog, opt_model, ids_model, crv_model, mdb, sirconfig):\n-    \"\"\"_SIR processiong block\n \n-        This pipeline block prepare science-frame subtracting background and\n-        prepare location tables for spectra extraction\n-        \n+@parallel(iterable='sci_frames',flatten_all=True)\n+def sir_processing(sci_frames, catalog, opt_model, ids_model, crv_model, mdb, config):\n+    \"\"\"SIR processiong block\n+\n+        SIR pipeline block computing location tables and preparing background \n+        subtracted science-frames (images) needed for spectra extraction\n+\n     Args:\n-        science_frame (DpdSirScienceFrame): preprocessed image\n-        source_catalog (DpdMerFinalCatalog): Catalog of sources\n-        mdb (DpdMdbDataBase): Mission \"database\" OBJECT (LoL)\n-        opt_model (DpdSirOptModel): OPT model calibration\n-        ids_model (DpdSirIdsModel): IDS model calibration\n-        crv_model (DpdSirCrvModel): CRV model calibration\n-        sirconfig (DpdSirConfigurationSet): pipeline configuration ini files\n+        sci_frames (XML list): SIR preprocessed DpdSirScienceFrame images\n+        catalog (XML list): DpdTrueUniverseOutput or DpdMerFinalCatalog catalog of sources objects\n+        mdb (XML): DpdMdbDataBase object\n+        opt_model (XML): SIR DpdSirOptModel optical model\n+        ids_model (XML): SIR DpdSirIdsModel inverse dipersion solution model\n+        crv_model (XML): SIR DpdSirCrvModel curvature model\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n \n     Returns:\n-        tuple: (\"location_table\" DpdSirLocationTable objects, \n-                \"science_frame\" DpdSirScienceFrame objects background subtracted)\n-        \n+        tuple: (<DpdSirLocationTable> up to 16 objects, \n+                <DpdSirScienceFrame> 1 background subtracted object)\n+\n     Note:\n-        It's executed in parallel on science_frame objects\n+        It's executed in parallel on sci_frames objects\n     \"\"\"\n \n-    locations_table = locate_spectra(sci_frame = sci_frame,\n-                                     opt_model = opt_model,\n-                                     ids_model = ids_model,\n-                                     crv_model = crv_model,\n-\t                \t                 mer_cat   = source_catalog,\n-                                     mdb       = mdb,\n-                                     config    = sirconfig)\n+    locations_tables = locate_spectra(sci_frame = sci_frames,\n+                                      mer_cat   = catalog,\n+                                      mdb       = mdb,\n+                                      opt_model = opt_model,\n+                                      ids_model = ids_model,\n+                                      crv_model = crv_model,\n+                                      config    = config)\n+    \n+    bkgsub_sci_frame = subtract_bkg(sci_frame = sci_frames,\n+                                    loc_table = locations_tables,\n+                                    mer_cat   = catalog,\n+                                    config    = config)\n+\n+    return locations_tables, bkgsub_sci_frame\n+# ---------------------------------------------------------------------------- #\n \n-    bkgsub_sci_frame = subtract_bkg(sci_frame = sci_frame,\n-                                    loc_table = locations_table,\n-                                    mer_cat   = source_catalog,\n-                                    config    = sirconfig)\n \n+@parallel(iterable='loc_tables', flatten_all='True')\n+def sir_decontamination(loc_tables, sci_frames, cutouts, mdb, config):\n+    \"\"\"SIR decontamination block\n \n-    return locations_table, bkgsub_sci_frame\n-# ---------------------------------------------------------------------------- #\n+        SIR pipeline block that decontaminate spectra\n \n+    Args:\n+        loc_tables (list of lists): list of DpdSirLocationTable objects grouped by detector\n+        sci_frames (XML list): SIR processed (background subtracted) DpdSirScienceFrame images\n+        cutouts ():\n+        mdb (XML): DpdMdbDataBase object\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n \n+    Returns:\n+        H5: Decontaminated spectra object for each location table\n \n-@parallel(iterable='loc_table', flatten_all='True')\n-def sir_decontamination(loc_table, sci_frame, mdb, cutouts, sirconfig):\n+    Note:\n+        It's executed in parallel on loc_tables objects\n+    \"\"\"\n \n-    dec_spectra = apply_decontamination(sci_frame = sci_frame,\n-                                        loc_table = loc_table,\n-                                          cutouts = cutouts,\n-                                          mdb     = mdb,\n-                                          config  = sirconfig)\n+    dec_spectra = apply_decontamination(sci_frame = sci_frames,\n+                                        loc_table = loc_tables,\n+                                        cutouts   = cutouts,\n+                                        mdb       = mdb,\n+                                        config    = config)\n \n     return dec_spectra\n # ---------------------------------------------------------------------------- #\n \n \n \n-@parallel(iterable='loc_table', flatten_all='True')\n-def sir_extraction(loc_table, sci_frame, mdb, source_catalog, rel_calib, abs_calib, sirconfig):\n+@parallel(iterable='loc_tables', flatten_all='True')\n+def sir_extraction(loc_tables, dec_spectra, sci_frames, cutouts, mdb, catalog, rel_calib, abs_calib, config):\n     \"\"\"SIR extraction block\n \n-        This pipeline block extract spectra from images and apply decontamination,\n-        relative and absolute flux calibration \n+        SIR pipeline block that extract spectra and apply relative flux correction.\n+        Only relative flux calibration is applied to the extraxcted spectra in\n+        the ABS calibration pipeline\n \n     Args:\n-        loc_table (DpdSirLocationTable): SIR objects location table product\n-        sci_frame (DpdSirScienceFrame): cleaned and background subtracted image\n-        mdb (DpdMdbDataBase): Mission \"database\" OBJECT (LoL)\n-        source_catalog (DpdMerFinalCatalog): Catalog of sources\n-        rel_flux (DpdSirRelativeFluxScaling): relative flux calibration object\n-        abs_calib (DpdSirAbsoluteFluxScaling): absolute calibration sensitvity object\n-        sirconfig (DpdSirConfigurationSet): pipeline configuration ini files\n+        loc_tables (list XML): DpdSirLocationTable objects\n+        dec_spectra (list XML): list of  \n+        sci_frames (XML list): SIR processed (background subtracted) DpdSirScienceFrame images\n+        cututs ():\n+        mdb (XML): DpdMdbDataBase object\n+        catalog (XML list): DpdTrueUniverseOutput catalog of sources objects\n+        rel_flux (XML): SIR DpdSirRelativeFluxScaling relative flux calibration model\n+        abs_flux (XML): SIR DpdSirAbsoluteFluxScaling absolute flux calibration model\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n \n     Returns:\n-        list: DpdSirExtractedSpectraCollection objects, with extracted spectra organized \n-              by tile\n+        list: DpdSirExtractedSpectraCollection objects organized in MER tiles\n \n     Note:\n-        It's executed in parallel on location_table objects\n+        It's executed in parallel on loc_tables objects\n     \"\"\"\n \n \n-    extr_spec = extract_spectra(loc_table = loc_table,\n-                                dec_spectra = sci_frame,\n-                                mer_cat   = source_catalog,\n-                                mdb       = mdb,\n-                                config    = sirconfig)\n+    extr_spec = extract_spectra(loc_table   = loc_tables,\n+                                dec_spectra = dec_spectra,\n+                                mer_cat     = catalog,\n+                                sci_frames  = sci_frames,\n+                                cutouts     = cutouts, \n+                                mdb         = mdb,\n+                                config      = config)\n \n     relflux_spec = relflux_correction(extr_spectra_list = extr_spec,\n                                       ms_flat           = rel_calib,\n-                                      config            = sirconfig)\n+                                      mdbfile           = mdb,\n+                                      config            = config)\n \n     absflux_spec = absflux_correction(extr_spectra_list = relflux_spec,\n                                       sens              = abs_calib,\n                                       mdb               = mdb)\n \n-    # explicit\n     return absflux_spec\n # ---------------------------------------------------------------------------- #\n \n \n-## Pipeline ##\n+# ---------------------------------------------------------------------------- #\n+# PIPELINE\n+# ---------------------------------------------------------------------------- #\n @pipeline(outputs=('loc_tables','sci_frames','extr_spectra'))\n-def sir_pipeline(raw_frame, mdb, nir_dark, nir_badpix, mer_catalog, mer_mosaic,\n-                 mer_segmap, det_scaling, rel_calib, opt_model, ids_model, crv_model,\n-                 abs_calib, sir_config ):\n-\n+def sir_pipeline(raw_frame, \n+                 mer_catalog,\n+                 mer_mosaic,\n+                 mer_segmap,\n+                 mdb, \n+                 det_scaling,\n+                 opt_model,\n+                 crv_model,\n+                 ids_model,\n+                 rel_calib,\n+                 abs_calib,\n+                 nir_dark, \n+                 nir_badpix,\n+                 sir_config ):\n     \"\"\"SIR \"Extract\" pipeline\n \n-       This pipeline process a single field, intended as an exposure with 4 dithers\n-       to produce extracted spectra objects, divided by tile, according to the tiles \n-       covering the observation.\n-       This is the first pipeline to run to produce intermediate SIR results\n+       This pipeline process 1 observation made of 4 frames with different grism \n+       orientation (4 \"dithers\") to produce extracted spectra objects grouped by \n+       tile, according to the MER tiles covering the observation.\n+    \n+        This SCIENCE pipeline must run before the COMBINATION pipeline\n \n \n     Returns:\n@@ -179,45 +227,44 @@ def sir_pipeline(raw_frame, mdb, nir_dark, nir_badpix, mer_catalog, mer_mosaic,\n         by the \"combine pipeline\"\n     \"\"\"\n \n-    cutouts = sirCreateCut(cat    = mer_catalog,\n-                           mosaic = mer_mosaic,\n-                           segmap = mer_segmap)\n+    cutouts = sir_create_cut(cat    = mer_catalog,\n+                             mosaic = mer_mosaic,\n+                             segmap = mer_segmap)\n \n-    frames = sir_preprocessing(raw_dithers = raw_frame,\n-                               masterdark  = nir_dark,\n-                               badpixel    = nir_badpix,\n+    frames = sir_preprocessing(raw_frames  = raw_frame,\n+                               dark        = nir_dark,\n+                               badpix      = nir_badpix,\n+                               det_scaling = det_scaling,\n                                mdb         = mdb,\n                                config      = sir_config)\n-\n-    qe_frames = detectorScaling(sci_frames     = frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb            = mdb)\n-\n-    loc_and_frames = sir_processing(sci_frame = qe_frames,\n-                                    source_catalog = mer_catalog,\n-                                    opt_model = opt_model,\n-                                    ids_model = ids_model,\n-                                    crv_model = crv_model,\n-                                    mdb       = mdb,                                   \n-                                    sirconfig = sir_config)\n-\n-    sorted_loc_tables, sci_frames, loc_tables = splitLocTable(input_json = loc_and_frames)\n-\n-\n-    deco_spectra = sir_decontamination(loc_table = sorted_loc_tables,\n-                                       sci_frame = sci_frames,\n-                                       cutouts   = cutouts,\n-                                             mdb = mdb,\n-                                       sirconfig = sir_config)\n-\n-\n-    extr_spectra = sir_extraction(sci_frame = deco_spectra,\n-                                  loc_table = loc_tables,\n-                                  source_catalog = mer_catalog,\n-                                  rel_calib  = rel_calib,\n-                                  abs_calib = abs_calib,\n-                                  mdb       = mdb,\n-                                  sirconfig = sir_config)\n+    \n+    loc_and_frames = sir_processing(sci_frames = frames,\n+                                    catalog    = mer_catalog,\n+                                    opt_model  = opt_model,\n+                                    ids_model  = ids_model,\n+                                    crv_model  = crv_model,\n+                                    mdb        = mdb,\n+                                    sirconfig  = sir_config)\n+\n+    loc_tables_by_detector, sci_frames, loc_tables = splitLocTable(input_json = loc_and_frames)\n+\n+\n+    deco_spectra = sir_decontamination(loc_tables = loc_tables_by_detector,\n+                                       sci_frames = sci_frames,\n+                                       cutouts    = cutouts,\n+                                       mdb        = mdb,\n+                                       config     = sir_config)\n+\n+\n+    extr_spectra = sir_extraction(loc_table    = loc_tables,\n+                                  dec_spectra  = deco_spectra,\n+                                  sci_frames   = sci_frames,\n+                                  cutouts      = cutouts,\n+                                  catalog      = mer_catalog,\n+                                  rel_calib    = rel_calib,\n+                                  abs_calib    = abs_calib,\n+                                  mdb          = mdb,\n+                                  config       = sir_config)\n         \n     return loc_tables, sci_frames, extr_spectra\n # ---------------------------------------------------------------------------- #\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_OptExtractCombine/PipDef_SIR_OptExtract_Spectra.xml": [
                        [
                            "@@ -1,300 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-\n-    <EdenVersion>@EDEN@</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Extract_Spectra_@CMAKE_PROJECT_VERSION@</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n-    <PipelineScriptPath>SIR_Extract_Spectra/PipScript_SIR_Extract_Spectra.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n-    <InputDataSet>\n-\n-<!-- raw_frames -->\n-        <KeyProductInputDataPlan>\n-            <InputPortName>raw_frame</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n-                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n-                (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n-                (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n-                (raw_frame.Data.GrismWheelTilt == \"UNKNOWN\") AND\n-                (raw_frame.Data.ObservationSequence.Exposure == UNKNOWN) AND\n-                (raw_frame.Data.ObservationSequence.TotalExposure == UNKNOWN)\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>4</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-\n-<!-- MDB -->\n-        <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>(mdb.Header.ProductId.LimitedString == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\n-                    \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\",\n-                    \"EUC_NISP_Saturation*\" ,\n-                    \"EUC_NISP_SINGLEFRAMEOUT*\",\n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n-                    \"NISP_GrismTransmission*\",\n-                    \"NISPDetector*\"\n-                </FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- Sir Configuration -->\n-        <InputDataPlan>\n-            <InputPortName>sir_config</InputPortName>\n-            <DataProductType>DpdSirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n-                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- OPT Sir Configuration -->\n-        <InputDataPlan>\n-            <InputPortName>opt_model</InputPortName>\n-            <DataProductType>DpdSirOptModel</DataProductType>\n-            <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- IDS Sir Configuration -->\n-        <InputDataPlan>\n-            <InputPortName>ids_model</InputPortName>\n-            <DataProductType>DpdSirIdsModel</DataProductType>\n-            <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- CRV Sir Configuration -->\n-        <InputDataPlan>\n-            <InputPortName>crv_model</InputPortName>\n-            <DataProductType>DpdSirCrvModel</DataProductType>\n-            <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- Detector scaling -->\n-        <InputDataPlan>\n-            <InputPortName>det_scaling</InputPortName>\n-            <DataProductType>DpdSirDetectorScaling</DataProductType>\n-            <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n-                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- Absolute flux scaling -->\n-        <InputDataPlan>\n-            <InputPortName>abs_calib</InputPortName>\n-            <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n-            <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n-                (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- Relative Flux scaling -->\n-        <InputDataPlan>\n-            <InputPortName>rel_calib</InputPortName>\n-            <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n-            <InputQuerySpecPlan>\n-              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n-              (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- NIR master dark -->\n-        <InputDataPlan>\n-            <InputPortName>nir_dark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n-                (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- NIR Bad Pixel mask -->\n-        <InputDataPlan>\n-            <InputPortName>nir_badpix</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n-                (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- Mer Final Catalogs -->\n-        <InputDataPlan>\n-            <InputPortName>mer_catalog</InputPortName>\n-            <DataProductType>DpdMerFinalCatalog</DataProductType>\n-            <InputQuerySpecPlan>\n-                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND\n-                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN)) AND\n-                (mer_catalog.Data.TileIndex == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>30</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- Mer Segmentation Maps -->\n-        <InputDataPlan>\n-            <InputPortName>mer_segmap</InputPortName>\n-            <DataProductType>DpdMerSegmentationMap</DataProductType>\n-            <InputQuerySpecPlan>\n-                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND\n-                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (mer_segmap.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>30</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- Mer Mosaic -->\n-        <InputDataPlan>\n-            <InputPortName>mer_mosaic</InputPortName>\n-            <DataProductType>DpdMerBksMosaic</DataProductType>\n-            <InputQuerySpecPlan>\n-                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND\n-                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND\n-                (mer_mosaic.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>30</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-\n-<!-- ... to pass the tests.... -->\n-        <Dependencies>\n-            <GroupedBy>raw_frame.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <!-- SEGMAP  cover NIS data-->\n-            <LinkedBy refPort=\"mer_catalog\">\n-                <!-- Ensures that masterflat cal date contains VIS Ob date -->\n-                <Query>mer_mosaic.Header.PPOId == mer_catalog.Header.PPOId</Query>\n-            </LinkedBy>\n-            <LinkedBy refPort=\"mer_catalog\">\n-                <!-- Ensures that masterflat cal date contains VIS Ob date -->\n-                <Query>mer_segmap.Header.PPOId == mer_catalog.Header.PPOId</Query>\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet>\n-\n-\n-    <OutputDataSet>\n-\n-    <!-- SIR Location Table: side product -->\n-        <OutputDataProduct>\n-            <OutputPortName>loc_tables</OutputPortName>\n-            <DataProductType>DpdSirLocationTable</DataProductType>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>100</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-\n-    <!-- SIR Extracted Spectra: product to be processed to have final SIR output -->\n-            <OutputDataProduct>\n-            <OutputPortName>extr_spectra</OutputPortName>\n-            <DataProductType>DpdSirExtractedSpectraCollection</DataProductType>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>100</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-\n-    <!-- SIR Science Frame background subtracted: side product -->\n-        <OutputDataProduct>\n-            <OutputPortName>sci_frames</OutputPortName>\n-            <DataProductType>DpdSirScienceFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>100</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-\n-\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>200</EstimatedWorkdirSizeGB>\n-\n-</tsk1:PipelineDef>\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ],
                        [
                            "@@ -1,11 +1,11 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Extract_Spectra_@CMAKE_PROJECT_VERSION@</Id> \n+    <Id>SIR_Extract_Spectra_@CMAKE_PROJECT_VERSION@</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n     <PipelineScriptPath>SIR_Extract_Spectra/PipScript_SIR_Extract_Spectra.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n@@ -16,9 +16,9 @@\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n                 (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n                 (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n                 (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n@@ -41,11 +41,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\", \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\", \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\", \n-                    \"NISP_GrismTransmission*\", \n+                    \"EUC_NISP_H2RG-NONLINEARITY*\",\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\",\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n+                    \"NISP_GrismTransmission*\",\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -61,7 +61,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -76,7 +76,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -91,7 +91,7 @@\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -106,7 +106,7 @@\n             <InputPortName>crv_model</InputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -121,7 +121,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -136,7 +136,7 @@\n             <InputPortName>abs_calib</InputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n                 (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -151,7 +151,7 @@\n             <InputPortName>rel_calib</InputPortName>\n             <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n               (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -166,7 +166,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -181,7 +181,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -196,8 +196,8 @@\n             <InputPortName>mer_catalog</InputPortName>\n             <DataProductType>DpdMerFinalCatalog</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN)) AND\n                 (mer_catalog.Data.TileIndex == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n@@ -213,8 +213,8 @@\n             <InputPortName>mer_segmap</InputPortName>\n             <DataProductType>DpdMerSegmentationMap</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_segmap.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -229,9 +229,9 @@\n             <InputPortName>mer_mosaic</InputPortName>\n             <DataProductType>DpdMerBksMosaic</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND \n+                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND\n                 (mer_mosaic.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -1,11 +1,11 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Extract_Spectra_@CMAKE_PROJECT_VERSION@</Id> \n+    <Id>SIR_Extract_Spectra_@CMAKE_PROJECT_VERSION@</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n     <PipelineScriptPath>SIR_Extract_Spectra/PipScript_SIR_Extract_Spectra.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n@@ -16,9 +16,9 @@\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n                 (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n                 (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n                 (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n@@ -41,11 +41,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\", \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\", \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\", \n-                    \"NISP_GrismTransmission*\", \n+                    \"EUC_NISP_H2RG-NONLINEARITY*\",\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\",\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n+                    \"NISP_GrismTransmission*\",\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -61,7 +61,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -76,7 +76,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -91,7 +91,7 @@\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -106,7 +106,7 @@\n             <InputPortName>crv_model</InputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -121,7 +121,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -136,7 +136,7 @@\n             <InputPortName>abs_calib</InputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n                 (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -151,7 +151,7 @@\n             <InputPortName>rel_calib</InputPortName>\n             <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n               (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -166,7 +166,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -181,7 +181,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -196,8 +196,8 @@\n             <InputPortName>mer_catalog</InputPortName>\n             <DataProductType>DpdMerFinalCatalog</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN)) AND\n                 (mer_catalog.Data.TileIndex == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n@@ -213,8 +213,8 @@\n             <InputPortName>mer_segmap</InputPortName>\n             <DataProductType>DpdMerSegmentationMap</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_segmap.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -229,9 +229,9 @@\n             <InputPortName>mer_mosaic</InputPortName>\n             <DataProductType>DpdMerBksMosaic</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND \n+                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND\n                 (mer_mosaic.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -1,11 +1,11 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Extract_Spectra_@CMAKE_PROJECT_VERSION@</Id> \n+    <Id>SIR_Extract_Spectra_@CMAKE_PROJECT_VERSION@</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n     <PipelineScriptPath>SIR_Extract_Spectra/PipScript_SIR_Extract_Spectra.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n@@ -16,9 +16,9 @@\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n                 (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n                 (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n                 (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n@@ -41,11 +41,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\", \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\", \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\", \n-                    \"NISP_GrismTransmission*\", \n+                    \"EUC_NISP_H2RG-NONLINEARITY*\",\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\",\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n+                    \"NISP_GrismTransmission*\",\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -61,7 +61,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -76,7 +76,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -91,7 +91,7 @@\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -106,7 +106,7 @@\n             <InputPortName>crv_model</InputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -121,7 +121,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -136,7 +136,7 @@\n             <InputPortName>abs_calib</InputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n                 (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -151,7 +151,7 @@\n             <InputPortName>rel_calib</InputPortName>\n             <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n               (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -166,7 +166,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -181,7 +181,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -196,8 +196,8 @@\n             <InputPortName>mer_catalog</InputPortName>\n             <DataProductType>DpdMerFinalCatalog</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN)) AND\n                 (mer_catalog.Data.TileIndex == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n@@ -213,8 +213,8 @@\n             <InputPortName>mer_segmap</InputPortName>\n             <DataProductType>DpdMerSegmentationMap</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_segmap.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -229,9 +229,9 @@\n             <InputPortName>mer_mosaic</InputPortName>\n             <DataProductType>DpdMerBksMosaic</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND \n+                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND\n                 (mer_mosaic.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_OptExtractCombine/PipScript_SIR_OptExtractCombine.py": [
                        [
                            "@@ -1,98 +0,0 @@\n-# ---------------------------------------------------------------------------- #\n-# Pipeline definition for SIR pipeline \"Extract Spectra\" \n-# \n-# ---------------------------------------------------------------------------- #\n-\n-from euclidwf.framework.workflow_dsl import pipeline\n-from euclidwf.framework.workflow_dsl import parallel\n-from PackageDef_SIR import *\n-\n-@parallel(iterable='loc_table', flatten_all='True')\n-def sir_extraction(loc_table, dec_spectra, sci_frames, cutouts, mdb, source_catalog, rel_calib, abs_calib, sirconfig):\n-    \"\"\"SIR extraction block\n-\n-        This pipeline block extract spectra from images and apply decontamination,\n-        relative and absolute flux calibration \n-\n-    Args:\n-        loc_table (DpdSirLocationTable): SIR objects location table product\n-        sci_frame (DpdSirScienceFrame): cleaned and background subtracted image\n-        mdb (DpdMdbDataBase): Mission \"database\" OBJECT (LoL)\n-        source_catalog (DpdMerFinalCatalog): Catalog of sources\n-        rel_flux (DpdSirRelativeFluxScaling): relative flux calibration object\n-        abs_calib (DpdSirAbsoluteFluxScaling): absolute calibration sensitvity object\n-        sirconfig (DpdSirConfigurationSet): pipeline configuration ini files\n-\n-    Returns:\n-        list: DpdSirExtractedSpectraCollection objects, with extracted spectra organized \n-              by tile\n-\n-    Note:\n-        It's executed in parallel on location_table objects\n-    \"\"\"\n-\n-\n-    extr_spec = optextract_spectra(loc_table = loc_table,\n-                                dec_spectra = dec_spectra,\n-                                sci_frames = sci_frames,\n-                                cutouts = cutouts, \n-                                mer_cat   = source_catalog,\n-                                mdb       = mdb,\n-                                config    = sirconfig)\n-\n-    relflux_spec = relflux_correction(extr_spectra_list = extr_spec,\n-                                      ms_flat           = rel_calib,\n-                                      config            = sirconfig)\n-\n-    absflux_spec = absflux_correction(extr_spectra_list = relflux_spec,\n-                                      sens              = abs_calib,\n-                                      mdb               = mdb)\n-\n-    # explicit\n-    return absflux_spec\n-# ---------------------------------------------------------------------------- #\n-\n-\n-## Pipeline ##\n-@pipeline(outputs=('extr_spectra'))\n-def sir_pipeline(mdb, mer_catalog, mer_mosaic, rel_calib, dec_spectra, loc_table, cutouts, sci_frames,\n-                 abs_calib, sir_config ):\n-\n-    \"\"\"SIR \"Extract\" pipeline\n-\n-       This pipeline process a single field, intended as an exposure with 4 dithers\n-       to produce extracted spectra objects, divided by tile, according to the tiles \n-       covering the observation.\n-       This is the first pipeline to run to produce intermediate SIR results\n-\n-\n-    Returns:\n-        list: _description_\n-\n-    Warning:\n-        For a single observation, tiles are not entirely covered. This means that \n-        nearby observations processed independently produce should be later collected \n-        by the \"combine pipeline\"\n-    \"\"\"\n-\n-    extr_spectra = sir_extraction(dec_spectra = dec_spectra,\n-                                  loc_table = loc_table,\n-                                  sci_frames = sci_frames,\n-                                  cutouts = cutouts,\n-                                  source_catalog = mer_catalog,\n-                                  rel_calib  = rel_calib,\n-                                  abs_calib = abs_calib,\n-                                  mdb       = mdb,\n-                                  sirconfig = sir_config)\n-        \n-    return extr_spectra\n-# ---------------------------------------------------------------------------- #\n-\n-\n-if __name__ == '__main__':\n-    from euclidwf.framework.graph_builder import build_graph\n-    from euclidwf.utilities import visualizer\n-    pydron_graph=build_graph(sir_pipeline)\n-    print(str(pydron_graph))\n-    visualizer.visualize_graph(pydron_graph)\n-\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_OptExtractCombine/__init__.py": [
                        [
                            "@@ -1 +0,0 @@\n-# subpackage\n\\ No newline at end of file\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_OptExtract_Spectra/PipDef_SIR_OptExtract_Spectra.xml": [
                        [
                            "@@ -1,300 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n-\n-    <EdenVersion>@EDEN@</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Extract_Spectra_@CMAKE_PROJECT_VERSION@</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n-    <PipelineScriptPath>SIR_Extract_Spectra/PipScript_SIR_Extract_Spectra.py</PipelineScriptPath>\n-    <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n-    <InputDataSet>\n-\n-<!-- raw_frames -->\n-        <KeyProductInputDataPlan>\n-            <InputPortName>raw_frame</InputPortName>\n-            <DataProductType>DpdNispRawFrame</DataProductType>\n-            <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n-                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n-                (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n-                (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n-                (raw_frame.Data.GrismWheelTilt == \"UNKNOWN\") AND\n-                (raw_frame.Data.ObservationSequence.Exposure == UNKNOWN) AND\n-                (raw_frame.Data.ObservationSequence.TotalExposure == UNKNOWN)\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>4</Max>\n-            </Cardinality>\n-        </KeyProductInputDataPlan>\n-\n-<!-- MDB -->\n-        <InputDataPlan>\n-            <InputPortName>mdb</InputPortName>\n-            <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>(mdb.Header.ProductId.LimitedString == \"UNKNOWN\")</InputQuerySpecPlan>\n-            <FileFiltering>\n-                <FilesToInclude>\n-                    \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\",\n-                    \"EUC_NISP_Saturation*\" ,\n-                    \"EUC_NISP_SINGLEFRAMEOUT*\",\n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n-                    \"NISP_GrismTransmission*\",\n-                    \"NISPDetector*\"\n-                </FilesToInclude>\n-            </FileFiltering>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- Sir Configuration -->\n-        <InputDataPlan>\n-            <InputPortName>sir_config</InputPortName>\n-            <DataProductType>DpdSirConfigurationSet</DataProductType>\n-            <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n-                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- OPT Sir Configuration -->\n-        <InputDataPlan>\n-            <InputPortName>opt_model</InputPortName>\n-            <DataProductType>DpdSirOptModel</DataProductType>\n-            <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- IDS Sir Configuration -->\n-        <InputDataPlan>\n-            <InputPortName>ids_model</InputPortName>\n-            <DataProductType>DpdSirIdsModel</DataProductType>\n-            <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- CRV Sir Configuration -->\n-        <InputDataPlan>\n-            <InputPortName>crv_model</InputPortName>\n-            <DataProductType>DpdSirCrvModel</DataProductType>\n-            <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- Detector scaling -->\n-        <InputDataPlan>\n-            <InputPortName>det_scaling</InputPortName>\n-            <DataProductType>DpdSirDetectorScaling</DataProductType>\n-            <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n-                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- Absolute flux scaling -->\n-        <InputDataPlan>\n-            <InputPortName>abs_calib</InputPortName>\n-            <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n-            <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n-                (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- Relative Flux scaling -->\n-        <InputDataPlan>\n-            <InputPortName>rel_calib</InputPortName>\n-            <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n-            <InputQuerySpecPlan>\n-              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n-              (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- NIR master dark -->\n-        <InputDataPlan>\n-            <InputPortName>nir_dark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n-                (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- NIR Bad Pixel mask -->\n-        <InputDataPlan>\n-            <InputPortName>nir_badpix</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n-            <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n-                (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- Mer Final Catalogs -->\n-        <InputDataPlan>\n-            <InputPortName>mer_catalog</InputPortName>\n-            <DataProductType>DpdMerFinalCatalog</DataProductType>\n-            <InputQuerySpecPlan>\n-                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND\n-                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN)) AND\n-                (mer_catalog.Data.TileIndex == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>30</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- Mer Segmentation Maps -->\n-        <InputDataPlan>\n-            <InputPortName>mer_segmap</InputPortName>\n-            <DataProductType>DpdMerSegmentationMap</DataProductType>\n-            <InputQuerySpecPlan>\n-                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND\n-                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (mer_segmap.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>30</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- Mer Mosaic -->\n-        <InputDataPlan>\n-            <InputPortName>mer_mosaic</InputPortName>\n-            <DataProductType>DpdMerBksMosaic</DataProductType>\n-            <InputQuerySpecPlan>\n-                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND\n-                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND\n-                (mer_mosaic.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>30</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-\n-<!-- ... to pass the tests.... -->\n-        <Dependencies>\n-            <GroupedBy>raw_frame.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <!-- SEGMAP  cover NIS data-->\n-            <LinkedBy refPort=\"mer_catalog\">\n-                <!-- Ensures that masterflat cal date contains VIS Ob date -->\n-                <Query>mer_mosaic.Header.PPOId == mer_catalog.Header.PPOId</Query>\n-            </LinkedBy>\n-            <LinkedBy refPort=\"mer_catalog\">\n-                <!-- Ensures that masterflat cal date contains VIS Ob date -->\n-                <Query>mer_segmap.Header.PPOId == mer_catalog.Header.PPOId</Query>\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet>\n-\n-\n-    <OutputDataSet>\n-\n-    <!-- SIR Location Table: side product -->\n-        <OutputDataProduct>\n-            <OutputPortName>loc_tables</OutputPortName>\n-            <DataProductType>DpdSirLocationTable</DataProductType>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>100</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-\n-    <!-- SIR Extracted Spectra: product to be processed to have final SIR output -->\n-            <OutputDataProduct>\n-            <OutputPortName>extr_spectra</OutputPortName>\n-            <DataProductType>DpdSirExtractedSpectraCollection</DataProductType>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>100</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-\n-    <!-- SIR Science Frame background subtracted: side product -->\n-        <OutputDataProduct>\n-            <OutputPortName>sci_frames</OutputPortName>\n-            <DataProductType>DpdSirScienceFrame</DataProductType>\n-            <Cardinality>\n-                <Optionality>OPTIONAL</Optionality>\n-                <Min>0</Min>\n-                <Max>100</Max>\n-            </Cardinality>\n-        </OutputDataProduct>\n-\n-\n-    </OutputDataSet>\n-    <EstimatedWorkdirSizeGB>200</EstimatedWorkdirSizeGB>\n-\n-</tsk1:PipelineDef>\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ],
                        [
                            "@@ -1,11 +1,11 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Extract_Spectra_@CMAKE_PROJECT_VERSION@</Id> \n+    <Id>SIR_Extract_Spectra_@CMAKE_PROJECT_VERSION@</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n     <PipelineScriptPath>SIR_Extract_Spectra/PipScript_SIR_Extract_Spectra.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n@@ -16,9 +16,9 @@\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n                 (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n                 (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n                 (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n@@ -41,11 +41,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\", \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\", \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\", \n-                    \"NISP_GrismTransmission*\", \n+                    \"EUC_NISP_H2RG-NONLINEARITY*\",\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\",\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n+                    \"NISP_GrismTransmission*\",\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -61,7 +61,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -76,7 +76,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -91,7 +91,7 @@\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -106,7 +106,7 @@\n             <InputPortName>crv_model</InputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -121,7 +121,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -136,7 +136,7 @@\n             <InputPortName>abs_calib</InputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n                 (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -151,7 +151,7 @@\n             <InputPortName>rel_calib</InputPortName>\n             <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n               (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -166,7 +166,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -181,7 +181,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -196,8 +196,8 @@\n             <InputPortName>mer_catalog</InputPortName>\n             <DataProductType>DpdMerFinalCatalog</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN)) AND\n                 (mer_catalog.Data.TileIndex == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n@@ -213,8 +213,8 @@\n             <InputPortName>mer_segmap</InputPortName>\n             <DataProductType>DpdMerSegmentationMap</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_segmap.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -229,9 +229,9 @@\n             <InputPortName>mer_mosaic</InputPortName>\n             <DataProductType>DpdMerBksMosaic</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND \n+                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND\n                 (mer_mosaic.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -1,11 +1,11 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Extract_Spectra_@CMAKE_PROJECT_VERSION@</Id> \n+    <Id>SIR_Extract_Spectra_@CMAKE_PROJECT_VERSION@</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n     <PipelineScriptPath>SIR_Extract_Spectra/PipScript_SIR_Extract_Spectra.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n@@ -16,9 +16,9 @@\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n                 (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n                 (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n                 (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n@@ -41,11 +41,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\", \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\", \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\", \n-                    \"NISP_GrismTransmission*\", \n+                    \"EUC_NISP_H2RG-NONLINEARITY*\",\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\",\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n+                    \"NISP_GrismTransmission*\",\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -61,7 +61,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -76,7 +76,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -91,7 +91,7 @@\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -106,7 +106,7 @@\n             <InputPortName>crv_model</InputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -121,7 +121,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -136,7 +136,7 @@\n             <InputPortName>abs_calib</InputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n                 (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -151,7 +151,7 @@\n             <InputPortName>rel_calib</InputPortName>\n             <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n               (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -166,7 +166,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -181,7 +181,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -196,8 +196,8 @@\n             <InputPortName>mer_catalog</InputPortName>\n             <DataProductType>DpdMerFinalCatalog</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN)) AND\n                 (mer_catalog.Data.TileIndex == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n@@ -213,8 +213,8 @@\n             <InputPortName>mer_segmap</InputPortName>\n             <DataProductType>DpdMerSegmentationMap</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_segmap.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -229,9 +229,9 @@\n             <InputPortName>mer_mosaic</InputPortName>\n             <DataProductType>DpdMerBksMosaic</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND \n+                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND\n                 (mer_mosaic.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -1,11 +1,11 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Extract_Spectra_@CMAKE_PROJECT_VERSION@</Id> \n+    <Id>SIR_Extract_Spectra_@CMAKE_PROJECT_VERSION@</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n     <PipelineScriptPath>SIR_Extract_Spectra/PipScript_SIR_Extract_Spectra.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n@@ -16,9 +16,9 @@\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n                 (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n                 (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n                 (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n@@ -41,11 +41,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\", \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\", \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\", \n-                    \"NISP_GrismTransmission*\", \n+                    \"EUC_NISP_H2RG-NONLINEARITY*\",\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\",\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n+                    \"NISP_GrismTransmission*\",\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -61,7 +61,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -76,7 +76,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -91,7 +91,7 @@\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -106,7 +106,7 @@\n             <InputPortName>crv_model</InputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -121,7 +121,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -136,7 +136,7 @@\n             <InputPortName>abs_calib</InputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n                 (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -151,7 +151,7 @@\n             <InputPortName>rel_calib</InputPortName>\n             <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n               (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -166,7 +166,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -181,7 +181,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -196,8 +196,8 @@\n             <InputPortName>mer_catalog</InputPortName>\n             <DataProductType>DpdMerFinalCatalog</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN)) AND\n                 (mer_catalog.Data.TileIndex == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n@@ -213,8 +213,8 @@\n             <InputPortName>mer_segmap</InputPortName>\n             <DataProductType>DpdMerSegmentationMap</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_segmap.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -229,9 +229,9 @@\n             <InputPortName>mer_mosaic</InputPortName>\n             <DataProductType>DpdMerBksMosaic</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND \n+                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND\n                 (mer_mosaic.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_OptExtract_Spectra/PipScript_SIR_OptExtract_Spectra.py": [
                        [
                            "@@ -1,241 +0,0 @@\n-# ---------------------------------------------------------------------------- #\n-# Pipeline definition for SIR pipeline \"Extract Spectra\" \n-# \n-# ---------------------------------------------------------------------------- #\n-\n-from euclidwf.framework.workflow_dsl import pipeline\n-from euclidwf.framework.workflow_dsl import parallel\n-from PackageDef_SIR import *\n-\n-\n-@parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n-    \"\"\"SIR pre-processing block\n-\n-        This pipeline block prepare science-frame objects applying corrections\n-        and subtracking dark\n-    \n-    Args:\n-        raw_dithers (xml): NISP raw-frame image object\n-        mdb (xml): Mission DataBase\n-        masterdark (xml): NIR DpdNirMasterDarkFrame image object\n-        badpixel (xml): NIR DpdNirBadPixelMask mask object\n-\n-    Returns:\n-        list: DpdSirScienceFrame dark-subtracted and corrected objects\n-    \n-    Note:\n-        Is executed in parallel on the input DITHERS (DpdNispRawFrame)\n-    \"\"\"\n-\n-    initialized_expo, chi2 = nir_initalize(infile  = raw_dithers,\n-                                           mdbfile = mdb)\n-\n-    badpixmasked_expo = mask_badpixel(infile  = initialized_expo,\n-                                      xmlfile = badpixel)\n-\n-    saturamasked_expo = mask_saturation(infile  = badpixmasked_expo,\n-                                        xmlfile = mdb)\n-\n-    nonlineacorr_expo = correct_nonlinear(infile  = saturamasked_expo,\n-                                          xmlfile = mdb)\n-\n-    darksubtract_expo = subtract_dark(infile     = nonlineacorr_expo,\n-                                      masterdark = masterdark)\n-\n-    crreject_expo     = cr_rejection(grism    = darksubtract_expo,\n-                                     chi2file = chi2,\n-                                     config   = config)\n-    \n-    # DETECTOR SCALING (passare da XML a FITS)\n-        qe_frames = detectorScaling(sci_frames     = frames (FITS?),\n-                                zodiacal_light = det_scaling,\n-                                mdb            = mdb)\n-    # SIR_INIT \n-    science_frame = end_preprocessing(fits_file = crreject_expo, (qe_frames)\n-                                      le1_dp    = raw_dithers,\n-                                      mdb       = mdb)\n-\n-    # explicit\n-    return science_frame\n-# ---------------------------------------------------------------------------- #\n-\n-@parallel(iterable='sci_frame',flatten_all=True)\n-def sir_processing(sci_frame, source_catalog, opt_model, ids_model, crv_model, mdb, sirconfig):\n-    \"\"\"_SIR processiong block\n-\n-        This pipeline block prepare science-frame subtracting background and\n-        prepare location tables for spectra extraction\n-        \n-    Args:\n-        science_frame (DpdSirScienceFrame): preprocessed image\n-        source_catalog (DpdMerFinalCatalog): Catalog of sources\n-        mdb (DpdMdbDataBase): Mission \"database\" OBJECT (LoL)\n-        opt_model (DpdSirOptModel): OPT model calibration\n-        ids_model (DpdSirIdsModel): IDS model calibration\n-        crv_model (DpdSirCrvModel): CRV model calibration\n-        sirconfig (DpdSirConfigurationSet): pipeline configuration ini files\n-\n-    Returns:\n-        tuple: (\"location_table\" DpdSirLocationTable objects, \n-                \"science_frame\" DpdSirScienceFrame objects background subtracted)\n-        \n-    Note:\n-        It's executed in parallel on science_frame objects\n-    \"\"\"\n-\n-    locations_table = locate_spectra(sci_frame = sci_frame,\n-                                     opt_model = opt_model,\n-                                     ids_model = ids_model,\n-                                     crv_model = crv_model,\n-\t                \t                 mer_cat   = source_catalog,\n-                                     mdb       = mdb,\n-                                     config    = sirconfig)\n-\n-    bkgsub_sci_frame = subtract_bkg(sci_frame = sci_frame,\n-                                    loc_table = locations_table,\n-                                    mer_cat   = source_catalog,\n-                                    config    = sirconfig)\n-\n-\n-    return locations_table, bkgsub_sci_frame\n-# ---------------------------------------------------------------------------- #\n-\n-\n-\n-@parallel(iterable='loc_table', flatten_all='True')\n-def sir_decontamination(loc_table, sci_frame, mdb, cutouts, sirconfig):\n-\n-    dec_spectra = apply_decontamination(sci_frame = sci_frame,\n-                                        loc_table = loc_table,\n-                                          cutouts = cutouts,\n-                                          mdb     = mdb,\n-                                          config  = sirconfig)\n-\n-    return dec_spectra\n-# ---------------------------------------------------------------------------- #\n-\n-\n-\n-@parallel(iterable='loc_table', flatten_all='True')\n-def sir_extraction(loc_table, dec_spectra, sci_frames, cutouts, mdb, source_catalog, rel_calib, abs_calib, sirconfig):\n-    \"\"\"SIR extraction block\n-\n-        This pipeline block extract spectra from images and apply decontamination,\n-        relative and absolute flux calibration \n-\n-    Args:\n-        loc_table (DpdSirLocationTable): SIR objects location table product\n-        sci_frame (DpdSirScienceFrame): cleaned and background subtracted image\n-        mdb (DpdMdbDataBase): Mission \"database\" OBJECT (LoL)\n-        source_catalog (DpdMerFinalCatalog): Catalog of sources\n-        rel_flux (DpdSirRelativeFluxScaling): relative flux calibration object\n-        abs_calib (DpdSirAbsoluteFluxScaling): absolute calibration sensitvity object\n-        sirconfig (DpdSirConfigurationSet): pipeline configuration ini files\n-\n-    Returns:\n-        list: DpdSirExtractedSpectraCollection objects, with extracted spectra organized \n-              by tile\n-\n-    Note:\n-        It's executed in parallel on location_table objects\n-    \"\"\"\n-\n-\n-    extr_spec = optextract_spectra(loc_table = loc_table,\n-                                dec_spectra = dec_spectra,\n-                                sci_frames = sci_frames,\n-                                cutouts = cutouts, \n-                                mer_cat   = source_catalog,\n-                                mdb       = mdb,\n-                                config    = sirconfig)\n-\n-    relflux_spec = relflux_correction(extr_spectra_list = extr_spec,\n-                                      ms_flat           = rel_calib,\n-                                      config            = sirconfig)\n-\n-    absflux_spec = absflux_correction(extr_spectra_list = relflux_spec,\n-                                      sens              = abs_calib,\n-                                      mdb               = mdb)\n-\n-    # explicit\n-    return absflux_spec\n-# ---------------------------------------------------------------------------- #\n-\n-\n-## Pipeline ##\n-@pipeline(outputs=('loc_tables','sci_frames','extr_spectra'))\n-def sir_pipeline(raw_frame, mdb, nir_dark, nir_badpix, mer_catalog, mer_mosaic,\n-                 mer_segmap, det_scaling, rel_calib, opt_model, ids_model, crv_model,\n-                 abs_calib, sir_config ):\n-\n-    \"\"\"SIR \"Extract\" pipeline\n-\n-       This pipeline process a single field, intended as an exposure with 4 dithers\n-       to produce extracted spectra objects, divided by tile, according to the tiles \n-       covering the observation.\n-       This is the first pipeline to run to produce intermediate SIR results\n-\n-\n-    Returns:\n-        list: _description_\n-\n-    Warning:\n-        For a single observation, tiles are not entirely covered. This means that \n-        nearby observations processed independently produce should be later collected \n-        by the \"combine pipeline\"\n-    \"\"\"\n-\n-    cutouts = sirCreateCut(cat    = mer_catalog,\n-                           mosaic = mer_mosaic,\n-                           segmap = mer_segmap)\n-\n-    frames = sir_preprocessing(raw_dithers = raw_frame,\n-                               masterdark  = nir_dark,\n-                               badpixel    = nir_badpix,\n-                               mdb         = mdb,\n-                               config      = sir_config)\n-\n-    # qe_frames = detectorScaling(sci_frames     = frames,\n-    #                             zodiacal_light = det_scaling,\n-    #                             mdb            = mdb)\n-\n-    loc_and_frames = sir_processing(sci_frame = qe_frames,\n-                                    source_catalog = mer_catalog,\n-                                    opt_model = opt_model,\n-                                    ids_model = ids_model,\n-                                    crv_model = crv_model,\n-                                    mdb       = mdb,                                   \n-                                    sirconfig = sir_config)\n-\n-    sorted_loc_tables, sci_frames, loc_tables = splitLocTable(input_json = loc_and_frames)\n-\n-\n-    deco_spectra = sir_decontamination(loc_table = sorted_loc_tables,\n-                                       sci_frame = sci_frames,\n-                                       cutouts   = cutouts,\n-                                             mdb = mdb,\n-                                       sirconfig = sir_config)\n-\n-\n-    extr_spectra = sir_extraction(dec_spectra = deco_spectra,\n-                                  loc_table = loc_tables,\n-                                  sci_frames = sci_frames,\n-                                  cutouts = cutouts,\n-                                  source_catalog = mer_catalog,\n-                                  rel_calib  = rel_calib,\n-                                  abs_calib = abs_calib,\n-                                  mdb       = mdb,\n-                                  sirconfig = sir_config)\n-        \n-    return loc_tables, sci_frames, extr_spectra\n-# ---------------------------------------------------------------------------- #\n-\n-\n-if __name__ == '__main__':\n-    from euclidwf.framework.graph_builder import build_graph\n-    from euclidwf.utilities import visualizer\n-    pydron_graph=build_graph(sir_pipeline)\n-    print(str(pydron_graph))\n-    visualizer.visualize_graph(pydron_graph)\n-\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ],
                        [
                            "@@ -46,8 +46,13 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n     crreject_expo     = cr_rejection(grism    = darksubtract_expo,\n                                      chi2file = chi2,\n                                      config   = config)\n-\n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n+    \n+    # DETECTOR SCALING (passare da XML a FITS)\n+        qe_frames = detectorScaling(sci_frames     = frames (FITS?),\n+                                zodiacal_light = det_scaling,\n+                                mdb            = mdb)\n+    # SIR_INIT \n+    science_frame = end_preprocessing(fits_file = crreject_expo, (qe_frames)\n                                       le1_dp    = raw_dithers,\n                                       mdb       = mdb)\n \n@@ -191,9 +196,9 @@ def sir_pipeline(raw_frame, mdb, nir_dark, nir_badpix, mer_catalog, mer_mosaic,\n                                mdb         = mdb,\n                                config      = sir_config)\n \n-    qe_frames = detectorScaling(sci_frames     = frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb            = mdb)\n+    # qe_frames = detectorScaling(sci_frames     = frames,\n+    #                             zodiacal_light = det_scaling,\n+    #                             mdb            = mdb)\n \n     loc_and_frames = sir_processing(sci_frame = qe_frames,\n                                     source_catalog = mer_catalog,\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -46,8 +46,13 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n     crreject_expo     = cr_rejection(grism    = darksubtract_expo,\n                                      chi2file = chi2,\n                                      config   = config)\n-\n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n+    \n+    # DETECTOR SCALING (passare da XML a FITS)\n+        qe_frames = detectorScaling(sci_frames     = frames (FITS?),\n+                                zodiacal_light = det_scaling,\n+                                mdb            = mdb)\n+    # SIR_INIT \n+    science_frame = end_preprocessing(fits_file = crreject_expo, (qe_frames)\n                                       le1_dp    = raw_dithers,\n                                       mdb       = mdb)\n \n@@ -191,9 +196,9 @@ def sir_pipeline(raw_frame, mdb, nir_dark, nir_badpix, mer_catalog, mer_mosaic,\n                                mdb         = mdb,\n                                config      = sir_config)\n \n-    qe_frames = detectorScaling(sci_frames     = frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb            = mdb)\n+    # qe_frames = detectorScaling(sci_frames     = frames,\n+    #                             zodiacal_light = det_scaling,\n+    #                             mdb            = mdb)\n \n     loc_and_frames = sir_processing(sci_frame = qe_frames,\n                                     source_catalog = mer_catalog,\n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -46,8 +46,13 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n     crreject_expo     = cr_rejection(grism    = darksubtract_expo,\n                                      chi2file = chi2,\n                                      config   = config)\n-\n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n+    \n+    # DETECTOR SCALING (passare da XML a FITS)\n+        qe_frames = detectorScaling(sci_frames     = frames (FITS?),\n+                                zodiacal_light = det_scaling,\n+                                mdb            = mdb)\n+    # SIR_INIT \n+    science_frame = end_preprocessing(fits_file = crreject_expo, (qe_frames)\n                                       le1_dp    = raw_dithers,\n                                       mdb       = mdb)\n \n@@ -191,9 +196,9 @@ def sir_pipeline(raw_frame, mdb, nir_dark, nir_badpix, mer_catalog, mer_mosaic,\n                                mdb         = mdb,\n                                config      = sir_config)\n \n-    qe_frames = detectorScaling(sci_frames     = frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb            = mdb)\n+    # qe_frames = detectorScaling(sci_frames     = frames,\n+    #                             zodiacal_light = det_scaling,\n+    #                             mdb            = mdb)\n \n     loc_and_frames = sir_processing(sci_frame = qe_frames,\n                                     source_catalog = mer_catalog,\n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_OptExtract_Spectra/__init__.py": [
                        [
                            "@@ -1 +0,0 @@\n-# subpackage\n\\ No newline at end of file\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Process_Background/PipScript_SIR_Process_Background.py": [
                        [
                            "@@ -1,150 +0,0 @@\n-# ---------------------------------------------------------------------------- #\n-# Pipeline definition for SIR pipeline \"Background Process\" PV-006\n-# \n-# ---------------------------------------------------------------------------- #\n-\n-from euclidwf.framework.workflow_dsl import pipeline\n-from euclidwf.framework.workflow_dsl import parallel\n-from PackageDef_SIR import *\n-\n-\n-@parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n-    \"\"\"SIR pre-processing block\n-\n-        This pipeline block prepare science-frame objects applying corrections\n-        and subtracking dark\n-    \n-    Args:\n-        raw_dithers (xml): NISP raw-frame image object\n-        mdb (xml): Mission DataBase\n-        masterdark (xml): NIR DpdNirMasterDarkFrame image object\n-        badpixel (xml): NIR DpdNirBadPixelMask mask object\n-\n-    Returns:\n-        list: DpdSirScienceFrame dark-subtracted and corrected objects\n-    \n-    Note:\n-        Is executed in parallel on the input DITHERS (DpdNispRawFrame)\n-    \"\"\"\n-\n-    initialized_expo, chi2 = nir_initalize(infile  = raw_dithers,\n-                                           mdbfile = mdb)\n-\n-    badpixmasked_expo = mask_badpixel(infile  = initialized_expo,\n-                                      xmlfile = badpixel)\n-\n-    saturamasked_expo = mask_saturation(infile  = badpixmasked_expo,\n-                                        xmlfile = mdb)\n-\n-    nonlineacorr_expo = correct_nonlinear(infile  = saturamasked_expo,\n-                                          xmlfile = mdb)\n-\n-    darksubtract_expo = subtract_dark(infile     = nonlineacorr_expo,\n-                                      masterdark = masterdark)\n-\n-    crreject_expo     = cr_rejection(grism    = darksubtract_expo,\n-                                     chi2file = chi2,\n-                                     config   = config)\n-\n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n-                                      le1_dp    = raw_dithers,\n-                                      mdb       = mdb)\n-\n-    # explicit\n-    return science_frame\n-# ---------------------------------------------------------------------------- #\n-\n-@parallel(iterable='sci_frame',flatten_all=True)\n-def sir_processing(sci_frame, source_catalog, opt_model, ids_model, crv_model, mdb, sirconfig):\n-    \"\"\"_SIR processiong block\n-\n-        This pipeline block prepare science-frame subtracting background and\n-        prepare location tables for spectra extraction\n-        \n-    Args:\n-        science_frame (DpdSirScienceFrame): preprocessed image\n-        source_catalog (DpdMerFinalCatalog): Catalog of sources\n-        mdb (DpdMdbDataBase): Mission \"database\" OBJECT (LoL)\n-        opt_model (DpdSirOptModel): OPT model calibration\n-        ids_model (DpdSirIdsModel): IDS model calibration\n-        crv_model (DpdSirCrvModel): CRV model calibration\n-        sirconfig (DpdSirConfigurationSet): pipeline configuration ini files\n-\n-    Returns:\n-        tuple: (\"location_table\" DpdSirLocationTable objects, \n-                \"science_frame\" DpdSirScienceFrame objects background subtracted)\n-        \n-    Note:\n-        It's executed in parallel on science_frame objects\n-    \"\"\"\n-\n-    locations_table = locate_spectra_tu(sci_frame = sci_frame,\n-                                        opt_model = opt_model,\n-                                        ids_model = ids_model,\n-                                        crv_model = crv_model,\n-                                        tu_cat    = source_catalog,\n-                                        mdb       = mdb,\n-                                        config    = sirconfig)\n-\n-    bkgsub_sci_frame = subtract_bkg_tu(sci_frame = sci_frame,\n-                                        loc_table = locations_table,\n-                                        tu_cat    = source_catalog,\n-                                        config    = sirconfig)\n-\n-\n-    return locations_table, bkgsub_sci_frame\n-# ---------------------------------------------------------------------------- #\n-\n-\n-## Pipeline ##\n-@pipeline(outputs=('sci_frames',))\n-def sir_pipeline(raw_frame, mdb, nir_dark, nir_badpix, tu_cat,\n-                 det_scaling, opt_model, ids_model, crv_model,\n-                 sir_config ):\n-\n-    \"\"\"SIR \"Process Background\" pipeline\n-\n-       This pipeline process a single field up to background subtractions step\n-\n-    Returns:\n-        list: _description_\n-\n-    Warning:\n-        The Background-suntracted are a \"intermediate\" product for the processing pipeline.\n-        If Extracted (and Combined) spectra are needed, use the Extract+Combine or Proess_Field \n-        pipelines\n-        \n-    \"\"\"\n-\n-    frames = sir_preprocessing(raw_dithers = raw_frame,\n-                               masterdark  = nir_dark,\n-                               badpixel    = nir_badpix,\n-                               mdb         = mdb,\n-                               config      = sir_config)\n-\n-    qe_frames = detectorScaling(sci_frames     = frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb            = mdb)\n-\n-    loc_and_frames = sir_processing(sci_frame = qe_frames,\n-                                    source_catalog = tu_cat,\n-                                    opt_model = opt_model,\n-                                    ids_model = ids_model,\n-                                    crv_model = crv_model,\n-                                    mdb       = mdb,                                   \n-                                    sirconfig = sir_config)\n-\n-    _, sci_frames, _ = splitLocTable(input_json = loc_and_frames)\n-\n-        \n-    return sci_frames\n-# ---------------------------------------------------------------------------- #\n-\n-\n-if __name__ == '__main__':\n-    from euclidwf.framework.graph_builder import build_graph\n-    from euclidwf.utilities import visualizer\n-    pydron_graph=build_graph(sir_pipeline)\n-    print(str(pydron_graph))\n-    visualizer.visualize_graph(pydron_graph)\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Process_Background/__init__.py": [
                        [
                            "@@ -1 +0,0 @@\n-# subpackage\n\\ No newline at end of file\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Process_Field/PipDef_SIR_Process_Field.xml": [
                        [
                            "@@ -1,30 +1,25 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n-    <EdenVersion>@EDEN@</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n     <Id>SIR_Process_Field_@CMAKE_PROJECT_VERSION@</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n-   <PipelineScriptPath>SIR_Process_Field/PipScript_SIR_Process_Field.py</PipelineScriptPath>\n+    <PipelineScriptPath>SIR_Process_Field/PipScript_SIR_Process_Field.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n \n-    <InputDataSet>\n-\n+    <InputDataSetPlan>\n <!-- raw_frames -->\n         <KeyProductInputDataPlan>\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n-                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n-                (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n-                (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n-                (raw_frame.Data.GrismWheelTilt == \"UNKNOWN\") AND\n-                (raw_frame.Data.ObservationSequence.Exposure == UNKNOWN) AND\n+                (raw_frame.Header.ManualValidationStatus          != \"INVALID\")       AND\n+                (raw_frame.Header.DataSetRelease                  == \"UNKNOWN\")       AND\n+                (raw_frame.Data.ImgType.Technique                 == \"SPECTROIMAGE\")  AND\n+                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN)         AND\n+                (raw_frame.Data.ObservationSequence.PointingId    == UNKNOWN)         AND\n+                (raw_frame.Data.GrismWheelPos                     == \"UNKNOWN\")       AND\n+                (raw_frame.Data.GrismWheelTilt                    == \"UNKNOWN\")       AND\n+                (raw_frame.Data.ObservationSequence.Exposure      == UNKNOWN)         AND\n                 (raw_frame.Data.ObservationSequence.TotalExposure == UNKNOWN)\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -34,20 +29,74 @@\n             </Cardinality>\n         </KeyProductInputDataPlan>\n \n+<!-- Mer Final Catalogs -->\n+        <InputDataPlan>\n+            <InputPortName>mer_catalog</InputPortName>\n+            <DataProductType>DpdMerFinalCatalog</DataProductType>\n+            <InputQuerySpecPlan>\n+                (mer_catalog.Header.ManualValidationStatus              != \"INVALID\") AND\n+                (mer_catalog.Header.DataSetRelease                      == \"UNKNOWN\") AND\n+                (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN)) AND\n+                (mer_catalog.Data.TileIndex                             == \"UNKNOWN\")\n+            </InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>30</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+\n+<!-- Mer Segmentation Maps -->\n+        <InputDataPlan>\n+            <InputPortName>mer_segmap</InputPortName>\n+            <DataProductType>DpdMerSegmentationMap</DataProductType>\n+            <InputQuerySpecPlan>\n+                (mer_segmap.Header.ManualValidationStatus              != \"INVALID\") AND\n+                (mer_segmap.Header.DataSetRelease                      == \"UNKNOWN\") AND\n+                (mer_segmap.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n+            </InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>30</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+\n+<!-- Mer Mosaic -->\n+        <InputDataPlan>\n+            <InputPortName>mer_mosaic</InputPortName>\n+            <DataProductType>DpdMerBksMosaic</DataProductType>\n+            <InputQuerySpecPlan>\n+                (mer_mosaic.Header.ManualValidationStatus              != \"INVALID\") AND\n+                (mer_mosaic.Header.DataSetRelease                      == \"UNKNOWN\") AND\n+                (mer_mosaic.Data.Filter.Name                           == \"UNKNOWN\") AND\n+                (mer_mosaic.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n+            </InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>30</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+\n <!-- MDB -->\n         <InputDataPlan>\n             <InputPortName>mdb</InputPortName>\n             <DataProductType>DpdMdbDataBase</DataProductType>\n-            <InputQuerySpecPlan>(mdb.Header.ProductId.ObjectId == \"UNKNOWN\")</InputQuerySpecPlan>\n+            <InputQuerySpecPlan>(mdb.Header.ProductId.LimitedString == \"UNKNOWN\")</InputQuerySpecPlan>\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\",\n-                    \"EUC_NISP_Saturation*\",\n-                    \"EUC_NISP_SINGLEFRAMEOUT*\",\n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n-                    \"NISP_GrismTransmission*\",\n-                    \"NISPDetector*\"\n+                    \"EUC_NISP_NLSPECTRO*\" ,\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n+                    \"NISP_GrismTransmission*\" ,\n+                    \"NISPDetector*\",\n+                    \"NISPHTransmissionCurves*\",\n+                    \"NISPJTransmissionCurves*\",\n+                    \"NISPYTransmissionCurves*\",\n+                    \"PLMTransmissionNISPNominalEOLCBE*\"\n                 </FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n@@ -62,7 +111,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n+                (sir_config.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -73,11 +122,11 @@\n         </InputDataPlan>\n \n <!-- OPT Sir Configuration -->\n-         <InputDataPlan>\n+        <InputDataPlan>\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n+                (opt_model.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -87,13 +136,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- IDS Sir Configuration -->\n+<!-- CRV Sir Configuration -->\n         <InputDataPlan>\n-            <InputPortName>ids_model</InputPortName>\n-            <DataProductType>DpdSirIdsModel</DataProductType>\n+            <InputPortName>crv_model</InputPortName>\n+            <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (crv_model.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -102,13 +151,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- CRV Sir Configuration -->\n+<!-- IDS Sir Configuration -->\n         <InputDataPlan>\n-            <InputPortName>crv_model</InputPortName>\n-            <DataProductType>DpdSirCrvModel</DataProductType>\n+            <InputPortName>ids_model</InputPortName>\n+            <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (ids_model.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -117,13 +166,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- Detector scaling -->\n+<!-- Relative Flux scaling -->\n         <InputDataPlan>\n-            <InputPortName>det_scaling</InputPortName>\n-            <DataProductType>DpdSirDetectorScaling</DataProductType>\n+            <InputPortName>rel_calib</InputPortName>\n+            <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n-                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n+              (rel_calib.Header.ManualValidationStatus  != \"INVALID\") AND\n+              (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -137,7 +186,7 @@\n             <InputPortName>abs_calib</InputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n+                (abs_calib.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -147,13 +196,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- Relative Flux scaling -->\n+<!-- Detector scaling -->\n         <InputDataPlan>\n-            <InputPortName>rel_calib</InputPortName>\n-            <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n+            <InputPortName>det_scaling</InputPortName>\n+            <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n-              (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (det_scaling.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -167,7 +216,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n+                (nir_dark.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -182,7 +231,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n+                (nir_badpix.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -192,72 +241,10 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- Mer Final Catalogs -->\n-        <InputDataPlan>\n-            <InputPortName>mer_catalog</InputPortName>\n-            <DataProductType>DpdMerFinalCatalog</DataProductType>\n-            <InputQuerySpecPlan>\n-                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND\n-                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>30</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- Mer Segmentation Maps -->\n-        <InputDataPlan>\n-            <InputPortName>mer_segmap</InputPortName>\n-            <DataProductType>DpdMerSegmentationMap</DataProductType>\n-            <InputQuerySpecPlan>\n-                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND\n-                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (mer_segmap.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>30</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- Mer Mosaic -->\n-        <InputDataPlan>\n-            <InputPortName>mer_mosaic</InputPortName>\n-            <DataProductType>DpdMerBksMosaic</DataProductType>\n-            <InputQuerySpecPlan>\n-                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND\n-                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND\n-                (mer_mosaic.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>30</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-\n-<!-- Input dependencies and relations for PLAN with multiple PPO-->\n-        <Dependencies>\n-            <GroupedBy>raw_frame.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"mer_catalog\">\n-                <Query>mer_mosaic.Header.PPOId == mer_catalog.Header.PPOId</Query>\n-            </LinkedBy>\n-            <LinkedBy refPort=\"mer_catalog\">\n-                <Query>mer_segmap.Header.PPOId == mer_catalog.Header.PPOId</Query>\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet>\n-\n+    </InputDataSetPlan>\n \n     <OutputDataSet>\n-\n-    <!-- SIR Location Table: side product -->\n+<!-- SIR Location Table: side product -->\n         <OutputDataProduct>\n             <OutputPortName>loc_tables</OutputPortName>\n             <DataProductType>DpdSirLocationTable</DataProductType>\n@@ -268,10 +255,10 @@\n             </Cardinality>\n         </OutputDataProduct>\n \n-    <!-- SIR Extracted Spectra: INTERMEDIATE products when pipelines will be divided -->\n+<!-- SIR Science Frame background subtracted: side product -->\n         <OutputDataProduct>\n-            <OutputPortName>extr_spectra</OutputPortName>\n-            <DataProductType>DpdSirExtractedSpectraCollection</DataProductType>\n+            <OutputPortName>sci_frames</OutputPortName>\n+            <DataProductType>DpdSirScienceFrame</DataProductType>\n             <Cardinality>\n                 <Optionality>OPTIONAL</Optionality>\n                 <Min>0</Min>\n@@ -279,10 +266,10 @@\n             </Cardinality>\n         </OutputDataProduct>\n \n-    <!-- SIR Science Frame background subtracted: side product -->\n+<!-- SIR Extracted Spectra: INTERMEDIATE products when pipelines will be divided -->\n         <OutputDataProduct>\n-            <OutputPortName>sci_frames</OutputPortName>\n-            <DataProductType>DpdSirScienceFrame</DataProductType>\n+            <OutputPortName>extr_spectra</OutputPortName>\n+            <DataProductType>DpdSirExtractedSpectraCollection</DataProductType>\n             <Cardinality>\n                 <Optionality>OPTIONAL</Optionality>\n                 <Min>0</Min>\n@@ -290,7 +277,7 @@\n             </Cardinality>\n         </OutputDataProduct>\n \n-    <!-- SIR Combined Spectra: main product for customers-->\n+<!-- SIR Combined Spectra: main product for customers-->\n         <OutputDataProduct>\n             <OutputPortName>comb_spectra</OutputPortName>\n             <DataProductType>DpdSirCombinedSpectra</DataProductType>\n@@ -302,6 +289,7 @@\n         </OutputDataProduct>\n \n     </OutputDataSet>\n+\n     <EstimatedWorkdirSizeGB>200</EstimatedWorkdirSizeGB>\n \n </tsk1:PipelineDef>\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ],
                        [
                            "@@ -1,15 +1,15 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Process_Field_@CMAKE_PROJECT_VERSION@</Id> \n+    <Id>SIR_Process_Field_@CMAKE_PROJECT_VERSION@</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n    <PipelineScriptPath>SIR_Process_Field/PipScript_SIR_Process_Field.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n- \n+\n     <InputDataSet>\n \n <!-- raw_frames -->\n@@ -18,9 +18,14 @@\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n                 (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) \n+                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n+                (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n+                (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n+                (raw_frame.Data.GrismWheelTilt == \"UNKNOWN\") AND\n+                (raw_frame.Data.ObservationSequence.Exposure == UNKNOWN) AND\n+                (raw_frame.Data.ObservationSequence.TotalExposure == UNKNOWN)\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -37,11 +42,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\", \n-                    \"EUC_NISP_Saturation*\", \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\", \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\", \n-                    \"NISP_GrismTransmission*\", \n+                    \"EUC_NISP_H2RG-NONLINEARITY*\",\n+                    \"EUC_NISP_Saturation*\",\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\",\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n+                    \"NISP_GrismTransmission*\",\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -57,7 +62,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -72,7 +77,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -87,7 +92,7 @@\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -102,7 +107,7 @@\n             <InputPortName>crv_model</InputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -117,7 +122,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -132,7 +137,7 @@\n             <InputPortName>abs_calib</InputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n                 (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -147,7 +152,7 @@\n             <InputPortName>rel_calib</InputPortName>\n             <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n               (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -162,7 +167,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -177,7 +182,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -192,8 +197,8 @@\n             <InputPortName>mer_catalog</InputPortName>\n             <DataProductType>DpdMerFinalCatalog</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -208,8 +213,8 @@\n             <InputPortName>mer_segmap</InputPortName>\n             <DataProductType>DpdMerSegmentationMap</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_segmap.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -224,9 +229,9 @@\n             <InputPortName>mer_mosaic</InputPortName>\n             <DataProductType>DpdMerBksMosaic</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND \n+                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND\n                 (mer_mosaic.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -1,15 +1,15 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Process_Field_@CMAKE_PROJECT_VERSION@</Id> \n+    <Id>SIR_Process_Field_@CMAKE_PROJECT_VERSION@</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n    <PipelineScriptPath>SIR_Process_Field/PipScript_SIR_Process_Field.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n- \n+\n     <InputDataSet>\n \n <!-- raw_frames -->\n@@ -18,9 +18,14 @@\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n                 (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) \n+                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n+                (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n+                (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n+                (raw_frame.Data.GrismWheelTilt == \"UNKNOWN\") AND\n+                (raw_frame.Data.ObservationSequence.Exposure == UNKNOWN) AND\n+                (raw_frame.Data.ObservationSequence.TotalExposure == UNKNOWN)\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -37,11 +42,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\", \n-                    \"EUC_NISP_Saturation*\", \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\", \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\", \n-                    \"NISP_GrismTransmission*\", \n+                    \"EUC_NISP_H2RG-NONLINEARITY*\",\n+                    \"EUC_NISP_Saturation*\",\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\",\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n+                    \"NISP_GrismTransmission*\",\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -57,7 +62,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -72,7 +77,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -87,7 +92,7 @@\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -102,7 +107,7 @@\n             <InputPortName>crv_model</InputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -117,7 +122,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -132,7 +137,7 @@\n             <InputPortName>abs_calib</InputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n                 (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -147,7 +152,7 @@\n             <InputPortName>rel_calib</InputPortName>\n             <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n               (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -162,7 +167,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -177,7 +182,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -192,8 +197,8 @@\n             <InputPortName>mer_catalog</InputPortName>\n             <DataProductType>DpdMerFinalCatalog</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -208,8 +213,8 @@\n             <InputPortName>mer_segmap</InputPortName>\n             <DataProductType>DpdMerSegmentationMap</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_segmap.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -224,9 +229,9 @@\n             <InputPortName>mer_mosaic</InputPortName>\n             <DataProductType>DpdMerBksMosaic</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND \n+                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND\n                 (mer_mosaic.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -1,15 +1,15 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Process_Field_@CMAKE_PROJECT_VERSION@</Id> \n+    <Id>SIR_Process_Field_@CMAKE_PROJECT_VERSION@</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n    <PipelineScriptPath>SIR_Process_Field/PipScript_SIR_Process_Field.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n- \n+\n     <InputDataSet>\n \n <!-- raw_frames -->\n@@ -18,9 +18,14 @@\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n                 (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) \n+                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n+                (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n+                (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n+                (raw_frame.Data.GrismWheelTilt == \"UNKNOWN\") AND\n+                (raw_frame.Data.ObservationSequence.Exposure == UNKNOWN) AND\n+                (raw_frame.Data.ObservationSequence.TotalExposure == UNKNOWN)\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -37,11 +42,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\", \n-                    \"EUC_NISP_Saturation*\", \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\", \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\", \n-                    \"NISP_GrismTransmission*\", \n+                    \"EUC_NISP_H2RG-NONLINEARITY*\",\n+                    \"EUC_NISP_Saturation*\",\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\",\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n+                    \"NISP_GrismTransmission*\",\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -57,7 +62,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -72,7 +77,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -87,7 +92,7 @@\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -102,7 +107,7 @@\n             <InputPortName>crv_model</InputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -117,7 +122,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -132,7 +137,7 @@\n             <InputPortName>abs_calib</InputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n                 (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -147,7 +152,7 @@\n             <InputPortName>rel_calib</InputPortName>\n             <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n               (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -162,7 +167,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -177,7 +182,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -192,8 +197,8 @@\n             <InputPortName>mer_catalog</InputPortName>\n             <DataProductType>DpdMerFinalCatalog</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_catalog.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_catalog.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_catalog.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -208,8 +213,8 @@\n             <InputPortName>mer_segmap</InputPortName>\n             <DataProductType>DpdMerSegmentationMap</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (mer_segmap.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_segmap.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (mer_segmap.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -224,9 +229,9 @@\n             <InputPortName>mer_mosaic</InputPortName>\n             <DataProductType>DpdMerBksMosaic</DataProductType>\n             <InputQuerySpecPlan>\n-                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND \n-                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND \n+                (mer_mosaic.Header.ManualValidationStatus != \"INVALID\") AND\n+                (mer_mosaic.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (mer_mosaic.Data.Filter.Name == \"UNKNOWN\") AND\n                 (mer_mosaic.Data.ObservationIdList.ListOfObservationId IN (UNKNOWN))\n             </InputQuerySpecPlan>\n             <Cardinality>\n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Process_Field/PipScript_SIR_Process_Field.py": [
                        [
                            "@@ -1,5 +1,14 @@\n # ---------------------------------------------------------------------------- #\n-# Pipeline definition for SIR pipeline \"Process Field\" \n+# SIR pipeline for nominal ROS observation to Extract Spectra\n+#\n+# Field: ROS\n+#\n+# Catalog: MER \n+#\n+# Date: August 2023\n+#\n+# Nominal science processing\n+# ---------------------------------------------------------------------------- #\n # This pipeline is a combination of Extract_Spectra and Combine_Spectra\n # ---------------------------------------------------------------------------- #\n \n@@ -8,31 +17,36 @@ from euclidwf.framework.workflow_dsl import parallel\n from PackageDef_SIR import *\n \n \n-@parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n+@parallel(iterable='raw_frames', flatten_all='True')\n+def sir_preprocessing(raw_frames, mdb, dark, badpix, det_scaling, config):\n     \"\"\"SIR pre-processing block\n \n-        This pipeline block prepare science-frame objects applying corrections\n-        and subtracking dark\n-    \n+        SIR pipeline block that prepares science_frame objects applying corrections,\n+        and rotating detectors layout of LE1 raw-frames \n+\n     Args:\n-        raw_dithers (xml): NISP raw-frame image object\n-        mdb (xml): Mission DataBase\n-        masterdark (xml): NIR DpdNirMasterDarkFrame image object\n-        badpixel (xml): NIR DpdNirBadPixelMask mask object\n+        raw_frames (XML list): Level 1 NISP DpdNispRawFrame image objects\n+        mdb (XML): DpdMdbDataBase object\n+        dark (XML): NIR DpdNirMasterDarkFrame image object\n+        badpix (XML): NIR DpdNirBadPixelMask mask object\n+        det_scaling (XML): QE correction SIR calibration object\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n \n     Returns:\n         list: DpdSirScienceFrame dark-subtracted and corrected objects\n-    \n+\n     Note:\n-        Is executed in parallel on the input DITHERS (DpdNispRawFrame)\n+        Is executed in parallel on the independent input raw_frames (DpdNispRawFrame)\n+\n+    Warning:\n+        The output frames have rotated detector layout after SIR_init step        \n     \"\"\"\n \n-    initialized_expo, chi2 = nir_initalize(infile  = raw_dithers,\n+    initialized_expo, chi2 = nir_initalize(infile  = raw_frames,\n                                            mdbfile = mdb)\n \n     badpixmasked_expo = mask_badpixel(infile  = initialized_expo,\n-                                      xmlfile = badpixel)\n+                                      xmlfile = badpix)\n \n     saturamasked_expo = mask_saturation(infile  = badpixmasked_expo,\n                                         xmlfile = mdb)\n@@ -41,132 +55,156 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n                                           xmlfile = mdb)\n \n     darksubtract_expo = subtract_dark(infile     = nonlineacorr_expo,\n-                                      masterdark = masterdark)\n+                                      masterdark = dark)\n \n-    crreject_expo     = cr_rejection(grism    = darksubtract_expo,\n-                                     chi2file = chi2,\n-                                     config   = config)\n+    cr_rejected_expo  = cosmic_rejection(grism    = darksubtract_expo,\n+                                         chi2file = chi2,\n+                                         config   = config)\n+    \n+    qe_corrected_expo = detector_scaling(sci_frame_fits = cr_rejected_expo,\n+                                         zodiacal_light = det_scaling,\n+                                         mdb = mdb)\n \n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n-                                      le1_dp    = raw_dithers,\n-                                      mdb       = mdb)\n+    science_frame     = sir_initialize(fits_file = qe_corrected_expo,\n+                                       le1_dp    = raw_frames,\n+                                       mdb       = mdb)\n \n-    # explicit\n     return science_frame\n # ---------------------------------------------------------------------------- #\n \n \n-@parallel(iterable='sci_frame',flatten_all=True)\n-def sir_processing(sci_frame, source_catalog, opt_model, ids_model, crv_model, mdb, sirconfig):\n-    \"\"\"_SIR processiong block\n+@parallel(iterable='sci_frames',flatten_all=True)\n+def sir_processing(sci_frames, catalog, opt_model, ids_model, crv_model, mdb, config):\n+    \"\"\"SIR processiong block\n+\n+        SIR pipeline block computing location tables and preparing background \n+        subtracted science-frames (images) needed for spectra extraction\n \n-        This pipeline block prepare science-frame subtracting background and\n-        prepare location tables for spectra extraction\n-        \n     Args:\n-        science_frame (DpdSirScienceFrame): preprocessed image\n-        source_catalog (DpdMerFinalCatalog): Catalog of sources\n-        mdb (DpdMdbDataBase): Mission \"database\" OBJECT (LoL)\n-        opt_model (DpdSirOptModel): OPT model calibration\n-        ids_model (DpdSirIdsModel): IDS model calibration\n-        crv_model (DpdSirCrvModel): CRV model calibration\n-        sirconfig (DpdSirConfigurationSet): pipeline configuration ini files\n+        sci_frames (XML list): SIR preprocessed DpdSirScienceFrame images\n+        catalog (XML list): DpdTrueUniverseOutput or DpdMerFinalCatalog catalog of sources objects\n+        mdb (XML): DpdMdbDataBase object\n+        opt_model (XML): SIR DpdSirOptModel optical model\n+        ids_model (XML): SIR DpdSirIdsModel inverse dipersion solution model\n+        crv_model (XML): SIR DpdSirCrvModel curvature model\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n \n     Returns:\n-        tuple: (\"location_table\" DpdSirLocationTable objects, \n-                \"science_frame\" DpdSirScienceFrame objects background subtracted)\n-        \n+        tuple: (<DpdSirLocationTable> up to 16 objects, \n+                <DpdSirScienceFrame> 1 background subtracted object)\n+\n     Note:\n-        It's executed in parallel on science_frame objects\n+        It's executed in parallel on sci_frames objects\n     \"\"\"\n \n-    locations_table = locate_spectra(sci_frame = sci_frame,\n-                                     opt_model = opt_model,\n-                                     ids_model = ids_model,\n-                                     crv_model = crv_model,\n-\t                \t     mer_cat   = source_catalog,\n-                                     mdb       = mdb,\n-                                     config    = sirconfig)\n+    locations_tables = locate_spectra(sci_frame = sci_frames,\n+                                      mer_cat   = catalog,\n+                                      mdb       = mdb,\n+                                      opt_model = opt_model,\n+                                      ids_model = ids_model,\n+                                      crv_model = crv_model,\n+                                      config    = config)\n+    \n+    bkgsub_sci_frame = subtract_bkg(sci_frame = sci_frames,\n+                                    loc_table = locations_tables,\n+                                    mer_cat   = catalog,\n+                                    config    = config)\n \n-    bkgsub_sci_frame = subtract_bkg(sci_frame = sci_frame,\n-                                    loc_table = locations_table,\n-                                    mer_cat   = source_catalog,\n-                                    config    = sirconfig)\n+    return locations_tables, bkgsub_sci_frame\n+# ---------------------------------------------------------------------------- #\n \n \n-    return locations_table, bkgsub_sci_frame\n+@parallel(iterable='loc_tables', flatten_all='True')\n+def sir_decontamination(loc_tables, sci_frames, cutouts, mdb, config):\n+    \"\"\"SIR decontamination block\n \n-# ---------------------------------------------------------------------------- #\n+        SIR pipeline block that decontaminate spectra\n \n+    Args:\n+        loc_tables (list of lists): list of DpdSirLocationTable objects grouped by detector\n+        sci_frames (XML list): SIR processed (background subtracted) DpdSirScienceFrame images\n+        cutouts ():\n+        mdb (XML): DpdMdbDataBase object\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n+\n+    Returns:\n+        H5: Decontaminated spectra object for each location table\n \n-@parallel(iterable='loc_table', flatten_all='True')\n-def sir_decontamination(loc_table, sci_frame, mdb, cutouts, sirconfig):\n+    Note:\n+        It's executed in parallel on loc_tables objects\n+    \"\"\"\n \n-    dec_spectra = apply_decontamination(sci_frame = sci_frame,\n-                                        loc_table = loc_table,\n-                                          cutouts = cutouts,\n-                                          mdb     = mdb,\n-                                          config  = sirconfig)\n+    dec_spectra = apply_decontamination(sci_frame = sci_frames,\n+                                        loc_table = loc_tables,\n+                                        cutouts   = cutouts,\n+                                        mdb       = mdb,\n+                                        config    = config)\n \n     return dec_spectra\n # ---------------------------------------------------------------------------- #\n \n \n-@parallel(iterable='loc_table', flatten_all='True')\n-def sir_extraction(loc_table, sci_frame, mdb, source_catalog, rel_calib, abs_calib, sirconfig):\n+\n+@parallel(iterable='loc_tables', flatten_all='True')\n+def sir_extraction(loc_tables, dec_spectra, sci_frames, cutouts, mdb, catalog, rel_calib, abs_calib, config):\n     \"\"\"SIR extraction block\n \n-        This pipeline block extract spectra from images and apply decontamination,\n-        relative and absolute flux calibration \n+        SIR pipeline block that extract spectra and apply relative flux correction.\n+        Only relative flux calibration is applied to the extraxcted spectra in\n+        the ABS calibration pipeline\n \n     Args:\n-        loc_table (DpdSirLocationTable): SIR objects location table product\n-        sci_frame (DpdSirScienceFrame): cleaned and background subtracted image\n-        mdb (DpdMdbDataBase): Mission \"database\" OBJECT (LoL)\n-        source_catalog (DpdMerFinalCatalog): Catalog of sources\n-        rel_flux (DpdSirRelativeFluxScaling): relative flux calibration object\n-        abs_calib (DpdSirAbsoluteFluxScaling): absolute calibration sensitvity object\n-        sirconfig (DpdSirConfigurationSet): pipeline configuration ini files\n+        loc_tables (list XML): DpdSirLocationTable objects\n+        dec_spectra (list XML): list of  \n+        sci_frames (XML list): SIR processed (background subtracted) DpdSirScienceFrame images\n+        cututs ():\n+        mdb (XML): DpdMdbDataBase object\n+        catalog (XML list): DpdTrueUniverseOutput catalog of sources objects\n+        rel_flux (XML): SIR DpdSirRelativeFluxScaling relative flux calibration model\n+        abs_flux (XML): SIR DpdSirAbsoluteFluxScaling absolute flux calibration model\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n \n     Returns:\n-        list: DpdSirExtractedSpectraCollection objects, with extracted spectra organized \n-              by tile\n+        list: DpdSirExtractedSpectraCollection objects organized in MER tiles\n \n     Note:\n-        It's executed in parallel on location_table objects\n+        It's executed in parallel on loc_tables objects\n     \"\"\"\n \n \n-    extr_spec = extract_spectra(loc_table = loc_table,\n-                                dec_spectra = sci_frame,\n-                                mer_cat   = source_catalog,\n-                                mdb       = mdb,\n-                                config    = sirconfig)\n+    extr_spec = extract_spectra(loc_table   = loc_tables,\n+                                dec_spectra = dec_spectra,\n+                                mer_cat     = catalog,\n+                                sci_frames  = sci_frames,\n+                                cutouts     = cutouts, \n+                                mdb         = mdb,\n+                                config      = config)\n \n     relflux_spec = relflux_correction(extr_spectra_list = extr_spec,\n                                       ms_flat           = rel_calib,\n-                                      config            = sirconfig)\n+                                      mdbfile           = mdb,\n+                                      config            = config)\n \n     absflux_spec = absflux_correction(extr_spectra_list = relflux_spec,\n                                       sens              = abs_calib,\n                                       mdb               = mdb)\n \n-    # explicit\n     return absflux_spec\n # ---------------------------------------------------------------------------- #\n \n-@parallel(iterable='source_catalog', flatten_all='True')\n-def sir_combination(extr_spectra, mdb, source_catalog, sirconfig):\n+\n+@parallel(iterable='catalogs', flatten_all='True')\n+def sir_combination(catalogs, extr_spectra, mdb, config):\n     \"\"\"SIR combination block\n \n        This pipeline block combine extracted spectra according to the tile \n \n     Args:\n+        catalogs (DpdMerFinalCatalog): Catalog of sources\n         extr_spectra (DpdSirExtractedSpectraCollection): objects with extracted spectra organized \n               by tile\n-        mdb (DpdMdbDataBase): Mission \"database\" OBJECT (LoL)\n-        source_catalog (DpdMerFinalCatalog): Catalog of sources\n-        sirconfig (DpdSirConfigurationSet): pipeline configuration ini files\n+        mdb (XML): DpdMdbDataBase object\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n \n     Returns:\n         list: DpdSirCombinedSpectra objects, organized by tile\n@@ -174,32 +212,38 @@ def sir_combination(extr_spectra, mdb, source_catalog, sirconfig):\n     Note:\n         It's executed in parallel on the catalog (tiles)    \n     \"\"\"\n-    comb_spectra = combine_spectra(extr_spectra_list = extr_spectra,\n-                                   mer_cat = source_catalog,\n-                                   mdb     = mdb,      \n-                                   config  = sirconfig)\n+    h5_comb, fits_comb = combine_spectra(mer_cat           = catalogs,\n+                                         extr_spectra_list = extr_spectra,\n+                                         mdb               = mdb,      \n+                                         config            = config)\n  \n-    # explicit\n-    return comb_spectra\n+    return fits_comb\n # ---------------------------------------------------------------------------- #\n \n \n-## Pipeline ##\n+# ---------------------------------------------------------------------------- #\n+# PIPELINE\n+# ---------------------------------------------------------------------------- #\n @pipeline(outputs=('loc_tables','sci_frames','extr_spectra','comb_spectra'))\n-def sir_pipeline(raw_frame, mdb, nir_dark, nir_badpix, mer_catalog, mer_mosaic,\n-                 mer_segmap, det_scaling, rel_calib, opt_model, ids_model, crv_model,\n-                 abs_calib, sir_config ):\n-\n-    \"\"\"SIR \"Extract\" pipeline\n+def sir_pipeline(raw_frame, \n+                 mer_catalog,\n+                 mer_mosaic,\n+                 mer_segmap,\n+                 mdb, \n+                 det_scaling,\n+                 opt_model,\n+                 crv_model,\n+                 ids_model,\n+                 rel_calib,\n+                 abs_calib,\n+                 nir_dark, \n+                 nir_badpix,\n+                 sir_config ):\n+    \"\"\"SIR \"Process Field\" pipeline\n \n        This pipeline process a single field, intended as an exposure with 4 dithers\n-       to produce extracted spectra objects, divided by tile, according to the tiles \n+       to produce combined 1D spectra objects, divided by tile, according to the tiles \n        covering the observation.\n-       This is the first pipeline to run to produce intermediate SIR results\n-\n-\n-    Returns:\n-        list: _description_\n \n     Warning:\n         For a single observation, tiles are not entirely covered. This means that \n@@ -207,54 +251,53 @@ def sir_pipeline(raw_frame, mdb, nir_dark, nir_badpix, mer_catalog, mer_mosaic,\n         by the \"combine pipeline\"\n     \"\"\"\n \n-    cutouts = sirCreateCut(cat    = mer_catalog,\n-                           mosaic = mer_mosaic,\n-                           segmap = mer_segmap)\n+    cutouts = sir_create_cut(cat    = mer_catalog,\n+                             mosaic = mer_mosaic,\n+                             segmap = mer_segmap)\n \n-    frames = sir_preprocessing(raw_dithers = raw_frame,\n-                               masterdark  = nir_dark,\n-                               badpixel    = nir_badpix,\n+    frames = sir_preprocessing(raw_frames  = raw_frame,\n+                               dark        = nir_dark,\n+                               badpix      = nir_badpix,\n+                               det_scaling = det_scaling,\n                                mdb         = mdb,\n                                config      = sir_config)\n+    \n+    loc_and_frames = sir_processing(sci_frames = frames,\n+                                    catalog    = mer_catalog,\n+                                    opt_model  = opt_model,\n+                                    ids_model  = ids_model,\n+                                    crv_model  = crv_model,\n+                                    mdb        = mdb,\n+                                    sirconfig  = sir_config)\n+\n+\n+    loc_tables_by_detector, sci_frames, loc_tables = splitLocTable(input_json = loc_and_frames)\n+\n+\n+    deco_spectra = sir_decontamination(loc_tables = loc_tables_by_detector,\n+                                       sci_frames = sci_frames,\n+                                       cutouts    = cutouts,\n+                                       mdb        = mdb,\n+                                       config     = sir_config)\n+\n+\n+    extr_spectra = sir_extraction(loc_table    = loc_tables,\n+                                  dec_spectra  = deco_spectra,\n+                                  sci_frames   = sci_frames,\n+                                  cutouts      = cutouts,\n+                                  catalog      = mer_catalog,\n+                                  rel_calib    = rel_calib,\n+                                  abs_calib    = abs_calib,\n+                                  mdb          = mdb,\n+                                  config       = sir_config)\n+        \n \n-    qe_frames = detectorScaling(sci_frames     = frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb            = mdb)\n-\n-    loc_and_frames = sir_processing(sci_frame = qe_frames,\n-                                    source_catalog = mer_catalog,\n-                                    opt_model = opt_model,\n-                                    ids_model = ids_model,\n-                                    crv_model = crv_model,\n-                                    mdb       = mdb,                                   \n-                                    sirconfig = sir_config)\n-\n-    sorted_loc_tables, sci_frames, loc_tables = splitLocTable(input_json = loc_and_frames)\n-\n-\n-    deco_spectra = sir_decontamination(loc_table = sorted_loc_tables,\n-                                       sci_frame = sci_frames,\n-                                       cutouts   = cutouts,\n-                                             mdb = mdb,\n-                                       sirconfig = sir_config)\n-\n-\n-    extr_spectra = sir_extraction(sci_frame = deco_spectra,\n-                                  loc_table = loc_tables,\n-                                  source_catalog = mer_catalog,\n-                                  rel_calib  = rel_calib,\n-                                  abs_calib = abs_calib,\n-                                  mdb       = mdb,\n-                                  sirconfig = sir_config)\n-\n-    comb_spectra = sir_combination(extr_spectra = extr_spectra,\n-                                   source_catalog = mer_catalog,\n+    comb_spectra = sir_combination(catalogs     = mer_catalog,\n+                                   extr_spectra = extr_spectra,\n                                    mdb          = mdb,\n-                                   sirconfig    = sir_config)\n+                                   config       = sir_config)\n \n     return loc_tables, sci_frames, extr_spectra, comb_spectra\n-\n-        \n # ---------------------------------------------------------------------------- #\n \n \n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Process_Field_Tu/PipDef_SIR_Process_Field_Tu.xml": [
                        [
                            "@@ -1,30 +1,25 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n-    <EdenVersion>@EDEN@</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n     <Id>SIR_Process_Field_TU_@CMAKE_PROJECT_VERSION@</Id>\n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n     <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n-    <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n     <PipelineScriptPath>SIR_Process_Field_Tu/PipScript_SIR_Process_Field_Tu.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n \n-    <InputDataSet>\n-\n+    <InputDataSetPlan>\n <!-- raw_frames -->\n         <KeyProductInputDataPlan>\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n-                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n-                (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n-                (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n-                (raw_frame.Data.GrismWheelTilt == \"UNKNOWN\") AND\n-                (raw_frame.Data.ObservationSequence.Exposure == UNKNOWN) AND\n+                (raw_frame.Header.ManualValidationStatus          != \"INVALID\")       AND\n+                (raw_frame.Header.DataSetRelease                  == \"UNKNOWN\")       AND\n+                (raw_frame.Data.ImgType.Technique                 == \"SPECTROIMAGE\")  AND\n+                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN)         AND\n+                (raw_frame.Data.ObservationSequence.PointingId    == UNKNOWN)         AND\n+                (raw_frame.Data.GrismWheelPos                     == \"UNKNOWN\")       AND\n+                (raw_frame.Data.GrismWheelTilt                    == \"UNKNOWN\")       AND\n+                (raw_frame.Data.ObservationSequence.Exposure      == UNKNOWN)         AND\n                 (raw_frame.Data.ObservationSequence.TotalExposure == UNKNOWN)\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -34,6 +29,25 @@\n             </Cardinality>\n         </KeyProductInputDataPlan>\n \n+<!-- TU Catalog -->\n+        <InputDataPlan>\n+            <InputPortName>tu_cat</InputPortName>\n+            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n+            <InputQuerySpecPlan>\n+                (tu_cat.Header.ManualValidationStatus     !=   \"INVALID\") AND\n+                (tu_cat.Header.DataSetRelease             ==   \"UNKNOWN\") AND\n+                (tu_cat.Header.PPOId                      ==   \"UNKNOWN\") AND\n+                (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n+                (tu_cat.Data.EuclidPointingId             ==   \"UNKNOWN\") AND\n+                (tu_cat.Data.MagnitudeLimit               !=   \"UNKNOWN\")\n+            </InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>120</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+\n <!-- MDB -->\n         <InputDataPlan>\n             <InputPortName>mdb</InputPortName>\n@@ -42,12 +56,16 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\",\n-                    \"EUC_NISP_Saturation*\",\n-                    \"EUC_NISP_SINGLEFRAMEOUT*\",\n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n-                    \"NISP_GrismTransmission*\",\n-                    \"NISPDetector*\"\n+                    \"EUC_NISP_NLSPECTRO*\" ,\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n+                    \"NISP_GrismTransmission*\" ,\n+                    \"NISPDetector*\",\n+                    \"NISPHTransmissionCurves*\",\n+                    \"NISPJTransmissionCurves*\",\n+                    \"NISPYTransmissionCurves*\",\n+                    \"PLMTransmissionNISPNominalEOLCBE*\"\n                 </FilesToInclude>\n             </FileFiltering>\n             <Cardinality>\n@@ -62,7 +80,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n+                (sir_config.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -77,7 +95,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n+                (opt_model.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -87,13 +105,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- IDS Sir Configuration -->\n+<!-- CRV Sir Configuration -->\n         <InputDataPlan>\n-            <InputPortName>ids_model</InputPortName>\n-            <DataProductType>DpdSirIdsModel</DataProductType>\n+            <InputPortName>crv_model</InputPortName>\n+            <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (crv_model.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -102,13 +120,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- CRV Sir Configuration -->\n+<!-- IDS Sir Configuration -->\n         <InputDataPlan>\n-            <InputPortName>crv_model</InputPortName>\n-            <DataProductType>DpdSirCrvModel</DataProductType>\n+            <InputPortName>ids_model</InputPortName>\n+            <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n-                (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (ids_model.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -117,13 +135,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- Detector scaling -->\n+<!-- Relative Flux scaling -->\n         <InputDataPlan>\n-            <InputPortName>det_scaling</InputPortName>\n-            <DataProductType>DpdSirDetectorScaling</DataProductType>\n+            <InputPortName>rel_calib</InputPortName>\n+            <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n-                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n+              (rel_calib.Header.ManualValidationStatus  != \"INVALID\") AND\n+              (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -137,7 +155,7 @@\n             <InputPortName>abs_calib</InputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n+                (abs_calib.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -147,13 +165,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- Relative Flux scaling -->\n+<!-- Detector scaling -->\n         <InputDataPlan>\n-            <InputPortName>rel_calib</InputPortName>\n-            <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n+            <InputPortName>det_scaling</InputPortName>\n+            <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n-                (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (det_scaling.Header.ManualValidationStatus  != \"INVALID\") AND\n+                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -167,7 +185,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n+                (nir_dark.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -182,7 +200,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n+                (nir_badpix.Header.ManualValidationStatus  != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -192,41 +210,10 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- TU Catalog -->\n-        <InputDataPlan>\n-            <InputPortName>tu_cat</InputPortName>\n-            <DataProductType>DpdTrueUniverseOutput</DataProductType>\n-            <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n-                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n-                (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n-                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>30</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-\n-<!-- mah... to pass the tests.... -->\n-        <Dependencies>\n-            <GroupedBy>raw_frame.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <LinkedBy refPort=\"tu_cat\">\n-                <Query>raw_frame.Header.PPOId == tu_cat.Header.PPOId</Query>\n-            </LinkedBy>\n-            <LinkedBy refPort=\"tu_cat\">\n-                <Query>raw_frame.Header.PPOId == tu_cat.Header.PPOId</Query>\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet>\n-\n+    </InputDataSetPlan>\n \n     <OutputDataSet>\n-\n-    <!-- SIR Location Table: side product -->\n+<!-- SIR Location Table: side product -->\n         <OutputDataProduct>\n             <OutputPortName>loc_tables</OutputPortName>\n             <DataProductType>DpdSirLocationTable</DataProductType>\n@@ -237,10 +224,10 @@\n             </Cardinality>\n         </OutputDataProduct>\n \n-    <!-- SIR Extracted Spectra: INTERMEDIATE products for EXTRACT/COMBINE pipelines -->\n+<!-- SIR Science Frame background subtracted: side product -->\n         <OutputDataProduct>\n-            <OutputPortName>extr_spectra</OutputPortName>\n-            <DataProductType>DpdSirExtractedSpectraCollection</DataProductType>\n+            <OutputPortName>sci_frames</OutputPortName>\n+            <DataProductType>DpdSirScienceFrame</DataProductType>\n             <Cardinality>\n                 <Optionality>OPTIONAL</Optionality>\n                 <Min>0</Min>\n@@ -248,10 +235,10 @@\n             </Cardinality>\n         </OutputDataProduct>\n \n-    <!-- SIR Science Frame background subtracted: side product -->\n+<!-- SIR Extracted Spectra: INTERMEDIATE products when pipelines will be divided -->\n         <OutputDataProduct>\n-            <OutputPortName>sci_frames</OutputPortName>\n-            <DataProductType>DpdSirScienceFrame</DataProductType>\n+            <OutputPortName>extr_spectra</OutputPortName>\n+            <DataProductType>DpdSirExtractedSpectraCollection</DataProductType>\n             <Cardinality>\n                 <Optionality>OPTIONAL</Optionality>\n                 <Min>0</Min>\n@@ -259,8 +246,7 @@\n             </Cardinality>\n         </OutputDataProduct>\n \n-\n-    <!-- SIR Combined Spectra: main product for customers-->\n+<!-- SIR Combined Spectra: main product for customers-->\n         <OutputDataProduct>\n             <OutputPortName>comb_spectra</OutputPortName>\n             <DataProductType>DpdSirCombinedSpectra</DataProductType>\n@@ -272,7 +258,7 @@\n         </OutputDataProduct>\n \n     </OutputDataSet>\n+\n     <EstimatedWorkdirSizeGB>200</EstimatedWorkdirSizeGB>\n \n </tsk1:PipelineDef>\n-\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ],
                        [
                            "@@ -1,15 +1,15 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Process_Field_TU_@CMAKE_PROJECT_VERSION@</Id> \n+    <Id>SIR_Process_Field_TU_@CMAKE_PROJECT_VERSION@</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n     <PipelineScriptPath>SIR_Process_Field_Tu/PipScript_SIR_Process_Field_Tu.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n- \n+\n     <InputDataSet>\n \n <!-- raw_frames -->\n@@ -17,10 +17,15 @@\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n+                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n+                (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n+                (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n+                (raw_frame.Data.GrismWheelTilt == \"UNKNOWN\") AND\n+                (raw_frame.Data.ObservationSequence.Exposure == UNKNOWN) AND\n+                (raw_frame.Data.ObservationSequence.TotalExposure == UNKNOWN)\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -37,11 +42,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\", \n-                    \"EUC_NISP_Saturation*\", \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\", \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\", \n-                    \"NISP_GrismTransmission*\", \n+                    \"EUC_NISP_H2RG-NONLINEARITY*\",\n+                    \"EUC_NISP_Saturation*\",\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\",\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n+                    \"NISP_GrismTransmission*\",\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -57,7 +62,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -72,7 +77,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -87,7 +92,7 @@\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -102,7 +107,7 @@\n             <InputPortName>crv_model</InputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -117,7 +122,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -132,7 +137,7 @@\n             <InputPortName>abs_calib</InputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n                 (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -147,7 +152,7 @@\n             <InputPortName>rel_calib</InputPortName>\n             <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+                (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n                 (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -162,7 +167,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -177,7 +182,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -192,8 +197,10 @@\n             <InputPortName>tu_cat</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n             <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND \n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n+                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n+                (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n                 (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -1,15 +1,15 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Process_Field_TU_@CMAKE_PROJECT_VERSION@</Id> \n+    <Id>SIR_Process_Field_TU_@CMAKE_PROJECT_VERSION@</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n     <PipelineScriptPath>SIR_Process_Field_Tu/PipScript_SIR_Process_Field_Tu.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n- \n+\n     <InputDataSet>\n \n <!-- raw_frames -->\n@@ -17,10 +17,15 @@\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n+                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n+                (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n+                (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n+                (raw_frame.Data.GrismWheelTilt == \"UNKNOWN\") AND\n+                (raw_frame.Data.ObservationSequence.Exposure == UNKNOWN) AND\n+                (raw_frame.Data.ObservationSequence.TotalExposure == UNKNOWN)\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -37,11 +42,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\", \n-                    \"EUC_NISP_Saturation*\", \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\", \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\", \n-                    \"NISP_GrismTransmission*\", \n+                    \"EUC_NISP_H2RG-NONLINEARITY*\",\n+                    \"EUC_NISP_Saturation*\",\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\",\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n+                    \"NISP_GrismTransmission*\",\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -57,7 +62,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -72,7 +77,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -87,7 +92,7 @@\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -102,7 +107,7 @@\n             <InputPortName>crv_model</InputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -117,7 +122,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -132,7 +137,7 @@\n             <InputPortName>abs_calib</InputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n                 (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -147,7 +152,7 @@\n             <InputPortName>rel_calib</InputPortName>\n             <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+                (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n                 (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -162,7 +167,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -177,7 +182,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -192,8 +197,10 @@\n             <InputPortName>tu_cat</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n             <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND \n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n+                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n+                (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n                 (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -1,15 +1,15 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Process_Field_TU_@CMAKE_PROJECT_VERSION@</Id> \n+    <Id>SIR_Process_Field_TU_@CMAKE_PROJECT_VERSION@</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n     <PipelineScriptPath>SIR_Process_Field_Tu/PipScript_SIR_Process_Field_Tu.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n- \n+\n     <InputDataSet>\n \n <!-- raw_frames -->\n@@ -17,10 +17,15 @@\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n+                (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n+                (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n+                (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n+                (raw_frame.Data.GrismWheelTilt == \"UNKNOWN\") AND\n+                (raw_frame.Data.ObservationSequence.Exposure == UNKNOWN) AND\n+                (raw_frame.Data.ObservationSequence.TotalExposure == UNKNOWN)\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -37,11 +42,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\", \n-                    \"EUC_NISP_Saturation*\", \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\", \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\", \n-                    \"NISP_GrismTransmission*\", \n+                    \"EUC_NISP_H2RG-NONLINEARITY*\",\n+                    \"EUC_NISP_Saturation*\",\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\",\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\",\n+                    \"NISP_GrismTransmission*\",\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -57,7 +62,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -72,7 +77,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -87,7 +92,7 @@\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -102,7 +107,7 @@\n             <InputPortName>crv_model</InputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -117,7 +122,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -132,7 +137,7 @@\n             <InputPortName>abs_calib</InputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n                 (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -147,7 +152,7 @@\n             <InputPortName>rel_calib</InputPortName>\n             <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+                (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n                 (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -162,7 +167,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -177,7 +182,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -192,8 +197,10 @@\n             <InputPortName>tu_cat</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n             <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND \n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n+                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n+                (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n                 (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Process_Field_Tu/PipScript_SIR_Process_Field_Tu.py": [
                        [
                            "@@ -1,7 +1,15 @@\n # ---------------------------------------------------------------------------- #\n-# Pipeline definition for SIR pipeline \"Process Field TU\" \n-# This pipeline is a combination equivalent of SIR_Process_Field but \n-# using TU as surces catalog instead of MER catalog\n+# SIR pipeline for Simulation observation to Extract Spectra using TU\n+#\n+# Field: Simulation\n+#\n+# Catalog: TU \n+#\n+# Date: August 2023\n+#\n+# Test science processing\n+# ---------------------------------------------------------------------------- #\n+# This pipeline is a combination of Extract_Spectra and Combine_Spectra wityh TU\n # ---------------------------------------------------------------------------- #\n \n from euclidwf.framework.workflow_dsl import pipeline\n@@ -9,31 +17,36 @@ from euclidwf.framework.workflow_dsl import parallel\n from PackageDef_SIR import *\n \n \n-@parallel(iterable='raw_dithers', flatten_all='True')\n-def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n+@parallel(iterable='raw_frames', flatten_all='True')\n+def sir_preprocessing(raw_frames, mdb, dark, badpix, det_scaling, config):\n     \"\"\"SIR pre-processing block\n \n-        This pipeline block prepare science-frame objects applying corrections\n-        and subtracking dark\n-    \n+        SIR pipeline block that prepares science_frame objects applying corrections,\n+        and rotating detectors layout of LE1 raw-frames \n+\n     Args:\n-        raw_dithers (xml): NISP raw-frame image object\n-        mdb (xml): Mission DataBase\n-        masterdark (xml): NIR DpdNirMasterDarkFrame image object\n-        badpixel (xml): NIR DpdNirBadPixelMask mask object\n+        raw_frames (XML list): Level 1 NISP DpdNispRawFrame image objects\n+        mdb (XML): DpdMdbDataBase object\n+        dark (XML): NIR DpdNirMasterDarkFrame image object\n+        badpix (XML): NIR DpdNirBadPixelMask mask object\n+        det_scaling (XML): QE correction SIR calibration object\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n \n     Returns:\n         list: DpdSirScienceFrame dark-subtracted and corrected objects\n-    \n+\n     Note:\n-        Is executed in parallel on the input DITHERS (DpdNispRawFrame)\n+        Is executed in parallel on the independent input raw_frames (DpdNispRawFrame)\n+\n+    Warning:\n+        The output frames have rotated detector layout after SIR_init step        \n     \"\"\"\n \n-    initialized_expo, chi2 = nir_initalize(infile  = raw_dithers,\n+    initialized_expo, chi2 = nir_initalize(infile  = raw_frames,\n                                            mdbfile = mdb)\n \n     badpixmasked_expo = mask_badpixel(infile  = initialized_expo,\n-                                      xmlfile = badpixel)\n+                                      xmlfile = badpix)\n \n     saturamasked_expo = mask_saturation(infile  = badpixmasked_expo,\n                                         xmlfile = mdb)\n@@ -42,131 +55,148 @@ def sir_preprocessing(raw_dithers, mdb, masterdark, badpixel, config):\n                                           xmlfile = mdb)\n \n     darksubtract_expo = subtract_dark(infile     = nonlineacorr_expo,\n-                                      masterdark = masterdark)\n+                                      masterdark = dark)\n \n-    crreject_expo     = cr_rejection(grism    = darksubtract_expo,\n-                                     chi2file = chi2,\n-                                     config   = config)\n+    cr_rejected_expo  = cosmic_rejection(grism    = darksubtract_expo,\n+                                         chi2file = chi2,\n+                                         config   = config)\n+    \n+    qe_corrected_expo = detector_scaling(sci_frame_fits = cr_rejected_expo,\n+                                         zodiacal_light = det_scaling,\n+                                         mdb = mdb)\n \n-    science_frame = end_preprocessing(fits_file = crreject_expo,\n-                                      le1_dp    = raw_dithers,\n-                                      mdb       = mdb)\n+    science_frame     = sir_initialize(fits_file = qe_corrected_expo,\n+                                       le1_dp    = raw_frames,\n+                                       mdb       = mdb)\n \n-    # explicit\n     return science_frame\n # ---------------------------------------------------------------------------- #\n \n \n-@parallel(iterable='sci_frame',flatten_all=True)\n-def sir_processing(sci_frame, source_catalog, opt_model, ids_model, crv_model, mdb, sirconfig):\n-    \"\"\"_SIR processiong block\n+@parallel(iterable='sci_frames',flatten_all=True)\n+def sir_processing(sci_frames, catalog, opt_model, ids_model, crv_model, mdb, config):\n+    \"\"\"SIR processiong block\n+\n+        SIR pipeline block computing location tables and preparing background \n+        subtracted science-frames (images) needed for spectra extraction\n \n-        This pipeline block prepare science-frame subtracting background and\n-        prepare location tables for spectra extraction\n-        \n     Args:\n-        science_frame (DpdSirScienceFrame): preprocessed image\n-        source_catalog (DpdMerFinalCatalog): Catalog of sources\n-        mdb (DpdMdbDataBase): Mission \"database\" OBJECT (LoL)\n-        opt_model (DpdSirOptModel): OPT model calibration\n-        ids_model (DpdSirIdsModel): IDS model calibration\n-        crv_model (DpdSirCrvModel): CRV model calibration\n-        sirconfig (DpdSirConfigurationSet): pipeline configuration ini files\n+        sci_frames (XML list): SIR preprocessed DpdSirScienceFrame images\n+        catalog (XML list): DpdTrueUniverseOutput or DpdMerFinalCatalog catalog of sources objects\n+        mdb (XML): DpdMdbDataBase object\n+        opt_model (XML): SIR DpdSirOptModel optical model\n+        ids_model (XML): SIR DpdSirIdsModel inverse dipersion solution model\n+        crv_model (XML): SIR DpdSirCrvModel curvature model\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n \n     Returns:\n-        tuple: (\"location_table\" DpdSirLocationTable objects, \n-                \"science_frame\" DpdSirScienceFrame objects background subtracted)\n-        \n+        tuple: (<DpdSirLocationTable> up to 16 objects, \n+                <DpdSirScienceFrame> 1 background subtracted object)\n+\n     Note:\n-        It's executed in parallel on science_frame objects\n+        It's executed in parallel on sci_frames objects\n     \"\"\"\n \n-    locations_table = locate_spectra_tu(sci_frame = sci_frame,\n-                                     opt_model = opt_model,\n-                                     ids_model = ids_model,\n-                                     crv_model = crv_model,\n-\t                \t                 tu_cat    = source_catalog,\n-                                     mdb       = mdb,\n-                                     config    = sirconfig)\n+    locations_table = locate_spectra_tu(sci_frame = sci_frames,\n+                                        opt_model = opt_model,\n+                                        ids_model = ids_model,\n+                                        crv_model = crv_model,\n+\t                \t                tu_cat    = catalog,\n+                                        mdb       = mdb,\n+                                        config    = config)\n \n-    bkgsub_sci_frame = subtract_bkg_tu(sci_frame = sci_frame,\n-                                    loc_table = locations_table,\n-                                    tu_cat    = source_catalog,\n-                                    config    = sirconfig)\n+    bkgsub_sci_frame = subtract_bkg_tu(sci_frame = sci_frames,\n+                                       loc_table = locations_table,\n+                                       tu_cat    = catalog,\n+                                       config    = config)\n \n \n     return locations_table, bkgsub_sci_frame\n # ---------------------------------------------------------------------------- #\n \n \n-@parallel(iterable='loc_table', flatten_all='True')\n-def sir_decontamination(loc_table, sci_frame, mdb, sirconfig):\n+@parallel(iterable='loc_tables', flatten_all='True')\n+def sir_decontamination(loc_tables, sci_frames, mdb, config):\n+    \"\"\"SIR decontamination block\n+\n+        SIR pipeline block that decontaminate spectra\n+\n+    Args:\n+        loc_tables (list of lists): list of DpdSirLocationTable objects grouped by detector\n+        sci_frames (XML list): SIR processed (background subtracted) DpdSirScienceFrame images\n+        mdb (XML): DpdMdbDataBase object\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n+\n+    Returns:\n+        H5: Decontaminated spectra object for each location table\n \n-    dec_spectra = apply_decontamination_tu(sci_frame = sci_frame,\n-                                           loc_table = loc_table,\n-                                             mdb     = mdb,\n-                                             config  = sirconfig)\n+    Note:\n+        It's executed in parallel on loc_tables objects\n+    \"\"\"\n+    dec_spectra = apply_decontamination_tu(sci_frame = sci_frames,\n+                                           loc_table = loc_tables,\n+                                           mdb       = mdb,\n+                                           config    = config)\n \n     return dec_spectra\n # ---------------------------------------------------------------------------- #\n \n \n-@parallel(iterable='loc_table', flatten_all='True')\n-def sir_extraction(loc_table, sci_frame, mdb, source_catalog, rel_calib, abs_calib, sirconfig):\n+@parallel(iterable='loc_tables', flatten_all='True')\n+def sir_extraction(loc_tables, dec_spectra, mdb, catalog, rel_calib, abs_calib, config):\n     \"\"\"SIR extraction block\n \n-        This pipeline block extract spectra from images and apply decontamination,\n-        relative and absolute flux calibration \n+        SIR pipeline block that extract spectra and apply relative flux correction.\n+        Only relative flux calibration is applied to the extraxcted spectra in\n+        the ABS calibration pipeline\n \n     Args:\n-        loc_table (DpdSirLocationTable): SIR objects location table product\n-        sci_frame (DpdSirScienceFrame): cleaned and background subtracted image\n-        mdb (DpdMdbDataBase): Mission \"database\" OBJECT (LoL)\n-        source_catalog (DpdTrueUniverseOutput): Catalog of sources\n-        rel_flux (DpdSirRelativeFluxScaling): relative flux calibration object\n-        abs_calib (DpdSirAbsoluteFluxScaling): absolute calibration sensitvity object\n-        sirconfig (DpdSirConfigurationSet): pipeline configuration ini files\n+        loc_tables (list XML): DpdSirLocationTable objects\n+        dec_spectra (list XML): list of  \n+        sci_frames (XML list): SIR processed (background subtracted) DpdSirScienceFrame images\n+        mdb (XML): DpdMdbDataBase object\n+        catalog (XML list): DpdTrueUniverseOutput catalog of sources objects\n+        rel_flux (XML): SIR DpdSirRelativeFluxScaling relative flux calibration model\n+        abs_flux (XML): SIR DpdSirAbsoluteFluxScaling absolute flux calibration model\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n \n     Returns:\n-        list: DpdSirExtractedSpectraCollection objects, with extracted spectra organized \n-              by tile\n+        list: DpdSirExtractedSpectraCollection objects organized in MER tiles\n \n     Note:\n-        It's executed in parallel on location_table objects\n+        It's executed in parallel on loc_tables objects\n     \"\"\"\n \n-\n-    extr_spec = extract_spectra_tu(loc_table   = loc_table,\n-                                   dec_spectra = sci_frame,\n-                                   tu_cat      = source_catalog,\n+    extr_spec = extract_spectra_tu(loc_table   = loc_tables,\n+                                   dec_spectra = dec_spectra,\n+                                   tu_cat      = catalog,\n                                    mdb         = mdb,\n-                                   config      = sirconfig)\n+                                   config      = config)\n \n     relflux_spec = relflux_correction(extr_spectra_list = extr_spec,\n                                       ms_flat           = rel_calib,\n-                                      config            = sirconfig)\n+                                      mdbfile           = mdb,\n+                                      config            = config)\n \n     absflux_spec = absflux_correction(extr_spectra_list = relflux_spec,\n                                       sens              = abs_calib,\n                                       mdb               = mdb)\n \n-    # explicit\n     return absflux_spec\n # ---------------------------------------------------------------------------- #\n \n \n-@parallel(iterable='source_catalog', flatten_all='True')\n-def sir_combination(extr_spectra, mdb, source_catalog, sirconfig):\n+@parallel(iterable='catalogs', flatten_all='True')\n+def sir_combination(catalogs, extr_spectra, mdb, config):\n     \"\"\"SIR combination block\n \n        This pipeline block combine extracted spectra according to the tile \n \n     Args:\n-        extr_spectra (DpdSirExtractedSpectraCollection): objects with extracted spectra organized \n-              by tile\n-        mdb (DpdMdbDataBase): Mission \"database\" OBJECT (LoL)\n-        source_catalog (DpdTrueUniverseOutput): Catalog of sources\n-        sirconfig (DpdSirConfigurationSet): pipeline configuration ini files\n+        catalogs (DpdTrueUniverseOutput): Catalog of sources\n+        extr_spectra (DpdSirExtractedSpectraCollection): objects with extracted spectra \n+        mdb (XML): DpdMdbDataBase object\n+        config (XML): SIR pipeline DpdSirConfigurationSet configuration object with PE(s) ini files\n \n     Returns:\n         list: DpdSirCombinedSpectra objects, organized by tile\n@@ -174,89 +204,76 @@ def sir_combination(extr_spectra, mdb, source_catalog, sirconfig):\n     Note:\n         It's executed in parallel on the catalog (tiles)    \n     \"\"\"\n-    h5_combined_spectra = combine_spectra_tu(tu_cat = source_catalog,\n-                                          extr_spectra_list = extr_spectra,\n-                                          mdb = mdb,\n-                                          config = sirconfig)\n-\n-    fits_combined_spectra = sir_create_SPE_fits_tu(comb_spectra = h5_combined_spectra,\n-                                                   config = sirconfig)\n-\n-\n-    return fits_combined_spectra\n-\n+    h5_comb, fits_comb = combine_spectra(mer_cat           = catalogs,\n+                                         extr_spectra_list = extr_spectra,\n+                                         mdb               = mdb,      \n+                                         config            = config)\n+ \n+    return fits_comb\n # ---------------------------------------------------------------------------- #\n \n \n-## Pipeline ##\n+# ---------------------------------------------------------------------------- #\n+# PIPELINE\n+# ---------------------------------------------------------------------------- #\n @pipeline(outputs=('loc_tables','sci_frames','extr_spectra','comb_spectra'))\n-def sir_pipeline(raw_frame, mdb, nir_dark, nir_badpix, tu_cat,\n-                 det_scaling, rel_calib, opt_model, ids_model, crv_model,\n-                 abs_calib, sir_config ):\n-\n-    \"\"\"SIR \"Process Field TU\" pipeline\n+def sir_pipeline(raw_frame, \n+                 tu_cat,\n+                 mdb, \n+                 det_scaling,\n+                 opt_model,\n+                 crv_model,\n+                 ids_model,\n+                 rel_calib,\n+                 abs_calib,\n+                 nir_dark, \n+                 nir_badpix,\n+                 sir_config ):\n+\n+    \"\"\"SIR \"Process Field\" pipeline\n \n        This pipeline process a single field, intended as an exposure with 4 dithers\n-       to produce combined spectra object divided by tile, according to the tiles \n-       covering the observation.\n+       to produce combined 1D spectra objects, divided by catalog, according to the \n+       catalogs covering the observation.\n        This pipeline use the TU as catalog of sources\n-\n-\n-    Returns:\n-        _type_: _description_\n-\n-    Warning:\n-        For a single observation, tiles are not entirely covered. This means that \n-        nearby observations processed independently produce \"combined spectra\" objects\n-        associated to the same tile, partially covering it\n-\n-        To ensure coverage of the tiles (i.e. unique \"combined spectra\" objects)\n-        use the \"SIR_Extract_Spectra pipeline\" on all nearby observations covering\n-        tiles and then \"SIR_Combine_Spectra\" pipeline to produce unique combined \n-        spectra objects per tile\n-\n     \"\"\"\n \n-    frames = sir_preprocessing(raw_dithers = raw_frame,\n-                               masterdark  = nir_dark,\n-                               badpixel    = nir_badpix,\n+    frames = sir_preprocessing(raw_frames  = raw_frame,\n+                               dark        = nir_dark,\n+                               badpix      = nir_badpix,\n+                               det_scaling = det_scaling,\n                                mdb         = mdb,\n                                config      = sir_config)\n+    \n+    loc_and_frames = sir_processing(sci_frames = frames,\n+                                    catalog    = tu_cat,\n+                                    opt_model  = opt_model,\n+                                    ids_model  = ids_model,\n+                                    crv_model  = crv_model,\n+                                    mdb        = mdb,\n+                                    sirconfig  = sir_config)\n \n-    qe_frames = detectorScaling(sci_frames     = frames,\n-                                zodiacal_light = det_scaling,\n-                                mdb            = mdb)\n-\n-    loc_and_frames = sir_processing(sci_frame = qe_frames,\n-                                    source_catalog = tu_cat,\n-                                    opt_model = opt_model,\n-                                    ids_model = ids_model,\n-                                    crv_model = crv_model,\n-                                    mdb       = mdb,                                   \n-                                    sirconfig = sir_config)\n-\n-    sorted_loc_tables, sci_frames, loc_tables = splitLocTable(input_json = loc_and_frames)\n+    loc_tables_by_detector, sci_frames, loc_tables = splitLocTable(input_json = loc_and_frames)\n \n  \n-    deco_spectra = sir_decontamination(loc_table = sorted_loc_tables,\n-                                       sci_frame = sci_frames,\n-                                             mdb = mdb,\n-                                       sirconfig = sir_config)\n-\n-\n-    extr_spectra = sir_extraction(sci_frame = deco_spectra,\n-                                  loc_table = loc_tables,\n-                                  source_catalog = tu_cat,\n-                                  rel_calib  = rel_calib,\n-                                  abs_calib = abs_calib,\n-                                  mdb       = mdb,\n-                                  sirconfig = sir_config)\n+    deco_spectra = sir_decontamination(loc_tables = loc_tables_by_detector,\n+                                       sci_frames = sci_frames,\n+                                       mdb        = mdb,\n+                                       config     = sir_config)\n+\n+    extr_spectra = sir_extraction(loc_table    = loc_tables,\n+                                  dec_spectra  = deco_spectra,\n+                                  sci_frames   = sci_frames,\n+                                  catalog      = tu_cat,\n+                                  rel_calib    = rel_calib,\n+                                  abs_calib    = abs_calib,\n+                                  mdb          = mdb,\n+                                  config       = sir_config)\n         \n-    comb_spectra = sir_combination(source_catalog = tu_cat,\n-                                   extr_spectra   = extr_spectra,\n-                                   mdb            = mdb,\n-                                   sirconfig      = sir_config)\n-\n+    comb_spectra = sir_combination(catalogs     = mer_catalog,\n+                                   extr_spectra = extr_spectra,\n+                                   mdb          = mdb,\n+                                   config       = sir_config)\n \n     return loc_tables, sci_frames, extr_spectra, comb_spectra\n # ---------------------------------------------------------------------------- #\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/doc/Background.md": [
                        [
                            "@@ -1,120 +0,0 @@\n-## Process Background Test Processing Pipeline\n-\n-\n-### Version\n-\n-SIR_IAL_Pipelines > 3.0\n-\n-\n-### Flowchart\n-\n-```mermaid\n-graph LR\n-  linkStyle default interpolate basis\n-\n-  subgraph Query\n-    direction LR\n-\n-    I1> DpdNispRawFrame] -- Query --> QI1\n-    QI1[ManualValidationStatus != 'INVALID' </br> Technique == SPECTROIMAGE </br> DataSetRelease==? </br> ObservationId == ? <\\br> PointingId == ?]\n-    QI1 -- Port -->RI1[/dithers/]\n-\n-    I2> DpdTrueUniverseOutput] -- Query --> QI2\n-    QI2[ManualValidationStatus != 'INVALID' </br> DataSetRelease==? </br> EuclidPointingId == ? <br> PPOId == rawFrame.PPOId] \n-    QI2 -- Port -->RI2[/sourceCatalog/]\n-\n-    I3> DpdNirMasterDarkFrame] -- Query --> QI3\n-    QI3[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n-    QI3 -- Port -->RI3[/masterdark/]\n-\n-    I4> DpdNirBadPixelMask] -- Query --> QI4\n-    QI4[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n-    QI4 -- Port -->RI4[/badpixel/]\n-\n-    I5> DpdMdbDataBase] -- Query --> QI5\n-    QI5[ManualValidationStatus != 'INVALID' </br> ProductId==?] \n-    QI5 -- filter --> FI5\n-    FI5[ EUC_NISP_H2RG-NONLINEARITY* </br> EUC_NISP_Satu* </br> EUC_NISP_SINGLE* </br> EUC_NISP-S_RGSASBUILD_PSF* </br> NISP_Grism* </br> NISPDetectorSlots*] \n-    FI5--> QI5\n-    QI5 -- Port --> RI5[/mdb/]\n-\n-    I6> DpdSirDetectorScaling] -- Query --> QI6\n-    QI6[ManualValidationStatus != 'INVALID' </br> ProductId==?] \n-    QI6 -- Port --> RI6[/det_scaling/]\n-\n-    I7> DpdSirOptModel] -- Query --> QI7\n-    QI7[ManualValidationStatus != 'INVALID' </br> ProductId==?] \n-    QI7 -- Port --> RI7[/opt_model/]\n-\n-    I8> DpdSirIdsModel] -- Query --> QI8\n-    QI8[ManualValidationStatus != 'INVALID' </br> ProductId==?] \n-    QI8 -- Port -->RI8[/ids_model/]\n-\n-    I9> DpdSirCrvModel] -- Query --> QI9\n-    QI9[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n-    QI9 -- Port -->RI9[/crv_model/]\n-\n-    I14> DpdSirConfigurationSet] -- Query --> QI14\n-    QI14[ManualValidationStatus != 'INVALID'  </br> ProductId==?] \n-    QI14 -- Port -->RI14[/sirconfig/]\n-\n-  end\n-\n-  subgraph PPO\n-    RI1  --> I[/Input/]\n-    RI2  --> I\n-    RI3  --> I\n-    RI4  --> I\n-    RI5  --> I\n-    RI6  --> I\n-    RI7  --> I\n-    RI8  --> I\n-    RI9  --> I\n-    RI14 -->I  \n-  end  \n-```\n-```mermaid\n-graph\n-  subgraph PPO\n-    I[/Input/]\n-  end\n-\n-  subgraph Extract[Extract Spectra Pipeline]\n-\n-\n-    subgraph Preprocessing[parallel on dithers]\n-      direction TB\n-      I --> PE1[NIR_runInitialize] \n-      PE1 --> PE2[maskBadpixels]\n-      PE2 --> PE3[maskSaturation]\n-      PE3 --> PE4[correctNonlinearity]\n-      PE4 --> PE5[darkSubtraction]\n-      PE5 --> PE6[CrRejectionSpec]\n-      PE6 --> PE7[SIR_EndPreprocessing]\n-    end\n-  \n-\n-    PE7 --> OI1[\\sci_frames_preprocessed\\]\n-    OI1 --> PE8[SIR_ApplyDetectorScaling] \n-    PE8 --> PE9\n-\n-    subgraph Processing[parallel on dithers]\n-      direction TB\n-      PE9[locate_spectra] \n-      PE9 --> PE10[subtract_bkg]\n-    end\n-\n-    PE10 --> PE11[splitLocTable]\n-    PE11 --> O1[/sci_frames/] \n-\n-\n-  end\n-  O1 --> P1\n-\n-  subgraph Output\n-    direction TB\n-    P1[/DpdSirScienceFrame/]\n-\n-\n-  end  \n-```\n\\ No newline at end of file\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/doc/Combine_Spectra.md": [
                        [
                            "@@ -70,4 +70,5 @@ graph\n   subgraph Output\n     O1 --> P1[/DpdSirCombinedSpectra/]\n   end  \n-```\n\\ No newline at end of file\n+```\n+[Back](../../README.md#sir-ial-pipelines)\n\\ No newline at end of file\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/doc/Extract_Spectra.md": [
                        [
                            "@@ -164,4 +164,5 @@ graph\n     P2[/DpdSirLocationTable/]\n     P3[/DpdSirExtractedSpectraCollection/]\n   end  \n-```\n\\ No newline at end of file\n+```\n+[Back](../../README.md#sir-ial-pipelines)\n\\ No newline at end of file\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/doc/Field.md": [
                        [
                            "@@ -174,4 +174,5 @@ graph\n     P4[/DpdSirCombinedSpectra/]\n \n   end  \n-```\n\\ No newline at end of file\n+```\n+[Back](../../README.md#sir-ial-pipelines)\n\\ No newline at end of file\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/doc/Field_TU.md": [
                        [
                            "@@ -20,64 +20,72 @@ graph LR\n   linkStyle default interpolate basis\n \n   subgraph Query\n-    direction LR\n \n-    I1> DpdNispRawFrame] -- Query --> QI1\n-    QI1[ManualValidationStatus != 'INVALID' </br> Technique == SPECTROIMAGE </br> DataSetRelease==? </br> ObservationId == ?]\n-    QI1 -- Port -->RI1[/dithers/]\n+    I1> DpdNispRawFrame] \n+    QI1[ManualValidationStatus != 'INVALID' </br> Technique == SPECTROIMAGE </br> GrismWheelPos==? </br> GrismWheelTilt==? </br>DataSetRelease==? </br> ObservationId == ? </br> PointingId = ?,?]\n+    RI1[/raw_frame/]\n+    I1-- Query --> QI1 -- Port --> RI1    \n \n-    I2> DpdTrueUniverseOutput] -- Query --> QI2\n+    I2> DpdTrueUniverseOutput] \n     QI2[ManualValidationStatus != 'INVALID' </br> DataSetRelease==? </br> EuclidPointingId == ?] \n-    QI2 -- Port -->RI2[/sourceCatalog/]\n+    RI2[/tu_cat/]\n+    I2 -- Query --> QI2 -- Port -->RI2\n \n-    I3> DpdNirMasterDarkFrame] -- Query --> QI3\n+    I3> DpdMdbDataBase]\n+    FI3[ EUC_NISP_GAIN* </br> EUC_NISP_NLSPECTRO* </br> EUC_NISP_Saturation* </br> EUC_NISP_SINGLEFRAMEOUT* </br> EUC_NISP-S_RGSASBUILD_PSF* </br> NISP_GrismTransmission* </br> NISPDetector*  </br> NISPHTransmissionCurves* </br> NISPJTransmissionCurves* </br> NISPYTransmissionCurves* </br> PLMTransmissionNISPNominalEOLCBE* ]\n     QI3[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n-    QI3 -- Port -->RI3[/masterdark/]\n+    RI3[/mdb/]\n+    I3 -- Query --> QI3 -- Filter --> FI3 -- files --> QI3 -- Port --> RI3\n \n-    I4> DpdNirBadPixelMask] -- Query --> QI4\n+    I4> DpdSirConfigurationSet] \n     QI4[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n-    QI4 -- Port -->RI4[/badpixel/]\n-\n-    I5> DpdMdbDataBase] -- Query --> QI5\n-    QI5[ManualValidationStatus != 'INVALID' </br> ProductId==?] \n-    QI5 -- filter --> FI5\n-    FI5[ EUC_NISP_H2RG-NONLINEARITY* </br> EUC_NISP_Satu* </br> EUC_NISP_SINGLE* </br> EUC_NISP-S_RGSASBUILD_PSF* </br> NISP_Grism* </br> NISPDetectorSlots*] \n-    FI5--> QI5\n-    QI5 -- Port --> RI5[/mdb/]\n-\n-    I6> DpdSirDetectorScaling] -- Query --> QI6\n-    QI6[ManualValidationStatus != 'INVALID' </br> ProductId==?] \n-    QI6 -- Port --> RI6[/det_scaling/]\n-\n-    I7> DpdSirOptModel] -- Query --> QI7\n-    QI7[ManualValidationStatus != 'INVALID' </br> ProductId==?] \n-    QI7 -- Port --> RI7[/opt_model/]\n-\n-    I8> DpdSirIdsModel] -- Query --> QI8\n-    QI8[ManualValidationStatus != 'INVALID' </br> ProductId==?] \n-    QI8 -- Port -->RI8[/ids_model/]\n-\n-    I9> DpdSirCrvModel] -- Query --> QI9\n+    RI4[/sirconfig/]\n+    I4 -- Query --> QI4 -- Port -->RI4\n+\n+    I5> DpdSirOptModel] \n+    QI5[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI5[/opt_model/]\n+    I5 -- Query --> QI5-- Port --> RI5\n+\n+    I6> DpdSirCrvModel] \n+    QI6[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI6[/crv_model/]\n+    I6 -- Query --> QI6-- Port --> RI6\n+\n+    I7> DpdSirIdsModel] \n+    QI7[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI7[/ids_model/]\n+    I7 -- Query --> QI7-- Port --> RI7\n+\n+    I8> DpdSirRelativeFluxScaling] \n+    QI8[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI8[/rel_calib/]\n+    I8 -- Query --> QI8-- Port --> RI8\n+\n+    I9> DpdSirAbsoluteFluxScaling] \n     QI9[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n-    QI9 -- Port -->RI9[/crv_model/]\n+    RI9[/abs_calib/]\n+    I9 -- Query --> QI9-- Port --> RI9\n \n-    I10> DpdSirAbsoluteFluxScaling] -- Query --> QI10\n+    I10> DpdSirDetectorScaling] \n     QI10[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n-    QI10 -- Port -->RI10[/abs_calib/]\n-\n-    I11> DpdSirRelativeFluxScaling] -- Query --> QI11\n-    QI11[ManualValidationStatus != 'INVALID' </br> ProductId==?] \n-    QI11 -- Port -->RI11[/rel_calib/]\n-\n-\n-    I14> DpdSirConfigurationSet] -- Query --> QI14\n-    QI14[ManualValidationStatus != 'INVALID'  </br> ProductId==?] \n-    QI14 -- Port -->RI14[/sirconfig/]\n-\n+    RI10[/det_scaling/]\n+    I10 -- Query --> QI10-- Port --> RI10\n+\n+    I11> DpdNirMasterDarkFrame]\n+    Q11[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI1[/nir_dark/]\n+    I11 -- Query --> Q11-- Port --> RI11\n+    \n+    I12> DpdNirBadPixelMask]\n+    QI12[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI12[/nir_badpix/]\n+    I12 -- Query --> QI12-- Port --> RI12    \n   end\n \n   subgraph PPO\n-    RI1  --> I[/Input/]\n+    I[/Input/]\n+    RI1  --> I \n     RI2  --> I\n     RI3  --> I\n     RI4  --> I\n@@ -86,10 +94,9 @@ graph LR\n     RI7  --> I\n     RI8  --> I\n     RI9  --> I\n-    RI10  --> I\n+    RI10 --> I\n     RI11 --> I\n-\n-    RI14 -->I  \n+    RI12 --> I\n   end  \n ```\n ```mermaid\n@@ -100,7 +107,7 @@ graph\n \n   subgraph Extract[Extract Spectra Pipeline]\n \n-    subgraph Preprocessing[parallel on dithers]\n+    subgraph Preprocessing[Preprocessing - parallel on frames]\n       direction TB\n       I --> PE1[NIR_runInitialize] \n       PE1 --> PE2[maskBadpixels]\n@@ -116,7 +123,7 @@ graph\n     OI1 --> PE8[SIR_ApplyDetectorScaling] \n     PE8 --> PE9\n \n-    subgraph Processing[parallel on dithers]\n+    subgraph Processing[Processing - parallel on frames]\n       direction TB\n       PE9[locate_spectra] \n       PE9 --> PE10[subtract_bkg]\n@@ -125,14 +132,14 @@ graph\n     PE11 --> O1[/sci_frames/]\n     PE11 --> O2[/loc_tables/] \n     PE10 --> PE11[splitLocTable] --> PE12\n-    subgraph Decontamination[parallel on LocationTables by detectors]\n+    subgraph Decontamination[Decontamination - parallel on loc_tables by detectors]\n       direction TB\n       PE12[apply_decontamination] \n     end    \n \n     PE12 --> PE13\n \n-    subgraph Extraction[parallel on LocationTables]\n+    subgraph Extraction[Extraction - parallel on ALL loc_tables]\n       direction TB\n       PE13[extract_spectra] \n       PE13 --> PE14[relflux_correction]\n@@ -144,7 +151,7 @@ graph\n \n \n   subgraph Combine [Combine Spectra Pipeline]\n-    subgraph Combination [parallel on sourceCatalog]\n+    subgraph Combination [Combination - parallel on sourceCatalog]\n       direction TB\n       PE16[combine_spectra] \n       PE16 --> OI2[\\H5 combined Spectra\\]\n@@ -168,4 +175,5 @@ graph\n     P4[/DpdSirCombinedSpectra/]\n \n   end  \n-```\n\\ No newline at end of file\n+```\n+[Back](../../README.md#sir-ial-pipelines)\n\\ No newline at end of file\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/doc/calib_abs_tu.md": [
                        [
                            "@@ -0,0 +1,173 @@\n+## Absolute Flux Calibration TU \n+\n+Pipeline to test ABS flux calib using TU catalogs\n+\n+### Version\n+\n+SIR_IAL_Pipelines > 4.0\n+\n+### Resources\n+\n+Nominal precessing: 80 exposures per grism up to 400 exposures (80x5 grisms RGS + BGS)\n+\n+* Memory:\n+* Time: \n+* Workspace: \n+\n+### Flowchart\n+\n+```mermaid\n+graph LR\n+  linkStyle default interpolate basis\n+\n+  subgraph Query\n+\n+    I1> DpdNispRawFrame] \n+    QI1[ManualValidationStatus != 'INVALID' </br> Technique == SPECTROIMAGE </br> GrismWheelPos==? </br> GrismWheelTilt==? </br>DataSetRelease==? </br> ObservationId == ? </br> PointingId = ?,?]\n+    RI1[/raw_frame/]\n+    I1-- Query --> QI1 -- Port --> RI1    \n+\n+    I2> DpdTrueUniverseOutput] \n+    QI2[ManualValidationStatus != 'INVALID' </br> DataSetRelease==? </br> EuclidPointingId == ?] \n+    RI2[/tu_cat/]\n+    I2 -- Query --> QI2 -- Port -->RI2\n+\n+    I3> DpdMdbDataBase]\n+    FI3[ EUC_NISP_GAIN* </br> EUC_NISP_NLSPECTRO* </br> EUC_NISP_Saturation* </br> EUC_NISP_SINGLEFRAMEOUT* </br> EUC_NISP-S_RGSASBUILD_PSF* </br> NISP_GrismTransmission* </br> NISPDetector*  </br> NISPHTransmissionCurves* </br> NISPJTransmissionCurves* </br> NISPYTransmissionCurves* </br> PLMTransmissionNISPNominalEOLCBE* ]\n+    QI3[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI3[/mdb/]\n+    I3 -- Query --> QI3 -- Filter --> FI3 -- files --> QI3 -- Port --> RI3\n+\n+    I4> DpdSirConfigurationSet] \n+    QI4[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI4[/sirconfig/]\n+    I4 -- Query --> QI4 -- Port -->RI4\n+\n+    I5> DpdSirOptModel] \n+    QI5[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI5[/opt_model/]\n+    I5 -- Query --> QI5-- Port --> RI5\n+\n+    I6> DpdSirCrvModel] \n+    QI6[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI6[/crv_model/]\n+    I6 -- Query --> QI6-- Port --> RI6\n+\n+    I7> DpdSirIdsModel] \n+    QI7[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI7[/ids_model/]\n+    I7 -- Query --> QI7-- Port --> RI7\n+\n+    I8> DpdSirRelativeFluxScaling] \n+    QI8[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI8[/rel_calib/]\n+    I8 -- Query --> QI8-- Port --> RI8\n+\n+    I9> DpdSirAbsoluteFluxScaling] \n+    QI9[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI9[/abs_calib/]\n+    I9 -- Query --> QI9-- Port --> RI9\n+\n+    I10> DpdSirDetectorScaling] \n+    QI10[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI10[/det_scaling/]\n+    I10 -- Query --> QI10-- Port --> RI10\n+\n+    I11> DpdNirMasterDarkFrame]\n+    Q11[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI1[/nir_dark/]\n+    I11 -- Query --> Q11-- Port --> RI11\n+    \n+    I12> DpdNirBadPixelMask]\n+    QI12[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI12[/nir_badpix/]\n+    I12 -- Query --> QI12-- Port --> RI12    \n+  end\n+\n+  subgraph PPO\n+    I[/Input/]\n+    RI1  --> I \n+    RI2  --> I\n+    RI3  --> I\n+    RI4  --> I\n+    RI5  --> I\n+    RI6  --> I\n+    RI7  --> I\n+    RI8  --> I\n+    RI9  --> I\n+    RI10 --> I\n+    RI11 --> I\n+    RI12 --> I\n+  end  \n+```\n+\n+```mermaid\n+graph\n+\n+  subgraph PPO\n+    I[/Input/]\n+  end\n+\n+  subgraph Calibration[Absolute Flux Calibration pipeline]\n+\n+    subgraph Preprocessing[Preprocessing - parallel on frames]\n+      direction TB\n+      I   --> PE1[NIR_runInitialize] \n+      PE1 --> PE2[maskBadpixels]\n+      PE2 --> PE3[maskSaturation]\n+      PE3 --> PE4[correctNonlinearity]\n+      PE4 --> PE5[darkSubtraction]\n+      PE5 --> PE6[CrRejectionSpec]\n+      PE6 --> PE7[SIR_ApplyDetectorScaling] \n+      PE7 --> PE8[SIR_Init]\n+    end\n+ \n+    PE8 --> OI1[\\sci_frames\\] \n+    OI1 --> PE9\n+\n+    subgraph Processing[ - parallel on frames]\n+      direction TB\n+      PE9[SIR_SpectraLocation]\n+      OI2[\\location_tables\\]\n+      PE10[SIR_BackgroundSubtraction]\n+      PE9 --> OI2 --> PE10\n+    end\n+\n+    OI3[\\ loc_tables , sci_frames \\] \n+    PE10 --> OI3\n+    OI2 --> OI3\n+\n+    OI3 --> PE11[SIR_splitLocTable] \n+    PE11 --> OI4[\\grouped_loc_tables\\]\n+    PE11 --> OI5[\\loc_tables\\]\n+    PE11 --> OI6[\\sci_frames\\]\n+\n+    subgraph Decontamination[Decontamination - parallel on group of loc_tables]\n+      direction TB\n+      PE12[SIR_SpectraDecontamination] \n+    end\n+    OI6 --> PE12\n+    OI4 --> PE12\n+    PE12 --> OI7[\\decontaminated_spectra\\]\n+    \n+    subgraph Extraction [Extraction - parallel on ALL loc_tables]\n+      direction TB\n+      PE13[SIR_SpectraExtraction]\n+      PE13 --> PE14[SIR_RelativeFluxCorrection]\n+    end\n+    OI5 --> PE13\n+    OI7 --> PE13  \n+\n+    PE14 --> OI8[\\extr_spectra\\]\n+    OI8 --> PE15[ComputeAbsoluteCalibration]\n+  end  \n+\n+  PE15 --> P1\n+\n+  subgraph Output\n+    direction TB\n+    P1[/DpdSirAbsoluteFluxScaling/]\n+  end  \n+\n+```\n+[Back](../../README.md#sir-ial-pipelines)\n\\ No newline at end of file\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/doc/calib_crv_mer.md": [
                        [
                            "@@ -1,9 +1,18 @@\n-## CurvatureModel Calibration\n+## CurvatureModel Calibration MER\n \n+Pipeline for nominal operations using MER catalogs\n \n-### TESTING\n+### Version\n \n-SIR_IAL_Pipelines > 3.0\n+SIR_IAL_Pipelines > 4.0\n+\n+### Resources\n+\n+Nominal precessing: 15 exposures per grism\n+\n+* Memory:\n+* Time:\n+* Workspace:\n \n \n ### Flowchart\n@@ -19,9 +28,9 @@ graph LR\n     QI1[ManualValidationStatus != 'INVALID' </br> Technique == SPECTROIMAGE </br> DataSetRelease==? </br> ObservationId == ?]\n     QI1 -- Port --> RI1[/dithers/]\n \n-    I2> DpdTrueUniverseOutput] -- Query --> QI2\n-    QI2[ManualValidationStatus != 'INVALID' </br> DataSetRelease==? </br> EuclidPointingId == ?] \n-    QI2 -- Port -->RI2[/tu_cat/]\n+    I2> DpdMerFinalCatalog] -- Query --> QI2\n+    QI2[ManualValidationStatus != 'INVALID' </br> DataSetRelease==? </br> ListOfObservationId == ?] \n+    QI2 -- Port -->RI2[/mer_cat/]\n     \n     I3> DpdNirMasterDarkFrame] -- Query --> QI3\n     QI3[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n@@ -34,7 +43,7 @@ graph LR\n     I5> DpdMdbDataBase] -- Query --> QI5\n     QI5[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n     QI5 -- filter --> FI5\n-    FI5[ EUC_NISP_H2RG-NONLINEARITY* </br> EUC_NISP_Satu* </br> EUC_NISP_SINGLE* </br> EUC_NISP-S_RGSASBUILD_PSF*  </br> NISP_Grism* </br> NISPDetectorSlots*]\n+    FI5[ EUC_NISP_GAIN* </br> EUC_NISP_NLSPECTRO* </br> EUC_NISP_Saturation* </br> EUC_NISP_SINGLEFRAMEOUT* </br> EUC_NISP-S_RGSASBUILD_PSF* </br> NISP_GrismTransmission* </br> NISPDetector*  </br> NISPHTransmissionCurves* </br> NISPJTransmissionCurves* </br> NISPYTransmissionCurves* </br> PLMTransmissionNISPNominalEOLCBE* ]\n     FI5 --> QI5\n     QI5 -- Port --> RI5[/mdb/]\n     \n@@ -85,7 +94,7 @@ graph\n   I --> PE1\n \n   subgraph Calibration[Optical Calibration pipeline]\n-    subgraph Preprocessing[parallel on dithers]\n+    subgraph Preprocessing[parallel on frames]\n       direction TB\n       PE1[NIR_runInitialize] \n       PE1 --> PE2[maskBadpixels]\n@@ -93,20 +102,21 @@ graph\n       PE3 --> PE4[correctNonlinearity]\n       PE4 --> PE5[darkSubtraction]\n       PE5 --> PE6[CrRejectionSpec]\n-      PE6 --> PE7[SIR_EndPreprocessing]\n+      PE6 --> PE7[SIR_ApplyDetectorScaling] \n+      PE7 --> PE8[SIR_Init]\n     end\n  \n-    PE7 --> OI1[\\sci_frames\\] \n-    OI1 --> PE8[SIR_ApplyDetectorScaling] \n-    PE8 --> PE9\n+    PE8 --> OI1[\\sci_frames\\] \n+    OI1 --> PE9[SIR_SortFrames_ByGrism] \n+    PE9 --> OI2[\\grouped frames\\]\n \n-    subgraph calibrate[parallel on dithers]\n-      PE9[SIR_CRVModelCalibration] \n+    subgraph calibrate[parallel on fremes grouped by grism/tilt]\n+      PE10[SIR_CRVModelCalibration] \n     end\n-\n-    PE9  --> PE10[SIR_MergeCalibCrv]\n-    PE10 --> O1[/crv_calib/]\n-\n+    OI2  --> PE10\n+    PE10 --> OI3[\\crv_cal\\]\n+    OI3  --> PE11[SIR_MergeCalibCrv]\n+    \n   end \n \n   subgraph Output\n@@ -114,7 +124,6 @@ graph\n     P1[/DpdSirCrvModel/]\n   end  \n \n-  O1 --> P1\n+  PE11 --> P1\n ```\n-\n-\n+[Back](../../README.md#sir-ial-pipelines)\n\\ No newline at end of file\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/doc/calib_crv_tu.md": [
                        [
                            "@@ -0,0 +1,140 @@\n+## CurvatureModel Calibration TU\n+\n+Pipeline to test CRV calib using TU catalogs\n+\n+### Version\n+\n+SIR_IAL_Pipelines > 4.0\n+\n+### Resources\n+\n+Nominal precessing: 15 exposures per grism\n+\n+* Memory: 3.5 GB max\n+* Time: 0.3 h\n+* Workspace: 60 GB\n+\n+### Flowchart\n+\n+\n+```mermaid\n+graph LR\n+  linkStyle default interpolate basis\n+\n+  subgraph Query\n+\n+    I1> DpdNispRawFrame] \n+    QI1[ManualValidationStatus != 'INVALID' </br> Technique == SPECTROIMAGE </br> GrismWheelPos==? </br> GrismWheelTilt==? </br>DataSetRelease==? </br> ObservationId == ? </br> PointingId = ?,?]\n+    RI1[/raw_frame/]\n+    I1-- Query --> QI1 -- Port --> RI1    \n+\n+    I2> DpdTrueUniverseOutput] \n+    QI2[ManualValidationStatus != 'INVALID' </br> DataSetRelease==? </br> EuclidPointingId == ?] \n+    RI2[/tu_cat/]\n+    I2 -- Query --> QI2 -- Port -->RI2\n+\n+    I3> DpdMdbDataBase]\n+    FI3[ EUC_NISP_GAIN* </br> EUC_NISP_NLSPECTRO* </br> EUC_NISP_Saturation* </br> EUC_NISP_SINGLEFRAMEOUT* </br> EUC_NISP-S_RGSASBUILD_PSF* </br> NISP_GrismTransmission* </br> NISPDetector*  </br> NISPHTransmissionCurves* </br> NISPJTransmissionCurves* </br> NISPYTransmissionCurves* </br> PLMTransmissionNISPNominalEOLCBE* ]\n+    QI3[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI3[/mdb/]\n+    I3 -- Query --> QI3 -- Filter --> FI3 -- files --> QI3 -- Port --> RI3\n+\n+    I4> DpdSirConfigurationSet] \n+    QI4[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI4[/sirconfig/]\n+    I4 -- Query --> QI4 -- Port -->RI4\n+\n+    I5> DpdSirOptModel] \n+    QI5[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI5[/opt_model/]\n+    I5 -- Query --> QI5-- Port --> RI5\n+\n+    I6> DpdSirCrvModel] \n+    QI6[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI6[/crv_model/]\n+    I6 -- Query --> QI6-- Port --> RI6\n+\n+    I7> DpdSirIdsModel] \n+    QI7[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI7[/ids_model/]\n+    I7 -- Query --> QI7-- Port --> RI7\n+\n+\n+\n+    I10> DpdSirDetectorScaling] \n+    QI10[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI10[/det_scaling/]\n+    I10 -- Query --> QI10-- Port --> RI10\n+\n+    I11> DpdNirMasterDarkFrame]\n+    Q11[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI1[/nir_dark/]\n+    I11 -- Query --> Q11-- Port --> RI11\n+    \n+    I12> DpdNirBadPixelMask]\n+    QI12[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI12[/nir_badpix/]\n+    I12 -- Query --> QI12-- Port --> RI12    \n+  end\n+\n+  subgraph PPO\n+    I[/Input/]\n+    RI1  --> I \n+    RI2  --> I\n+    RI3  --> I\n+    RI4  --> I\n+    RI5  --> I\n+    RI6  --> I\n+    RI7  --> I\n+\n+    RI10 --> I\n+    RI11 --> I\n+    RI12 --> I\n+  end  \n+```\n+\n+```mermaid\n+graph\n+\n+  subgraph PPO\n+    I[/Input/]\n+  end\n+\n+  I --> PE1\n+\n+  subgraph Calibration[Optical Calibration pipeline]\n+    subgraph Preprocessing[parallel on frames]\n+      direction TB\n+      PE1[NIR_runInitialize] \n+      PE1 --> PE2[maskBadpixels]\n+      PE2 --> PE3[maskSaturation]\n+      PE3 --> PE4[correctNonlinearity]\n+      PE4 --> PE5[darkSubtraction]\n+      PE5 --> PE6[CrRejectionSpec]\n+      PE6 --> PE7[SIR_ApplyDetectorScaling] \n+      PE7 --> PE8[SIR_Init]\n+    end\n+ \n+    PE8 --> OI1[\\sci_frames\\] \n+    OI1 --> PE9[SIR_SortFrames_ByGrism] \n+    PE9 --> OI2[\\grouped frames\\]\n+\n+    subgraph calibrate[parallel on fremes grouped by grism/tilt]\n+      PE10[SIR_CRVModelCalibration] \n+    end\n+    OI2  --> PE10\n+    PE10 --> OI3[\\crv_cal\\]\n+    OI3  --> PE11[SIR_MergeCalibCrv]\n+    \n+  end \n+\n+  subgraph Output\n+    direction TB\n+    P1[/DpdSirCrvModel/]\n+  end  \n+\n+  PE11 --> P1\n+```\n+[Back](../../README.md#sir-ial-pipelines)\n+\n+\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/doc/calib_ids.md": [
                        [
                            "@@ -1,60 +0,0 @@\n-## TBC\n-\n-\n-### Version\n-\n-SIR_IAL_Pipelines > 3.0\n-\n-### Flowchart\n-\n-```mermaid\n-flowchart TD\n-\n-  subgraph Dataset\n-    direction LR\n-\n-    A> DpdNispRawFrame] -- Query --> QA[ManualValidationStatus != 'INVALID' \\n Technique == SPECTROIMAGE \\n DataSetRelease==? \\n ObservationId == ?] -- Port -->RA[/dithers/] --> I[/Input/]\n-\n-    B> DpdTrueUniverseOutput] -- Query --> QB[ManualValidationStatus != 'INVALID' \\n DataSetRelease==? \\n EuclidPointingId == ?] -- Port -->RB[/tu_cat/] --> I\n-\n-    C> DpdNirMasterDarkFrame] -- Query --> QC[ManualValidationStatus != 'INVALID' \\n ProductId==?] -- Port -->RC[/masterdark/] --> I\n-\n-    D> DpdNirBadPixelMask] -- Query --> QD[ManualValidationStatus != 'INVALID' \\n ProductId==?] -- Port -->RD[/badpixel/] --> I\n-\n-    QE -- filter --> FE[ EUC_NISP_H2RG-NONLINEARITY* \\n EUC_NISP_Satu* \\n EUC_NISP_SINGLE* \\n EUC_NISP-S_RGSASBUILD_PSF*  \\n NISP_Grism* \\n NISPDetectorSlots*] --> QE\n-\n-    E> DpdMdbDataBase] -- Query --> QE[ManualValidationStatus != 'INVALID' \\n ProductId==?] -- Port -->RE[/mdb/] --> I\n-\n-\n-    F> DpdSirDetectorScaling] -- Query --> QF[ManualValidationStatus != 'INVALID' \\n ProductId==?] -- Port -->RF[/det_scaling/] --> I\n-\n-    G> DpdSirOptModel] -- Query --> QG[ManualValidationStatus != 'INVALID' \\n ProductId==?] -- Port -->RG[/opt_model/] --> I\n-\n-    H> DpdSirConfigurationSet] -- Query --> HD[ManualValidationStatus != 'INVALID' \\n ProductId==?] -- Port -->HR[/sirconfig/] --> I\n-  end\n-\n-  subgraph Calibration_Pipeline\n-    subgraph Preprocessing[parallel on dithers]\n-      direction TB\n-      A1[NIR_runInitialize] --> A2[maskBadpixels]\n-      A2 --> A3[maskSaturation]\n-      A3 --> A4[correctNonlinearity]\n-      A4 --> A5[darkSubtraction]\n-      A5 --> A6[CrRejectionSpec]\n-      A6 --> A7[SIR_EndPreprocessing]\n-    end\n- \n-    A7 --> I1[\\sci_frames\\] -->  A12[SIR_ApplyDetectorScaling] \n-    A12 --> A22\n-\n-    subgraph calibration[parallel on dithers]\n-          A22[SIR_OPTModelCalibration] \n-    end\n-\n-    A22 --> A32[SIR_MergeCalibOpt] --> O[/Output/]\n-\n-  end \n-\n-  Dataset -- Input --> Calibration_Pipeline -- Output --> P1[/DpdSirOptModel/]\n-  \n-```\n\\ No newline at end of file\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/doc/calib_ids_tu.md": [
                        [
                            "@@ -0,0 +1,169 @@\n+## Inverse Dispersion Solution Calibration\n+\n+Pipeline for test using TU catalogs\n+\n+### Version\n+\n+SIR_IAL_Pipelines > 4.0\n+\n+### Resources\n+\n+Nominal precessing: 80 exposures per grism\n+\n+* Memory:\n+* Time: \n+* Workspace: \n+\n+### Flowchart\n+\n+```mermaid\n+graph LR\n+  linkStyle default interpolate basis\n+\n+  subgraph Query\n+\n+    I1> DpdNispRawFrame] \n+    QI1[ManualValidationStatus != 'INVALID' </br> Technique == SPECTROIMAGE </br> GrismWheelPos==? </br> GrismWheelTilt==? </br>DataSetRelease==? </br> ObservationId == ? </br> PointingId = ?,?]\n+    RI1[/raw_frame/]\n+    I1-- Query --> QI1 -- Port --> RI1    \n+\n+    I2> DpdTrueUniverseOutput] \n+    QI2[ManualValidationStatus != 'INVALID' </br> DataSetRelease==? </br> EuclidPointingId == ?] \n+    RI2[/tu_cat/]\n+    I2 -- Query --> QI2 -- Port -->RI2\n+\n+    I3> DpdMdbDataBase]\n+    FI3[ EUC_NISP_GAIN* </br> EUC_NISP_NLSPECTRO* </br> EUC_NISP_Saturation* </br> EUC_NISP_SINGLEFRAMEOUT* </br> EUC_NISP-S_RGSASBUILD_PSF* </br> NISP_GrismTransmission* </br> NISPDetector*  </br> NISPHTransmissionCurves* </br> NISPJTransmissionCurves* </br> NISPYTransmissionCurves* </br> PLMTransmissionNISPNominalEOLCBE* ]\n+    QI3[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI3[/mdb/]\n+    I3 -- Query --> QI3 -- Filter --> FI3 -- files --> QI3 -- Port --> RI3\n+\n+    I4> DpdSirConfigurationSet] \n+    QI4[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI4[/sirconfig/]\n+    I4 -- Query --> QI4 -- Port -->RI4\n+\n+    I5> DpdSirOptModel] \n+    QI5[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI5[/opt_model/]\n+    I5 -- Query --> QI5-- Port --> RI5\n+\n+    I6> DpdSirCrvModel] \n+    QI6[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI6[/crv_model/]\n+    I6 -- Query --> QI6-- Port --> RI6\n+\n+    I7> DpdSirIdsModel] \n+    QI7[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI7[/ids_model/]\n+    I7 -- Query --> QI7-- Port --> RI7\n+\n+    I8> DpdSirRelativeFluxScaling] \n+    QI8[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI8[/rel_calib/]\n+    I8 -- Query --> QI8-- Port --> RI8\n+\n+    I9> DpdSirAbsoluteFluxScaling] \n+    QI9[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI9[/abs_calib/]\n+    I9 -- Query --> QI9-- Port --> RI9\n+\n+    I10> DpdSirDetectorScaling] \n+    QI10[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI10[/det_scaling/]\n+    I10 -- Query --> QI10-- Port --> RI10\n+\n+    I11> DpdNirMasterDarkFrame]\n+    Q11[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI1[/nir_dark/]\n+    I11 -- Query --> Q11-- Port --> RI11\n+    \n+    I12> DpdNirBadPixelMask]\n+    QI12[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI12[/nir_badpix/]\n+    I12 -- Query --> QI12-- Port --> RI12    \n+  end\n+\n+  subgraph PPO\n+    I[/Input/]\n+    RI1  --> I \n+    RI2  --> I\n+    RI3  --> I\n+    RI4  --> I\n+    RI5  --> I\n+    RI6  --> I\n+    RI7  --> I\n+    RI8  --> I\n+    RI9  --> I\n+    RI10 --> I\n+    RI11 --> I\n+    RI12 --> I\n+  end  \n+``````\n+```mermaid\n+graph\n+\n+  subgraph PPO\n+    I[/Input/]\n+  end\n+\n+  subgraph Calibration[Inverse Dispersion solution Calibration pipeline]\n+\n+    subgraph Preprocessing[Preprocessing - parallel on frames]\n+      direction TB\n+      I   --> PE1[NIR_runInitialize] \n+      PE1 --> PE2[maskBadpixels]\n+      PE2 --> PE3[maskSaturation]\n+      PE3 --> PE4[correctNonlinearity]\n+      PE4 --> PE5[darkSubtraction]\n+      PE5 --> PE6[CrRejectionSpec]\n+      PE6 --> PE7[SIR_ApplyDetectorScaling] \n+      PE7 --> PE8[SIR_Init]\n+    end\n+ \n+    PE8 --> OI1[\\sci_frames\\] \n+    OI1 --> PE9[SIR_SpectraLocation]\n+\n+    subgraph Processing[Processing - parallel on frames]\n+      direction TB\n+      PE9 --> OI2[\\location_tables\\]\n+      OI2 --> PE10[SIR_BackgroundSubtraction]\n+    end\n+\n+    OI3[\\ loc_tables , sci_frames \\] \n+    PE10 --> OI3\n+    OI2 --> OI3\n+    OI3 --> PE11[SIR_splitLocTable] \n+    PE11 --> OI4[\\grouped_loc_tables\\]\n+    PE11 --> OI5[\\sci_frames\\]\n+\n+    subgraph Decontamenation[Decontamenation - parallel on group of loc_tables]\n+      direction TB\n+      PE12[SIR_SpectraDecontamination] \n+    end\n+\n+    OI4 --> PE12\n+    OI5 --> PE12\n+    PE12 --> OI6[\\decontaminated_spectra\\]\n+    OI5 --> PE13[SIR_SortFrames_ByGrism]\n+    PE13 --> OI7[\\sorted_sci_frames\\]\n+\n+    subgraph calibrate[Calibration - parallel on frames grouped by grism/tilt]\n+      PE14[SIR_IDSModelCalibration]\n+    end\n+    OI6 --> PE14\n+    OI7 --> PE14\n+    PE14 --> OI8[/ids_calib/]\n+\n+    OI8 --> PE15[SIR_MergeCalibIds]\n+  end  \n+\n+  PE15 --> P1\n+\n+  subgraph Output\n+    direction TB\n+    P1[/DpdSirIdsModel/]\n+  end  \n+\n+```\n+[Back](../../README.md#sir-ial-pipelines)\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/doc/calib_opt_mer.md": [
                        [
                            "@@ -1,17 +1,19 @@\n-## Optical Model Calibration\n+## Optical Model Calibration MER\n \n+Pipeline for nominal operations using MER catalogs\n \n ### Version\n \n-SIR_IAL_Pipelines > 3.0\n+SIR_IAL_Pipelines > 4.0\n \n ### Resources\n \n-Nominal precessing: 4 exposures with different grisms\n+Nominal precessing: 15 exposures per grism\n+\n+* Memory:\n+* Time:\n+* Workspace:\n \n-* Memory: 3.2 GB max\n-* Time: 0.34 h\n-* Workspace: 60 GB\n \n ### Flowchart\n \n@@ -22,12 +24,12 @@ graph LR\n   subgraph Query\n \n     I1> DpdNispRawFrame] -- Query --> QI1\n-    QI1[ManualValidationStatus != 'INVALID' </br> Technique == SPECTROIMAGE </br> DataSetRelease==? </br> ObservationId == ? </br> PointingId = ?,?]\n+    QI1[ManualValidationStatus != 'INVALID' </br> Technique == SPECTROIMAGE </br> GrismWheelPos==? </br> GrismWheelTilt==? </br>DataSetRelease==? </br> ObservationId == ? </br> PointingId = ?,?]\n     QI1 -- Port --> RI1[/dithers/]\n \n-    I2> DpdTrueUniverseOutput] -- Query --> QI2\n-    QI2[ManualValidationStatus != 'INVALID' </br> DataSetRelease==? </br> EuclidPointingId == ?] \n-    QI2 -- Port -->RI2[/tu_cat/]\n+    I2> DpdMerFinalCatalog] -- Query --> QI2\n+    QI2[ManualValidationStatus != 'INVALID' </br> DataSetRelease==? </br> ListOfObservationId == ?] \n+    QI2 -- Port -->RI2[/mer_cat/]\n     \n     I3> DpdNirMasterDarkFrame] -- Query --> QI3\n     QI3[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n@@ -40,7 +42,7 @@ graph LR\n     I5> DpdMdbDataBase] -- Query --> QI5\n     QI5[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n     QI5 -- filter --> FI5\n-    FI5[ EUC_NISP_H2RG-NONLINEARITY* </br> EUC_NISP_Satu* </br> EUC_NISP_SINGLE* </br> EUC_NISP-S_RGSASBUILD_PSF*  </br> NISP_Grism* </br> NISPDetectorSlots*]\n+    FI5[ EUC_NISP_GAIN* </br> EUC_NISP_NLSPECTRO* </br> EUC_NISP_Saturation* </br> EUC_NISP_SINGLEFRAMEOUT* </br> EUC_NISP-S_RGSASBUILD_PSF* </br> NISP_GrismTransmission* </br> NISPDetector*  </br> NISPHTransmissionCurves* </br> NISPJTransmissionCurves* </br> NISPYTransmissionCurves* </br> PLMTransmissionNISPNominalEOLCBE* ]\n     FI5 --> QI5\n     QI5 -- Port --> RI5[/mdb/]\n     \n@@ -68,6 +70,7 @@ graph LR\n     RI8  --> I\n   end  \n ```\n+\n ```mermaid\n graph\n \n@@ -75,36 +78,41 @@ graph\n     I[/Input/]\n   end\n \n-  subgraph Calibration[Optical Calibration pipeline]\n+  I --> PE1\n \n-    subgraph Preprocessing[parallel on dithers]\n+  subgraph Calibration[Optical Calibration pipeline]\n+    subgraph Preprocessing[parallel on frames]\n       direction TB\n-      I   --> PE1[NIR_runInitialize] \n+      PE1[NIR_runInitialize] \n       PE1 --> PE2[maskBadpixels]\n       PE2 --> PE3[maskSaturation]\n       PE3 --> PE4[correctNonlinearity]\n       PE4 --> PE5[darkSubtraction]\n       PE5 --> PE6[CrRejectionSpec]\n-      PE6 --> PE7[SIR_EndPreprocessing]\n+      PE6 --> PE7[SIR_ApplyDetectorScaling] \n+      PE7 --> PE8[SIR_Init]\n     end\n  \n-    PE7 --> OI1[\\sci_frames\\] \n-    OI1 --> PE8[SIR_ApplyDetectorScaling] \n-    PE8 --> PE9\n+    PE8 --> OI1[\\sci_frames\\] \n+    OI1 --> PE9[SIR_SortFrames_ByGrism] \n+    PE9 --> OI2[\\grouped frames\\]\n \n-    subgraph calibrate[parallel on dithers]\n-      PE9[SIR_OPTModelCalibration] \n+    subgraph calibrate[parallel on fremes grouped by grism/tilt]\n+      PE10[SIR_OptModelCalibration] \n     end\n-\n-    PE9  --> PE10[SIR_MergeCalibOpt]\n-    PE10 --> O1[/opt_calib/]\n-\n+    OI2  --> PE10\n+    PE10 --> OI3[\\opt_cal\\]\n+    OI3  --> PE11[SIR_MergeCalibOpt]\n+    \n   end \n \n-  O1 --> P1\n-\n   subgraph Output\n     direction TB\n     P1[/DpdSirOptModel/]\n   end  \n-```\n\\ No newline at end of file\n+\n+  PE11 --> P1\n+```\n+[Back](../../README.md#sir-ial-pipelines)\n+\n+\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/doc/calib_opt_tu.md": [
                        [
                            "@@ -0,0 +1,125 @@\n+## Optical Model Calibration TU\n+\n+Pipeline to test OPT calib using TU catalogs\n+\n+### Version\n+\n+SIR_IAL_Pipelines > 4.0\n+\n+### Resources\n+\n+Nominal precessing: 15 exposures per grism\n+\n+* Memory: 3.5 GB max\n+* Time: 0.3 h\n+* Workspace: 60 GB\n+\n+### Flowchart\n+\n+```mermaid\n+graph LR\n+  linkStyle default interpolate basis\n+\n+  subgraph Query\n+\n+    I1> DpdNispRawFrame] \n+    QI1[ManualValidationStatus != 'INVALID' </br> Technique == SPECTROIMAGE </br> GrismWheelPos==? </br> GrismWheelTilt==? </br>DataSetRelease==? </br> ObservationId == ? </br> PointingId = ?,?]\n+    RI1[/raw_frame/]\n+    I1-- Query --> QI1 -- Port --> RI1    \n+\n+    I2> DpdTrueUniverseOutput] \n+    QI2[ManualValidationStatus != 'INVALID' </br> DataSetRelease==? </br> EuclidPointingId == ?] \n+    RI2[/tu_cat/]\n+    I2 -- Query --> QI2 -- Port -->RI2\n+\n+    I3> DpdMdbDataBase]\n+    FI3[ EUC_NISP_GAIN* </br> EUC_NISP_NLSPECTRO* </br> EUC_NISP_Saturation* </br> EUC_NISP_SINGLEFRAMEOUT* </br> EUC_NISP-S_RGSASBUILD_PSF* </br> NISP_GrismTransmission* </br> NISPDetector*  </br> NISPHTransmissionCurves* </br> NISPJTransmissionCurves* </br> NISPYTransmissionCurves* </br> PLMTransmissionNISPNominalEOLCBE* ]\n+    QI3[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI3[/mdb/]\n+    I3 -- Query --> QI3 -- Filter --> FI3 -- files --> QI3 -- Port --> RI3\n+\n+    I4> DpdSirConfigurationSet] \n+    QI4[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI4[/sirconfig/]\n+    I4 -- Query --> QI4 -- Port -->RI4\n+\n+    I5> DpdSirOptModel] \n+    QI5[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI5[/opt_model/]\n+    I5 -- Query --> QI5-- Port --> RI5\n+\n+\n+\n+    I10> DpdSirDetectorScaling] \n+    QI10[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI10[/det_scaling/]\n+    I10 -- Query --> QI10-- Port --> RI10\n+\n+    I11> DpdNirMasterDarkFrame]\n+    Q11[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI1[/nir_dark/]\n+    I11 -- Query --> Q11-- Port --> RI11\n+    \n+    I12> DpdNirBadPixelMask]\n+    QI12[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI12[/nir_badpix/]\n+    I12 -- Query --> QI12-- Port --> RI12    \n+  end\n+\n+  subgraph PPO\n+    I[/Input/]\n+    RI1  --> I \n+    RI2  --> I\n+    RI3  --> I\n+    RI4  --> I\n+    RI5  --> I\n+\n+    RI10 --> I\n+    RI11 --> I\n+    RI12 --> I\n+  end  \n+```\n+\n+```mermaid\n+graph\n+\n+  subgraph PPO\n+    I[/Input/]\n+  end\n+\n+  I --> PE1\n+\n+  subgraph Calibration[Optical Calibration pipeline]\n+    subgraph Preprocessing[parallel on frames]\n+      direction TB\n+      PE1[NIR_runInitialize] \n+      PE1 --> PE2[maskBadpixels]\n+      PE2 --> PE3[maskSaturation]\n+      PE3 --> PE4[correctNonlinearity]\n+      PE4 --> PE5[darkSubtraction]\n+      PE5 --> PE6[CrRejectionSpec]\n+      PE6 --> PE7[SIR_ApplyDetectorScaling] \n+      PE7 --> PE8[SIR_Init]\n+    end\n+ \n+    PE8 --> OI1[\\sci_frames\\] \n+    OI1 --> PE9[SIR_SortFrames_ByGrism] \n+    PE9 --> OI2[\\grouped frames\\]\n+\n+    subgraph calibrate[parallel on fremes grouped by grism/tilt]\n+      PE10[SIR_OptModelCalibration] \n+    end\n+    OI2  --> PE10\n+    PE10 --> OI3[\\opt_cal\\]\n+    OI3  --> PE11[SIR_MergeCalibOpt]\n+    \n+  end \n+\n+  subgraph Output\n+    direction TB\n+    P1[/DpdSirOptModel/]\n+  end  \n+\n+  PE11 --> P1\n+```\n+[Back](../../README.md#sir-ial-pipelines)\n\\ No newline at end of file\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/doc/calib_rel_tu.md": [
                        [
                            "@@ -0,0 +1,167 @@\n+## Relative Flux Calibration TU\n+\n+Pipeline to test REL flux calib using TU catalogs\n+\n+### Version\n+\n+SIR_IAL_Pipelines > 4.0\n+\n+### Resources\n+\n+Nominal precessing: 15 exposures per grism\n+\n+* Memory:\n+* Time: \n+* Workspace: \n+\n+### Flowchart\n+\n+```mermaid\n+graph LR\n+  linkStyle default interpolate basis\n+\n+  subgraph Query\n+\n+    I1> DpdNispRawFrame] \n+    QI1[ManualValidationStatus != 'INVALID' </br> Technique == SPECTROIMAGE </br> GrismWheelPos==? </br> GrismWheelTilt==? </br>DataSetRelease==? </br> ObservationId == ? </br> PointingId = ?,?]\n+    RI1[/raw_frame/]\n+    I1-- Query --> QI1 -- Port --> RI1    \n+\n+    I2> DpdTrueUniverseOutput] \n+    QI2[ManualValidationStatus != 'INVALID' </br> DataSetRelease==? </br> EuclidPointingId == ?] \n+    RI2[/tu_cat/]\n+    I2 -- Query --> QI2 -- Port -->RI2\n+\n+    I3> DpdMdbDataBase]\n+    FI3[ EUC_NISP_GAIN* </br> EUC_NISP_NLSPECTRO* </br> EUC_NISP_Saturation* </br> EUC_NISP_SINGLEFRAMEOUT* </br> EUC_NISP-S_RGSASBUILD_PSF* </br> NISP_GrismTransmission* </br> NISPDetector*  </br> NISPHTransmissionCurves* </br> NISPJTransmissionCurves* </br> NISPYTransmissionCurves* </br> PLMTransmissionNISPNominalEOLCBE* ]\n+    QI3[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI3[/mdb/]\n+    I3 -- Query --> QI3 -- Filter --> FI3 -- files --> QI3 -- Port --> RI3\n+\n+    I4> DpdSirConfigurationSet] \n+    QI4[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI4[/sirconfig/]\n+    I4 -- Query --> QI4 -- Port -->RI4\n+\n+    I5> DpdSirOptModel] \n+    QI5[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI5[/opt_model/]\n+    I5 -- Query --> QI5-- Port --> RI5\n+\n+    I6> DpdSirCrvModel] \n+    QI6[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI6[/crv_model/]\n+    I6 -- Query --> QI6-- Port --> RI6\n+\n+    I7> DpdSirIdsModel] \n+    QI7[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI7[/ids_model/]\n+    I7 -- Query --> QI7-- Port --> RI7\n+\n+    I8> DpdSirRelativeFluxScaling] \n+    QI8[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI8[/rel_calib/]\n+    I8 -- Query --> QI8-- Port --> RI8\n+\n+\n+\n+    I10> DpdSirDetectorScaling] \n+    QI10[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI10[/det_scaling/]\n+    I10 -- Query --> QI10-- Port --> RI10\n+\n+    I11> DpdNirMasterDarkFrame]\n+    Q11[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI1[/nir_dark/]\n+    I11 -- Query --> Q11-- Port --> RI11\n+    \n+    I12> DpdNirBadPixelMask]\n+    QI12[ManualValidationStatus != 'INVALID' </br> ProductId==?]\n+    RI12[/nir_badpix/]\n+    I12 -- Query --> QI12-- Port --> RI12    \n+  end\n+\n+  subgraph PPO\n+    I[/Input/]\n+    RI1  --> I \n+    RI2  --> I\n+    RI3  --> I\n+    RI4  --> I\n+    RI5  --> I\n+    RI6  --> I\n+    RI7  --> I\n+    RI8  --> I\n+\n+    RI10 --> I\n+    RI11 --> I\n+    RI12 --> I\n+  end  \n+```\n+\n+```mermaid\n+graph\n+\n+  subgraph PPO\n+    I[/Input/]\n+  end\n+\n+  subgraph Calibration[Inverse Dispersion solution Calibration pipeline]\n+\n+    subgraph Preprocessing[parallel on frames]\n+      direction TB\n+      I   --> PE1[NIR_runInitialize] \n+      PE1 --> PE2[maskBadpixels]\n+      PE2 --> PE3[maskSaturation]\n+      PE3 --> PE4[correctNonlinearity]\n+      PE4 --> PE5[darkSubtraction]\n+      PE5 --> PE6[CrRejectionSpec]\n+      PE6 --> PE7[SIR_ApplyDetectorScaling] \n+      PE7 --> PE8[SIR_Init]\n+    end\n+ \n+    PE8 --> OI1[\\sci_frames\\] \n+    OI1 --> PE9[SIR_SpectraLocation]\n+\n+    subgraph Processing[parallel on frames]\n+      direction TB\n+      PE9 --> OI2[\\location_tables\\]\n+      OI2 --> PE10[SIR_BackgroundSubtraction]\n+    end\n+\n+    OI3[\\ loc_tables , sci_frames \\] \n+    PE10 --> OI3\n+    OI2 --> OI3\n+    OI3 --> PE11[SIR_splitLocTable] \n+    PE11 --> OI4[\\grouped_loc_tables\\]\n+    PE11 --> OI5[\\loc_tables\\]\n+    PE11 --> OI6[\\sci_frames\\]\n+\n+    subgraph Decontamination[parallel on group of loc_tables]\n+      direction TB\n+      PE12[SIR_SpectraDecontamination] \n+    end\n+    OI6 --> PE12\n+    OI4 --> PE12\n+    PE12 --> OI7[\\decontaminated_spectra\\]\n+    \n+    subgraph Extraction [parallel on loc_tables]\n+      direction TB\n+      PE13[SIR_SpectraExtraction]\n+      PE13 --> PE14[SIR_RelativeFluxCorrection]\n+    end\n+    OI5 --> PE13\n+    OI7 --> PE13  \n+\n+    PE14 --> OI8[\\extr_spectra\\]\n+    OI8 --> PE15[SIR_RelFluxModelCalibration]\n+  end  \n+\n+  PE15 --> P1\n+\n+  subgraph Output\n+    direction TB\n+    P1[/DpdSirRelativeFluxScaling/]\n+  end  \n+```\n+\n+[Back](../../README.md#sir-ial-pipelines)\n\\ No newline at end of file\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/tests/python/SIR_Calibration_Abs_TU_test.py": [
                        [
                            "@@ -9,21 +9,23 @@ from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n from ElementsKernel.Auxiliary import getAuxiliaryPath\n \n \n-pipe_name = 'SIR_Pipelines/SIR_Calibration_Abs'\n-\n+pipe_name = 'SIR_Pipelines/SIR_Calibration_Abs_TU'\n+pipscript = 'PipScript_SIR_Calibration_Abs_TU.py'\n+pipdef    = 'PipDef_SIR_Calibration_Abs_TU.xml'\n+package   = 'SIR_Pipelines/PackageDef_SIR.py'\n \n \n class TestPackageDef(PackageDefTester):\n-   package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n+   package_def = getAuxiliaryPath(package)\n \n class TestPipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Calibration_Abs.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n \n class TestPipelineDef(PipelineDefTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Calibration_Abs.py')\n-  pipeline_def = getAuxiliaryPath(f'{pipe_name}/PipDef_SIR_Calibration_Abs.xml')\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  pipeline_def = getAuxiliaryPath(f'{pipe_name}/{pipdef}')\n \n class TestStandalonePipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Calibration_Abs.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/tests/python/SIR_Calibration_Crv_TU_test.py": [
                        [
                            "@@ -0,0 +1,32 @@\n+#\n+# Tests for SIR_Calibration_Crv pipeline\n+\n+from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n+from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n+from ST_PipelineUnitTesting.PPOTester import PPOTester\n+from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n+\n+from ElementsKernel.Auxiliary import getAuxiliaryPath\n+\n+\n+pipe_name = 'SIR_Pipelines/SIR_Calibration_Crv_TU'\n+pipscript = 'PipScript_SIR_Calibration_Crv_TU.py'\n+pipdef    = 'PipDef_SIR_Calibration_Crv_TU.xml'\n+package   = 'SIR_Pipelines/PackageDef_SIR.py'\n+\n+\n+class TestPackageDef(PackageDefTester):\n+   package_def = getAuxiliaryPath(package)\n+\n+class TestPipelineScript(PipelineScriptTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n+\n+class TestPipelineDef(PipelineDefTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  pipeline_def = getAuxiliaryPath(f'{pipe_name}/{pipdef}')\n+\n+class TestStandalonePipelineScript(PipelineScriptTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n+\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/tests/python/SIR_Calibration_Crv_test.py": [
                        [
                            "@@ -8,22 +8,27 @@ from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n \n from ElementsKernel.Auxiliary import getAuxiliaryPath\n \n+import os\n \n pipe_name = 'SIR_Pipelines/SIR_Calibration_Crv'\n-\n+pipscript = 'PipScript_SIR_Calibration_Crv.py'\n+pipdef    = 'PipDef_SIR_Calibration_Crv.xml'\n+package   = 'SIR_Pipelines/PackageDef_SIR.py'\n \n \n class TestPackageDef(PackageDefTester):\n-   package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n+   package_def = getAuxiliaryPath(package)\n \n class TestPipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Calibration_Crv.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n \n-class TestPipelineDef(PipelineDefTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Calibration_Crv.py')\n-  pipeline_def = getAuxiliaryPath(f'{pipe_name}/PipDef_SIR_Calibration_Crv.xml')\n+if os.getenv('TAVA_LOCAL') is not None:\n+  class TestPipelineDef(PipelineDefTester):\n+    pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+    pipeline_def = getAuxiliaryPath(f'{pipe_name}/{pipdef}')\n \n class TestStandalonePipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Calibration_Crv.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n+\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/tests/python/SIR_Calibration_Ids_TU_test.py": [
                        [
                            "@@ -9,21 +9,23 @@ from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n from ElementsKernel.Auxiliary import getAuxiliaryPath\n \n \n-pipe_name = 'SIR_Pipelines/SIR_Calibration_Ids'\n-\n+pipe_name = 'SIR_Pipelines/SIR_Calibration_Ids_TU'\n+pipscript = 'PipScript_SIR_Calibration_Ids_TU.py'\n+pipdef    = 'PipDef_SIR_Calibration_Ids_TU.xml'\n+package   = 'SIR_Pipelines/PackageDef_SIR.py'\n \n \n class TestPackageDef(PackageDefTester):\n-   package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n+   package_def = getAuxiliaryPath(package)\n \n class TestPipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Calibration_Ids.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n \n class TestPipelineDef(PipelineDefTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Calibration_Ids.py')\n-  pipeline_def = getAuxiliaryPath(f'{pipe_name}/PipDef_SIR_Calibration_Ids.xml')\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  pipeline_def = getAuxiliaryPath(f'{pipe_name}/{pipdef}')\n \n class TestStandalonePipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Calibration_Ids.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/tests/python/SIR_Calibration_Opt_TU_test.py": [
                        [
                            "@@ -0,0 +1,32 @@\n+#\n+# Tests for SIR_Calibration_Opt pipeline\n+\n+from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n+from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n+from ST_PipelineUnitTesting.PPOTester import PPOTester\n+from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n+\n+from ElementsKernel.Auxiliary import getAuxiliaryPath\n+\n+\n+pipe_name = 'SIR_Pipelines/SIR_Calibration_Opt_TU'\n+pipscript = 'PipScript_SIR_Calibration_Opt_TU.py'\n+pipdef    = 'PipDef_SIR_Calibration_Opt_TU.xml'\n+package   = 'SIR_Pipelines/PackageDef_SIR.py'\n+\n+\n+class TestPackageDef(PackageDefTester):\n+   package_def = getAuxiliaryPath(package)\n+\n+class TestPipelineScript(PipelineScriptTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n+\n+class TestPipelineDef(PipelineDefTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  pipeline_def = getAuxiliaryPath(f'{pipe_name}/{pipdef}')\n+\n+class TestStandalonePipelineScript(PipelineScriptTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n+\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/tests/python/SIR_Calibration_Opt_test.py": [
                        [
                            "@@ -10,20 +10,23 @@ from ElementsKernel.Auxiliary import getAuxiliaryPath\n \n \n pipe_name = 'SIR_Pipelines/SIR_Calibration_Opt'\n-\n+pipscript = 'PipScript_SIR_Calibration_Opt.py'\n+pipdef    = 'PipDef_SIR_Calibration_Opt.xml'\n+package   = 'SIR_Pipelines/PackageDef_SIR.py'\n \n \n class TestPackageDef(PackageDefTester):\n-   package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n+   package_def = getAuxiliaryPath(package)\n \n class TestPipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Calibration_Opt.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n \n class TestPipelineDef(PipelineDefTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Calibration_Opt.py')\n-  pipeline_def = getAuxiliaryPath(f'{pipe_name}/PipDef_SIR_Calibration_Opt.xml')\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  pipeline_def = getAuxiliaryPath(f'{pipe_name}/{pipdef}')\n \n class TestStandalonePipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Calibration_Opt.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n+\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/tests/python/SIR_Calibration_Rel_TU_test.py": [
                        [
                            "@@ -0,0 +1,32 @@\n+#\n+# Tests for SIR_Calibration_Abs pipeline - PV-003\n+\n+from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n+from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n+from ST_PipelineUnitTesting.PPOTester import PPOTester\n+from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n+\n+from ElementsKernel.Auxiliary import getAuxiliaryPath\n+\n+\n+pipe_name = 'SIR_Pipelines/SIR_Calibration_Rel_TU'\n+pipscript = 'PipScript_SIR_Calibration_Rel_TU.py'\n+pipdef    = 'PipDef_SIR_Calibration_Rel_TU.xml'\n+package   = 'SIR_Pipelines/PackageDef_SIR.py'\n+\n+\n+class TestPackageDef(PackageDefTester):\n+   package_def = getAuxiliaryPath(package)\n+\n+class TestPipelineScript(PipelineScriptTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n+\n+class TestPipelineDef(PipelineDefTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  pipeline_def = getAuxiliaryPath(f'{pipe_name}/{pipdef}')\n+\n+class TestStandalonePipelineScript(PipelineScriptTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n+\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/tests/python/SIR_Calibration_Rel_test.py": [
                        [
                            "@@ -0,0 +1,32 @@\n+#\n+# Tests for SIR_Calibration_Abs pipeline - PV-003\n+\n+from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n+from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n+from ST_PipelineUnitTesting.PPOTester import PPOTester\n+from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n+\n+from ElementsKernel.Auxiliary import getAuxiliaryPath\n+\n+\n+pipe_name = 'SIR_Pipelines/SIR_Calibration_Rel'\n+pipscript = 'PipScript_SIR_Calibration_Rel.py'\n+pipdef    = 'PipDef_SIR_Calibration_Rel.xml'\n+package   = 'SIR_Pipelines/PackageDef_SIR.py'\n+\n+\n+class TestPackageDef(PackageDefTester):\n+   package_def = getAuxiliaryPath(package)\n+\n+class TestPipelineScript(PipelineScriptTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n+\n+class TestPipelineDef(PipelineDefTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  pipeline_def = getAuxiliaryPath(f'{pipe_name}/{pipdef}')\n+\n+class TestStandalonePipelineScript(PipelineScriptTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n+\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ]
                    ],
                    "SIR_IAL_Pipelines/tests/python/SIR_Combine_Spectra_test.py": [
                        [
                            "@@ -0,0 +1,30 @@\n+#\n+# Tests for SIR_Combine_Spectra pipeline\n+\n+from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n+from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n+from ST_PipelineUnitTesting.PPOTester import PPOTester\n+from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n+\n+from ElementsKernel.Auxiliary import getAuxiliaryPath\n+\n+pipe_name = 'SIR_Pipelines/SIR_Combine_Spectra'\n+pipscript = 'PipScript_SIR_Combine_Spectra.py'\n+pipdef    = 'PipDef_SIR_Combine_Spectra.xml'\n+package   = 'SIR_Pipelines/PackageDef_SIR.py'\n+\n+\n+class TestPackageDef(PackageDefTester):\n+   package_def = getAuxiliaryPath(package)\n+\n+class TestPipelineScript(PipelineScriptTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n+\n+class TestPipelineDef(PipelineDefTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  pipeline_def = getAuxiliaryPath(f'{pipe_name}/{pipdef}')\n+\n+class TestStandalonePipelineScript(PipelineScriptTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ],
                        [
                            "@@ -1,29 +0,0 @@\n-#\n-# Tests for SIR_Combine_Spectra pipeline\n-\n-from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n-from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n-from ST_PipelineUnitTesting.PPOTester import PPOTester\n-from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n-\n-from ElementsKernel.Auxiliary import getAuxiliaryPath\n-\n-\n-pipe_name = 'SIR_Pipelines/SIR_Combine_Spectra'\n-\n-\n-\n-class TestPackageDef(PackageDefTester):\n-   package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Combine_Spectra.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineDef(PipelineDefTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Combine_Spectra.py')\n-  pipeline_def = getAuxiliaryPath(f'{pipe_name}/PipDef_SIR_Combine_Spectra.xml')\n-\n-class TestStandalonePipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Combine_Spectra.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -1,29 +0,0 @@\n-#\n-# Tests for SIR_Combine_Spectra pipeline\n-\n-from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n-from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n-from ST_PipelineUnitTesting.PPOTester import PPOTester\n-from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n-\n-from ElementsKernel.Auxiliary import getAuxiliaryPath\n-\n-\n-pipe_name = 'SIR_Pipelines/SIR_Combine_Spectra'\n-\n-\n-\n-class TestPackageDef(PackageDefTester):\n-   package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Combine_Spectra.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineDef(PipelineDefTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Combine_Spectra.py')\n-  pipeline_def = getAuxiliaryPath(f'{pipe_name}/PipDef_SIR_Combine_Spectra.xml')\n-\n-class TestStandalonePipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Combine_Spectra.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -1,29 +0,0 @@\n-#\n-# Tests for SIR_Combine_Spectra pipeline\n-\n-from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n-from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n-from ST_PipelineUnitTesting.PPOTester import PPOTester\n-from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n-\n-from ElementsKernel.Auxiliary import getAuxiliaryPath\n-\n-\n-pipe_name = 'SIR_Pipelines/SIR_Combine_Spectra'\n-\n-\n-\n-class TestPackageDef(PackageDefTester):\n-   package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Combine_Spectra.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineDef(PipelineDefTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Combine_Spectra.py')\n-  pipeline_def = getAuxiliaryPath(f'{pipe_name}/PipDef_SIR_Combine_Spectra.xml')\n-\n-class TestStandalonePipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Combine_Spectra.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    "SIR_IAL_Pipelines/tests/python/SIR_Extract_Spectra_test.py": [
                        [
                            "@@ -0,0 +1,32 @@\n+\n+# Tests for SIR_Extract_Spectra pipeline\n+\n+from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n+from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n+from ST_PipelineUnitTesting.PPOTester import PPOTester\n+from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n+\n+from ElementsKernel.Auxiliary import getAuxiliaryPath\n+\n+ \n+pipe_name = 'SIR_Pipelines/SIR_Extract_Spectra'\n+pipscript = 'PipScript_SIR_Extract_Spectra.py'\n+pipdef    = 'PipDef_SIR_Extract_Spectra.xml'\n+package   = 'SIR_Pipelines/PackageDef_SIR.py'\n+\n+\n+class TestPackageDef(PackageDefTester):\n+   package_def = getAuxiliaryPath(package)\n+\n+class TestPipelineScript(PipelineScriptTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n+\n+class TestPipelineDef(PipelineDefTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  pipeline_def = getAuxiliaryPath(f'{pipe_name}/{pipdef}')\n+\n+class TestStandalonePipelineScript(PipelineScriptTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n+\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ],
                        [
                            "@@ -1,29 +0,0 @@\n-\n-# Tests for SIR_Extract_Spectra pipeline\n-\n-from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n-from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n-from ST_PipelineUnitTesting.PPOTester import PPOTester\n-from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n-\n-from ElementsKernel.Auxiliary import getAuxiliaryPath\n-\n-\n-pipe_name = 'SIR_Pipelines/SIR_Extract_Spectra'\n-\n-\n-class TestPackageDef(PackageDefTester):\n-   package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineScript(PipelineScriptTester):\n-   pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Extract_Spectra.py')\n-   package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineDef(PipelineDefTester):\n-   pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Extract_Spectra.py')\n-   pipeline_def = getAuxiliaryPath(f'{pipe_name}/PipDef_SIR_Extract_Spectra.xml')\n-\n-class TestStandalonePipelineScript(PipelineScriptTester):\n-   pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Extract_Spectra.py')\n-   package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -1,29 +0,0 @@\n-\n-# Tests for SIR_Extract_Spectra pipeline\n-\n-from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n-from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n-from ST_PipelineUnitTesting.PPOTester import PPOTester\n-from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n-\n-from ElementsKernel.Auxiliary import getAuxiliaryPath\n-\n-\n-pipe_name = 'SIR_Pipelines/SIR_Extract_Spectra'\n-\n-\n-class TestPackageDef(PackageDefTester):\n-   package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineScript(PipelineScriptTester):\n-   pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Extract_Spectra.py')\n-   package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineDef(PipelineDefTester):\n-   pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Extract_Spectra.py')\n-   pipeline_def = getAuxiliaryPath(f'{pipe_name}/PipDef_SIR_Extract_Spectra.xml')\n-\n-class TestStandalonePipelineScript(PipelineScriptTester):\n-   pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Extract_Spectra.py')\n-   package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -1,29 +0,0 @@\n-\n-# Tests for SIR_Extract_Spectra pipeline\n-\n-from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n-from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n-from ST_PipelineUnitTesting.PPOTester import PPOTester\n-from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n-\n-from ElementsKernel.Auxiliary import getAuxiliaryPath\n-\n-\n-pipe_name = 'SIR_Pipelines/SIR_Extract_Spectra'\n-\n-\n-class TestPackageDef(PackageDefTester):\n-   package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineScript(PipelineScriptTester):\n-   pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Extract_Spectra.py')\n-   package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineDef(PipelineDefTester):\n-   pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Extract_Spectra.py')\n-   pipeline_def = getAuxiliaryPath(f'{pipe_name}/PipDef_SIR_Extract_Spectra.xml')\n-\n-class TestStandalonePipelineScript(PipelineScriptTester):\n-   pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Extract_Spectra.py')\n-   package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    "SIR_IAL_Pipelines/tests/python/SIR_Process_Field_Tu_test.py": [
                        [
                            "@@ -0,0 +1,31 @@\n+#\n+# Tests for SIR_Proocess_Field_TU pipeline\n+\n+from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n+from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n+from ST_PipelineUnitTesting.PPOTester import PPOTester\n+from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n+\n+from ElementsKernel.Auxiliary import getAuxiliaryPath\n+\n+pipe_name = 'SIR_Pipelines/SIR_Process_Field_Tu'\n+pipscript = 'PipScript_SIR_Process_Field_Tu.py'\n+pipdef    = 'PipDef_SIR_Process_Field_Tu.xml'\n+package   = 'SIR_Pipelines/PackageDef_SIR.py'\n+\n+\n+class TestPackageDef(PackageDefTester):\n+   package_def = getAuxiliaryPath(package)\n+\n+class TestPipelineScript(PipelineScriptTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n+\n+class TestPipelineDef(PipelineDefTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  pipeline_def = getAuxiliaryPath(f'{pipe_name}/{pipdef}')\n+\n+class TestStandalonePipelineScript(PipelineScriptTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n+\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ],
                        [
                            "@@ -1,28 +0,0 @@\n-#\n-# Tests for SIR_Proocess_Field_TU pipeline\n-\n-from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n-from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n-from ST_PipelineUnitTesting.PPOTester import PPOTester\n-from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n-\n-from ElementsKernel.Auxiliary import getAuxiliaryPath\n-\n-\n-pipe_name = 'SIR_Pipelines/SIR_Process_Field_Tu'\n-\n-\n-class TestPackageDef(PackageDefTester):\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Process_Field_Tu.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineDef(PipelineDefTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Process_Field_Tu.py')\n-  pipeline_def = getAuxiliaryPath(f'{pipe_name}/PipDef_SIR_Process_Field_Tu.xml')\n-\n-class TestStandalonePipelineScript(StandalonePipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Process_Field_Tu.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -1,28 +0,0 @@\n-#\n-# Tests for SIR_Proocess_Field_TU pipeline\n-\n-from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n-from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n-from ST_PipelineUnitTesting.PPOTester import PPOTester\n-from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n-\n-from ElementsKernel.Auxiliary import getAuxiliaryPath\n-\n-\n-pipe_name = 'SIR_Pipelines/SIR_Process_Field_Tu'\n-\n-\n-class TestPackageDef(PackageDefTester):\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Process_Field_Tu.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineDef(PipelineDefTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Process_Field_Tu.py')\n-  pipeline_def = getAuxiliaryPath(f'{pipe_name}/PipDef_SIR_Process_Field_Tu.xml')\n-\n-class TestStandalonePipelineScript(StandalonePipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Process_Field_Tu.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -1,28 +0,0 @@\n-#\n-# Tests for SIR_Proocess_Field_TU pipeline\n-\n-from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n-from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n-from ST_PipelineUnitTesting.PPOTester import PPOTester\n-from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n-\n-from ElementsKernel.Auxiliary import getAuxiliaryPath\n-\n-\n-pipe_name = 'SIR_Pipelines/SIR_Process_Field_Tu'\n-\n-\n-class TestPackageDef(PackageDefTester):\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Process_Field_Tu.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineDef(PipelineDefTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Process_Field_Tu.py')\n-  pipeline_def = getAuxiliaryPath(f'{pipe_name}/PipDef_SIR_Process_Field_Tu.xml')\n-\n-class TestStandalonePipelineScript(StandalonePipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Process_Field_Tu.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    "SIR_IAL_Pipelines/tests/python/SIR_Process_Field_test.py": [
                        [
                            "@@ -0,0 +1,30 @@\n+#\n+# Tests for SIR_Process_Field pipeline\n+\n+from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n+from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n+from ST_PipelineUnitTesting.PPOTester import PPOTester\n+from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n+\n+from ElementsKernel.Auxiliary import getAuxiliaryPath\n+\n+pipe_name = 'SIR_Pipelines/SIR_Process_Field'\n+pipscript = 'PipScript_SIR_Process_Field.py'\n+pipdef    = 'PipDef_SIR_Process_Field.xml'\n+package   = 'SIR_Pipelines/PackageDef_SIR.py'\n+\n+\n+class TestPackageDef(PackageDefTester):\n+   package_def = getAuxiliaryPath(package)\n+\n+class TestPipelineScript(PipelineScriptTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n+\n+class TestPipelineDef(PipelineDefTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  pipeline_def = getAuxiliaryPath(f'{pipe_name}/{pipdef}')\n+\n+class TestStandalonePipelineScript(PipelineScriptTester):\n+  pipeline_script = getAuxiliaryPath(f'{pipe_name}/{pipscript}')\n+  package_def = getAuxiliaryPath(package)\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_IAL_Pipelines into develop",
                            "Tava",
                            "2023-08-14T08:12:39.000+02:00",
                            "78bcd1744c4bdb18c532f053e866a5f44c39ed51"
                        ],
                        [
                            "@@ -1,28 +0,0 @@\n-#\n-# Tests for SIR_Process_Field pipeline\n-\n-from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n-from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n-from ST_PipelineUnitTesting.PPOTester import PPOTester\n-from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n-\n-from ElementsKernel.Auxiliary import getAuxiliaryPath\n-\n-\n-pipe_name = 'SIR_Pipelines/SIR_Process_Field'\n-\n-\n-class TestPackageDef(PackageDefTester):\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Process_Field.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineDef(PipelineDefTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Process_Field.py')\n-  pipeline_def = getAuxiliaryPath(f'{pipe_name}/PipDef_SIR_Process_Field.xml')\n-\n-class TestStandalonePipelineScript(StandalonePipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Process_Field.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ],
                        [
                            "@@ -1,28 +0,0 @@\n-#\n-# Tests for SIR_Process_Field pipeline\n-\n-from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n-from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n-from ST_PipelineUnitTesting.PPOTester import PPOTester\n-from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n-\n-from ElementsKernel.Auxiliary import getAuxiliaryPath\n-\n-\n-pipe_name = 'SIR_Pipelines/SIR_Process_Field'\n-\n-\n-class TestPackageDef(PackageDefTester):\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Process_Field.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineDef(PipelineDefTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Process_Field.py')\n-  pipeline_def = getAuxiliaryPath(f'{pipe_name}/PipDef_SIR_Process_Field.xml')\n-\n-class TestStandalonePipelineScript(StandalonePipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Process_Field.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n",
                            "Updated IAL pipelines to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "c9ecd02c166cdf29de5cdae7ded3c3cfa568258a"
                        ],
                        [
                            "@@ -1,28 +0,0 @@\n-#\n-# Tests for SIR_Process_Field pipeline\n-\n-from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n-from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n-from ST_PipelineUnitTesting.PPOTester import PPOTester\n-from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n-\n-from ElementsKernel.Auxiliary import getAuxiliaryPath\n-\n-\n-pipe_name = 'SIR_Pipelines/SIR_Process_Field'\n-\n-\n-class TestPackageDef(PackageDefTester):\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Process_Field.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineDef(PipelineDefTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Process_Field.py')\n-  pipeline_def = getAuxiliaryPath(f'{pipe_name}/PipDef_SIR_Process_Field.xml')\n-\n-class TestStandalonePipelineScript(StandalonePipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Process_Field.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n",
                            "DM9.2 and eden 3.1 for OPT and CRV model pipelines",
                            "Tava",
                            "2023-06-29T22:00:22.000+02:00",
                            "0eedf55094bbcf4314ea191f3c09bcb4883297f3"
                        ]
                    ],
                    ".jenkinsFile": [
                        [
                            "@@ -1,3 +1,3 @@\n #!groovy\n-@Library('integration-library@release-9') _\n-pipelineElements(artifactId:\"SIR_IAL_Pipelines\", component:'eden.3.0')\n\\ No newline at end of file\n+@Library(value='integration-library@release-10') _\n+pipelineElements(name:\"SIR_IAL_Pipelines\", component:'eden.3.1')\n\\ No newline at end of file\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ]
                    ],
                    "Makefile": [
                        [
                            "@@ -58,5 +58,4 @@ else\n endif\n \n $(info Using the $(ELEMENTS_MAKE_LIB_FILE) make library)\n-include $(ELEMENTS_MAKE_LIB_FILE)\n-\n+include $(ELEMENTS_MAKE_LIB_FILE)\n\\ No newline at end of file\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Abs/PipDef_SIR_Calibration_Abs.xml": [
                        [
                            "@@ -1,24 +1,25 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-\n-    <EdenVersion>@EDEN@</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Calibration_Abs_@CMAKE_PROJECT_VERSION@</Id> \n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n+<!-- THANK YOU ST FOR CHANGING EVERYTHING INTO A \"MINOR\" RELEASE OF THE DATAMODEL\n+     - very professional -\n+-->\n+\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n+\n+    <Id>SIR_Calibration_Abs_@CMAKE_PROJECT_VERSION@</Id>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineScriptPath>SIR_Calibration_Abs/PipScript_SIR_Calibration_Abs.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n-    <InputDataSet>\n+\n+    <InputDataSetPlan>\n \n <!-- raw_frame -->\n         <KeyProductInputDataPlan>\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n                 (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n                 (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n                 (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n@@ -38,16 +39,17 @@\n             <InputPortName>tu_cat</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n             <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND \n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (tu_cat.Header.PPOId == \"UNKNOWN\") AND \n+                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n+                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n                 (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n-                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")\n+                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")AND\n+                (tu_cat.Data.MagnitudeLimit != \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>30</Max>\n+                <Max>100</Max>\n             </Cardinality>\n         </InputDataPlan>\n \n@@ -58,13 +60,12 @@\n             <InputQuerySpecPlan>(mdb.Header.ProductId.LimitedString == \"UNKNOWN\")</InputQuerySpecPlan>\n             <FileFiltering>\n                 <FilesToInclude>\n-                    \"Calibrators_*\",\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\" , \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\" , \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\" , \n-                    \"NISP_GrismTransmission*\" , \n+                    \"EUC_NISP_NLSPECTRO*\" ,\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n+                    \"NISP_GrismTransmission*\" ,\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -80,7 +81,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -95,7 +96,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -110,7 +111,7 @@\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -125,7 +126,7 @@\n             <InputPortName>crv_model</InputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -140,7 +141,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -155,7 +156,7 @@\n             <InputPortName>abs_calib</InputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n                 (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -170,7 +171,7 @@\n             <InputPortName>rel_calib</InputPortName>\n             <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n               (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -185,7 +186,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -200,7 +201,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -210,26 +211,10 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-\n-<!-- mah... to pass the tests.... -->\n-        <Dependencies>\n-            <GroupedBy>raw_frame.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <!-- SEGMAP  cover NIS data-->\n-            <LinkedBy refPort=\"tu_cat\">\n-                <!-- Ensures that masterflat cal date contains VIS Ob date -->\n-                <Query>raw_frame.Header.PPOId == tu_cat.Header.PPOId</Query>\n-            </LinkedBy>\n-            <LinkedBy refPort=\"tu_cat\">\n-                <!-- Ensures that masterflat cal date contains VIS Ob date -->\n-                <Query>raw_frame.Header.PPOId == tu_cat.Header.PPOId</Query>\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet>\n-\n-\n-    <OutputDataSet>\n+    </InputDataSetPlan>\n \n     <!-- Updated Absolute calibration product -->\n+    <OutputDataSet>\n         <OutputDataProduct>\n             <OutputPortName>new_abs_calib</OutputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Ids/PipDef_SIR_Calibration_Ids.xml": [
                        [
                            "@@ -1,24 +1,21 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-\n-    <EdenVersion>@EDEN@</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Calibration_Ids_@CMAKE_PROJECT_VERSION@</Id> \n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n+\n+    <Id>SIR_Calibration_Ids_@CMAKE_PROJECT_VERSION@</Id>\n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineScriptPath>SIR_Calibration_Ids/PipScript_SIR_Calibration_Ids.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n-    <InputDataSet>\n+\n+    <InputDataSetPlan>\n \n <!-- raw_frame -->\n         <KeyProductInputDataPlan>\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n                 (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n                 (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n                 (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n@@ -38,11 +35,12 @@\n             <InputPortName>tu_cat</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n             <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND \n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (tu_cat.Header.PPOId == \"UNKNOWN\") AND \n+                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n+                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n                 (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n-                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")\n+                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")  AND\n+                (tu_cat.Data.MagnitudeLimit != \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -58,13 +56,12 @@\n             <InputQuerySpecPlan>(mdb.Header.ProductId.LimitedString == \"UNKNOWN\")</InputQuerySpecPlan>\n             <FileFiltering>\n                 <FilesToInclude>\n-                    \"Calibrators_*\",\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\" , \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\" , \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\" , \n-                    \"NISP_GrismTransmission*\" , \n+                    \"EUC_NISP_NLSPECTRO*\" ,\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n+                    \"NISP_GrismTransmission*\" ,\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -80,7 +77,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -95,7 +92,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -110,7 +107,7 @@\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -125,7 +122,7 @@\n             <InputPortName>crv_model</InputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -140,7 +137,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -155,7 +152,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -170,7 +167,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -180,21 +177,7 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-\n-<!-- mah... to pass the tests.... -->\n-        <Dependencies>\n-            <GroupedBy>raw_frame.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <!-- SEGMAP  cover NIS data-->\n-            <LinkedBy refPort=\"tu_cat\">\n-                <!-- Ensures that masterflat cal date contains VIS Ob date -->\n-                <Query>raw_frame.Header.PPOId == tu_cat.Header.PPOId</Query>\n-            </LinkedBy>\n-            <LinkedBy refPort=\"tu_cat\">\n-                <!-- Ensures that masterflat cal date contains VIS Ob date -->\n-                <Query>raw_frame.Header.PPOId == tu_cat.Header.PPOId</Query>\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet>\n+    </InputDataSetPlan>\n \n \n     <OutputDataSet>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Opt_Mer/PipDef_SIR_Calibration_Opt_Mer.xml": [
                        [
                            "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Calibration_Rel/PipDef_SIR_Calibration_Rel.xml": [
                        [
                            "@@ -1,24 +1,24 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n-\n-    <EdenVersion>@EDEN@</EdenVersion>\n-    <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Calibration_Ids_@CMAKE_PROJECT_VERSION@</Id> \n-    <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n-    <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n+<!-- THANK YOU ST FOR CHANGING EVERYTHING INTO A \"MINOR\" RELEASE OF THE DATAMODEL\n+     - very professional -\n+-->\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n+\n+    <Id>SIR_Calibration_Ids_@CMAKE_PROJECT_VERSION@</Id>\n+    <ArchiveProcessingFlag>EAS_SERVICE_ONLY</ArchiveProcessingFlag>\n     <PipelineScriptPath>SIR_Calibration_Rel/PipScript_SIR_Calibration_Rel.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n-    <InputDataSet>\n+\n+    <InputDataSetPlan>\n \n <!-- raw_frame -->\n         <KeyProductInputDataPlan>\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n                 (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n                 (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n                 (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n@@ -38,16 +38,47 @@\n             <InputPortName>tu_cat</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n             <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND \n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (tu_cat.Header.PPOId == \"UNKNOWN\") AND \n+                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n+                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n                 (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\") AND\n-                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")\n+                (tu_cat.Data.EuclidPointingId == \"UNKNOWN\")AND\n+                (tu_cat.Data.MagnitudeLimit != \"UNKNOWN\")\n+            </InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1000</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+\n+<!-- NIR master dark -->\n+        <InputDataPlan>\n+            <InputPortName>nir_dark</InputPortName>\n+            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n+            <InputQuerySpecPlan>\n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n+                (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n+            </InputQuerySpecPlan>\n+            <Cardinality>\n+                <Optionality>MANDATORY</Optionality>\n+                <Min>1</Min>\n+                <Max>1</Max>\n+            </Cardinality>\n+        </InputDataPlan>\n+\n+<!-- NIR Bad Pixel mask -->\n+        <InputDataPlan>\n+            <InputPortName>nir_badpix</InputPortName>\n+            <DataProductType>DpdNirBadPixelMask</DataProductType>\n+            <InputQuerySpecPlan>\n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n+                (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n                 <Min>1</Min>\n-                <Max>30</Max>\n+                <Max>1</Max>\n             </Cardinality>\n         </InputDataPlan>\n \n@@ -58,13 +89,12 @@\n             <InputQuerySpecPlan>(mdb.Header.ProductId.LimitedString == \"UNKNOWN\")</InputQuerySpecPlan>\n             <FileFiltering>\n                 <FilesToInclude>\n-                    \"Calibrators_*\",\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\" , \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\" , \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\" , \n-                    \"NISP_GrismTransmission*\" , \n+                    \"EUC_NISP_NLSPECTRO*\" ,\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n+                    \"NISP_GrismTransmission*\" ,\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -75,13 +105,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- Sir Configuration -->\n+<!-- Detector scaling -->\n         <InputDataPlan>\n-            <InputPortName>sir_config</InputPortName>\n-            <DataProductType>DpdSirConfigurationSet</DataProductType>\n+            <InputPortName>det_scaling</InputPortName>\n+            <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n-                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n+                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -95,7 +125,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -110,7 +140,7 @@\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -125,7 +155,7 @@\n             <InputPortName>crv_model</InputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -135,27 +165,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- Detector scaling -->\n-        <InputDataPlan>\n-            <InputPortName>det_scaling</InputPortName>\n-            <DataProductType>DpdSirDetectorScaling</DataProductType>\n-            <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n-                (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n \n <!-- Absolute flux scaling -->\n         <InputDataPlan>\n             <InputPortName>abs_calib</InputPortName>\n             <DataProductType>DpdSirAbsoluteFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+                (abs_calib.Header.ManualValidationStatus != \"INVALID\") AND\n                 (abs_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -170,7 +186,7 @@\n             <InputPortName>rel_calib</InputPortName>\n             <DataProductType>DpdSirRelativeFluxScaling</DataProductType>\n             <InputQuerySpecPlan>\n-              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND \n+              (rel_calib.Header.ManualValidationStatus != \"INVALID\") AND\n               (rel_calib.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -180,28 +196,13 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-<!-- NIR master dark -->\n-        <InputDataPlan>\n-            <InputPortName>nir_dark</InputPortName>\n-            <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n-            <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n-                (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n-            </InputQuerySpecPlan>\n-            <Cardinality>\n-                <Optionality>MANDATORY</Optionality>\n-                <Min>1</Min>\n-                <Max>1</Max>\n-            </Cardinality>\n-        </InputDataPlan>\n-\n-<!-- NIR Bad Pixel mask -->\n+<!-- Sir Configuration -->\n         <InputDataPlan>\n-            <InputPortName>nir_badpix</InputPortName>\n-            <DataProductType>DpdNirBadPixelMask</DataProductType>\n+            <InputPortName>sir_config</InputPortName>\n+            <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n-                (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n+                (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n                 <Optionality>MANDATORY</Optionality>\n@@ -210,22 +211,7 @@\n             </Cardinality>\n         </InputDataPlan>\n \n-\n-<!-- mah... to pass the tests.... -->\n-        <Dependencies>\n-            <GroupedBy>raw_frame.Data.ObservationSequence.ObservationId</GroupedBy>\n-            <!-- SEGMAP  cover NIS data-->\n-            <LinkedBy refPort=\"tu_cat\">\n-                <!-- Ensures that masterflat cal date contains VIS Ob date -->\n-                <Query>raw_frame.Header.PPOId == tu_cat.Header.PPOId</Query>\n-            </LinkedBy>\n-            <LinkedBy refPort=\"tu_cat\">\n-                <!-- Ensures that masterflat cal date contains VIS Ob date -->\n-                <Query>raw_frame.Header.PPOId == tu_cat.Header.PPOId</Query>\n-            </LinkedBy>\n-        </Dependencies>\n-    </InputDataSet>\n-\n+    </InputDataSetPlan>\n \n     <OutputDataSet>\n         <OutputDataProduct>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ]
                    ],
                    "SIR_IAL_Pipelines/auxdir/SIR_Pipelines/SIR_Process_Background/PipDef_SIR_Process_Background.xml": [
                        [
                            "@@ -1,11 +1,11 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<tsk1:PipelineDef xmlns:tsk1=\"http://euclid.esa.org/schema/interfaces/sys/tsk\">\n+<tsk1:PipelineDef xmlns:tsk1=\"http://ecdm.euclid-ec.org/schema/interfaces/sys/orc\">\n \n     <EdenVersion>@EDEN@</EdenVersion>\n     <CommonDataModelVersion>@ST_DM_VERSION@</CommonDataModelVersion>\n-    <Id>SIR_Process_Background_@CMAKE_PROJECT_VERSION@</Id> \n+    <Id>SIR_Process_Background_@CMAKE_PROJECT_VERSION@</Id>\n     <PipelineVersion>@CMAKE_PROJECT_VERSION@</PipelineVersion>\n-    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> \n+    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag>\n     <PipelineContext>@IAL_CONTEXT@</PipelineContext>\n     <PipelineScriptPath>SIR_Process_Background/PipScript_SIR_Process_Background.py</PipelineScriptPath>\n     <PipelineRootPath>@ELEMENTS_BASE_DIR@/@PROJECT_NAME@/@PROJECT_VERSION@/InstallArea/@BINARY_TAG@/auxdir/SIR_Pipelines/</PipelineRootPath>\n@@ -16,9 +16,9 @@\n             <InputPortName>raw_frame</InputPortName>\n             <DataProductType>DpdNispRawFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND \n-                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND \n-                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND \n+                (raw_frame.Header.ManualValidationStatus != \"INVALID\") AND\n+                (raw_frame.Data.ImgType.Technique == \"SPECTROIMAGE\") AND\n+                (raw_frame.Header.DataSetRelease == \"UNKNOWN\") AND\n                 (raw_frame.Data.ObservationSequence.ObservationId == UNKNOWN) AND\n                 (raw_frame.Data.ObservationSequence.PointingId == UNKNOWN) AND\n                 (raw_frame.Data.GrismWheelPos == \"UNKNOWN\") AND\n@@ -39,11 +39,11 @@\n             <FileFiltering>\n                 <FilesToInclude>\n                     \"EUC_NISP_GAIN*\",\n-                    \"EUC_NISP_H2RG-NONLINEARITY*\" , \n-                    \"EUC_NISP_Saturation*\" , \n-                    \"EUC_NISP_SINGLEFRAMEOUT*\" , \n-                    \"EUC_NISP-S_RGSASBUILD_PSF*\" , \n-                    \"NISP_GrismTransmission*\" , \n+                    \"EUC_NISP_H2RG-NONLINEARITY*\" ,\n+                    \"EUC_NISP_Saturation*\" ,\n+                    \"EUC_NISP_SINGLEFRAMEOUT*\" ,\n+                    \"EUC_NISP-S_RGSASBUILD_PSF*\" ,\n+                    \"NISP_GrismTransmission*\" ,\n                     \"NISPDetector*\"\n                 </FilesToInclude>\n             </FileFiltering>\n@@ -59,7 +59,7 @@\n             <InputPortName>sir_config</InputPortName>\n             <DataProductType>DpdSirConfigurationSet</DataProductType>\n             <InputQuerySpecPlan>\n-                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND \n+                (sir_config.Header.ManualValidationStatus != \"INVALID\") AND\n                 (sir_config.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -74,7 +74,7 @@\n             <InputPortName>opt_model</InputPortName>\n             <DataProductType>DpdSirOptModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (opt_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (opt_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -89,7 +89,7 @@\n             <InputPortName>ids_model</InputPortName>\n             <DataProductType>DpdSirIdsModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (ids_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (ids_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -104,7 +104,7 @@\n             <InputPortName>crv_model</InputPortName>\n             <DataProductType>DpdSirCrvModel</DataProductType>\n             <InputQuerySpecPlan>\n-                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND \n+                (crv_model.Header.ManualValidationStatus != \"INVALID\") AND\n                 (crv_model.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -119,7 +119,7 @@\n             <InputPortName>det_scaling</InputPortName>\n             <DataProductType>DpdSirDetectorScaling</DataProductType>\n             <InputQuerySpecPlan>\n-                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND \n+                (det_scaling.Header.ManualValidationStatus != \"INVALID\") AND\n                 (det_scaling.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -134,7 +134,7 @@\n             <InputPortName>nir_dark</InputPortName>\n             <DataProductType>DpdNirMasterDarkFrame</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_dark.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_dark.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -149,7 +149,7 @@\n             <InputPortName>nir_badpix</InputPortName>\n             <DataProductType>DpdNirBadPixelMask</DataProductType>\n             <InputQuerySpecPlan>\n-                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND \n+                (nir_badpix.Header.ManualValidationStatus != \"INVALID\") AND\n                 (nir_badpix.Header.ProductId.LimitedString == \"UNKNOWN\")\n             </InputQuerySpecPlan>\n             <Cardinality>\n@@ -164,9 +164,9 @@\n             <InputPortName>tu_cat</InputPortName>\n             <DataProductType>DpdTrueUniverseOutput</DataProductType>\n             <InputQuerySpecPlan>\n-                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND \n-                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND \n-                (tu_cat.Header.PPOId == \"UNKNOWN\") AND \n+                (tu_cat.Header.ManualValidationStatus != \"INVALID\") AND\n+                (tu_cat.Header.DataSetRelease == \"UNKNOWN\") AND\n+                (tu_cat.Header.PPOId == \"UNKNOWN\") AND\n                 (tu_cat.Data.EuclidPointingId == \"UNKNOWN\") AND\n                 (tu_cat.Data.InputProductId.LimitedString LIKE \"UNKNOWN\")\n             </InputQuerySpecPlan>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ]
                    ],
                    "SIR_IAL_Pipelines/tests/python/SIR_Calibration_Opt_Mer_test.py": [
                        [
                            "@@ -1,29 +0,0 @@\n-#\n-# Tests for SIR_Calibration_Opt pipeline\n-\n-from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n-from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n-from ST_PipelineUnitTesting.PPOTester import PPOTester\n-from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n-\n-from ElementsKernel.Auxiliary import getAuxiliaryPath\n-\n-\n-pipe_name = 'SIR_Pipelines/SIR_Calibration_Opt_Mer'\n-\n-\n-\n-class TestPackageDef(PackageDefTester):\n-   package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Calibration_Opt_Mer.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineDef(PipelineDefTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Calibration_Opt_Mer.py')\n-  pipeline_def = getAuxiliaryPath(f'{pipe_name}/PipDef_SIR_Calibration_Opt_Mer.xml')\n-\n-class TestStandalonePipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Calibration_Opt_Mer.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ]
                    ],
                    "SIR_IAL_Pipelines/tests/python/SIR_Calibration_Rel.py": [
                        [
                            "@@ -1,29 +0,0 @@\n-#\n-# Tests for SIR_Calibration_Abs pipeline - PV-003\n-\n-from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n-from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n-from ST_PipelineUnitTesting.PPOTester import PPOTester\n-from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n-\n-from ElementsKernel.Auxiliary import getAuxiliaryPath\n-\n-\n-pipe_name = 'SIR_Pipelines/SIR_Calibration_Rel'\n-\n-\n-\n-class TestPackageDef(PackageDefTester):\n-   package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Calibration_Rel.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineDef(PipelineDefTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Calibration_Rel.py')\n-  pipeline_def = getAuxiliaryPath(f'{pipe_name}/PipDef_SIR_Calibration_Rel.xml')\n-\n-class TestStandalonePipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Calibration_Rel.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ]
                    ],
                    "SIR_IAL_Pipelines/tests/python/SIR_Process_Background.py": [
                        [
                            "@@ -1,28 +0,0 @@\n-#\n-# Tests for SIR_Process_Field pipeline\n-\n-from ST_PipelineUnitTesting.PackageDefTester import PackageDefTester\n-from ST_PipelineUnitTesting.PipelineScriptTester import PipelineScriptTester, StandalonePipelineScriptTester\n-from ST_PipelineUnitTesting.PPOTester import PPOTester\n-from ST_PipelineUnitTesting.PipelineDefTester import PipelineDefTester\n-\n-from ElementsKernel.Auxiliary import getAuxiliaryPath\n-\n-\n-pipe_name = 'SIR_Pipelines/SIR_Process_Background'\n-\n-\n-class TestPackageDef(PackageDefTester):\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineScript(PipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Process_Background.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n-\n-class TestPipelineDef(PipelineDefTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Process_Background.py')\n-  pipeline_def = getAuxiliaryPath(f'{pipe_name}/PipDef_SIR_Process_Background.xml')\n-\n-class TestStandalonePipelineScript(StandalonePipelineScriptTester):\n-  pipeline_script = getAuxiliaryPath(f'{pipe_name}/PipScript_SIR_Process_Background.py')\n-  package_def = getAuxiliaryPath('SIR_Pipelines/PackageDef_SIR.py')\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T12:15:54.000+00:00",
                            "9abb31f64dad891daa77dd7bfc48bf801d2f7267"
                        ]
                    ]
                },
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": [
                    {
                        "name": "3.1.2",
                        "created_at": "2023-03-09T15:13:46.000+01:00",
                        "author_name": "DMaino"
                    }
                ]
            },
            "ycopin/SIR-SDD": {
                "start date": "2023-06-09 09:00",
                "end date": "2023-08-16 15:00",
                "start tag": "> v1.0",
                "end tag": "> v1.0",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": [
                    {
                        "name": "v1.0",
                        "created_at": "2021-11-30T09:45:18.000-08:00",
                        "author_name": "Jeff Jacobson"
                    }
                ]
            },
            "PF-SIR/SIR_Calibration": {
                "start date": "2023-06-09 09:00",
                "end date": "2023-08-16 15:00",
                "start tag": "> 3.2.0",
                "end tag": "> 4.0.0",
                "count_files_modified": "32",
                "modifications_by_file": {
                    "CMakeLists.txt": [
                        [
                            "@@ -6,5 +6,5 @@ find_package(ElementsProject)\n #---------------------------------------------------------------\n \n # Declare project name and version\n-elements_project(SIR_Calibration 4.0 USE SIR_Pipeline 4.0)\n+elements_project(SIR_Calibration 4.1 USE SIR_Pipeline 4.1)\n \n",
                            "bump to pipeline 4.1 and version 4.1",
                            "Tava",
                            "2023-08-11T15:54:37.000+02:00",
                            "ab3ef514aae7021fc45df3d56d99c9bb07bb9a4a"
                        ]
                    ],
                    "SIR_ModelsCalibration/python/SIR_ModelsCalibration/IDSModelCalibration.py": [
                        [
                            "@@ -1260,24 +1260,25 @@ class IDSModelCalibrationCore(ModelCalibrationCore):\n         param = ppr_dict.genericKVParam()\n         param.Key = f'{prefix}_measured_lines'\n         param.Description = f'{prefix}: list of used lines for the calibration'\n-        param.StringValue = np.array_str(self.lines_catalog)\n+        param.StringValue = np.array_str(self.lines_catalog, precision=2)\n         self.dq_parameters.Parameter.append(param)\n \n-        deltas=self._compute_deltas()\n+        deltas = self._compute_deltas()\n \n         for k, line in enumerate(self.lines_catalog):\n             values = deltas[line]\n-            if len(values) == 0:\n-                continue\n-\n-            suffix = f'{line}_{k:02d}'\n-\n+            suffix = f'{line:.2f}_{k:02d}'\n+            \n             param = ppr_dict.genericKVParam()\n             param.Key = f'{prefix}_Number_of_measures_{suffix}'\n             param.Description = f'{prefix}: Number of measured position for line {line:.2f}'\n             param.IntValue = len(values)\n             param.Unit = 'pixels'\n-            self.dq_parameters.Parameter.append(param)\n+            self.dq_parameters.Parameter.append(param)            \n+            \n+            if len(values) == 0:\n+                continue\n+\n             self._pdf.plot_deltas(line, values)\n \n             param = ppr_dict.genericKVParam()\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_Calibration into develop",
                            "Tava",
                            "2023-08-10T17:28:27.000+02:00",
                            "ecbe37b8d59394d997957c489fd0ba429ed0d460"
                        ],
                        [
                            "@@ -358,6 +358,9 @@ class IDSModelCalibrationCore(ModelCalibrationCore):\n             self._pdf.close()\n \n         if len(self._regions):\n+            self.dump_regions('recovery')\n+        \n+        if self._params.as_bool('regions') is True:\n             logger.info(\"Red circles:   the line positions according with the input IDS model\")\n             logger.info(\"Green circles: the adjusted line positions \")\n             logger.info(\"Blue circles: the line positions according with the final computed model IDS model\")\n@@ -507,7 +510,7 @@ class IDSModelCalibrationCore(ModelCalibrationCore):\n         logger.info(f\"Setting LocationTables for {order} orders\")\n \n         self._location_tables = {}\n-        det_model = DetectorModel(self._gwa_pos, mdb)\n+        det_model = DetectorModel(self._gwa_pos, mdb, rotate=True)\n \n         wrange = self._get_wrange(order)\n \n",
                            "Merge branch 'fix_ids' into 'develop'",
                            "Marco Fumana",
                            "2023-07-20T07:50:35.000+00:00",
                            "18ede2f6c58afaa1325d4e3010b5ee2d6ce13158"
                        ],
                        [
                            "@@ -358,6 +358,9 @@ class IDSModelCalibrationCore(ModelCalibrationCore):\n             self._pdf.close()\n \n         if len(self._regions):\n+            self.dump_regions('recovery')\n+        \n+        if self._params.as_bool('regions') is True:\n             logger.info(\"Red circles:   the line positions according with the input IDS model\")\n             logger.info(\"Green circles: the adjusted line positions \")\n             logger.info(\"Blue circles: the line positions according with the final computed model IDS model\")\n@@ -507,7 +510,7 @@ class IDSModelCalibrationCore(ModelCalibrationCore):\n         logger.info(f\"Setting LocationTables for {order} orders\")\n \n         self._location_tables = {}\n-        det_model = DetectorModel(self._gwa_pos, mdb)\n+        det_model = DetectorModel(self._gwa_pos, mdb, rotate=True)\n \n         wrange = self._get_wrange(order)\n \n",
                            "Fix ids",
                            "Marco Fumana",
                            "2023-07-20T07:50:35.000+00:00",
                            "635754590f397b7f4b0cf183740ed1c5ed360778"
                        ],
                        [
                            "@@ -325,8 +325,8 @@ class IDSModelCalibrationCore(ModelCalibrationCore):\n     \"\"\"Core class to performe Curvature Model calibration\"\"\"\n     DEFAULT_INI = \"SIR_IDSModelCalibration.ini\"\n \n-    def __init__(self, workdir, sci_frame):\n-        super().__init__(workdir, None)\n+    def __init__(self, workdir, sci_frame, key:str = 'PTGID'):\n+        super().__init__(workdir, None, key=key)\n         self._datadir = os.path.join(self._workdir, 'data')\n \n         self._get_sci_frames(sci_frame)\n",
                            "Merge branch 'pivot' into 'develop'",
                            "Marco Fumana",
                            "2023-07-04T17:28:44.000+00:00",
                            "98d1d6538d9431aa147ef10824d9875223993b6b"
                        ],
                        [
                            "@@ -325,8 +325,8 @@ class IDSModelCalibrationCore(ModelCalibrationCore):\n     \"\"\"Core class to performe Curvature Model calibration\"\"\"\n     DEFAULT_INI = \"SIR_IDSModelCalibration.ini\"\n \n-    def __init__(self, workdir, sci_frame):\n-        super().__init__(workdir, None)\n+    def __init__(self, workdir, sci_frame, key:str = 'PTGID'):\n+        super().__init__(workdir, None, key=key)\n         self._datadir = os.path.join(self._workdir, 'data')\n \n         self._get_sci_frames(sci_frame)\n",
                            "Pivot model calibration with DM9.2 and new DetectorLayout",
                            "Marco Fumana",
                            "2023-07-04T17:28:44.000+00:00",
                            "3762cff177929f93aea0196b7402c020169ab0d0"
                        ]
                    ],
                    "SIR_ModelsCalibration/tests/python/IDSModelCalibration_test.py": [
                        [
                            "@@ -629,3 +629,59 @@ class TestIDSModelCalibrationCore:\n         spectra = core.open_decontaminated_spectra('dec.json')\n \n         assert len(spectra) == 0\n+\n+\n+    @patch('SIR_ModelsCalibration.IDSModelCalibration.IDSModelCalibrationCore.__init__', return_value=None)\n+    def test_lines_dq(self, mock_init, tmpdir):\n+        core = IDSModelCalibrationCore(tmpdir, None)\n+        core._workdir = tmpdir\n+        core._gwa_pos = 'RGS000'\n+        core._gwa_tilt = 0\n+        core._lines_catalog = np.array([1., 2.127, 0.234])\n+        core.dq_parameters = ppr_dict.genericKeyValueParameters()\n+        core._pdf = PdfBackend(core._workdir, 'IDS_debug.pdf')\n+\n+        core._compute_deltas = MagicMock(return_value={1.: np.array([]), \n+                                                       2.127: np.array([-1., 0., 1., 2.]), \n+                                                       0.234: np.array([3.])})\n+        \n+        core.lines_dq()\n+        \n+        param = core.dq_parameters.Parameter[0] \n+        assert param.Key == 'RGS000_0_Number_measured_lines'\n+        assert param.IntValue == 3\n+        \n+        param = core.dq_parameters.Parameter[1]         \n+        assert param.Key == f'RGS000_0_measured_lines'\n+        assert param.StringValue == \"[1.   2.13 0.23]\"        \n+        \n+        param = core.dq_parameters.Parameter[2]         \n+        assert param.Key == 'RGS000_0_Number_of_measures_1.00_00'\n+        assert param.IntValue == 0        \n+        \n+        param = core.dq_parameters.Parameter[3]         \n+        assert param.Key == 'RGS000_0_Number_of_measures_2.13_01'\n+        assert param.IntValue == 4\n+        \n+        param = core.dq_parameters.Parameter[4]         \n+        assert param.Key == 'RGS000_0_mean_2.13_01'\n+        assert np.allclose(param.DoubleValue, np.array([-1., 0., 1., 2.]).mean())\n+        \n+        param = core.dq_parameters.Parameter[5]         \n+        assert param.Key == 'RGS000_0_std_2.13_01'\n+        assert np.allclose(param.DoubleValue, np.array([-1., 0., 1., 2.]).std())\n+                \n+        #Skip histo\n+        param = core.dq_parameters.Parameter[8]         \n+        assert param.Key == 'RGS000_0_Number_of_measures_0.23_02'\n+        assert param.IntValue == 1\n+        \n+        param = core.dq_parameters.Parameter[9]         \n+        assert param.Key == 'RGS000_0_mean_0.23_02'\n+        assert np.allclose(param.DoubleValue, 3.)\n+        \n+        param = core.dq_parameters.Parameter[10]         \n+        assert param.Key == 'RGS000_0_std_0.23_02'\n+        assert np.allclose(param.DoubleValue, 0.0)\n+               \n+                \n\\ No newline at end of file\n",
                            "Merge branch 'develop' of gitlab.euclid-sgs.uk:PF-SIR/SIR_Calibration into develop",
                            "Tava",
                            "2023-08-10T17:28:27.000+02:00",
                            "ecbe37b8d59394d997957c489fd0ba429ed0d460"
                        ]
                    ],
                    "SIR_FluxCalibration/python/SIR_FluxCalibration/SIR_RelFluxModelCalibration.py": [
                        [
                            "@@ -152,11 +152,11 @@ def mainMethod(args):\n         raise IOError(msg)\n \n \n-#    inlocfile = os.path.join(args.workdir, args.inloclist)\n-#    if not os.path.isfile(inlocfile):\n-#        msg = 'Input JSON file {} not found'.format(inlocfile)\n-#        logger.info(msg)\n-#        raise IOError(msg)\n+    inlocfile = os.path.join(args.workdir, args.inloclist)\n+    if not os.path.isfile(inlocfile):\n+        msg = 'Input JSON file {} not found'.format(inlocfile)\n+        logger.info(msg)\n+        raise IOError(msg)\n \n \n \n",
                            "fix input in Rel flux calibration module",
                            "Tava",
                            "2023-08-10T17:28:03.000+02:00",
                            "ab25150eb97fd3d7193a7491ba5bf55d59e410b6"
                        ],
                        [
                            "@@ -34,10 +34,6 @@ import argparse\n import ElementsKernel.Logging as log\n import xml.etree.ElementTree as ET\n \n-from SIR_SpectraDecontamination.LocationTableSet import LocationTableSet\n-from SIR_SpectraDecontamination.LocationTableSetInfo import LocationTableSetInfo\n-\n-from SIR_SpectraDecontamination.DecontaminatedSpectraCollection import DecontaminatedSpectraCollection\n from SIR_SpectraExtraction.DpdExtractedSpectraCollection import DpdExtractedSpectraCollection\n from ST_DataModelBindings.dpd.sir import extractedspectracollection_stub\n \n@@ -107,7 +103,7 @@ def defineSpecificProgramOptions():\n                         help='Working directory path', required=True)\n     parser.add_argument('--inlist',     type=str, required=True,\n                         help='Input file name containing the list of extracted 1D spectra (JSON)')\n-    parser.add_argument('--inloclist',  type=str, required=False\n+    parser.add_argument('--inloclist',  type=str, required=False,\n                         help='Input file name containing the list of XML Location tables (JSON)')\n     parser.add_argument('--ncoeff',     type=str,   default=16,\n                         help='Number of model coefficients per side of detector (default: 16)')\n@@ -156,11 +152,12 @@ def mainMethod(args):\n         raise IOError(msg)\n \n \n-    inlocfile = os.path.join(args.workdir, args.inloclist)\n-    if not os.path.isfile(inlocfile):\n-        msg = 'Input JSON file {} not found'.format(inlocfile)\n-        logger.info(msg)\n-        raise IOError(msg)\n+#    inlocfile = os.path.join(args.workdir, args.inloclist)\n+#    if not os.path.isfile(inlocfile):\n+#        msg = 'Input JSON file {} not found'.format(inlocfile)\n+#        logger.info(msg)\n+#        raise IOError(msg)\n+\n \n \n \n@@ -168,9 +165,6 @@ def mainMethod(args):\n     logger.info('Input JSON file: ' + infile)\n     logger.info('       work dir: ' + args.workdir)\n \n-    # Read input JSON file containing decontaminated spectra\n-#    with open(infile) as f:\n-#        extspecnames = json.load(f)\n \n     grismdict = {'RGS000':0,'RGS180':2,'BGS000':3,'RGS270':1} # not sure about 270 no data to check\n     in_xml = get_input_data(args.workdir, infile)\n@@ -178,6 +172,7 @@ def mainMethod(args):\n     list_grisms = []\n     for xmlname in in_xml:\n         # get HDF5 filename from XML\n+        print(args.workdir,xmlname)\n         extspecnames.append(DpdExtractedSpectraCollection.getHDF5FileNames(args.workdir, xmlname)[0])\n         list_grisms.append(grismdict[getGWPosxml(args.workdir, xmlname)]+getGWTiltxml(args.workdir, xmlname))\n     \n@@ -240,7 +235,7 @@ def mainMethod(args):\n     ValidityRange.TimestampStart = '2010-01-01T00:00:00.0'\n     ValidityRange.TimestampEnd = '2050-01-01T00:00:00.0'\n \n-    product.Data = sir_stub.relativeFluxScaling.Factory(ValidityRange=ValidityRange, CalibrationID='1', CalibrationVersion=1.0)\n+    product.Data = sir_stub.relativeFluxScaling.Factory(ValidityRange=ValidityRange, CalibrationID='1', CalibrationVersion=1.0, Observation=loc.Data.Observation)\n \n     #JX fits_file_storage = sir_stub.relativeFluxScalingFitsFile(format='sir.relativeFluxScaling',version='0.1')  <<<to be corrected!!!\n     fits_file_storage = sir_stub.relativeFluxScalingFitsFile(format='sir.relativeFuxScaling',version='0.1')\n",
                            "solved conflicts",
                            "Tava",
                            "2023-08-10T08:13:00.000+02:00",
                            "e2560a4a29974233456612485684b10a6136da98"
                        ],
                        [
                            "@@ -34,11 +34,8 @@ import argparse\n import ElementsKernel.Logging as log\n import xml.etree.ElementTree as ET\n \n-from SIR_SpectraDecontamination.LocationTableSet import LocationTableSet\n-from SIR_SpectraDecontamination.LocationTableSetInfo import LocationTableSetInfo\n-\n-from SIR_SpectraDecontamination.DecontaminatedSpectraCollection import DecontaminatedSpectraCollection\n from SIR_SpectraExtraction.DpdExtractedSpectraCollection import DpdExtractedSpectraCollection\n+from ST_DataModelBindings.dpd.sir import extractedspectracollection_stub\n \n import matplotlib\n matplotlib.use('Agg')\n@@ -52,6 +49,7 @@ from ST_DataModelBindings.sys import dss_stub\n import ST_DataModelBindings.ins_stub as ins_stub\n from ST_DM_FilenameProvider.FilenameProvider import FileNameProvider\n from SIR_Utilities.DpdGeneric import DpdGeneric\n+from SIR_Utilities.Mdb import Mdb\n \n \n class DpdRelFluxScaling(DpdGeneric):\n@@ -76,6 +74,18 @@ def get_input_data(workdir, extr_list):\n \n     raise Exception(f\"Invalid input file {extr_list}\")\n \n+def getGWTiltxml(workdir,xml_path):\n+    with open(os.path.join(workdir,xml_path)) as xml_file:\n+        xml_text = xml_file.read()\n+        dpd = extractedspectracollection_stub.CreateFromDocument(xml_text)\n+    return dpd.Data.GrismWheelTilt\n+\n+def getGWPosxml(workdir,xml_path):\n+    with open(os.path.join(workdir,xml_path)) as xml_file:\n+        xml_text = xml_file.read()\n+        dpd = extractedspectracollection_stub.CreateFromDocument(xml_text)\n+    return dpd.Data.GrismWheelPos\n+\n def defineSpecificProgramOptions():\n     \"\"\"\n     @brief Allows to define the (command line and configuration file) options\n@@ -94,9 +104,9 @@ def defineSpecificProgramOptions():\n     parser.add_argument('--inlist', type=str, dest='inlist',\n                         help='Input file name containing the list of extracted 1D spectra (JSON)', required=True)\n     parser.add_argument('--inloclist', type=str, dest='inloclist',\n-                        help='Input file name containing the list of XML Location tables (JSON)', required=True)\n+                        help='Input file name containing the list of XML Location tables (JSON)', required=False)\n     parser.add_argument('--ncoeff', type=str, dest='ncoeff', default=16,\n-                        help='Number of model coefficients per side of detector (default: 32)')\n+                        help='Number of model coefficients per side of detector (default: 16)')\n     parser.add_argument('--limmag', type=float, dest='limmag', default=18,\n                         help='Limiting H magnitude of star to be used for calibration (default: 18)')\n     parser.add_argument('--ms_flat', type=str,default='SIR_RelativeFluxScaling.xml',\n@@ -104,10 +114,11 @@ def defineSpecificProgramOptions():\n     parser.add_argument('--calmode', type=int, dest='calmode', default=0,\n                         help='0 for SelfCal data, 1 for random dither positions, 2 for GAIA matched stars (default:0)')\n     parser.add_argument('--iterative', type=int, dest='iterative', default=1,\n-                        help='0 for no iteration, 1 for adding with input response(default:0)')\n+                        help='0 for no iteration, 1 for adding with input response(default:1)')\n     parser.add_argument('--smooth_kernel_sigma', type=int, dest='smooth_kernel_sigma', default=3,\n                         help='width of the gaussian kernel to smooth the output response with')\n-    \n+    parser.add_argument('--mdbfile', type=str, required=True,\n+                        help='The MDB file')\n     parser.add_argument('--output_xml', type=str, dest='output_xml',help='The output xml file', default='SIR_RelativeFluxScaling.xml') #JX\n     parser.add_argument('--logdir', type=str, required=False,\n                         help='The log directory')\n@@ -140,29 +151,34 @@ def mainMethod(args):\n         raise IOError(msg)\n \n \n-    inlocfile = os.path.join(args.workdir, args.inloclist)\n-    if not os.path.isfile(inlocfile):\n-        msg = 'Input JSON file {} not found'.format(inlocfile)\n-        logger.info(msg)\n-        raise IOError(msg)\n+#    inlocfile = os.path.join(args.workdir, args.inloclist)\n+#    if not os.path.isfile(inlocfile):\n+#        msg = 'Input JSON file {} not found'.format(inlocfile)\n+#        logger.info(msg)\n+#        raise IOError(msg)\n+\n \n-    #JX tables = LocationTableSet(args.workdir+'R12/loctabs', inlocfile)\n-    tables = LocationTableSet(LocationTableSetInfo(args.workdir, inlocfile))\n \n \n     # Log validated command line arguments\n     logger.info('Input JSON file: ' + infile)\n     logger.info('       work dir: ' + args.workdir)\n \n-    # Read input JSON file containing decontaminated spectra\n-#    with open(infile) as f:\n-#        extspecnames = json.load(f)\n \n+    grismdict = {'RGS000':0,'RGS180':2,'BGS000':3,'RGS270':1} # not sure about 270 no data to check\n     in_xml = get_input_data(args.workdir, infile)\n     extspecnames=[]\n+    list_grisms = []\n     for xmlname in in_xml:\n         # get HDF5 filename from XML\n+        print(args.workdir,xmlname)\n         extspecnames.append(DpdExtractedSpectraCollection.getHDF5FileNames(args.workdir, xmlname)[0])\n+        list_grisms.append(grismdict[getGWPosxml(args.workdir, xmlname)]+getGWTiltxml(args.workdir, xmlname))\n+    \n+    list_grisms = np.unique(np.array(list_grisms)) # this identifies which grisms will be in the calibration\n+            \n+    mdb = Mdb.load(args.workdir, args.mdbfile)\n+\n     \n     # link to the previous \"fits\" file solution from the input \"XML\" product\n     msflat_xml = os.path.join(args.workdir, args.ms_flat)\n@@ -179,11 +195,17 @@ def mainMethod(args):\n     spatialres = 100 # good to be a factor of 16\n     deltaw = 500 # may increase/decrease depending on needed S/N\n     ndither = 15 # for the GAIA simulation\n-    noisefactor = 0.75 #deep fields have less noise compared to spectra in testing, should be changed to 1 in actual code\n+    noisefactor = 1.0 #deep fields have less noise compared to spectra in testing, should be changed to 1 in actual code\n     ncoeff = int(args.ncoeff)\n \n-    n = SelfCalibWave(extspecnames, tables, ncoeff, args.limmag, args.calmode, noisefactor, deltaw, spatialres, waveres,\n-                      ndither, outdir=args.workdir, ms_flat = msfits)\n+    #JX tables = LocationTableSet(args.workdir+'R12/loctabs', inlocfile)\n+    if args.calmode ==2:\n+        tables = LocationTableSet(args.workdir, inlocfile)    \n+        n = SelfCalibWave(extspecnames, list_grisms, ncoeff, args.limmag, args.calmode, noisefactor, deltaw, spatialres, waveres,\n+                      ndither, mdb, outdir=args.workdir, ms_flat = msfits, tables = tables)\n+    else:\n+        n = SelfCalibWave(extspecnames, list_grisms, ncoeff, args.limmag, args.calmode, noisefactor, deltaw, spatialres, waveres,\n+                          ndither, mdb, outdir=args.workdir, ms_flat = msfits)\n     n.fit()\n \n     #comment out next line to run fast\n@@ -212,7 +234,7 @@ def mainMethod(args):\n     ValidityRange.TimestampStart = '2010-01-01T00:00:00.0'\n     ValidityRange.TimestampEnd = '2050-01-01T00:00:00.0'\n \n-    product.Data = sir_stub.relativeFluxScaling.Factory(ValidityRange=ValidityRange, CalibrationID='1', CalibrationVersion=1.0)\n+    product.Data = sir_stub.relativeFluxScaling.Factory(ValidityRange=ValidityRange, CalibrationID='1', CalibrationVersion=1.0, Observation=loc.Data.Observation)\n \n     #JX fits_file_storage = sir_stub.relativeFluxScalingFitsFile(format='sir.relativeFluxScaling',version='0.1')  <<<to be corrected!!!\n     fits_file_storage = sir_stub.relativeFluxScalingFitsFile(format='sir.relativeFuxScaling',version='0.1')\n",
                            "detlayout bugfix",
                            "shemmati",
                            "2023-08-09T16:29:07.000-07:00",
                            "a178534d2d42b59a205e09ef9f5ebc3de3a4c85c"
                        ],
                        [
                            "@@ -39,6 +39,7 @@ from SIR_SpectraDecontamination.LocationTableSetInfo import LocationTableSetInfo\n \n from SIR_SpectraDecontamination.DecontaminatedSpectraCollection import DecontaminatedSpectraCollection\n from SIR_SpectraExtraction.DpdExtractedSpectraCollection import DpdExtractedSpectraCollection\n+from ST_DataModelBindings.dpd.sir import extractedspectracollection_stub\n \n import matplotlib\n matplotlib.use('Agg')\n@@ -52,6 +53,7 @@ from ST_DataModelBindings.sys import dss_stub\n import ST_DataModelBindings.ins_stub as ins_stub\n from ST_DM_FilenameProvider.FilenameProvider import FileNameProvider\n from SIR_Utilities.DpdGeneric import DpdGeneric\n+from SIR_Utilities.Mdb import Mdb\n \n \n class DpdRelFluxScaling(DpdGeneric):\n@@ -76,6 +78,18 @@ def get_input_data(workdir, extr_list):\n \n     raise Exception(f\"Invalid input file {extr_list}\")\n \n+def getGWTiltxml(workdir,xml_path):\n+    with open(os.path.join(workdir,xml_path)) as xml_file:\n+        xml_text = xml_file.read()\n+        dpd = extractedspectracollection_stub.CreateFromDocument(xml_text)\n+    return dpd.Data.GrismWheelTilt\n+\n+def getGWPosxml(workdir,xml_path):\n+    with open(os.path.join(workdir,xml_path)) as xml_file:\n+        xml_text = xml_file.read()\n+        dpd = extractedspectracollection_stub.CreateFromDocument(xml_text)\n+    return dpd.Data.GrismWheelPos\n+\n def defineSpecificProgramOptions():\n     \"\"\"\n     @brief Allows to define the (command line and configuration file) options\n@@ -89,27 +103,29 @@ def defineSpecificProgramOptions():\n \n     parser = argparse.ArgumentParser()\n \n-    parser.add_argument('--workdir', type=str, dest='workdir',\n+    parser.add_argument('--workdir',    type=str,\n                         help='Working directory path', required=True)\n-    parser.add_argument('--inlist', type=str, dest='inlist',\n-                        help='Input file name containing the list of extracted 1D spectra (JSON)', required=True)\n-    parser.add_argument('--inloclist', type=str, dest='inloclist',\n-                        help='Input file name containing the list of XML Location tables (JSON)', required=True)\n-    parser.add_argument('--ncoeff', type=str, dest='ncoeff', default=16,\n-                        help='Number of model coefficients per side of detector (default: 32)')\n-    parser.add_argument('--limmag', type=float, dest='limmag', default=18,\n+    parser.add_argument('--inlist',     type=str, required=True,\n+                        help='Input file name containing the list of extracted 1D spectra (JSON)')\n+    parser.add_argument('--inloclist',  type=str, required=False\n+                        help='Input file name containing the list of XML Location tables (JSON)')\n+    parser.add_argument('--ncoeff',     type=str,   default=16,\n+                        help='Number of model coefficients per side of detector (default: 16)')\n+    parser.add_argument('--limmag',     type=float, default=18,\n                         help='Limiting H magnitude of star to be used for calibration (default: 18)')\n-    parser.add_argument('--ms_flat', type=str,default='SIR_RelativeFluxScaling.xml',\n+    parser.add_argument('--ms_flat',    type=str,\n                         help='The starting flat field solution product')\n-    parser.add_argument('--calmode', type=int, dest='calmode', default=0,\n+    parser.add_argument('--calmode',    type=int,   default=0,\n                         help='0 for SelfCal data, 1 for random dither positions, 2 for GAIA matched stars (default:0)')\n-    parser.add_argument('--iterative', type=int, dest='iterative', default=1,\n+    parser.add_argument('--iterative',  type=int,   default=1,\n                         help='0 for no iteration, 1 for adding with input response(default:0)')\n-    parser.add_argument('--smooth_kernel_sigma', type=int, dest='smooth_kernel_sigma', default=3,\n+    parser.add_argument('--smooth_kernel_sigma',   type=int, default=3,\n                         help='width of the gaussian kernel to smooth the output response with')\n-    \n-    parser.add_argument('--output_xml', type=str, dest='output_xml',help='The output xml file', default='SIR_RelativeFluxScaling.xml') #JX\n-    parser.add_argument('--logdir', type=str, required=False,\n+    parser.add_argument('--mdbfile',    type=str, required=True,\n+                        help='The MDB file')\n+    parser.add_argument('--output_xml', type=str, default='SIR_RelativeFluxScaling.xml',\n+                        help='The output xml file') #JX\n+    parser.add_argument('--logdir',     type=str, required=False,\n                         help='The log directory')\n \n     return parser\n@@ -146,8 +162,6 @@ def mainMethod(args):\n         logger.info(msg)\n         raise IOError(msg)\n \n-    #JX tables = LocationTableSet(args.workdir+'R12/loctabs', inlocfile)\n-    tables = LocationTableSet(LocationTableSetInfo(args.workdir, inlocfile))\n \n \n     # Log validated command line arguments\n@@ -158,11 +172,19 @@ def mainMethod(args):\n #    with open(infile) as f:\n #        extspecnames = json.load(f)\n \n+    grismdict = {'RGS000':0,'RGS180':2,'BGS000':3,'RGS270':1} # not sure about 270 no data to check\n     in_xml = get_input_data(args.workdir, infile)\n     extspecnames=[]\n+    list_grisms = []\n     for xmlname in in_xml:\n         # get HDF5 filename from XML\n         extspecnames.append(DpdExtractedSpectraCollection.getHDF5FileNames(args.workdir, xmlname)[0])\n+        list_grisms.append(grismdict[getGWPosxml(args.workdir, xmlname)]+getGWTiltxml(args.workdir, xmlname))\n+    \n+    list_grisms = np.unique(np.array(list_grisms)) # this identifies which grisms will be in the calibration\n+            \n+    mdb = Mdb.load(args.workdir, args.mdbfile)\n+\n     \n     # link to the previous \"fits\" file solution from the input \"XML\" product\n     msflat_xml = os.path.join(args.workdir, args.ms_flat)\n@@ -179,11 +201,17 @@ def mainMethod(args):\n     spatialres = 100 # good to be a factor of 16\n     deltaw = 500 # may increase/decrease depending on needed S/N\n     ndither = 15 # for the GAIA simulation\n-    noisefactor = 0.75 #deep fields have less noise compared to spectra in testing, should be changed to 1 in actual code\n+    noisefactor = 1.0 #deep fields have less noise compared to spectra in testing, should be changed to 1 in actual code\n     ncoeff = int(args.ncoeff)\n \n-    n = SelfCalibWave(extspecnames, tables, ncoeff, args.limmag, args.calmode, noisefactor, deltaw, spatialres, waveres,\n-                      ndither, outdir=args.workdir, ms_flat = msfits)\n+    #JX tables = LocationTableSet(args.workdir+'R12/loctabs', inlocfile)\n+    if args.calmode ==2:\n+        tables = LocationTableSet(args.workdir, inlocfile)    \n+        n = SelfCalibWave(extspecnames, list_grisms, ncoeff, args.limmag, args.calmode, noisefactor, deltaw, spatialres, waveres,\n+                      ndither, mdb, outdir=args.workdir, ms_flat = msfits, tables = tables)\n+    else:\n+        n = SelfCalibWave(extspecnames, list_grisms, ncoeff, args.limmag, args.calmode, noisefactor, deltaw, spatialres, waveres,\n+                          ndither, mdb, outdir=args.workdir, ms_flat = msfits)\n     n.fit()\n \n     #comment out next line to run fast\n",
                            "fixed confliccts and cleaned RelFlux argparse in main",
                            "Tava",
                            "2023-08-08T09:58:46.000+02:00",
                            "4e7de5b7efecb422d1ea867998c1d0b6baedcadc"
                        ],
                        [
                            "@@ -35,6 +35,8 @@ import ElementsKernel.Logging as log\n import xml.etree.ElementTree as ET\n \n from SIR_SpectraDecontamination.LocationTableSet import LocationTableSet\n+from SIR_SpectraDecontamination.LocationTableSetInfo import LocationTableSetInfo\n+\n from SIR_SpectraDecontamination.DecontaminatedSpectraCollection import DecontaminatedSpectraCollection\n from SIR_SpectraExtraction.DpdExtractedSpectraCollection import DpdExtractedSpectraCollection\n \n@@ -145,7 +147,7 @@ def mainMethod(args):\n         raise IOError(msg)\n \n     #JX tables = LocationTableSet(args.workdir+'R12/loctabs', inlocfile)\n-    tables = LocationTableSet(args.workdir, inlocfile)\n+    tables = LocationTableSet(LocationTableSetInfo(args.workdir, inlocfile))\n \n \n     # Log validated command line arguments\n@@ -210,7 +212,7 @@ def mainMethod(args):\n     ValidityRange.TimestampStart = '2010-01-01T00:00:00.0'\n     ValidityRange.TimestampEnd = '2050-01-01T00:00:00.0'\n \n-    product.Data = sir_stub.relativeFluxScaling.Factory(ValidityRange=ValidityRange, CalibrationID='1', CalibrationVersion=1.0, Observation=loc.Data.Observation)\n+    product.Data = sir_stub.relativeFluxScaling.Factory(ValidityRange=ValidityRange, CalibrationID='1', CalibrationVersion=1.0)\n \n     #JX fits_file_storage = sir_stub.relativeFluxScalingFitsFile(format='sir.relativeFluxScaling',version='0.1')  <<<to be corrected!!!\n     fits_file_storage = sir_stub.relativeFluxScalingFitsFile(format='sir.relativeFuxScaling',version='0.1')\n",
                            "Merge branch 'bug_in_chuck_size' into 'develop'",
                            "Marco Fumana",
                            "2023-08-04T15:11:59.000+00:00",
                            "d8c342870c2334b76cc9e6f3f9d47c964dfe50d5"
                        ],
                        [
                            "@@ -35,6 +35,8 @@ import ElementsKernel.Logging as log\n import xml.etree.ElementTree as ET\n \n from SIR_SpectraDecontamination.LocationTableSet import LocationTableSet\n+from SIR_SpectraDecontamination.LocationTableSetInfo import LocationTableSetInfo\n+\n from SIR_SpectraDecontamination.DecontaminatedSpectraCollection import DecontaminatedSpectraCollection\n from SIR_SpectraExtraction.DpdExtractedSpectraCollection import DpdExtractedSpectraCollection\n \n@@ -145,7 +147,7 @@ def mainMethod(args):\n         raise IOError(msg)\n \n     #JX tables = LocationTableSet(args.workdir+'R12/loctabs', inlocfile)\n-    tables = LocationTableSet(args.workdir, inlocfile)\n+    tables = LocationTableSet(LocationTableSetInfo(args.workdir, inlocfile))\n \n \n     # Log validated command line arguments\n@@ -210,7 +212,7 @@ def mainMethod(args):\n     ValidityRange.TimestampStart = '2010-01-01T00:00:00.0'\n     ValidityRange.TimestampEnd = '2050-01-01T00:00:00.0'\n \n-    product.Data = sir_stub.relativeFluxScaling.Factory(ValidityRange=ValidityRange, CalibrationID='1', CalibrationVersion=1.0, Observation=loc.Data.Observation)\n+    product.Data = sir_stub.relativeFluxScaling.Factory(ValidityRange=ValidityRange, CalibrationID='1', CalibrationVersion=1.0)\n \n     #JX fits_file_storage = sir_stub.relativeFluxScalingFitsFile(format='sir.relativeFluxScaling',version='0.1')  <<<to be corrected!!!\n     fits_file_storage = sir_stub.relativeFluxScalingFitsFile(format='sir.relativeFuxScaling',version='0.1')\n",
                            "MER catalog",
                            "Marco Fumana",
                            "2023-08-04T15:11:59.000+00:00",
                            "c8204cf36e3906a15756c9835f0faf25875d7de8"
                        ]
                    ],
                    "SIR_FluxCalibration/python/SIR_FluxCalibration/SelfCalib.py": [
                        [
                            "@@ -1071,7 +1071,8 @@ class SelfCalib:\n             deltachi = chi1 - chi0\n             s = \"Iter {iter:4d},  red. chisq.: {chi1:10.6g}   delta: {deltachi:10.6g}\".format(iter=iter, chi1=chi1, deltachi=deltachi)\n             print(s)\n-            if deltachi > -1.e-5:\n+            # unguarded infinite loop!!!\n+            if deltachi > -1.e-5 or iter > 500:\n                 for i in range(0, 16):\n                     m.par_flat[i].restore()\n                 m.fitStarMag()\n",
                            "fix input in Rel flux calibration module",
                            "Tava",
                            "2023-08-10T17:28:03.000+02:00",
                            "ab25150eb97fd3d7193a7491ba5bf55d59e410b6"
                        ],
                        [
                            "@@ -348,7 +348,7 @@ class SelfCalibSirGaiaData:\n         sirr['ID'], sirr['Xfp'], sirr['Yfp'] = np.array(ids),np.array(xf),np.array(yf)\n         sirr['Xd'],sirr['Yd'] = np.array(xd),np.array(yd)\n         sirr['Ximage'],sirr['Yimage'] = np.array(xim),np.array(yim)\n-        sirr['jmag'],sirr['hmag'], sirr['chunkm'],sirr['chunkdm'],sirr['ifile'],sirr['detector'] = np.array(detectorss) np.array(jm),np.array(hm),np.array(chunkm),np.array(dc),np.array(ifile)\n+        sirr['jmag'],sirr['hmag'], sirr['chunkm'],sirr['chunkdm'],sirr['ifile'],sirr['detector'] = np.array(jm),np.array(hm),np.array(chunkm),np.array(dc),np.array(ifile),np.array(detectorss) \n \n         return sirr\n                                                                                                                            \n@@ -714,7 +714,7 @@ class SelfCalibSirData:\n                     (xf,yf) = normalfov(box,detmod.getFOVPositions(xy, det_id).T) ## focal plane in [-1,1]\n \n                     #if (h_mag>16.0) and (h_mag<self.limmag)and(m<self.limmag)and (dm<0.5) and (x1>0) and (x1<2048) and (y1>0) and (y1<2048):\n-                    if (m>-90) and (m<self.limmag) and (dm<0.5) and (x1>0) and (x1<2048) and (y1>0) and (y1<2048):\n+                    if (m>-90) and (m<self.limmag) and (dm<0.5) and (xy[0]>0) and (xy[0]<2048) and (xy[1]>0) and (xy[1]<2048):\n               \n                         #if m>-90:\n                         idd.append(spectrum.getObjectID())\n@@ -825,7 +825,8 @@ class SelfDitherData:\n         fakecube_name = os.path.join(self.outdir, 'data', 'EUC_SIR_W-RELATIVEFLUX-SCALE_3_manual_newDM_2022Nov29.fits') \n         self.cube = fits.getdata(fakecube_name,1) # a vignetted tilted grism\n         #self.cube = illuminate() \n-        self.detmod = DetectorModel(gwapos, mdb, rotate=False) # change false to True once new data\n+        detmod = DetectorModel(gwapos, mdb, rotate=False) # change false to True once new data\n+        box = detmod.getEnvelopeBox()\n \n         idd = data.obs['OBJECT_ID']\n         #ra,dec = data.obs['ALPHA_J2000'],data.obs['DELTA_J2000']\n@@ -1330,7 +1331,7 @@ class SelfCalibWave:\n                 ## simple random simulation of dithering spectra in the absence of SelfCal observations (mode = 1)    \n                 elif self.calmode==1:\n                     data = SelfCalibSirData(self.extspecnames, self.ncoeff, self.limmag, self.wcenters[i],self.deltaw,grism,self.mdb,outdir=self.outdir)\n-                    data2 = SelfDitherData(data, self.mdb, specforGW.getGWAPositionName(), ndithers=self.ndither,noisefactor = self.noisefactor) \n+                    data2 = SelfDitherData(data, self.mdb, spec_forGW.getGWAPositionName(), ndithers=self.ndither,noisefactor = self.noisefactor) \n                     \n                 ## More realistic simulation of selfCal pattern using GAIA star positions in the absence of SelfCal (mode=2)    \n                 else:\n@@ -1341,7 +1342,7 @@ class SelfCalibWave:\n                 print('grism:',grism)\n                 print('wave:',i)\n                 ##########debugging###################\n-                m = SelfCalib(data2,specforGW.getGWAPositionName(),self.mdb)\n+                m = SelfCalib(data2,spec_forGW.getGWAPositionName(),self.mdb)\n                 m.fit()\n                 g = list_grisms_main.index(grism) \n                 self.cube[i,:,:,g], self.errcube[i,:,:,g] = m.OutputSir(self.spatialres)\n@@ -1625,4 +1626,3 @@ class SelfCalibWave:\n             hdul.append(hdu)\n \n         hdul.writeto(outfile)\n-\n",
                            "solved conflicts",
                            "Tava",
                            "2023-08-10T08:13:00.000+02:00",
                            "e2560a4a29974233456612485684b10a6136da98"
                        ],
                        [
                            "@@ -52,9 +52,10 @@ from SIR_SpectraDecontamination.LocationTableSet import LocationTableSet\n from SIR_SpectraExtraction.H5ExtractedSpectraCollection import H5ExtractedSpectraCollection \n from SIR_H5SpectraExtractionBinding import H5ExtractedSpectrum\n from SIR_SpectraExtractionBinding import SpectrumDataSet\n+from SIR_InstrumentModels.DetectorModel import DetectorModel\n \n from SIR_FluxCalibration.Fit2D import *\n-from SIR_FluxCalibration.FPA_Geometry import *\n+#from SIR_FluxCalibration.FPA_Geometry import *\n from SIR_FluxCalibration.Utils import *\n \n import ST_DataModelBindings.bas.ppr_stub as ppr_dict #JX\n@@ -215,18 +216,6 @@ def get_euclid_wcs(ra_boresight, dec_boresight, roll = None, oversample = 1,\n     return w\n \n \n-def GrismList(tables):\n-    '''This routine is to find the list of grisms that are present \n-    in the list of input spectra/location tables'''\n-    \n-    #grisms = ['RGS000','RGS180+4','RGS000-4','RGS180','RGS270','BGS000'] order of grisms!\n-    #list_grisms =[0,6,-4,2,0,0] ### change 0 when blue grism and RGS270 data exists\n-    list_grisms = []\n-    for t in tables: \n-        if (t.getGWAPosition()+t.getGWATilt()) not in list_grisms:\n-            list_grisms.append(t.getGWAPosition()+t.getGWATilt())\n-    return np.array(list_grisms)\n-\n def FitsDimensions(f):\n     i = 0\n     while i<20:\n@@ -249,10 +238,64 @@ def MakeCubeTess(a):\n         berr[:,:,:,i] = fits.getdata(a,2*i+2)          \n     return b,berr\n \n+def normaldet(xy,maxx=2040,maxy=2040):\n+    \"\"\"gets \n+    - the detector coordinate in pixel\n+    returns:\n+    - the detector coordinates in normalized [-1,1] range \"\"\"\n+    xslope = 2.0/(maxx)\n+    x = xslope*(xy[0]-(maxx/2.0))\n+        \n+    yslope = 2.0/(maxy)\n+    y = yslope*(xy[1]-(maxy/2.0))\n+    return np.array([x,y])\n+\n+def normaldet_r(xy,maxx=2040,maxy=2040):\n+    \"\"\"gets \n+    - the detector coordinate in [-1,1]\n+    returns:\n+    - the detector coordinates in pixel \"\"\"\n+    xslope = maxx/2\n+    x = xslope*xy[0]+(maxx/2.0)\n+        \n+    yslope = (maxy)/2.0\n+    y = yslope*xy[1]+(maxy/2.0)\n+    return np.array([x,y])\n+\n+def normalfov(box,fov):\n+    \"\"\"gets \n+    - the detector model which has the corners of the FOV in mm \n+    - the fov in mm\n+    returns:\n+    - the focal plane coordinates in normalized [-1,1] range \"\"\"\n+    xslope = 2.0/(box[1][0] - box[0][0])\n+    xint = (1+(box[1][0] / box[0][0]))/(1.0-(box[1][0] / box[0][0]))\n+    x = xslope*fov[0]+xint\n+        \n+    yslope = 2.0/(box[1][1] - box[0][1])\n+    yint = (1+(box[1][1] / box[0][1]))/(1.0-(box[1][1] / box[0][1]))\n+    y = yslope*fov[1]+yint\n+    return np.array([x,y])\n+\n+def normalfov_r(box,fov):\n+    \"\"\"gets \n+    - the detector model which has the corners of the FOV in normalized [-1,1]\n+    - the fov in mm\n+    returns:\n+    - the focal plane coordinates in mm \"\"\"\n+    xslope = 2.0/(box[1][0] - box[0][0])\n+    xint = (1+(box[1][0] / box[0][0]))/(1.0-(box[1][0] / box[0][0]))\n+    x = (fov[0]-xint)/xslope\n+        \n+    yslope = 2.0/(box[1][1] - box[0][1])\n+    yint = (1+(box[1][1] / box[0][1]))/(1.0-(box[1][1] / box[0][1]))\n+    y = (fov[1]-yint)/yslope\n+    return np.array([x,y])\n+\n class SelfCalibSirGaiaData:\n     \"\"\"A class to store Self-calibration input and temporary data\"\"\"\n     \n-    def sir_starcatalog(self,h5file,tables):\n+    def sir_starcatalog(self,h5file,tables,detmod):\n         ''' measuring flux in a wavebin for SIR spectra given an \n         h5 file and a location table'''\n     \n@@ -261,23 +304,32 @@ class SelfCalibSirGaiaData:\n         loc_t = tables\n       \n         ids,xf,yf =[],[],[]\n+        xd,yd = [],[]\n+        xim,yim = [],[]\n         jm,hm = [],[]\n         chunkm,dc = [],[]\n         ifile = []\n+        detectorss = []\n         for spectrum in h5file: \n             metadata = loc_t[spectrum.getObjectID()].getAstronomicalObject()\n             ras,decl = metadata.getCoords()\n             j_mag = metadata.getMagnitude('J').getValue()\n             h_mag = metadata.getMagnitude('H').getValue()   \n-            x1,y1 = spectrum.getLocationSpectrum().computePosition(self.wcenter, row=1).getPosition()\n-            (x, y) = pixel2det(idet, x1, y1)\n-            (xfp,yfp) = pixel2focalplane(idet,x1,y1)\n+            locc = spectrum.getLocationSpectrum()\n+            locc.setDetectorModel(detmod)   #### not needed when new data comes\n+            xy = locc.computePosition(self.wcenter, row=1).getPosition() ## detector coordinates in pixel\n+            det_id = DetectorModel.getDetectorID(idet)\n+            box = detmod.getEnvelopeBox()\n+            (xdp,ydp) = normaldet(xy,maxx=detmod.getDetXPixels(),maxy=detmod.getDetYPixels()) ## detector coordinates [-1,1]\n+            (xfp,yfp) = normalfov(box,detmod.getFOVPositions(xy, det_id).T) ## focal plane in [-1,1]\n+\n+            #(xfp,yfp) = pixel2focalplane(idet,x1,y1)\n             flux = spectrum.getSpectrumDataSet(H5ExtractedSpectrum.SPEC1D_LABEL).getActualData()\n             var = spectrum.getSpectrumDataSet(H5ExtractedSpectrum.SPEC1D_LABEL).getActualVariance()\n             quality = spectrum.getSpectrumDataSet(H5ExtractedSpectrum.SPEC1D_LABEL).getQuality()\n             wave = spectrum.getWavelength()       \n             mm,dmm = measureChunkMagnitude1D(wave,flux,var,quality,center_w = self.wcenter,delta_w=self.deltaw)  \n-            if (mm<self.limmag) and (dmm<0.5) and (x1>0) and (x1<2048) and (y1>0) and (y1<2048):  \n+            if (mm<self.limmag) and (dmm<0.5) and (xy[0]>0) and (xy[0]<2048) and (xy[1]>0) and (xy[1]<2048):  \n                 jm.append(j_mag)\n                 hm.append(h_mag)\n                 chunkm.append(mm)\n@@ -285,11 +337,18 @@ class SelfCalibSirGaiaData:\n                 ids.append(spectrum.getObjectID())\n                 xf.append(xfp)\n                 yf.append(yfp)\n+                xd.append(xdp)\n+                yd.append(ydp)\n+                xim.append(xy[0])\n+                yim.append(xy[1])\n                 ifile.append(dither)\n+                detectorss.append(det_id)\n         \n         sirr = Table()\n         sirr['ID'], sirr['Xfp'], sirr['Yfp'] = np.array(ids),np.array(xf),np.array(yf)\n-        sirr['jmag'],sirr['hmag'], sirr['chunkm'],sirr['chunkdm'],sirr['ifile'] = np.array(jm),np.array(hm),np.array(chunkm),np.array(dc),np.array(ifile)\n+        sirr['Xd'],sirr['Yd'] = np.array(xd),np.array(yd)\n+        sirr['Ximage'],sirr['Yimage'] = np.array(xim),np.array(yim)\n+        sirr['jmag'],sirr['hmag'], sirr['chunkm'],sirr['chunkdm'],sirr['ifile'],sirr['detector'] = np.array(jm),np.array(hm),np.array(chunkm),np.array(dc),np.array(ifile),np.array(detectorss) \n \n         return sirr\n                                                                                                                            \n@@ -297,12 +356,14 @@ class SelfCalibSirGaiaData:\n         ''' Matching the stars in the NEP from a GAIA catalog down to a limmag \n         to closest (very approximately) sir star'''\n         gaia = self.gaia\n-        sirID,sirx,siry,sirJ,sirH,sirmag,sirdmag,sirdither = sir['ID'],sir['Xfp'],sir['Yfp'],sir['jmag'],sir['hmag'],sir['chunkm'],sir['chunkdm'],sir['ifile']\n+        sirID,sirxfp,siryfp,sirximage,siryimage,sirxdet,sirydet,sirJ,sirH,sirmag,sirdmag,sirdither,sirdetectors = sir['ID'],sir['Xfp'],sir['Yfp'],sir['Ximage'],sir['Yimage'],sir['Xd'],sir['Yd'],sir['jmag'],sir['hmag'],sir['chunkm'],sir['chunkdm'],sir['ifile'], sir['detector']\n         #sir15=(sirJ+sirH)/2.0#+ (sirmag-sirH) ### the SIR star magnitude at 1.5 with a correction spectra vs TU\n     \n         best_star,starY,starJ,starH,starDetx,starDety = np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1'])\n         starmag,stardmag = np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1'])\n         stardither = np.zeros_like(gaia['w1'])\n+        starFPx,starFPy,starimagex,starimagey = np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1'])\n+        stardetector = np.zeros_like(gaia['w1'])\n         for s in range(len(gaia['ra'])):\n             if (flux2mag(gaia['rp'][s])>14)and(flux2mag(gaia['rp'][s])<self.limmag):\n                 #y_g_int = np.interp(1.5,[0.5,3.4],[gaia['rp'][s],gaia['w1'][s]])\n@@ -312,22 +373,35 @@ class SelfCalibSirGaiaData:\n                 best_star[s] = sirID[u]\n                 starJ[s] = sirJ[u]\n                 starH[s] = sirH[u]\n-                starDetx[s] = sirx[u]\n-                starDety[s] = siry[u]\n+                starFPx[s] = sirxfp[u]\n+                starFPy[s] = siryfp[u]\n+                starDetx[s] = sirxdet[u]\n+                starDety[s] = sirydet [u]\n+                starimagex[s] = sirximage[u]\n+                starimagey[s] = siryimage[u]\n                 starmag[s],stardmag[s] = sirmag[u],sirdmag[u]\n                 stardither[s] = sirdither[u]\n+                stardetector[s] = sirdetectors[u]\n \n-        u = (starDetx!=0)\n-        nn = len(starDetx[u])\n-        best_star1,starY1,starJ1,starH1,starDetx1,starDety1,starmag1,stardmag1,stardither1 = np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn)\n-        best_star1,starY1,starJ1,starH1,starDetx1,starDety1,starmag1,stardmag1,stardither1 = best_star[u],starY[u],starJ[u],starH[u],starDetx[u],starDety[u],starmag[u],stardmag[u],stardither[u]\n+        u = (starFPx!=0)\n+        nn = len(starFPx[u])\n+        best_star1,starY1,starJ1,starH1,starFPx1,starFPy1,starmag1,stardmag1,stardither1 = np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn)\n+        \n+        starimagex1,starimagey1,starDetx1,starDety1,stardetector1 = np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn)\n+        \n+        best_star1,starY1,starJ1,starH1,starFPx1,starFPy1,starmag1,stardmag1,stardither1 = best_star[u],starY[u],starJ[u],starH[u],starFPx[u],starFPy[u],starmag[u],stardmag[u],stardither[u]\n+        \n+        starimagex1,starimagey1,starDetx1,starDety1,stardetector1 = starimagex[u],starimagey[u],starDetx[u],starDety[u],stardetector[u]\n+        \n         gra,gdec,grp,gw1 = gaia['ra'][u],gaia['dec'][u],gaia['rp'][u],gaia['w1'][u]\n \n         gaiasir = Table()\n-        gaiasir['SIR_ID'], gaiasir['starXfp'], gaiasir['starYfp'] = np.arange(len(starDetx1)),starDetx1,starDety1\n+        gaiasir['SIR_ID'], gaiasir['starXfp'], gaiasir['starYfp'] = np.arange(len(starDetx1)),starFPx1,starFPy1\n+        gaiasir['starXdet'],gaiasir['starYdet'],gaiasir['starXimage'],gaiasir['starYimage'] =starDetx1,starDety1,starimagex1,starimagey1\n         gaiasir['mag'],gaiasir['dmag'] = starmag1,stardmag1\n         gaiasir['ra'], gaiasir['dec'] = gra, gdec\n         gaiasir['ifile']=stardither1\n+        gaiasir['detector']=stardetector1\n     \n         return gaiasir\n \n@@ -354,8 +428,9 @@ class SelfCalibSirGaiaData:\n \n         obs = np.zeros_like(go['ra'])\n         nid,nra,ndec,nmag,ndmag,nxfp,nyfp,nifile = [],[],[],[],[],[],[],[]\n+        nxdet,nydet,nxim,nyim = [],[],[],[]\n         newX,newY = [],[] \n-        \n+        ndetector = []\n         fig = plt.figure()\n         plt.plot(go['ra'],go['dec'],'.',color='gray',alpha=0.1)\n \n@@ -371,23 +446,31 @@ class SelfCalibSirGaiaData:\n             stars_in_pointing = go[ss]\n \n             ra2,dec2 = go['ra'][ss],go['dec'][ss]\n-            sirid,sdetx,sdety = go['SIR_ID'][ss],go['starXfp'][ss],go['starYfp'][ss]\n+            sirid,sdetx,sdety = go['SIR_ID'][ss],go['starXdet'][ss],go['starYdet'][ss]\n+            sfpx,sfpy = go['starXfp'][ss],go['starYfp'][ss]\n+            simx,simy = go['starXimage'][ss],go['starYimage'][ss]\n             nx,ny = fovx[ss],fovy[ss]\n             smag,sdmag = go['mag'][ss],go['dmag'][ss]\n             sdither = go['ifile'][ss]\n+            sdetector = go['detector'][ss]\n             plt.plot(go['ra'][ss],go['dec'][ss],'.',color=plt.cm.viridis(i*int(256/len(ras))))        \n \n             for s in range(len(ra2)):\n                 nra.extend([ra2[s]])\n                 ndec.extend([dec2[s]])\n                 nid.extend([sirid[s]])\n-                nxfp.extend([sdetx[s]])\n-                nyfp.extend([sdety[s]]) \n+                nxfp.extend([sfpx[s]])\n+                nyfp.extend([sfpy[s]])\n+                nxdet.extend([sdetx[s]])\n+                nydet.extend([sdety[s]])\n+                nxim.extend([simx[s]])\n+                nyim.extend([simx[s]])\n                 nmag.extend([smag[s]])\n                 ndmag.extend([sdmag[s]])             \n                 newX.extend([nx[s]])\n                 newY.extend([ny[s]])\n                 nifile.extend([sdither[s]])\n+                ndetector.extend([sdetector[s]])\n                 \n         plt.xlabel(\"RA\")\n         plt.ylabel(\"DEC\")\n@@ -400,28 +483,24 @@ class SelfCalibSirGaiaData:\n \n         fn = RGI((Z,X,Y), self.cube) ## interpolating on the response\n         mag_new,dmag_new = np.zeros_like(nmag),np.zeros_like(ndmag)\n-        ndet,xdet,ydet = np.zeros_like(nmag),np.zeros_like(ndmag),np.zeros_like(ndmag)\n-        ximage,yimage = np.zeros_like(nmag),np.zeros_like(ndmag)\n-    \n+        ndet = np.zeros_like(nmag)\n+        \n         for k in range(len(nra)):\n             flux = 10.0**((nmag[k]-25.0)/-2.5)#mag[i]#\n             pts_old = np.array([[self.wcenter,nxfp[k],nyfp[k]]])\n             pts_new = np.array([[self.wcenter,newX[k],newY[k]]]) \n             mag_new[k] = -2.5*np.log10(flux * (10.0**(fn(pts_new)/-2.5))/(10.0**(fn(pts_old)/-2.5)))+25.0+ self.noisefactor*np.random.normal(0.,ndmag[k])\n \n-            ndet[k],xdet[k],ydet[k] = focalplane2det(newX[k], newY[k])\n-            ximage[k], yimage[k] = det2pixel (ndet[k],xdet[k],ydet[k])\n \n-    \n         # saving with the format readable by the rest of SIR self calib data\n         gaiasirdither = Table()\n         gaiasirdither['OBJECT_ID'], gaiasirdither['X_fp'], gaiasirdither['Y_fp'] = nid,newX,newY\n         gaiasirdither['MAG_APER'],gaiasirdither['MAGERR_APER'] = mag_new,ndmag+0.0001*np.random.lognormal(0,1,len(ndmag))\n         gaiasirdither['ALPHA_J2000'], gaiasirdither['DELTA_J2000'] = nra, ndec\n         gaiasirdither['FLAGS_EXTRACTION'], gaiasirdither['FLAGS_SCAMP'], gaiasirdither['FLAGS_IMA'] = np.zeros_like(nra),np.zeros_like(nra),np.zeros_like(nra)\n-        gaiasirdither['ifile'], gaiasirdither['idet'] = np.array(nifile).astype(int),ndet.astype(int)\n-        gaiasirdither['X_IMAGE'], gaiasirdither['Y_IMAGE'] = ximage, yimage\n-        gaiasirdither['X_det'], gaiasirdither['Y_det'] = xdet, ydet\n+        gaiasirdither['ifile'], gaiasirdither['idet'] = np.array(nifile).astype(int),ndetector\n+        gaiasirdither['X_IMAGE'], gaiasirdither['Y_IMAGE'] = nxim, nyim\n+        gaiasirdither['X_det'], gaiasirdither['Y_det'] = nxdet, nydet\n     \n         return gaiasirdither\n \n@@ -457,7 +536,7 @@ class SelfCalibSirGaiaData:\n         return (catalog, index_star2obs, index_det2obs)\n \n \n-    def __init__(self, extspecnames, tables, ncoeff, limmag, wcenter, deltaw, grism_param, noisefactor, ndither, outdir=\".\"):\n+    def __init__(self, extspecnames, tables, ncoeff, limmag, wcenter, deltaw, grism_param, noisefactor, ndither, mdb, outdir=\".\"):\n         \n         obs = ()\n \n@@ -474,6 +553,7 @@ class SelfCalibSirGaiaData:\n         self.deltaw = deltaw\n         self.noisefactor = noisefactor\n         self.ndither = ndither\n+        self.mdb = mdb\n \n         #JX\n         exspectra_test = H5ExtractedSpectraCollection.load(extspecnames[0], ids=[H5ExtractedSpectrum.SPEC1D_LABEL,])\n@@ -495,9 +575,10 @@ class SelfCalibSirGaiaData:\n             if (tables[k].getGWAPosition()+tables[k].getGWATilt()) == grism_param:\n                 exspectra = H5ExtractedSpectraCollection.load(filename, ids=[H5ExtractedSpectrum.SPEC1D_LABEL,])\n                 print (\"Loading file \", filename) \n+                detmod = DetectorModel(exspectra.getGWAPositionName(), self.mdb, rotate=False) #change to True when new data\n \n ###############################################################\n-                sirr_one = self.sir_starcatalog (exspectra,tables[k])\n+                sirr_one = self.sir_starcatalog (exspectra,tables[k],detmod)\n                 if len(sirr) ==0:\n                     sirr = sirr_one.copy()\n                 else:\n@@ -577,7 +658,7 @@ class SelfCalibSirData:\n         return (catalog, index_star2obs, index_det2obs)\n \n \n-    def __init__(self, extspecnames, tables, ncoeff, limmag, wcenter, deltaw, grism_param, outdir=\".\"):\n+    def __init__(self, extspecnames, ncoeff, limmag, wcenter, deltaw, grism_param, mdb, outdir=\".\"):\n         \n         obs = ()\n \n@@ -592,40 +673,59 @@ class SelfCalibSirData:\n         self.outdir = outdir\n         self.wcenter = wcenter\n         self.deltaw = deltaw\n-\n+        self.mdb = mdb\n \n         # Read input files\n         print(\"Loading spectra\")\n         for k,filename in enumerate(extspecnames): \n         \n             #print (\"Loading file \", filename) \n-            if (tables[k].getGWAPosition()+tables[k].getGWATilt()) == grism_param:\n-                exspectra = H5ExtractedSpectraCollection.load(filename, ids=[H5ExtractedSpectrum.SPEC1D_LABEL,])\n+            exspectra = H5ExtractedSpectraCollection.load(filename, ids=[H5ExtractedSpectrum.SPEC1D_LABEL,])\n+                    \n+            detmod = DetectorModel(exspectra.getGWAPositionName(), self.mdb, rotate=False) #####change to True for new detector layout\n+\n+            if (exspectra.getGWAPosition()+exspectra.getGWATilt()) == grism_param:\n+#            if (tables[k].getGWAPosition()+tables[k].getGWATilt()) == grism_param:\n                 idet = exspectra.getDetectorNumber()\n                 dither = exspectra.getDither()\n-                loc_t = tables[k]\n+                #loc_t = tables[k]\n       \n                 idd,ximage,yimage,ra,dec,mag,magerr,flag1,flag2,flag3 = [],[],[],[],[],[],[],[],[],[]\n+                xfp,yfp,xdn,ydn = [],[],[],[]\n                     \n                 for spectrum in exspectra:   \n-                    metadata = loc_t[spectrum.getObjectID()].getAstronomicalObject()\n-                    ras,decl = metadata.getCoords()\n-                    h_mag = metadata.getMagnitude('H').getValue()\n-                    x1,y1 = spectrum.getLocationSpectrum().computePosition(wcenter, row=1).getPosition()\n+                    #metadata = loc_t[spectrum.getObjectID()].getAstronomicalObject()\n+                    #ras,decl = metadata.getCoords()\n+                    #h_mag = metadata.getMagnitude('H').getValue()\n+                    #### new\n+                    locc = spectrum.getLocationSpectrum()\n+                    locc.setDetectorModel(detmod)   #### not needed when new data comes\n+\n+                    #####\n+                    xy = locc.computePosition(wcenter, row=1).getPosition() ## detector coordinates in pixel\n                     flux = spectrum.getSpectrumDataSet(dataset_name).getActualData()\n                     var = spectrum.getSpectrumDataSet(dataset_name).getActualVariance()\n                     quality = spectrum.getSpectrumDataSet(dataset_name).getQuality()\n                     wave = spectrum.getWavelength()\n                     m,dm = measureChunkMagnitude1D(wave,flux,var,quality,self.wcenter,self.deltaw)                    \n+                    det_id = DetectorModel.getDetectorID(idet)\n+                    box = detmod.getEnvelopeBox()\n+                    (xd,yd) = normaldet(xy,maxx=detmod.getDetXPixels(),maxy=detmod.getDetYPixels()) ## detector coordinates [-1,1]\n+                    (xf,yf) = normalfov(box,detmod.getFOVPositions(xy, det_id).T) ## focal plane in [-1,1]\n \n-                    if (h_mag>16.0) and (h_mag<self.limmag)and(m<self.limmag)and (dm<0.5) and (x1>0) and (x1<2048) and (y1>0) and (y1<2048):\n+                    #if (h_mag>16.0) and (h_mag<self.limmag)and(m<self.limmag)and (dm<0.5) and (x1>0) and (x1<2048) and (y1>0) and (y1<2048):\n+                    if (m>-90) and (m<self.limmag) and (dm<0.5) and (xy[0]>0) and (xy[0]<2048) and (xy[1]>0) and (xy[1]<2048):\n               \n                         #if m>-90:\n                         idd.append(spectrum.getObjectID())\n-                        ximage.append(x1)\n-                        yimage.append(y1)\n-                        ra.append(ras)\n-                        dec.append(decl)\n+                        ximage.append(xy[0])\n+                        yimage.append(xy[1])\n+                        xdn.append(xd)\n+                        ydn.append(yd)\n+                        xfp.append(xf)\n+                        yfp.append(yf)\n+                        #ra.append(ras)\n+                        #dec.append(decl)\n                         mag.append(m)\n                         magerr.append(dm)\n                         flag1.append(0)\n@@ -633,20 +733,23 @@ class SelfCalibSirData:\n                         flag3.append(0)\n         \n                 data = Table()\n-                data['OBJECT_ID'],data['X_IMAGE'],data['Y_IMAGE'], data['ALPHA_J2000'],data['DELTA_J2000'] = idd,ximage,yimage,ra,dec\n+                #data['OBJECT_ID'],data['X_IMAGE'],data['Y_IMAGE'], data['ALPHA_J2000'],data['DELTA_J2000'] = idd,ximage,yimage,ra,dec\n+                data['OBJECT_ID'],data['X_IMAGE'],data['Y_IMAGE'] = idd,ximage,yimage                \n                 data['MAG_APER'],data['MAGERR_APER'] = mag, magerr\n                 data['FLAGS_EXTRACTION'], data['FLAGS_SCAMP'],data['FLAGS_IMA'] = flag1,flag2,flag3\n-            \n+          \n                 c = astropy.table.Column(name='ifile', data=np.repeat(dither, len(idd))); data.add_column(c)\n                 c = astropy.table.Column(name='idet' , data=np.repeat(idet   , len(idd))); data.add_column(c)\n-                (x, y) = pixel2focalplane(data['idet'], data['X_IMAGE'], data['Y_IMAGE'])\n-                c = astropy.table.Column(name='X_fp' , data=x); data.add_column(c)\n-                c = astropy.table.Column(name='Y_fp' , data=y); data.add_column(c)\n+                \n+  \n+                #(x, y) = pixel2focalplane(data['idet'], data['X_IMAGE'], data['Y_IMAGE'])\n+                c = astropy.table.Column(name='X_fp' , data=xfp); data.add_column(c)\n+                c = astropy.table.Column(name='Y_fp' , data=yfp); data.add_column(c)\n \n                 # Trasform x and y coordinates into the [-1,1] range on the detector\n-                (x, y) = pixel2det(idet, data['X_IMAGE'], data['Y_IMAGE'])\n-                c = astropy.table.Column(name='X_det' , data=x); data.add_column(c)\n-                c = astropy.table.Column(name='Y_det' , data=y); data.add_column(c)\n+                #(x, y) = pixel2det(idet, data['X_IMAGE'], data['Y_IMAGE'])\n+                c = astropy.table.Column(name='X_det' , data=xdn); data.add_column(c)\n+                c = astropy.table.Column(name='Y_det' , data=ydn); data.add_column(c)\n \n                 if len(obs) == 0:\n                     obs = data.copy()\n@@ -711,7 +814,7 @@ class SelfDitherData:\n         #assert np.min(catalog['nobs']) == 2\n         return (catalog, index_star2obs, index_det2obs)\n     \n-    def __init__(self, data, ndithers = 10, noisefactor = 1):\n+    def __init__(self, data, mdb, gwapos, ndithers = 10, noisefactor = 1):\n         self.ncoeff = data.ncoeff\n         self.limmag = data.limmag\n         self.outdir = data.outdir\n@@ -722,13 +825,15 @@ class SelfDitherData:\n         fakecube_name = os.path.join(self.outdir, 'data', 'EUC_SIR_W-RELATIVEFLUX-SCALE_3_manual_newDM_2022Nov29.fits') \n         self.cube = fits.getdata(fakecube_name,1) # a vignetted tilted grism\n         #self.cube = illuminate() \n+        detmod = DetectorModel(gwapos, mdb, rotate=False) # change false to True once new data\n+        box = detmod.getEnvelopeBox()\n \n         idd = data.obs['OBJECT_ID']\n-        ra,dec = data.obs['ALPHA_J2000'],data.obs['DELTA_J2000']\n+        #ra,dec = data.obs['ALPHA_J2000'],data.obs['DELTA_J2000']\n         xfp,yfp = data.obs['X_fp'], data.obs['Y_fp']\n         mag,magerr = data.obs['MAG_APER'], data.obs['MAGERR_APER']\n \n-        sidd,sximage,syimage,sra,sdec,smag,smagerr,sflag1,sflag2,sflag3,sdet,sdither = [],[],[],[],[],[],[],[],[],[],[],[]\n+        sidd,sximage,syimage,sxd,syd,sxf,syf,smag,smagerr,sflag1,sflag2,sflag3,sdet,sdither = [],[],[],[],[],[],[],[],[],[],[],[],[],[]\n         obs2 = ()\n         \n         X =  np.linspace(-1.,1.,np.shape(self.cube)[1])\n@@ -740,27 +845,39 @@ class SelfDitherData:\n         print(\"Dithering spectra\")\n \n         for i in range(len(xfp)):\n-            x_new = np.random.uniform(-1.0,1.0,self.ndithers)\n-            y_new = np.random.uniform(-1.0,1.0,self.ndithers)\n+            #det_new = np.random.randint(0,16,self.ndithers) # which detector\n+            #det_id = ['11','12','13','14','21','22','23','24','31','32','33','34','41','42','43','44']\n+\n             flux = 10.0**((mag[i]-25.0)/-2.5)#mag[i]#\n-            for j in range(self.ndithers):\n-                det,pixx, pixy = focalplane2pixel(x_new[j], y_new[j])\n-                if np.isfinite(pixx):\n+            j=0\n+            while j < self.ndithers:\n+                x_new = np.random.uniform(-1,1,1) #normalized fp x \n+                y_new = np.random.uniform(-1,1,1) #normalized fp y\n+                fov = normalfov_r(box,np.array([x_new,y_new])) #fov coordinates in mm\n+                pix = detmod.getPixel(fov[0],fov[1])  # pixel coordinates\n+                if pix[0]!=0:\n+                    detid = pix.getDetectorNumber()\n                     pts_old = np.array([[self.wcenter,xfp[i],yfp[i]]])\n-                    pts_new = np.array([[self.wcenter,x_new[j],y_new[j]]]) \n+                    pts_new = np.array([[self.wcenter,xf,yf]]) \n                     mag_new = -2.5*np.log10(flux * (10.0**(fn(pts_new)/-2.5))/(10.0**(fn(pts_old)/-2.5)))+25.0\n                     sidd.append(idd[i])\n-                    sximage.append(pixx)\n-                    syimage.append(pixy)\n-                    sdet.append(det)\n+                    sximage.append(fov[0]) #in mm not sure\n+                    syimage.append(fov[1]) #in mm\n+                    #sdet.append(det_id[det_new[j]])\n+                    sdet.append(detid)\n                     sdither.append(j)\n-                    sra.append(ra[i])\n-                    sdec.append(dec[i])\n+                    sxd.append(xd)\n+                    syd.append(yd)\n+                    sxf.append(x_new)\n+                    syf.append(y_new)\n+                    #sra.append(ra[i])\n+                    #sdec.append(dec[i])\n                     smag.append(mag_new[0]+np.random.normal(0.,magerr[i]*self.noisefactor)) # added some noise \n                     smagerr.append(magerr[i])\n                     sflag1.append(0)\n                     sflag2.append(0)\n                     sflag3.append(0)\n+                    j+=1\n \n         data = Table()\n         data['OBJECT_ID'],data['X_IMAGE'],data['Y_IMAGE'], data['ALPHA_J2000'],data['DELTA_J2000'] = sidd,sximage,syimage,sra,sdec\n@@ -769,14 +886,14 @@ class SelfDitherData:\n             \n         c = astropy.table.Column(name='ifile', data=sdither); data.add_column(c)\n         c = astropy.table.Column(name='idet' , data=sdet); data.add_column(c)\n-        (x, y) = pixel2focalplane(data['idet'], data['X_IMAGE'], data['Y_IMAGE'])\n-        c = astropy.table.Column(name='X_fp' , data=x); data.add_column(c)\n-        c = astropy.table.Column(name='Y_fp' , data=y); data.add_column(c)\n+        #(x, y) = pixel2focalplane(data['idet'], data['X_IMAGE'], data['Y_IMAGE'])\n+        c = astropy.table.Column(name='X_fp' , data=sxf); data.add_column(c)\n+        c = astropy.table.Column(name='Y_fp' , data=syf); data.add_column(c)\n \n         # Trasform x and y coordinates into the [-1,1] range on the detector\n-        (x, y) = pixel2det(data['idet'], data['X_IMAGE'], data['Y_IMAGE'])\n-        c = astropy.table.Column(name='X_det' , data=x); data.add_column(c)\n-        c = astropy.table.Column(name='Y_det' , data=y); data.add_column(c)\n+        #(x, y) = pixel2det(data['idet'], data['X_IMAGE'], data['Y_IMAGE'])\n+        c = astropy.table.Column(name='X_det' , data=sxd); data.add_column(c)\n+        c = astropy.table.Column(name='Y_det' , data=syd); data.add_column(c)\n     \n         if len(obs2) == 0:\n             obs2 = data.copy()\n@@ -796,7 +913,7 @@ class SelfDitherData:\n class SelfCalib:\n     \"\"\"A class to implement Self-calibration algorithms\"\"\"\n \n-    def __init__(self, data):\n+    def __init__(self, data, grismpos, mdb):\n         self.data = data\n         self.par_stars = data.catalog.copy()\n         self.par_detqe = np.zeros(16)\n@@ -808,6 +925,9 @@ class SelfCalib:\n             par_flat.append(Fit2DNP(data.ncoeff, x, y))\n             #par_flat.append(Fit2D_Cheb(data.ncoeff, x, y))\n         self.par_flat = np.asarray(par_flat)\n+        self.mdb = mdb\n+        self.grismpos = grismpos\n+        \n \n         \n     def expectedUncertainties(self):\n@@ -885,9 +1005,10 @@ class SelfCalib:\n         m = self\n         dets = []\n         data = []\n+        detmod = DetectorModel(m.grismpos, m.mdb, rotate=False)\n \n         # Calculate FP normalized coordinates of the gaps\n-        (gx, gy) = coordGaps(5)\n+        (gx, gy) = coordGaps(detmod,n=5)\n \n         # For each point in the gaps evaluate two interpolated values,\n         # using the flat parameters in the two neighbour detectors\n@@ -895,8 +1016,11 @@ class SelfCalib:\n             #fig, ax = plt.subplots(); ax = fig.add_subplot(111, projection='3d')\n             for idet in closestDetectors(gx[i], gy[i]):\n                 # Calculate coordinates of the gap wrt the idet-th detector\n-                (x0, y0) = det2focalplane(idet, -1, -1)\n-                (x1, y1) = det2focalplane(idet,  1,  1)\n+                #(x0, y0) = det2focalplane(idet, -1, -1)\n+                (x0,y0) = detmod.getFOVPositions(normaldet_r(np.array([-1,-1])), detmod.getDetectorID(idet)).T\n+                #(x1, y1) = det2focalplane(idet,  1,  1)\n+                (x1,y1) = detmod.getFOVPositions(normaldet_r(np.array([1,1])), detmod.getDetectorID(idet)).T\n+\n                 x = (gx[i] - x0) * 2 / (x1-x0) - 1\n                 y = (gy[i] - y0) * 2 / (y1-y0) - 1\n                 f = m.par_flat[idet-1].extrapolate(x, y)\n@@ -979,7 +1103,11 @@ class SelfCalib:\n     def interpolateOnFocal(self, x, y):\n         m = self\n         (_x, _y) = cartesianProduct(x, y)\n-        boz, detx, dety = focalplane2det(_x, _y)\n+        #boz, detx, dety = focalplane2det(_x, _y)\n+        detmod = DetectorModel(m.grismpos, m.mdb, rotate=False)\n+        pix = detmod.getPixel(_x, _y)\n+        detx,dety = pix[0],pix[1]\n+        boz = pix.getDetectorNumber()\n \n         v,u = [],[]\n         for d in range(len(boz)):\n@@ -1055,10 +1183,15 @@ class SelfCalib:\n         ax = fig.add_subplot(111, projection='3d')\n         x = np.linspace(-1., 1., m.data.ncoeff+1); x = (x[0:-1] + x[1:]) / 2.\n         y = x.copy()\n+        dett_id = ['11','12','13','14','21','22','23','24','31','32','33','34','41','42','43','44']\n+\n         for idet in range(1, 17):\n             (val, unc) = m.interpolateOnDetector(idet, x, y)\n             (_x, _y) = allcombinations(x, y)\n-            (_x, _y) = det2focalplane(idet, _x, _y)\n+            #(_x, _y) = det2focalplane(idet, _x, _y)\n+            detmod = DetectorModel(m.grismpos, m.mdb, rotate=False)\n+            (_x, _y) = detmod.getFOVPositions(np.array([_x, _y]), dett_id[idet]).T\n+\n             ax.scatter(_x, _y, val, marker='.')\n         plt.title(\"Flat field pattern\")\n         plt.xlabel(\"Focal plane Y\")\n@@ -1077,7 +1210,9 @@ class SelfCalib:\n             rr[1] = np.max((rr[1], val.max()))\n         for idet in range(1, 17):\n             (val, unc) = m.interpolateOnDetector(idet, x, y)\n-            (_x, _y) = det2focalplane(idet, x, y)\n+            #(_x, _y) = det2focalplane(idet, x, y)\n+            detmod = DetectorModel(m.grismpos, m.mdb, rotate=False)\n+            (_x, _y) = detmod.getFOVPositions(np.array([x, y]), dett_id[idet]).T\n             _x = boundaries(_x)\n             _y = boundaries(_y)\n             im = ax.pcolor(_x, _y, val, vmin=rr[0], vmax=rr[1], cmap=plt.get_cmap('brg'))\n@@ -1110,7 +1245,9 @@ class SelfCalib:\n             rr[1] = np.max((rr[1], unc.max()))\n         for idet in range(1, 17):\n             (val, unc) = m.interpolateOnDetector(idet, x, y)\n-            (_x, _y) = det2focalplane(idet, x, y)\n+            #(_x, _y) = det2focalplane(idet, x, y)\n+            detmod = DetectorModel(m.grismpos, m.mdb, rotate=False)\n+            (_x, _y) = detmod.getFOVPositions(np.array([x, y]), dett_id[idet]).T\n             _x = boundaries(_x)\n             _y = boundaries(_y)\n             im = ax.pcolor(_x, _y, unc, vmin=rr[0], vmax=rr[1], cmap=plt.get_cmap('brg'))\n@@ -1146,7 +1283,7 @@ class SelfCalib:\n class SelfCalibWave:\n     \"\"\"A class to run self calibration over wavelength direction\"\"\"\n     \n-    def __init__(self, extspecnames, tables, ncoeff, limmag, calmode, noisefactor, deltaw, spatialres, waveres, ndither, outdir,ms_flat):\n+    def __init__(self, extspecnames, list_grisms, ncoeff, limmag, calmode, noisefactor, deltaw, spatialres, waveres, ndither, mdb, outdir,ms_flat,tables=None):\n \n         self.extspecnames = extspecnames\n         self.tables = tables\n@@ -1172,10 +1309,11 @@ class SelfCalibWave:\n         #self.cube = np.zeros((self.spatialres,self.spatialres,self.waveres,6)) #spatialx,spatialy, wavelenghts, grisms\n         self.cube,self.errcube = MakeCubeTess(ms_flat)\n         self.ms_flat = self.cube\n-        self.list_grisms = GrismList(tables)\n+        self.list_grisms = list_grisms \n         \n         self.ndither = ndither\n         self.outdir = outdir\n+        self.mdb = mdb\n \n     def fit(self):\n         '''looping over wavelengths and filling in the cube using self calib fitting'''\n@@ -1185,26 +1323,26 @@ class SelfCalibWave:\n         \n         for grism in self.list_grisms:\n             for i in range(self.waveres):\n-               \n+                spec_forGW = H5ExtractedSpectraCollection.load(self.extspecnames[0], ids=[H5ExtractedSpectrum.SPEC1D_LABEL,])     \n                 ## if self cal observations or simulations exist no need to dither things (default mode = 0)\n                 if self.calmode==0:\n-                    data2 = SelfCalibSirData(self.extspecnames, self.tables, self.ncoeff, self.limmag, self.wcenters[i],self.deltaw,grism,outdir=self.outdir)\n+                    data2 = SelfCalibSirData(self.extspecnames, self.ncoeff, self.limmag, self.wcenters[i],self.deltaw,grism,self.mdb,outdir=self.outdir)\n                     \n                 ## simple random simulation of dithering spectra in the absence of SelfCal observations (mode = 1)    \n                 elif self.calmode==1:\n-                    data = SelfCalibSirData(self.extspecnames, self.tables, self.ncoeff, self.limmag, self.wcenters[i],self.deltaw,grism,outdir=self.outdir)\n-                    data2 = SelfDitherData(data,ndithers=self.ndither,noisefactor = self.noisefactor) \n+                    data = SelfCalibSirData(self.extspecnames, self.ncoeff, self.limmag, self.wcenters[i],self.deltaw,grism,self.mdb,outdir=self.outdir)\n+                    data2 = SelfDitherData(data, self.mdb, spec_forGW.getGWAPositionName(), ndithers=self.ndither,noisefactor = self.noisefactor) \n                     \n                 ## More realistic simulation of selfCal pattern using GAIA star positions in the absence of SelfCal (mode=2)    \n                 else:\n-                    data2 = SelfCalibSirGaiaData(self.extspecnames, self.tables, self.ncoeff, self.limmag, self.wcenters[i],self.deltaw,grism, self.noisefactor, self.ndither,outdir=self.outdir) \n+                    data2 = SelfCalibSirGaiaData(self.extspecnames, self.tables, self.ncoeff, self.limmag, self.wcenters[i],self.deltaw,grism, self.noisefactor, self.ndither,self.mdb,outdir=self.outdir) \n                \n             #np.savez('/home/shemmati/Work/Projects/spectra/star_catalog_test_g'+str(grism)+'_w'+str(self.wcenters[i])+'.npz',data2.obs,data2.catalog,data2.index_star2obs,data2.index_det2obs) ### comment out later \n                 ##########debugging###################\n                 print('grism:',grism)\n                 print('wave:',i)\n                 ##########debugging###################\n-                m = SelfCalib(data2)\n+                m = SelfCalib(data2,spec_forGW.getGWAPositionName(),self.mdb)\n                 m.fit()\n                 g = list_grisms_main.index(grism) \n                 self.cube[i,:,:,g], self.errcube[i,:,:,g] = m.OutputSir(self.spatialres)\n@@ -1487,5 +1625,4 @@ class SelfCalibWave:\n             hdu = fits.ImageHDU(data=dq_smooth, header=header, name=g + '.DQ')\n             hdul.append(hdu)\n \n-        hdul.writeto(outfile)\n-\n+        hdul.writeto(outfile)\n\\ No newline at end of file\n",
                            "detlayout bugfix",
                            "shemmati",
                            "2023-08-09T16:29:07.000-07:00",
                            "a178534d2d42b59a205e09ef9f5ebc3de3a4c85c"
                        ],
                        [
                            "@@ -238,6 +238,60 @@ def MakeCubeTess(a):\n         berr[:,:,:,i] = fits.getdata(a,2*i+2)          \n     return b,berr\n \n+def normaldet(xy,maxx=2040,maxy=2040):\n+    \"\"\"gets \n+    - the detector coordinate in pixel\n+    returns:\n+    - the detector coordinates in normalized [-1,1] range \"\"\"\n+    xslope = 2.0/(maxx)\n+    x = xslope*(xy[0]-(maxx/2.0))\n+        \n+    yslope = 2.0/(maxy)\n+    y = yslope*(xy[1]-(maxy/2.0))\n+    return np.array([x,y])\n+\n+def normaldet_r(xy,maxx=2040,maxy=2040):\n+    \"\"\"gets \n+    - the detector coordinate in [-1,1]\n+    returns:\n+    - the detector coordinates in pixel \"\"\"\n+    xslope = maxx/2\n+    x = xslope*xy[0]+(maxx/2.0)\n+        \n+    yslope = (maxy)/2.0\n+    y = yslope*xy[1]+(maxy/2.0)\n+    return np.array([x,y])\n+\n+def normalfov(box,fov):\n+    \"\"\"gets \n+    - the detector model which has the corners of the FOV in mm \n+    - the fov in mm\n+    returns:\n+    - the focal plane coordinates in normalized [-1,1] range \"\"\"\n+    xslope = 2.0/(box[1][0] - box[0][0])\n+    xint = (1+(box[1][0] / box[0][0]))/(1.0-(box[1][0] / box[0][0]))\n+    x = xslope*fov[0]+xint\n+        \n+    yslope = 2.0/(box[1][1] - box[0][1])\n+    yint = (1+(box[1][1] / box[0][1]))/(1.0-(box[1][1] / box[0][1]))\n+    y = yslope*fov[1]+yint\n+    return np.array([x,y])\n+\n+def normalfov_r(box,fov):\n+    \"\"\"gets \n+    - the detector model which has the corners of the FOV in normalized [-1,1]\n+    - the fov in mm\n+    returns:\n+    - the focal plane coordinates in mm \"\"\"\n+    xslope = 2.0/(box[1][0] - box[0][0])\n+    xint = (1+(box[1][0] / box[0][0]))/(1.0-(box[1][0] / box[0][0]))\n+    x = (fov[0]-xint)/xslope\n+        \n+    yslope = 2.0/(box[1][1] - box[0][1])\n+    yint = (1+(box[1][1] / box[0][1]))/(1.0-(box[1][1] / box[0][1]))\n+    y = (fov[1]-yint)/yslope\n+    return np.array([x,y])\n+\n class SelfCalibSirGaiaData:\n     \"\"\"A class to store Self-calibration input and temporary data\"\"\"\n     \n",
                            "Merge remote-tracking branch 'origin/Relflux_detlayout' into develop",
                            "Tava",
                            "2023-08-09T08:39:11.000+02:00",
                            "b354f49abd0839ee364d9c1a8a87c5be32e9ef38"
                        ],
                        [
                            "@@ -238,6 +238,60 @@ def MakeCubeTess(a):\n         berr[:,:,:,i] = fits.getdata(a,2*i+2)          \n     return b,berr\n \n+def normaldet(xy,maxx=2040,maxy=2040):\n+    \"\"\"gets \n+    - the detector coordinate in pixel\n+    returns:\n+    - the detector coordinates in normalized [-1,1] range \"\"\"\n+    xslope = 2.0/(maxx)\n+    x = xslope*(xy[0]-(maxx/2.0))\n+        \n+    yslope = 2.0/(maxy)\n+    y = yslope*(xy[1]-(maxy/2.0))\n+    return np.array([x,y])\n+\n+def normaldet_r(xy,maxx=2040,maxy=2040):\n+    \"\"\"gets \n+    - the detector coordinate in [-1,1]\n+    returns:\n+    - the detector coordinates in pixel \"\"\"\n+    xslope = maxx/2\n+    x = xslope*xy[0]+(maxx/2.0)\n+        \n+    yslope = (maxy)/2.0\n+    y = yslope*xy[1]+(maxy/2.0)\n+    return np.array([x,y])\n+\n+def normalfov(box,fov):\n+    \"\"\"gets \n+    - the detector model which has the corners of the FOV in mm \n+    - the fov in mm\n+    returns:\n+    - the focal plane coordinates in normalized [-1,1] range \"\"\"\n+    xslope = 2.0/(box[1][0] - box[0][0])\n+    xint = (1+(box[1][0] / box[0][0]))/(1.0-(box[1][0] / box[0][0]))\n+    x = xslope*fov[0]+xint\n+        \n+    yslope = 2.0/(box[1][1] - box[0][1])\n+    yint = (1+(box[1][1] / box[0][1]))/(1.0-(box[1][1] / box[0][1]))\n+    y = yslope*fov[1]+yint\n+    return np.array([x,y])\n+\n+def normalfov_r(box,fov):\n+    \"\"\"gets \n+    - the detector model which has the corners of the FOV in normalized [-1,1]\n+    - the fov in mm\n+    returns:\n+    - the focal plane coordinates in mm \"\"\"\n+    xslope = 2.0/(box[1][0] - box[0][0])\n+    xint = (1+(box[1][0] / box[0][0]))/(1.0-(box[1][0] / box[0][0]))\n+    x = (fov[0]-xint)/xslope\n+        \n+    yslope = 2.0/(box[1][1] - box[0][1])\n+    yint = (1+(box[1][1] / box[0][1]))/(1.0-(box[1][1] / box[0][1]))\n+    y = (fov[1]-yint)/yslope\n+    return np.array([x,y])\n+\n class SelfCalibSirGaiaData:\n     \"\"\"A class to store Self-calibration input and temporary data\"\"\"\n     \n",
                            "functions copied for detector model relflux",
                            "shemmati",
                            "2023-08-08T17:28:10.000-07:00",
                            "3be1231d67cb518a499f88cfd1dbc40775484c08"
                        ],
                        [
                            "@@ -52,9 +52,10 @@ from SIR_SpectraDecontamination.LocationTableSet import LocationTableSet\n from SIR_SpectraExtraction.H5ExtractedSpectraCollection import H5ExtractedSpectraCollection \n from SIR_H5SpectraExtractionBinding import H5ExtractedSpectrum\n from SIR_SpectraExtractionBinding import SpectrumDataSet\n+from SIR_InstrumentModels.DetectorModel import DetectorModel\n \n from SIR_FluxCalibration.Fit2D import *\n-from SIR_FluxCalibration.FPA_Geometry import *\n+#from SIR_FluxCalibration.FPA_Geometry import *\n from SIR_FluxCalibration.Utils import *\n \n import ST_DataModelBindings.bas.ppr_stub as ppr_dict #JX\n@@ -215,18 +216,6 @@ def get_euclid_wcs(ra_boresight, dec_boresight, roll = None, oversample = 1,\n     return w\n \n \n-def GrismList(tables):\n-    '''This routine is to find the list of grisms that are present \n-    in the list of input spectra/location tables'''\n-    \n-    #grisms = ['RGS000','RGS180+4','RGS000-4','RGS180','RGS270','BGS000'] order of grisms!\n-    #list_grisms =[0,6,-4,2,0,0] ### change 0 when blue grism and RGS270 data exists\n-    list_grisms = []\n-    for t in tables: \n-        if (t.getGWAPosition()+t.getGWATilt()) not in list_grisms:\n-            list_grisms.append(t.getGWAPosition()+t.getGWATilt())\n-    return np.array(list_grisms)\n-\n def FitsDimensions(f):\n     i = 0\n     while i<20:\n@@ -252,7 +241,7 @@ def MakeCubeTess(a):\n class SelfCalibSirGaiaData:\n     \"\"\"A class to store Self-calibration input and temporary data\"\"\"\n     \n-    def sir_starcatalog(self,h5file,tables):\n+    def sir_starcatalog(self,h5file,tables,detmod):\n         ''' measuring flux in a wavebin for SIR spectra given an \n         h5 file and a location table'''\n     \n@@ -261,23 +250,32 @@ class SelfCalibSirGaiaData:\n         loc_t = tables\n       \n         ids,xf,yf =[],[],[]\n+        xd,yd = [],[]\n+        xim,yim = [],[]\n         jm,hm = [],[]\n         chunkm,dc = [],[]\n         ifile = []\n+        detectorss = []\n         for spectrum in h5file: \n             metadata = loc_t[spectrum.getObjectID()].getAstronomicalObject()\n             ras,decl = metadata.getCoords()\n             j_mag = metadata.getMagnitude('J').getValue()\n             h_mag = metadata.getMagnitude('H').getValue()   \n-            x1,y1 = spectrum.getLocationSpectrum().computePosition(self.wcenter, row=1).getPosition()\n-            (x, y) = pixel2det(idet, x1, y1)\n-            (xfp,yfp) = pixel2focalplane(idet,x1,y1)\n+            locc = spectrum.getLocationSpectrum()\n+            locc.setDetectorModel(detmod)   #### not needed when new data comes\n+            xy = locc.computePosition(self.wcenter, row=1).getPosition() ## detector coordinates in pixel\n+            det_id = DetectorModel.getDetectorID(idet)\n+            box = detmod.getEnvelopeBox()\n+            (xdp,ydp) = normaldet(xy,maxx=detmod.getDetXPixels(),maxy=detmod.getDetYPixels()) ## detector coordinates [-1,1]\n+            (xfp,yfp) = normalfov(box,detmod.getFOVPositions(xy, det_id).T) ## focal plane in [-1,1]\n+\n+            #(xfp,yfp) = pixel2focalplane(idet,x1,y1)\n             flux = spectrum.getSpectrumDataSet(H5ExtractedSpectrum.SPEC1D_LABEL).getActualData()\n             var = spectrum.getSpectrumDataSet(H5ExtractedSpectrum.SPEC1D_LABEL).getActualVariance()\n             quality = spectrum.getSpectrumDataSet(H5ExtractedSpectrum.SPEC1D_LABEL).getQuality()\n             wave = spectrum.getWavelength()       \n             mm,dmm = measureChunkMagnitude1D(wave,flux,var,quality,center_w = self.wcenter,delta_w=self.deltaw)  \n-            if (mm<self.limmag) and (dmm<0.5) and (x1>0) and (x1<2048) and (y1>0) and (y1<2048):  \n+            if (mm<self.limmag) and (dmm<0.5) and (xy[0]>0) and (xy[0]<2048) and (xy[1]>0) and (xy[1]<2048):  \n                 jm.append(j_mag)\n                 hm.append(h_mag)\n                 chunkm.append(mm)\n@@ -285,11 +283,18 @@ class SelfCalibSirGaiaData:\n                 ids.append(spectrum.getObjectID())\n                 xf.append(xfp)\n                 yf.append(yfp)\n+                xd.append(xdp)\n+                yd.append(ydp)\n+                xim.append(xy[0])\n+                yim.append(xy[1])\n                 ifile.append(dither)\n+                detectorss.append(det_id)\n         \n         sirr = Table()\n         sirr['ID'], sirr['Xfp'], sirr['Yfp'] = np.array(ids),np.array(xf),np.array(yf)\n-        sirr['jmag'],sirr['hmag'], sirr['chunkm'],sirr['chunkdm'],sirr['ifile'] = np.array(jm),np.array(hm),np.array(chunkm),np.array(dc),np.array(ifile)\n+        sirr['Xd'],sirr['Yd'] = np.array(xd),np.array(yd)\n+        sirr['Ximage'],sirr['Yimage'] = np.array(xim),np.array(yim)\n+        sirr['jmag'],sirr['hmag'], sirr['chunkm'],sirr['chunkdm'],sirr['ifile'],sirr['detector'] = np.array(detectorss) np.array(jm),np.array(hm),np.array(chunkm),np.array(dc),np.array(ifile)\n \n         return sirr\n                                                                                                                            \n@@ -297,12 +302,14 @@ class SelfCalibSirGaiaData:\n         ''' Matching the stars in the NEP from a GAIA catalog down to a limmag \n         to closest (very approximately) sir star'''\n         gaia = self.gaia\n-        sirID,sirx,siry,sirJ,sirH,sirmag,sirdmag,sirdither = sir['ID'],sir['Xfp'],sir['Yfp'],sir['jmag'],sir['hmag'],sir['chunkm'],sir['chunkdm'],sir['ifile']\n+        sirID,sirxfp,siryfp,sirximage,siryimage,sirxdet,sirydet,sirJ,sirH,sirmag,sirdmag,sirdither,sirdetectors = sir['ID'],sir['Xfp'],sir['Yfp'],sir['Ximage'],sir['Yimage'],sir['Xd'],sir['Yd'],sir['jmag'],sir['hmag'],sir['chunkm'],sir['chunkdm'],sir['ifile'], sir['detector']\n         #sir15=(sirJ+sirH)/2.0#+ (sirmag-sirH) ### the SIR star magnitude at 1.5 with a correction spectra vs TU\n     \n         best_star,starY,starJ,starH,starDetx,starDety = np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1'])\n         starmag,stardmag = np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1'])\n         stardither = np.zeros_like(gaia['w1'])\n+        starFPx,starFPy,starimagex,starimagey = np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1'])\n+        stardetector = np.zeros_like(gaia['w1'])\n         for s in range(len(gaia['ra'])):\n             if (flux2mag(gaia['rp'][s])>14)and(flux2mag(gaia['rp'][s])<self.limmag):\n                 #y_g_int = np.interp(1.5,[0.5,3.4],[gaia['rp'][s],gaia['w1'][s]])\n@@ -312,22 +319,35 @@ class SelfCalibSirGaiaData:\n                 best_star[s] = sirID[u]\n                 starJ[s] = sirJ[u]\n                 starH[s] = sirH[u]\n-                starDetx[s] = sirx[u]\n-                starDety[s] = siry[u]\n+                starFPx[s] = sirxfp[u]\n+                starFPy[s] = siryfp[u]\n+                starDetx[s] = sirxdet[u]\n+                starDety[s] = sirydet [u]\n+                starimagex[s] = sirximage[u]\n+                starimagey[s] = siryimage[u]\n                 starmag[s],stardmag[s] = sirmag[u],sirdmag[u]\n                 stardither[s] = sirdither[u]\n+                stardetector[s] = sirdetectors[u]\n \n-        u = (starDetx!=0)\n-        nn = len(starDetx[u])\n-        best_star1,starY1,starJ1,starH1,starDetx1,starDety1,starmag1,stardmag1,stardither1 = np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn)\n-        best_star1,starY1,starJ1,starH1,starDetx1,starDety1,starmag1,stardmag1,stardither1 = best_star[u],starY[u],starJ[u],starH[u],starDetx[u],starDety[u],starmag[u],stardmag[u],stardither[u]\n+        u = (starFPx!=0)\n+        nn = len(starFPx[u])\n+        best_star1,starY1,starJ1,starH1,starFPx1,starFPy1,starmag1,stardmag1,stardither1 = np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn)\n+        \n+        starimagex1,starimagey1,starDetx1,starDety1,stardetector1 = np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn)\n+        \n+        best_star1,starY1,starJ1,starH1,starFPx1,starFPy1,starmag1,stardmag1,stardither1 = best_star[u],starY[u],starJ[u],starH[u],starFPx[u],starFPy[u],starmag[u],stardmag[u],stardither[u]\n+        \n+        starimagex1,starimagey1,starDetx1,starDety1,stardetector1 = starimagex[u],starimagey[u],starDetx[u],starDety[u],stardetector[u]\n+        \n         gra,gdec,grp,gw1 = gaia['ra'][u],gaia['dec'][u],gaia['rp'][u],gaia['w1'][u]\n \n         gaiasir = Table()\n-        gaiasir['SIR_ID'], gaiasir['starXfp'], gaiasir['starYfp'] = np.arange(len(starDetx1)),starDetx1,starDety1\n+        gaiasir['SIR_ID'], gaiasir['starXfp'], gaiasir['starYfp'] = np.arange(len(starDetx1)),starFPx1,starFPy1\n+        gaiasir['starXdet'],gaiasir['starYdet'],gaiasir['starXimage'],gaiasir['starYimage'] =starDetx1,starDety1,starimagex1,starimagey1\n         gaiasir['mag'],gaiasir['dmag'] = starmag1,stardmag1\n         gaiasir['ra'], gaiasir['dec'] = gra, gdec\n         gaiasir['ifile']=stardither1\n+        gaiasir['detector']=stardetector1\n     \n         return gaiasir\n \n@@ -354,8 +374,9 @@ class SelfCalibSirGaiaData:\n \n         obs = np.zeros_like(go['ra'])\n         nid,nra,ndec,nmag,ndmag,nxfp,nyfp,nifile = [],[],[],[],[],[],[],[]\n+        nxdet,nydet,nxim,nyim = [],[],[],[]\n         newX,newY = [],[] \n-        \n+        ndetector = []\n         fig = plt.figure()\n         plt.plot(go['ra'],go['dec'],'.',color='gray',alpha=0.1)\n \n@@ -371,23 +392,31 @@ class SelfCalibSirGaiaData:\n             stars_in_pointing = go[ss]\n \n             ra2,dec2 = go['ra'][ss],go['dec'][ss]\n-            sirid,sdetx,sdety = go['SIR_ID'][ss],go['starXfp'][ss],go['starYfp'][ss]\n+            sirid,sdetx,sdety = go['SIR_ID'][ss],go['starXdet'][ss],go['starYdet'][ss]\n+            sfpx,sfpy = go['starXfp'][ss],go['starYfp'][ss]\n+            simx,simy = go['starXimage'][ss],go['starYimage'][ss]\n             nx,ny = fovx[ss],fovy[ss]\n             smag,sdmag = go['mag'][ss],go['dmag'][ss]\n             sdither = go['ifile'][ss]\n+            sdetector = go['detector'][ss]\n             plt.plot(go['ra'][ss],go['dec'][ss],'.',color=plt.cm.viridis(i*int(256/len(ras))))        \n \n             for s in range(len(ra2)):\n                 nra.extend([ra2[s]])\n                 ndec.extend([dec2[s]])\n                 nid.extend([sirid[s]])\n-                nxfp.extend([sdetx[s]])\n-                nyfp.extend([sdety[s]]) \n+                nxfp.extend([sfpx[s]])\n+                nyfp.extend([sfpy[s]])\n+                nxdet.extend([sdetx[s]])\n+                nydet.extend([sdety[s]])\n+                nxim.extend([simx[s]])\n+                nyim.extend([simx[s]])\n                 nmag.extend([smag[s]])\n                 ndmag.extend([sdmag[s]])             \n                 newX.extend([nx[s]])\n                 newY.extend([ny[s]])\n                 nifile.extend([sdither[s]])\n+                ndetector.extend([sdetector[s]])\n                 \n         plt.xlabel(\"RA\")\n         plt.ylabel(\"DEC\")\n@@ -400,28 +429,24 @@ class SelfCalibSirGaiaData:\n \n         fn = RGI((Z,X,Y), self.cube) ## interpolating on the response\n         mag_new,dmag_new = np.zeros_like(nmag),np.zeros_like(ndmag)\n-        ndet,xdet,ydet = np.zeros_like(nmag),np.zeros_like(ndmag),np.zeros_like(ndmag)\n-        ximage,yimage = np.zeros_like(nmag),np.zeros_like(ndmag)\n-    \n+        ndet = np.zeros_like(nmag)\n+        \n         for k in range(len(nra)):\n             flux = 10.0**((nmag[k]-25.0)/-2.5)#mag[i]#\n             pts_old = np.array([[self.wcenter,nxfp[k],nyfp[k]]])\n             pts_new = np.array([[self.wcenter,newX[k],newY[k]]]) \n             mag_new[k] = -2.5*np.log10(flux * (10.0**(fn(pts_new)/-2.5))/(10.0**(fn(pts_old)/-2.5)))+25.0+ self.noisefactor*np.random.normal(0.,ndmag[k])\n \n-            ndet[k],xdet[k],ydet[k] = focalplane2det(newX[k], newY[k])\n-            ximage[k], yimage[k] = det2pixel (ndet[k],xdet[k],ydet[k])\n \n-    \n         # saving with the format readable by the rest of SIR self calib data\n         gaiasirdither = Table()\n         gaiasirdither['OBJECT_ID'], gaiasirdither['X_fp'], gaiasirdither['Y_fp'] = nid,newX,newY\n         gaiasirdither['MAG_APER'],gaiasirdither['MAGERR_APER'] = mag_new,ndmag+0.0001*np.random.lognormal(0,1,len(ndmag))\n         gaiasirdither['ALPHA_J2000'], gaiasirdither['DELTA_J2000'] = nra, ndec\n         gaiasirdither['FLAGS_EXTRACTION'], gaiasirdither['FLAGS_SCAMP'], gaiasirdither['FLAGS_IMA'] = np.zeros_like(nra),np.zeros_like(nra),np.zeros_like(nra)\n-        gaiasirdither['ifile'], gaiasirdither['idet'] = np.array(nifile).astype(int),ndet.astype(int)\n-        gaiasirdither['X_IMAGE'], gaiasirdither['Y_IMAGE'] = ximage, yimage\n-        gaiasirdither['X_det'], gaiasirdither['Y_det'] = xdet, ydet\n+        gaiasirdither['ifile'], gaiasirdither['idet'] = np.array(nifile).astype(int),ndetector\n+        gaiasirdither['X_IMAGE'], gaiasirdither['Y_IMAGE'] = nxim, nyim\n+        gaiasirdither['X_det'], gaiasirdither['Y_det'] = nxdet, nydet\n     \n         return gaiasirdither\n \n@@ -457,7 +482,7 @@ class SelfCalibSirGaiaData:\n         return (catalog, index_star2obs, index_det2obs)\n \n \n-    def __init__(self, extspecnames, tables, ncoeff, limmag, wcenter, deltaw, grism_param, noisefactor, ndither, outdir=\".\"):\n+    def __init__(self, extspecnames, tables, ncoeff, limmag, wcenter, deltaw, grism_param, noisefactor, ndither, mdb, outdir=\".\"):\n         \n         obs = ()\n \n@@ -474,6 +499,7 @@ class SelfCalibSirGaiaData:\n         self.deltaw = deltaw\n         self.noisefactor = noisefactor\n         self.ndither = ndither\n+        self.mdb = mdb\n \n         #JX\n         exspectra_test = H5ExtractedSpectraCollection.load(extspecnames[0], ids=[H5ExtractedSpectrum.SPEC1D_LABEL,])\n@@ -495,9 +521,10 @@ class SelfCalibSirGaiaData:\n             if (tables[k].getGWAPosition()+tables[k].getGWATilt()) == grism_param:\n                 exspectra = H5ExtractedSpectraCollection.load(filename, ids=[H5ExtractedSpectrum.SPEC1D_LABEL,])\n                 print (\"Loading file \", filename) \n+                detmod = DetectorModel(exspectra.getGWAPositionName(), self.mdb, rotate=False) #change to True when new data\n \n ###############################################################\n-                sirr_one = self.sir_starcatalog (exspectra,tables[k])\n+                sirr_one = self.sir_starcatalog (exspectra,tables[k],detmod)\n                 if len(sirr) ==0:\n                     sirr = sirr_one.copy()\n                 else:\n@@ -577,7 +604,7 @@ class SelfCalibSirData:\n         return (catalog, index_star2obs, index_det2obs)\n \n \n-    def __init__(self, extspecnames, tables, ncoeff, limmag, wcenter, deltaw, grism_param, outdir=\".\"):\n+    def __init__(self, extspecnames, ncoeff, limmag, wcenter, deltaw, grism_param, mdb, outdir=\".\"):\n         \n         obs = ()\n \n@@ -592,40 +619,59 @@ class SelfCalibSirData:\n         self.outdir = outdir\n         self.wcenter = wcenter\n         self.deltaw = deltaw\n-\n+        self.mdb = mdb\n \n         # Read input files\n         print(\"Loading spectra\")\n         for k,filename in enumerate(extspecnames): \n         \n             #print (\"Loading file \", filename) \n-            if (tables[k].getGWAPosition()+tables[k].getGWATilt()) == grism_param:\n-                exspectra = H5ExtractedSpectraCollection.load(filename, ids=[H5ExtractedSpectrum.SPEC1D_LABEL,])\n+            exspectra = H5ExtractedSpectraCollection.load(filename, ids=[H5ExtractedSpectrum.SPEC1D_LABEL,])\n+                    \n+            detmod = DetectorModel(exspectra.getGWAPositionName(), self.mdb, rotate=False) #####change to True for new detector layout\n+\n+            if (exspectra.getGWAPosition()+exspectra.getGWATilt()) == grism_param:\n+#            if (tables[k].getGWAPosition()+tables[k].getGWATilt()) == grism_param:\n                 idet = exspectra.getDetectorNumber()\n                 dither = exspectra.getDither()\n-                loc_t = tables[k]\n+                #loc_t = tables[k]\n       \n                 idd,ximage,yimage,ra,dec,mag,magerr,flag1,flag2,flag3 = [],[],[],[],[],[],[],[],[],[]\n+                xfp,yfp,xdn,ydn = [],[],[],[]\n                     \n                 for spectrum in exspectra:   \n-                    metadata = loc_t[spectrum.getObjectID()].getAstronomicalObject()\n-                    ras,decl = metadata.getCoords()\n-                    h_mag = metadata.getMagnitude('H').getValue()\n-                    x1,y1 = spectrum.getLocationSpectrum().computePosition(wcenter, row=1).getPosition()\n+                    #metadata = loc_t[spectrum.getObjectID()].getAstronomicalObject()\n+                    #ras,decl = metadata.getCoords()\n+                    #h_mag = metadata.getMagnitude('H').getValue()\n+                    #### new\n+                    locc = spectrum.getLocationSpectrum()\n+                    locc.setDetectorModel(detmod)   #### not needed when new data comes\n+\n+                    #####\n+                    xy = locc.computePosition(wcenter, row=1).getPosition() ## detector coordinates in pixel\n                     flux = spectrum.getSpectrumDataSet(dataset_name).getActualData()\n                     var = spectrum.getSpectrumDataSet(dataset_name).getActualVariance()\n                     quality = spectrum.getSpectrumDataSet(dataset_name).getQuality()\n                     wave = spectrum.getWavelength()\n                     m,dm = measureChunkMagnitude1D(wave,flux,var,quality,self.wcenter,self.deltaw)                    \n+                    det_id = DetectorModel.getDetectorID(idet)\n+                    box = detmod.getEnvelopeBox()\n+                    (xd,yd) = normaldet(xy,maxx=detmod.getDetXPixels(),maxy=detmod.getDetYPixels()) ## detector coordinates [-1,1]\n+                    (xf,yf) = normalfov(box,detmod.getFOVPositions(xy, det_id).T) ## focal plane in [-1,1]\n \n-                    if (h_mag>16.0) and (h_mag<self.limmag)and(m<self.limmag)and (dm<0.5) and (x1>0) and (x1<2048) and (y1>0) and (y1<2048):\n+                    #if (h_mag>16.0) and (h_mag<self.limmag)and(m<self.limmag)and (dm<0.5) and (x1>0) and (x1<2048) and (y1>0) and (y1<2048):\n+                    if (m>-90) and (m<self.limmag) and (dm<0.5) and (x1>0) and (x1<2048) and (y1>0) and (y1<2048):\n               \n                         #if m>-90:\n                         idd.append(spectrum.getObjectID())\n-                        ximage.append(x1)\n-                        yimage.append(y1)\n-                        ra.append(ras)\n-                        dec.append(decl)\n+                        ximage.append(xy[0])\n+                        yimage.append(xy[1])\n+                        xdn.append(xd)\n+                        ydn.append(yd)\n+                        xfp.append(xf)\n+                        yfp.append(yf)\n+                        #ra.append(ras)\n+                        #dec.append(decl)\n                         mag.append(m)\n                         magerr.append(dm)\n                         flag1.append(0)\n@@ -633,20 +679,23 @@ class SelfCalibSirData:\n                         flag3.append(0)\n         \n                 data = Table()\n-                data['OBJECT_ID'],data['X_IMAGE'],data['Y_IMAGE'], data['ALPHA_J2000'],data['DELTA_J2000'] = idd,ximage,yimage,ra,dec\n+                #data['OBJECT_ID'],data['X_IMAGE'],data['Y_IMAGE'], data['ALPHA_J2000'],data['DELTA_J2000'] = idd,ximage,yimage,ra,dec\n+                data['OBJECT_ID'],data['X_IMAGE'],data['Y_IMAGE'] = idd,ximage,yimage                \n                 data['MAG_APER'],data['MAGERR_APER'] = mag, magerr\n                 data['FLAGS_EXTRACTION'], data['FLAGS_SCAMP'],data['FLAGS_IMA'] = flag1,flag2,flag3\n-            \n+          \n                 c = astropy.table.Column(name='ifile', data=np.repeat(dither, len(idd))); data.add_column(c)\n                 c = astropy.table.Column(name='idet' , data=np.repeat(idet   , len(idd))); data.add_column(c)\n-                (x, y) = pixel2focalplane(data['idet'], data['X_IMAGE'], data['Y_IMAGE'])\n-                c = astropy.table.Column(name='X_fp' , data=x); data.add_column(c)\n-                c = astropy.table.Column(name='Y_fp' , data=y); data.add_column(c)\n+                \n+  \n+                #(x, y) = pixel2focalplane(data['idet'], data['X_IMAGE'], data['Y_IMAGE'])\n+                c = astropy.table.Column(name='X_fp' , data=xfp); data.add_column(c)\n+                c = astropy.table.Column(name='Y_fp' , data=yfp); data.add_column(c)\n \n                 # Trasform x and y coordinates into the [-1,1] range on the detector\n-                (x, y) = pixel2det(idet, data['X_IMAGE'], data['Y_IMAGE'])\n-                c = astropy.table.Column(name='X_det' , data=x); data.add_column(c)\n-                c = astropy.table.Column(name='Y_det' , data=y); data.add_column(c)\n+                #(x, y) = pixel2det(idet, data['X_IMAGE'], data['Y_IMAGE'])\n+                c = astropy.table.Column(name='X_det' , data=xdn); data.add_column(c)\n+                c = astropy.table.Column(name='Y_det' , data=ydn); data.add_column(c)\n \n                 if len(obs) == 0:\n                     obs = data.copy()\n@@ -711,7 +760,7 @@ class SelfDitherData:\n         #assert np.min(catalog['nobs']) == 2\n         return (catalog, index_star2obs, index_det2obs)\n     \n-    def __init__(self, data, ndithers = 10, noisefactor = 1):\n+    def __init__(self, data, mdb, gwapos, ndithers = 10, noisefactor = 1):\n         self.ncoeff = data.ncoeff\n         self.limmag = data.limmag\n         self.outdir = data.outdir\n@@ -722,13 +771,14 @@ class SelfDitherData:\n         fakecube_name = os.path.join(self.outdir, 'data', 'EUC_SIR_W-RELATIVEFLUX-SCALE_3_manual_newDM_2022Nov29.fits') \n         self.cube = fits.getdata(fakecube_name,1) # a vignetted tilted grism\n         #self.cube = illuminate() \n+        self.detmod = DetectorModel(gwapos, mdb, rotate=False) # change false to True once new data\n \n         idd = data.obs['OBJECT_ID']\n-        ra,dec = data.obs['ALPHA_J2000'],data.obs['DELTA_J2000']\n+        #ra,dec = data.obs['ALPHA_J2000'],data.obs['DELTA_J2000']\n         xfp,yfp = data.obs['X_fp'], data.obs['Y_fp']\n         mag,magerr = data.obs['MAG_APER'], data.obs['MAGERR_APER']\n \n-        sidd,sximage,syimage,sra,sdec,smag,smagerr,sflag1,sflag2,sflag3,sdet,sdither = [],[],[],[],[],[],[],[],[],[],[],[]\n+        sidd,sximage,syimage,sxd,syd,sxf,syf,smag,smagerr,sflag1,sflag2,sflag3,sdet,sdither = [],[],[],[],[],[],[],[],[],[],[],[],[],[]\n         obs2 = ()\n         \n         X =  np.linspace(-1.,1.,np.shape(self.cube)[1])\n@@ -740,27 +790,39 @@ class SelfDitherData:\n         print(\"Dithering spectra\")\n \n         for i in range(len(xfp)):\n-            x_new = np.random.uniform(-1.0,1.0,self.ndithers)\n-            y_new = np.random.uniform(-1.0,1.0,self.ndithers)\n+            #det_new = np.random.randint(0,16,self.ndithers) # which detector\n+            #det_id = ['11','12','13','14','21','22','23','24','31','32','33','34','41','42','43','44']\n+\n             flux = 10.0**((mag[i]-25.0)/-2.5)#mag[i]#\n-            for j in range(self.ndithers):\n-                det,pixx, pixy = focalplane2pixel(x_new[j], y_new[j])\n-                if np.isfinite(pixx):\n+            j=0\n+            while j < self.ndithers:\n+                x_new = np.random.uniform(-1,1,1) #normalized fp x \n+                y_new = np.random.uniform(-1,1,1) #normalized fp y\n+                fov = normalfov_r(box,np.array([x_new,y_new])) #fov coordinates in mm\n+                pix = detmod.getPixel(fov[0],fov[1])  # pixel coordinates\n+                if pix[0]!=0:\n+                    detid = pix.getDetectorNumber()\n                     pts_old = np.array([[self.wcenter,xfp[i],yfp[i]]])\n-                    pts_new = np.array([[self.wcenter,x_new[j],y_new[j]]]) \n+                    pts_new = np.array([[self.wcenter,xf,yf]]) \n                     mag_new = -2.5*np.log10(flux * (10.0**(fn(pts_new)/-2.5))/(10.0**(fn(pts_old)/-2.5)))+25.0\n                     sidd.append(idd[i])\n-                    sximage.append(pixx)\n-                    syimage.append(pixy)\n-                    sdet.append(det)\n+                    sximage.append(fov[0]) #in mm not sure\n+                    syimage.append(fov[1]) #in mm\n+                    #sdet.append(det_id[det_new[j]])\n+                    sdet.append(detid)\n                     sdither.append(j)\n-                    sra.append(ra[i])\n-                    sdec.append(dec[i])\n+                    sxd.append(xd)\n+                    syd.append(yd)\n+                    sxf.append(x_new)\n+                    syf.append(y_new)\n+                    #sra.append(ra[i])\n+                    #sdec.append(dec[i])\n                     smag.append(mag_new[0]+np.random.normal(0.,magerr[i]*self.noisefactor)) # added some noise \n                     smagerr.append(magerr[i])\n                     sflag1.append(0)\n                     sflag2.append(0)\n                     sflag3.append(0)\n+                    j+=1\n \n         data = Table()\n         data['OBJECT_ID'],data['X_IMAGE'],data['Y_IMAGE'], data['ALPHA_J2000'],data['DELTA_J2000'] = sidd,sximage,syimage,sra,sdec\n@@ -769,14 +831,14 @@ class SelfDitherData:\n             \n         c = astropy.table.Column(name='ifile', data=sdither); data.add_column(c)\n         c = astropy.table.Column(name='idet' , data=sdet); data.add_column(c)\n-        (x, y) = pixel2focalplane(data['idet'], data['X_IMAGE'], data['Y_IMAGE'])\n-        c = astropy.table.Column(name='X_fp' , data=x); data.add_column(c)\n-        c = astropy.table.Column(name='Y_fp' , data=y); data.add_column(c)\n+        #(x, y) = pixel2focalplane(data['idet'], data['X_IMAGE'], data['Y_IMAGE'])\n+        c = astropy.table.Column(name='X_fp' , data=sxf); data.add_column(c)\n+        c = astropy.table.Column(name='Y_fp' , data=syf); data.add_column(c)\n \n         # Trasform x and y coordinates into the [-1,1] range on the detector\n-        (x, y) = pixel2det(data['idet'], data['X_IMAGE'], data['Y_IMAGE'])\n-        c = astropy.table.Column(name='X_det' , data=x); data.add_column(c)\n-        c = astropy.table.Column(name='Y_det' , data=y); data.add_column(c)\n+        #(x, y) = pixel2det(data['idet'], data['X_IMAGE'], data['Y_IMAGE'])\n+        c = astropy.table.Column(name='X_det' , data=sxd); data.add_column(c)\n+        c = astropy.table.Column(name='Y_det' , data=syd); data.add_column(c)\n     \n         if len(obs2) == 0:\n             obs2 = data.copy()\n@@ -796,7 +858,7 @@ class SelfDitherData:\n class SelfCalib:\n     \"\"\"A class to implement Self-calibration algorithms\"\"\"\n \n-    def __init__(self, data):\n+    def __init__(self, data, grismpos, mdb):\n         self.data = data\n         self.par_stars = data.catalog.copy()\n         self.par_detqe = np.zeros(16)\n@@ -808,6 +870,9 @@ class SelfCalib:\n             par_flat.append(Fit2DNP(data.ncoeff, x, y))\n             #par_flat.append(Fit2D_Cheb(data.ncoeff, x, y))\n         self.par_flat = np.asarray(par_flat)\n+        self.mdb = mdb\n+        self.grismpos = grismpos\n+        \n \n         \n     def expectedUncertainties(self):\n@@ -885,9 +950,10 @@ class SelfCalib:\n         m = self\n         dets = []\n         data = []\n+        detmod = DetectorModel(m.grismpos, m.mdb, rotate=False)\n \n         # Calculate FP normalized coordinates of the gaps\n-        (gx, gy) = coordGaps(5)\n+        (gx, gy) = coordGaps(detmod,n=5)\n \n         # For each point in the gaps evaluate two interpolated values,\n         # using the flat parameters in the two neighbour detectors\n@@ -895,8 +961,11 @@ class SelfCalib:\n             #fig, ax = plt.subplots(); ax = fig.add_subplot(111, projection='3d')\n             for idet in closestDetectors(gx[i], gy[i]):\n                 # Calculate coordinates of the gap wrt the idet-th detector\n-                (x0, y0) = det2focalplane(idet, -1, -1)\n-                (x1, y1) = det2focalplane(idet,  1,  1)\n+                #(x0, y0) = det2focalplane(idet, -1, -1)\n+                (x0,y0) = detmod.getFOVPositions(normaldet_r(np.array([-1,-1])), detmod.getDetectorID(idet)).T\n+                #(x1, y1) = det2focalplane(idet,  1,  1)\n+                (x1,y1) = detmod.getFOVPositions(normaldet_r(np.array([1,1])), detmod.getDetectorID(idet)).T\n+\n                 x = (gx[i] - x0) * 2 / (x1-x0) - 1\n                 y = (gy[i] - y0) * 2 / (y1-y0) - 1\n                 f = m.par_flat[idet-1].extrapolate(x, y)\n@@ -979,7 +1048,11 @@ class SelfCalib:\n     def interpolateOnFocal(self, x, y):\n         m = self\n         (_x, _y) = cartesianProduct(x, y)\n-        boz, detx, dety = focalplane2det(_x, _y)\n+        #boz, detx, dety = focalplane2det(_x, _y)\n+        detmod = DetectorModel(m.grismpos, m.mdb, rotate=False)\n+        pix = detmod.getPixel(_x, _y)\n+        detx,dety = pix[0],pix[1]\n+        boz = pix.getDetectorNumber()\n \n         v,u = [],[]\n         for d in range(len(boz)):\n@@ -1055,10 +1128,15 @@ class SelfCalib:\n         ax = fig.add_subplot(111, projection='3d')\n         x = np.linspace(-1., 1., m.data.ncoeff+1); x = (x[0:-1] + x[1:]) / 2.\n         y = x.copy()\n+        dett_id = ['11','12','13','14','21','22','23','24','31','32','33','34','41','42','43','44']\n+\n         for idet in range(1, 17):\n             (val, unc) = m.interpolateOnDetector(idet, x, y)\n             (_x, _y) = allcombinations(x, y)\n-            (_x, _y) = det2focalplane(idet, _x, _y)\n+            #(_x, _y) = det2focalplane(idet, _x, _y)\n+            detmod = DetectorModel(m.grismpos, m.mdb, rotate=False)\n+            (_x, _y) = detmod.getFOVPositions(np.array([_x, _y]), dett_id[idet]).T\n+\n             ax.scatter(_x, _y, val, marker='.')\n         plt.title(\"Flat field pattern\")\n         plt.xlabel(\"Focal plane Y\")\n@@ -1077,7 +1155,9 @@ class SelfCalib:\n             rr[1] = np.max((rr[1], val.max()))\n         for idet in range(1, 17):\n             (val, unc) = m.interpolateOnDetector(idet, x, y)\n-            (_x, _y) = det2focalplane(idet, x, y)\n+            #(_x, _y) = det2focalplane(idet, x, y)\n+            detmod = DetectorModel(m.grismpos, m.mdb, rotate=False)\n+            (_x, _y) = detmod.getFOVPositions(np.array([x, y]), dett_id[idet]).T\n             _x = boundaries(_x)\n             _y = boundaries(_y)\n             im = ax.pcolor(_x, _y, val, vmin=rr[0], vmax=rr[1], cmap=plt.get_cmap('brg'))\n@@ -1110,7 +1190,9 @@ class SelfCalib:\n             rr[1] = np.max((rr[1], unc.max()))\n         for idet in range(1, 17):\n             (val, unc) = m.interpolateOnDetector(idet, x, y)\n-            (_x, _y) = det2focalplane(idet, x, y)\n+            #(_x, _y) = det2focalplane(idet, x, y)\n+            detmod = DetectorModel(m.grismpos, m.mdb, rotate=False)\n+            (_x, _y) = detmod.getFOVPositions(np.array([x, y]), dett_id[idet]).T\n             _x = boundaries(_x)\n             _y = boundaries(_y)\n             im = ax.pcolor(_x, _y, unc, vmin=rr[0], vmax=rr[1], cmap=plt.get_cmap('brg'))\n@@ -1146,7 +1228,7 @@ class SelfCalib:\n class SelfCalibWave:\n     \"\"\"A class to run self calibration over wavelength direction\"\"\"\n     \n-    def __init__(self, extspecnames, tables, ncoeff, limmag, calmode, noisefactor, deltaw, spatialres, waveres, ndither, outdir,ms_flat):\n+    def __init__(self, extspecnames, list_grisms, ncoeff, limmag, calmode, noisefactor, deltaw, spatialres, waveres, ndither, mdb, outdir,ms_flat,tables=None):\n \n         self.extspecnames = extspecnames\n         self.tables = tables\n@@ -1172,10 +1254,11 @@ class SelfCalibWave:\n         #self.cube = np.zeros((self.spatialres,self.spatialres,self.waveres,6)) #spatialx,spatialy, wavelenghts, grisms\n         self.cube,self.errcube = MakeCubeTess(ms_flat)\n         self.ms_flat = self.cube\n-        self.list_grisms = GrismList(tables)\n+        self.list_grisms = list_grisms \n         \n         self.ndither = ndither\n         self.outdir = outdir\n+        self.mdb = mdb\n \n     def fit(self):\n         '''looping over wavelengths and filling in the cube using self calib fitting'''\n@@ -1185,26 +1268,26 @@ class SelfCalibWave:\n         \n         for grism in self.list_grisms:\n             for i in range(self.waveres):\n-               \n+                spec_forGW = H5ExtractedSpectraCollection.load(self.extspecnames[0], ids=[H5ExtractedSpectrum.SPEC1D_LABEL,])     \n                 ## if self cal observations or simulations exist no need to dither things (default mode = 0)\n                 if self.calmode==0:\n-                    data2 = SelfCalibSirData(self.extspecnames, self.tables, self.ncoeff, self.limmag, self.wcenters[i],self.deltaw,grism,outdir=self.outdir)\n+                    data2 = SelfCalibSirData(self.extspecnames, self.ncoeff, self.limmag, self.wcenters[i],self.deltaw,grism,self.mdb,outdir=self.outdir)\n                     \n                 ## simple random simulation of dithering spectra in the absence of SelfCal observations (mode = 1)    \n                 elif self.calmode==1:\n-                    data = SelfCalibSirData(self.extspecnames, self.tables, self.ncoeff, self.limmag, self.wcenters[i],self.deltaw,grism,outdir=self.outdir)\n-                    data2 = SelfDitherData(data,ndithers=self.ndither,noisefactor = self.noisefactor) \n+                    data = SelfCalibSirData(self.extspecnames, self.ncoeff, self.limmag, self.wcenters[i],self.deltaw,grism,self.mdb,outdir=self.outdir)\n+                    data2 = SelfDitherData(data, self.mdb, specforGW.getGWAPositionName(), ndithers=self.ndither,noisefactor = self.noisefactor) \n                     \n                 ## More realistic simulation of selfCal pattern using GAIA star positions in the absence of SelfCal (mode=2)    \n                 else:\n-                    data2 = SelfCalibSirGaiaData(self.extspecnames, self.tables, self.ncoeff, self.limmag, self.wcenters[i],self.deltaw,grism, self.noisefactor, self.ndither,outdir=self.outdir) \n+                    data2 = SelfCalibSirGaiaData(self.extspecnames, self.tables, self.ncoeff, self.limmag, self.wcenters[i],self.deltaw,grism, self.noisefactor, self.ndither,self.mdb,outdir=self.outdir) \n                \n             #np.savez('/home/shemmati/Work/Projects/spectra/star_catalog_test_g'+str(grism)+'_w'+str(self.wcenters[i])+'.npz',data2.obs,data2.catalog,data2.index_star2obs,data2.index_det2obs) ### comment out later \n                 ##########debugging###################\n                 print('grism:',grism)\n                 print('wave:',i)\n                 ##########debugging###################\n-                m = SelfCalib(data2)\n+                m = SelfCalib(data2,specforGW.getGWAPositionName(),self.mdb)\n                 m.fit()\n                 g = list_grisms_main.index(grism) \n                 self.cube[i,:,:,g], self.errcube[i,:,:,g] = m.OutputSir(self.spatialres)\n",
                            "fixed confliccts and cleaned RelFlux argparse in main",
                            "Tava",
                            "2023-08-08T09:58:46.000+02:00",
                            "4e7de5b7efecb422d1ea867998c1d0b6baedcadc"
                        ]
                    ],
                    "SIR_FluxCalibration/python/SIR_FluxCalibration/.ipynb_checkpoints/SelfCalib-checkpoint.py": [
                        [
                            "@@ -238,6 +238,60 @@ def MakeCubeTess(a):\n         berr[:,:,:,i] = fits.getdata(a,2*i+2)          \n     return b,berr\n \n+def normaldet(xy,maxx=2040,maxy=2040):\n+    \"\"\"gets \n+    - the detector coordinate in pixel\n+    returns:\n+    - the detector coordinates in normalized [-1,1] range \"\"\"\n+    xslope = 2.0/(maxx)\n+    x = xslope*(xy[0]-(maxx/2.0))\n+        \n+    yslope = 2.0/(maxy)\n+    y = yslope*(xy[1]-(maxy/2.0))\n+    return np.array([x,y])\n+\n+def normaldet_r(xy,maxx=2040,maxy=2040):\n+    \"\"\"gets \n+    - the detector coordinate in [-1,1]\n+    returns:\n+    - the detector coordinates in pixel \"\"\"\n+    xslope = maxx/2\n+    x = xslope*xy[0]+(maxx/2.0)\n+        \n+    yslope = (maxy)/2.0\n+    y = yslope*xy[1]+(maxy/2.0)\n+    return np.array([x,y])\n+\n+def normalfov(box,fov):\n+    \"\"\"gets \n+    - the detector model which has the corners of the FOV in mm \n+    - the fov in mm\n+    returns:\n+    - the focal plane coordinates in normalized [-1,1] range \"\"\"\n+    xslope = 2.0/(box[1][0] - box[0][0])\n+    xint = (1+(box[1][0] / box[0][0]))/(1.0-(box[1][0] / box[0][0]))\n+    x = xslope*fov[0]+xint\n+        \n+    yslope = 2.0/(box[1][1] - box[0][1])\n+    yint = (1+(box[1][1] / box[0][1]))/(1.0-(box[1][1] / box[0][1]))\n+    y = yslope*fov[1]+yint\n+    return np.array([x,y])\n+\n+def normalfov_r(box,fov):\n+    \"\"\"gets \n+    - the detector model which has the corners of the FOV in normalized [-1,1]\n+    - the fov in mm\n+    returns:\n+    - the focal plane coordinates in mm \"\"\"\n+    xslope = 2.0/(box[1][0] - box[0][0])\n+    xint = (1+(box[1][0] / box[0][0]))/(1.0-(box[1][0] / box[0][0]))\n+    x = (fov[0]-xint)/xslope\n+        \n+    yslope = 2.0/(box[1][1] - box[0][1])\n+    yint = (1+(box[1][1] / box[0][1]))/(1.0-(box[1][1] / box[0][1]))\n+    y = (fov[1]-yint)/yslope\n+    return np.array([x,y])\n+\n class SelfCalibSirGaiaData:\n     \"\"\"A class to store Self-calibration input and temporary data\"\"\"\n     \n",
                            "Merge remote-tracking branch 'origin/Relflux_detlayout' into develop",
                            "Tava",
                            "2023-08-09T08:39:11.000+02:00",
                            "b354f49abd0839ee364d9c1a8a87c5be32e9ef38"
                        ],
                        [
                            "@@ -52,9 +52,10 @@ from SIR_SpectraDecontamination.LocationTableSet import LocationTableSet\n from SIR_SpectraExtraction.H5ExtractedSpectraCollection import H5ExtractedSpectraCollection \n from SIR_H5SpectraExtractionBinding import H5ExtractedSpectrum\n from SIR_SpectraExtractionBinding import SpectrumDataSet\n+from SIR_InstrumentModels.DetectorModel import DetectorModel\n \n from SIR_FluxCalibration.Fit2D import *\n-from SIR_FluxCalibration.FPA_Geometry import *\n+#from SIR_FluxCalibration.FPA_Geometry import *\n from SIR_FluxCalibration.Utils import *\n \n import ST_DataModelBindings.bas.ppr_stub as ppr_dict #JX\n@@ -215,18 +216,6 @@ def get_euclid_wcs(ra_boresight, dec_boresight, roll = None, oversample = 1,\n     return w\n \n \n-def GrismList(tables):\n-    '''This routine is to find the list of grisms that are present \n-    in the list of input spectra/location tables'''\n-    \n-    #grisms = ['RGS000','RGS180+4','RGS000-4','RGS180','RGS270','BGS000'] order of grisms!\n-    #list_grisms =[0,6,-4,2,0,0] ### change 0 when blue grism and RGS270 data exists\n-    list_grisms = []\n-    for t in tables: \n-        if (t.getGWAPosition()+t.getGWATilt()) not in list_grisms:\n-            list_grisms.append(t.getGWAPosition()+t.getGWATilt())\n-    return np.array(list_grisms)\n-\n def FitsDimensions(f):\n     i = 0\n     while i<20:\n@@ -252,7 +241,7 @@ def MakeCubeTess(a):\n class SelfCalibSirGaiaData:\n     \"\"\"A class to store Self-calibration input and temporary data\"\"\"\n     \n-    def sir_starcatalog(self,h5file,tables):\n+    def sir_starcatalog(self,h5file,tables,detmod):\n         ''' measuring flux in a wavebin for SIR spectra given an \n         h5 file and a location table'''\n     \n@@ -261,23 +250,32 @@ class SelfCalibSirGaiaData:\n         loc_t = tables\n       \n         ids,xf,yf =[],[],[]\n+        xd,yd = [],[]\n+        xim,yim = [],[]\n         jm,hm = [],[]\n         chunkm,dc = [],[]\n         ifile = []\n+        detectorss = []\n         for spectrum in h5file: \n             metadata = loc_t[spectrum.getObjectID()].getAstronomicalObject()\n             ras,decl = metadata.getCoords()\n             j_mag = metadata.getMagnitude('J').getValue()\n             h_mag = metadata.getMagnitude('H').getValue()   \n-            x1,y1 = spectrum.getLocationSpectrum().computePosition(self.wcenter, row=1).getPosition()\n-            (x, y) = pixel2det(idet, x1, y1)\n-            (xfp,yfp) = pixel2focalplane(idet,x1,y1)\n+            locc = spectrum.getLocationSpectrum()\n+            locc.setDetectorModel(detmod)   #### not needed when new data comes\n+            xy = locc.computePosition(self.wcenter, row=1).getPosition() ## detector coordinates in pixel\n+            det_id = DetectorModel.getDetectorID(idet)\n+            box = detmod.getEnvelopeBox()\n+            (xdp,ydp) = normaldet(xy,maxx=detmod.getDetXPixels(),maxy=detmod.getDetYPixels()) ## detector coordinates [-1,1]\n+            (xfp,yfp) = normalfov(box,detmod.getFOVPositions(xy, det_id).T) ## focal plane in [-1,1]\n+\n+            #(xfp,yfp) = pixel2focalplane(idet,x1,y1)\n             flux = spectrum.getSpectrumDataSet(H5ExtractedSpectrum.SPEC1D_LABEL).getActualData()\n             var = spectrum.getSpectrumDataSet(H5ExtractedSpectrum.SPEC1D_LABEL).getActualVariance()\n             quality = spectrum.getSpectrumDataSet(H5ExtractedSpectrum.SPEC1D_LABEL).getQuality()\n             wave = spectrum.getWavelength()       \n             mm,dmm = measureChunkMagnitude1D(wave,flux,var,quality,center_w = self.wcenter,delta_w=self.deltaw)  \n-            if (mm<self.limmag) and (dmm<0.5) and (x1>0) and (x1<2048) and (y1>0) and (y1<2048):  \n+            if (mm<self.limmag) and (dmm<0.5) and (xy[0]>0) and (xy[0]<2048) and (xy[1]>0) and (xy[1]<2048):  \n                 jm.append(j_mag)\n                 hm.append(h_mag)\n                 chunkm.append(mm)\n@@ -285,11 +283,18 @@ class SelfCalibSirGaiaData:\n                 ids.append(spectrum.getObjectID())\n                 xf.append(xfp)\n                 yf.append(yfp)\n+                xd.append(xdp)\n+                yd.append(ydp)\n+                xim.append(xy[0])\n+                yim.append(xy[1])\n                 ifile.append(dither)\n+                detectorss.append(det_id)\n         \n         sirr = Table()\n         sirr['ID'], sirr['Xfp'], sirr['Yfp'] = np.array(ids),np.array(xf),np.array(yf)\n-        sirr['jmag'],sirr['hmag'], sirr['chunkm'],sirr['chunkdm'],sirr['ifile'] = np.array(jm),np.array(hm),np.array(chunkm),np.array(dc),np.array(ifile)\n+        sirr['Xd'],sirr['Yd'] = np.array(xd),np.array(yd)\n+        sirr['Ximage'],sirr['Yimage'] = np.array(xim),np.array(yim)\n+        sirr['jmag'],sirr['hmag'], sirr['chunkm'],sirr['chunkdm'],sirr['ifile'],sirr['detector'] = np.array(detectorss) np.array(jm),np.array(hm),np.array(chunkm),np.array(dc),np.array(ifile)\n \n         return sirr\n                                                                                                                            \n@@ -297,12 +302,14 @@ class SelfCalibSirGaiaData:\n         ''' Matching the stars in the NEP from a GAIA catalog down to a limmag \n         to closest (very approximately) sir star'''\n         gaia = self.gaia\n-        sirID,sirx,siry,sirJ,sirH,sirmag,sirdmag,sirdither = sir['ID'],sir['Xfp'],sir['Yfp'],sir['jmag'],sir['hmag'],sir['chunkm'],sir['chunkdm'],sir['ifile']\n+        sirID,sirxfp,siryfp,sirximage,siryimage,sirxdet,sirydet,sirJ,sirH,sirmag,sirdmag,sirdither,sirdetectors = sir['ID'],sir['Xfp'],sir['Yfp'],sir['Ximage'],sir['Yimage'],sir['Xd'],sir['Yd'],sir['jmag'],sir['hmag'],sir['chunkm'],sir['chunkdm'],sir['ifile'], sir['detector']\n         #sir15=(sirJ+sirH)/2.0#+ (sirmag-sirH) ### the SIR star magnitude at 1.5 with a correction spectra vs TU\n     \n         best_star,starY,starJ,starH,starDetx,starDety = np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1'])\n         starmag,stardmag = np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1'])\n         stardither = np.zeros_like(gaia['w1'])\n+        starFPx,starFPy,starimagex,starimagey = np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1']),np.zeros_like(gaia['w1'])\n+        stardetector = np.zeros_like(gaia['w1'])\n         for s in range(len(gaia['ra'])):\n             if (flux2mag(gaia['rp'][s])>14)and(flux2mag(gaia['rp'][s])<self.limmag):\n                 #y_g_int = np.interp(1.5,[0.5,3.4],[gaia['rp'][s],gaia['w1'][s]])\n@@ -312,22 +319,35 @@ class SelfCalibSirGaiaData:\n                 best_star[s] = sirID[u]\n                 starJ[s] = sirJ[u]\n                 starH[s] = sirH[u]\n-                starDetx[s] = sirx[u]\n-                starDety[s] = siry[u]\n+                starFPx[s] = sirxfp[u]\n+                starFPy[s] = siryfp[u]\n+                starDetx[s] = sirxdet[u]\n+                starDety[s] = sirydet [u]\n+                starimagex[s] = sirximage[u]\n+                starimagey[s] = siryimage[u]\n                 starmag[s],stardmag[s] = sirmag[u],sirdmag[u]\n                 stardither[s] = sirdither[u]\n+                stardetector[s] = sirdetectors[u]\n \n-        u = (starDetx!=0)\n-        nn = len(starDetx[u])\n-        best_star1,starY1,starJ1,starH1,starDetx1,starDety1,starmag1,stardmag1,stardither1 = np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn)\n-        best_star1,starY1,starJ1,starH1,starDetx1,starDety1,starmag1,stardmag1,stardither1 = best_star[u],starY[u],starJ[u],starH[u],starDetx[u],starDety[u],starmag[u],stardmag[u],stardither[u]\n+        u = (starFPx!=0)\n+        nn = len(starFPx[u])\n+        best_star1,starY1,starJ1,starH1,starFPx1,starFPy1,starmag1,stardmag1,stardither1 = np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn)\n+        \n+        starimagex1,starimagey1,starDetx1,starDety1,stardetector1 = np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn),np.zeros(nn)\n+        \n+        best_star1,starY1,starJ1,starH1,starFPx1,starFPy1,starmag1,stardmag1,stardither1 = best_star[u],starY[u],starJ[u],starH[u],starFPx[u],starFPy[u],starmag[u],stardmag[u],stardither[u]\n+        \n+        starimagex1,starimagey1,starDetx1,starDety1,stardetector1 = starimagex[u],starimagey[u],starDetx[u],starDety[u],stardetector[u]\n+        \n         gra,gdec,grp,gw1 = gaia['ra'][u],gaia['dec'][u],gaia['rp'][u],gaia['w1'][u]\n \n         gaiasir = Table()\n-        gaiasir['SIR_ID'], gaiasir['starXfp'], gaiasir['starYfp'] = np.arange(len(starDetx1)),starDetx1,starDety1\n+        gaiasir['SIR_ID'], gaiasir['starXfp'], gaiasir['starYfp'] = np.arange(len(starDetx1)),starFPx1,starFPy1\n+        gaiasir['starXdet'],gaiasir['starYdet'],gaiasir['starXimage'],gaiasir['starYimage'] =starDetx1,starDety1,starimagex1,starimagey1\n         gaiasir['mag'],gaiasir['dmag'] = starmag1,stardmag1\n         gaiasir['ra'], gaiasir['dec'] = gra, gdec\n         gaiasir['ifile']=stardither1\n+        gaiasir['detector']=stardetector1\n     \n         return gaiasir\n \n@@ -354,8 +374,9 @@ class SelfCalibSirGaiaData:\n \n         obs = np.zeros_like(go['ra'])\n         nid,nra,ndec,nmag,ndmag,nxfp,nyfp,nifile = [],[],[],[],[],[],[],[]\n+        nxdet,nydet,nxim,nyim = [],[],[],[]\n         newX,newY = [],[] \n-        \n+        ndetector = []\n         fig = plt.figure()\n         plt.plot(go['ra'],go['dec'],'.',color='gray',alpha=0.1)\n \n@@ -371,23 +392,31 @@ class SelfCalibSirGaiaData:\n             stars_in_pointing = go[ss]\n \n             ra2,dec2 = go['ra'][ss],go['dec'][ss]\n-            sirid,sdetx,sdety = go['SIR_ID'][ss],go['starXfp'][ss],go['starYfp'][ss]\n+            sirid,sdetx,sdety = go['SIR_ID'][ss],go['starXdet'][ss],go['starYdet'][ss]\n+            sfpx,sfpy = go['starXfp'][ss],go['starYfp'][ss]\n+            simx,simy = go['starXimage'][ss],go['starYimage'][ss]\n             nx,ny = fovx[ss],fovy[ss]\n             smag,sdmag = go['mag'][ss],go['dmag'][ss]\n             sdither = go['ifile'][ss]\n+            sdetector = go['detector'][ss]\n             plt.plot(go['ra'][ss],go['dec'][ss],'.',color=plt.cm.viridis(i*int(256/len(ras))))        \n \n             for s in range(len(ra2)):\n                 nra.extend([ra2[s]])\n                 ndec.extend([dec2[s]])\n                 nid.extend([sirid[s]])\n-                nxfp.extend([sdetx[s]])\n-                nyfp.extend([sdety[s]]) \n+                nxfp.extend([sfpx[s]])\n+                nyfp.extend([sfpy[s]])\n+                nxdet.extend([sdetx[s]])\n+                nydet.extend([sdety[s]])\n+                nxim.extend([simx[s]])\n+                nyim.extend([simx[s]])\n                 nmag.extend([smag[s]])\n                 ndmag.extend([sdmag[s]])             \n                 newX.extend([nx[s]])\n                 newY.extend([ny[s]])\n                 nifile.extend([sdither[s]])\n+                ndetector.extend([sdetector[s]])\n                 \n         plt.xlabel(\"RA\")\n         plt.ylabel(\"DEC\")\n@@ -400,28 +429,24 @@ class SelfCalibSirGaiaData:\n \n         fn = RGI((Z,X,Y), self.cube) ## interpolating on the response\n         mag_new,dmag_new = np.zeros_like(nmag),np.zeros_like(ndmag)\n-        ndet,xdet,ydet = np.zeros_like(nmag),np.zeros_like(ndmag),np.zeros_like(ndmag)\n-        ximage,yimage = np.zeros_like(nmag),np.zeros_like(ndmag)\n-    \n+        ndet = np.zeros_like(nmag)\n+        \n         for k in range(len(nra)):\n             flux = 10.0**((nmag[k]-25.0)/-2.5)#mag[i]#\n             pts_old = np.array([[self.wcenter,nxfp[k],nyfp[k]]])\n             pts_new = np.array([[self.wcenter,newX[k],newY[k]]]) \n             mag_new[k] = -2.5*np.log10(flux * (10.0**(fn(pts_new)/-2.5))/(10.0**(fn(pts_old)/-2.5)))+25.0+ self.noisefactor*np.random.normal(0.,ndmag[k])\n \n-            ndet[k],xdet[k],ydet[k] = focalplane2det(newX[k], newY[k])\n-            ximage[k], yimage[k] = det2pixel (ndet[k],xdet[k],ydet[k])\n \n-    \n         # saving with the format readable by the rest of SIR self calib data\n         gaiasirdither = Table()\n         gaiasirdither['OBJECT_ID'], gaiasirdither['X_fp'], gaiasirdither['Y_fp'] = nid,newX,newY\n         gaiasirdither['MAG_APER'],gaiasirdither['MAGERR_APER'] = mag_new,ndmag+0.0001*np.random.lognormal(0,1,len(ndmag))\n         gaiasirdither['ALPHA_J2000'], gaiasirdither['DELTA_J2000'] = nra, ndec\n         gaiasirdither['FLAGS_EXTRACTION'], gaiasirdither['FLAGS_SCAMP'], gaiasirdither['FLAGS_IMA'] = np.zeros_like(nra),np.zeros_like(nra),np.zeros_like(nra)\n-        gaiasirdither['ifile'], gaiasirdither['idet'] = np.array(nifile).astype(int),ndet.astype(int)\n-        gaiasirdither['X_IMAGE'], gaiasirdither['Y_IMAGE'] = ximage, yimage\n-        gaiasirdither['X_det'], gaiasirdither['Y_det'] = xdet, ydet\n+        gaiasirdither['ifile'], gaiasirdither['idet'] = np.array(nifile).astype(int),ndetector\n+        gaiasirdither['X_IMAGE'], gaiasirdither['Y_IMAGE'] = nxim, nyim\n+        gaiasirdither['X_det'], gaiasirdither['Y_det'] = nxdet, nydet\n     \n         return gaiasirdither\n \n@@ -457,7 +482,7 @@ class SelfCalibSirGaiaData:\n         return (catalog, index_star2obs, index_det2obs)\n \n \n-    def __init__(self, extspecnames, tables, ncoeff, limmag, wcenter, deltaw, grism_param, noisefactor, ndither, outdir=\".\"):\n+    def __init__(self, extspecnames, tables, ncoeff, limmag, wcenter, deltaw, grism_param, noisefactor, ndither, mdb, outdir=\".\"):\n         \n         obs = ()\n \n@@ -474,6 +499,7 @@ class SelfCalibSirGaiaData:\n         self.deltaw = deltaw\n         self.noisefactor = noisefactor\n         self.ndither = ndither\n+        self.mdb = mdb\n \n         #JX\n         exspectra_test = H5ExtractedSpectraCollection.load(extspecnames[0], ids=[H5ExtractedSpectrum.SPEC1D_LABEL,])\n@@ -495,9 +521,10 @@ class SelfCalibSirGaiaData:\n             if (tables[k].getGWAPosition()+tables[k].getGWATilt()) == grism_param:\n                 exspectra = H5ExtractedSpectraCollection.load(filename, ids=[H5ExtractedSpectrum.SPEC1D_LABEL,])\n                 print (\"Loading file \", filename) \n+                detmod = DetectorModel(exspectra.getGWAPositionName(), self.mdb, rotate=False) #change to True when new data\n \n ###############################################################\n-                sirr_one = self.sir_starcatalog (exspectra,tables[k])\n+                sirr_one = self.sir_starcatalog (exspectra,tables[k],detmod)\n                 if len(sirr) ==0:\n                     sirr = sirr_one.copy()\n                 else:\n@@ -577,7 +604,7 @@ class SelfCalibSirData:\n         return (catalog, index_star2obs, index_det2obs)\n \n \n-    def __init__(self, extspecnames, tables, ncoeff, limmag, wcenter, deltaw, grism_param, outdir=\".\"):\n+    def __init__(self, extspecnames, ncoeff, limmag, wcenter, deltaw, grism_param, mdb, outdir=\".\"):\n         \n         obs = ()\n \n@@ -592,40 +619,59 @@ class SelfCalibSirData:\n         self.outdir = outdir\n         self.wcenter = wcenter\n         self.deltaw = deltaw\n-\n+        self.mdb = mdb\n \n         # Read input files\n         print(\"Loading spectra\")\n         for k,filename in enumerate(extspecnames): \n         \n             #print (\"Loading file \", filename) \n-            if (tables[k].getGWAPosition()+tables[k].getGWATilt()) == grism_param:\n-                exspectra = H5ExtractedSpectraCollection.load(filename, ids=[H5ExtractedSpectrum.SPEC1D_LABEL,])\n+            exspectra = H5ExtractedSpectraCollection.load(filename, ids=[H5ExtractedSpectrum.SPEC1D_LABEL,])\n+                    \n+            detmod = DetectorModel(exspectra.getGWAPositionName(), self.mdb, rotate=False) #####change to True for new detector layout\n+\n+            if (exspectra.getGWAPosition()+exspectra.getGWATilt()) == grism_param:\n+#            if (tables[k].getGWAPosition()+tables[k].getGWATilt()) == grism_param:\n                 idet = exspectra.getDetectorNumber()\n                 dither = exspectra.getDither()\n-                loc_t = tables[k]\n+                #loc_t = tables[k]\n       \n                 idd,ximage,yimage,ra,dec,mag,magerr,flag1,flag2,flag3 = [],[],[],[],[],[],[],[],[],[]\n+                xfp,yfp,xdn,ydn = [],[],[],[]\n                     \n                 for spectrum in exspectra:   \n-                    metadata = loc_t[spectrum.getObjectID()].getAstronomicalObject()\n-                    ras,decl = metadata.getCoords()\n-                    h_mag = metadata.getMagnitude('H').getValue()\n-                    x1,y1 = spectrum.getLocationSpectrum().computePosition(wcenter, row=1).getPosition()\n+                    #metadata = loc_t[spectrum.getObjectID()].getAstronomicalObject()\n+                    #ras,decl = metadata.getCoords()\n+                    #h_mag = metadata.getMagnitude('H').getValue()\n+                    #### new\n+                    locc = spectrum.getLocationSpectrum()\n+                    locc.setDetectorModel(detmod)   #### not needed when new data comes\n+\n+                    #####\n+                    xy = locc.computePosition(wcenter, row=1).getPosition() ## detector coordinates in pixel\n                     flux = spectrum.getSpectrumDataSet(dataset_name).getActualData()\n                     var = spectrum.getSpectrumDataSet(dataset_name).getActualVariance()\n                     quality = spectrum.getSpectrumDataSet(dataset_name).getQuality()\n                     wave = spectrum.getWavelength()\n                     m,dm = measureChunkMagnitude1D(wave,flux,var,quality,self.wcenter,self.deltaw)                    \n+                    det_id = DetectorModel.getDetectorID(idet)\n+                    box = detmod.getEnvelopeBox()\n+                    (xd,yd) = normaldet(xy,maxx=detmod.getDetXPixels(),maxy=detmod.getDetYPixels()) ## detector coordinates [-1,1]\n+                    (xf,yf) = normalfov(box,detmod.getFOVPositions(xy, det_id).T) ## focal plane in [-1,1]\n \n-                    if (h_mag>16.0) and (h_mag<self.limmag)and(m<self.limmag)and (dm<0.5) and (x1>0) and (x1<2048) and (y1>0) and (y1<2048):\n+                    #if (h_mag>16.0) and (h_mag<self.limmag)and(m<self.limmag)and (dm<0.5) and (x1>0) and (x1<2048) and (y1>0) and (y1<2048):\n+                    if (m>-90) and (m<self.limmag) and (dm<0.5) and (x1>0) and (x1<2048) and (y1>0) and (y1<2048):\n               \n                         #if m>-90:\n                         idd.append(spectrum.getObjectID())\n-                        ximage.append(x1)\n-                        yimage.append(y1)\n-                        ra.append(ras)\n-                        dec.append(decl)\n+                        ximage.append(xy[0])\n+                        yimage.append(xy[1])\n+                        xdn.append(xd)\n+                        ydn.append(yd)\n+                        xfp.append(xf)\n+                        yfp.append(yf)\n+                        #ra.append(ras)\n+                        #dec.append(decl)\n                         mag.append(m)\n                         magerr.append(dm)\n                         flag1.append(0)\n@@ -633,20 +679,23 @@ class SelfCalibSirData:\n                         flag3.append(0)\n         \n                 data = Table()\n-                data['OBJECT_ID'],data['X_IMAGE'],data['Y_IMAGE'], data['ALPHA_J2000'],data['DELTA_J2000'] = idd,ximage,yimage,ra,dec\n+                #data['OBJECT_ID'],data['X_IMAGE'],data['Y_IMAGE'], data['ALPHA_J2000'],data['DELTA_J2000'] = idd,ximage,yimage,ra,dec\n+                data['OBJECT_ID'],data['X_IMAGE'],data['Y_IMAGE'] = idd,ximage,yimage                \n                 data['MAG_APER'],data['MAGERR_APER'] = mag, magerr\n                 data['FLAGS_EXTRACTION'], data['FLAGS_SCAMP'],data['FLAGS_IMA'] = flag1,flag2,flag3\n-            \n+          \n                 c = astropy.table.Column(name='ifile', data=np.repeat(dither, len(idd))); data.add_column(c)\n                 c = astropy.table.Column(name='idet' , data=np.repeat(idet   , len(idd))); data.add_column(c)\n-                (x, y) = pixel2focalplane(data['idet'], data['X_IMAGE'], data['Y_IMAGE'])\n-                c = astropy.table.Column(name='X_fp' , data=x); data.add_column(c)\n-                c = astropy.table.Column(name='Y_fp' , data=y); data.add_column(c)\n+                \n+  \n+                #(x, y) = pixel2focalplane(data['idet'], data['X_IMAGE'], data['Y_IMAGE'])\n+                c = astropy.table.Column(name='X_fp' , data=xfp); data.add_column(c)\n+                c = astropy.table.Column(name='Y_fp' , data=yfp); data.add_column(c)\n \n                 # Trasform x and y coordinates into the [-1,1] range on the detector\n-                (x, y) = pixel2det(idet, data['X_IMAGE'], data['Y_IMAGE'])\n-                c = astropy.table.Column(name='X_det' , data=x); data.add_column(c)\n-                c = astropy.table.Column(name='Y_det' , data=y); data.add_column(c)\n+                #(x, y) = pixel2det(idet, data['X_IMAGE'], data['Y_IMAGE'])\n+                c = astropy.table.Column(name='X_det' , data=xdn); data.add_column(c)\n+                c = astropy.table.Column(name='Y_det' , data=ydn); data.add_column(c)\n \n                 if len(obs) == 0:\n                     obs = data.copy()\n@@ -711,7 +760,7 @@ class SelfDitherData:\n         #assert np.min(catalog['nobs']) == 2\n         return (catalog, index_star2obs, index_det2obs)\n     \n-    def __init__(self, data, ndithers = 10, noisefactor = 1):\n+    def __init__(self, data, mdb, gwapos, ndithers = 10, noisefactor = 1):\n         self.ncoeff = data.ncoeff\n         self.limmag = data.limmag\n         self.outdir = data.outdir\n@@ -722,13 +771,14 @@ class SelfDitherData:\n         fakecube_name = os.path.join(self.outdir, 'data', 'EUC_SIR_W-RELATIVEFLUX-SCALE_3_manual_newDM_2022Nov29.fits') \n         self.cube = fits.getdata(fakecube_name,1) # a vignetted tilted grism\n         #self.cube = illuminate() \n+        self.detmod = DetectorModel(gwapos, mdb, rotate=False) # change false to True once new data\n \n         idd = data.obs['OBJECT_ID']\n-        ra,dec = data.obs['ALPHA_J2000'],data.obs['DELTA_J2000']\n+        #ra,dec = data.obs['ALPHA_J2000'],data.obs['DELTA_J2000']\n         xfp,yfp = data.obs['X_fp'], data.obs['Y_fp']\n         mag,magerr = data.obs['MAG_APER'], data.obs['MAGERR_APER']\n \n-        sidd,sximage,syimage,sra,sdec,smag,smagerr,sflag1,sflag2,sflag3,sdet,sdither = [],[],[],[],[],[],[],[],[],[],[],[]\n+        sidd,sximage,syimage,sxd,syd,sxf,syf,smag,smagerr,sflag1,sflag2,sflag3,sdet,sdither = [],[],[],[],[],[],[],[],[],[],[],[],[],[]\n         obs2 = ()\n         \n         X =  np.linspace(-1.,1.,np.shape(self.cube)[1])\n@@ -740,27 +790,39 @@ class SelfDitherData:\n         print(\"Dithering spectra\")\n \n         for i in range(len(xfp)):\n-            x_new = np.random.uniform(-1.0,1.0,self.ndithers)\n-            y_new = np.random.uniform(-1.0,1.0,self.ndithers)\n+            #det_new = np.random.randint(0,16,self.ndithers) # which detector\n+            #det_id = ['11','12','13','14','21','22','23','24','31','32','33','34','41','42','43','44']\n+\n             flux = 10.0**((mag[i]-25.0)/-2.5)#mag[i]#\n-            for j in range(self.ndithers):\n-                det,pixx, pixy = focalplane2pixel(x_new[j], y_new[j])\n-                if np.isfinite(pixx):\n+            j=0\n+            while j < self.ndithers:\n+                x_new = np.random.uniform(-1,1,1) #normalized fp x \n+                y_new = np.random.uniform(-1,1,1) #normalized fp y\n+                fov = normalfov_r(box,np.array([x_new,y_new])) #fov coordinates in mm\n+                pix = detmod.getPixel(fov[0],fov[1])  # pixel coordinates\n+                if pix[0]!=0:\n+                    detid = pix.getDetectorNumber()\n                     pts_old = np.array([[self.wcenter,xfp[i],yfp[i]]])\n-                    pts_new = np.array([[self.wcenter,x_new[j],y_new[j]]]) \n+                    pts_new = np.array([[self.wcenter,xf,yf]]) \n                     mag_new = -2.5*np.log10(flux * (10.0**(fn(pts_new)/-2.5))/(10.0**(fn(pts_old)/-2.5)))+25.0\n                     sidd.append(idd[i])\n-                    sximage.append(pixx)\n-                    syimage.append(pixy)\n-                    sdet.append(det)\n+                    sximage.append(fov[0]) #in mm not sure\n+                    syimage.append(fov[1]) #in mm\n+                    #sdet.append(det_id[det_new[j]])\n+                    sdet.append(detid)\n                     sdither.append(j)\n-                    sra.append(ra[i])\n-                    sdec.append(dec[i])\n+                    sxd.append(xd)\n+                    syd.append(yd)\n+                    sxf.append(x_new)\n+                    syf.append(y_new)\n+                    #sra.append(ra[i])\n+                    #sdec.append(dec[i])\n                     smag.append(mag_new[0]+np.random.normal(0.,magerr[i]*self.noisefactor)) # added some noise \n                     smagerr.append(magerr[i])\n                     sflag1.append(0)\n                     sflag2.append(0)\n                     sflag3.append(0)\n+                    j+=1\n \n         data = Table()\n         data['OBJECT_ID'],data['X_IMAGE'],data['Y_IMAGE'], data['ALPHA_J2000'],data['DELTA_J2000'] = sidd,sximage,syimage,sra,sdec\n@@ -769,14 +831,14 @@ class SelfDitherData:\n             \n         c = astropy.table.Column(name='ifile', data=sdither); data.add_column(c)\n         c = astropy.table.Column(name='idet' , data=sdet); data.add_column(c)\n-        (x, y) = pixel2focalplane(data['idet'], data['X_IMAGE'], data['Y_IMAGE'])\n-        c = astropy.table.Column(name='X_fp' , data=x); data.add_column(c)\n-        c = astropy.table.Column(name='Y_fp' , data=y); data.add_column(c)\n+        #(x, y) = pixel2focalplane(data['idet'], data['X_IMAGE'], data['Y_IMAGE'])\n+        c = astropy.table.Column(name='X_fp' , data=sxf); data.add_column(c)\n+        c = astropy.table.Column(name='Y_fp' , data=syf); data.add_column(c)\n \n         # Trasform x and y coordinates into the [-1,1] range on the detector\n-        (x, y) = pixel2det(data['idet'], data['X_IMAGE'], data['Y_IMAGE'])\n-        c = astropy.table.Column(name='X_det' , data=x); data.add_column(c)\n-        c = astropy.table.Column(name='Y_det' , data=y); data.add_column(c)\n+        #(x, y) = pixel2det(data['idet'], data['X_IMAGE'], data['Y_IMAGE'])\n+        c = astropy.table.Column(name='X_det' , data=sxd); data.add_column(c)\n+        c = astropy.table.Column(name='Y_det' , data=syd); data.add_column(c)\n     \n         if len(obs2) == 0:\n             obs2 = data.copy()\n@@ -796,7 +858,7 @@ class SelfDitherData:\n class SelfCalib:\n     \"\"\"A class to implement Self-calibration algorithms\"\"\"\n \n-    def __init__(self, data):\n+    def __init__(self, data, grismpos, mdb):\n         self.data = data\n         self.par_stars = data.catalog.copy()\n         self.par_detqe = np.zeros(16)\n@@ -808,6 +870,9 @@ class SelfCalib:\n             par_flat.append(Fit2DNP(data.ncoeff, x, y))\n             #par_flat.append(Fit2D_Cheb(data.ncoeff, x, y))\n         self.par_flat = np.asarray(par_flat)\n+        self.mdb = mdb\n+        self.grismpos = grismpos\n+        \n \n         \n     def expectedUncertainties(self):\n@@ -885,9 +950,10 @@ class SelfCalib:\n         m = self\n         dets = []\n         data = []\n+        detmod = DetectorModel(m.grismpos, m.mdb, rotate=False)\n \n         # Calculate FP normalized coordinates of the gaps\n-        (gx, gy) = coordGaps(5)\n+        (gx, gy) = coordGaps(detmod,n=5)\n \n         # For each point in the gaps evaluate two interpolated values,\n         # using the flat parameters in the two neighbour detectors\n@@ -895,8 +961,11 @@ class SelfCalib:\n             #fig, ax = plt.subplots(); ax = fig.add_subplot(111, projection='3d')\n             for idet in closestDetectors(gx[i], gy[i]):\n                 # Calculate coordinates of the gap wrt the idet-th detector\n-                (x0, y0) = det2focalplane(idet, -1, -1)\n-                (x1, y1) = det2focalplane(idet,  1,  1)\n+                #(x0, y0) = det2focalplane(idet, -1, -1)\n+                (x0,y0) = detmod.getFOVPositions(normaldet_r(np.array([-1,-1])), detmod.getDetectorID(idet)).T\n+                #(x1, y1) = det2focalplane(idet,  1,  1)\n+                (x1,y1) = detmod.getFOVPositions(normaldet_r(np.array([1,1])), detmod.getDetectorID(idet)).T\n+\n                 x = (gx[i] - x0) * 2 / (x1-x0) - 1\n                 y = (gy[i] - y0) * 2 / (y1-y0) - 1\n                 f = m.par_flat[idet-1].extrapolate(x, y)\n@@ -979,7 +1048,11 @@ class SelfCalib:\n     def interpolateOnFocal(self, x, y):\n         m = self\n         (_x, _y) = cartesianProduct(x, y)\n-        boz, detx, dety = focalplane2det(_x, _y)\n+        #boz, detx, dety = focalplane2det(_x, _y)\n+        detmod = DetectorModel(m.grismpos, m.mdb, rotate=False)\n+        pix = detmod.getPixel(_x, _y)\n+        detx,dety = pix[0],pix[1]\n+        boz = pix.getDetectorNumber()\n \n         v,u = [],[]\n         for d in range(len(boz)):\n@@ -1055,10 +1128,15 @@ class SelfCalib:\n         ax = fig.add_subplot(111, projection='3d')\n         x = np.linspace(-1., 1., m.data.ncoeff+1); x = (x[0:-1] + x[1:]) / 2.\n         y = x.copy()\n+        dett_id = ['11','12','13','14','21','22','23','24','31','32','33','34','41','42','43','44']\n+\n         for idet in range(1, 17):\n             (val, unc) = m.interpolateOnDetector(idet, x, y)\n             (_x, _y) = allcombinations(x, y)\n-            (_x, _y) = det2focalplane(idet, _x, _y)\n+            #(_x, _y) = det2focalplane(idet, _x, _y)\n+            detmod = DetectorModel(m.grismpos, m.mdb, rotate=False)\n+            (_x, _y) = detmod.getFOVPositions(np.array([_x, _y]), dett_id[idet]).T\n+\n             ax.scatter(_x, _y, val, marker='.')\n         plt.title(\"Flat field pattern\")\n         plt.xlabel(\"Focal plane Y\")\n@@ -1077,7 +1155,9 @@ class SelfCalib:\n             rr[1] = np.max((rr[1], val.max()))\n         for idet in range(1, 17):\n             (val, unc) = m.interpolateOnDetector(idet, x, y)\n-            (_x, _y) = det2focalplane(idet, x, y)\n+            #(_x, _y) = det2focalplane(idet, x, y)\n+            detmod = DetectorModel(m.grismpos, m.mdb, rotate=False)\n+            (_x, _y) = detmod.getFOVPositions(np.array([x, y]), dett_id[idet]).T\n             _x = boundaries(_x)\n             _y = boundaries(_y)\n             im = ax.pcolor(_x, _y, val, vmin=rr[0], vmax=rr[1], cmap=plt.get_cmap('brg'))\n@@ -1110,7 +1190,9 @@ class SelfCalib:\n             rr[1] = np.max((rr[1], unc.max()))\n         for idet in range(1, 17):\n             (val, unc) = m.interpolateOnDetector(idet, x, y)\n-            (_x, _y) = det2focalplane(idet, x, y)\n+            #(_x, _y) = det2focalplane(idet, x, y)\n+            detmod = DetectorModel(m.grismpos, m.mdb, rotate=False)\n+            (_x, _y) = detmod.getFOVPositions(np.array([x, y]), dett_id[idet]).T\n             _x = boundaries(_x)\n             _y = boundaries(_y)\n             im = ax.pcolor(_x, _y, unc, vmin=rr[0], vmax=rr[1], cmap=plt.get_cmap('brg'))\n@@ -1146,7 +1228,7 @@ class SelfCalib:\n class SelfCalibWave:\n     \"\"\"A class to run self calibration over wavelength direction\"\"\"\n     \n-    def __init__(self, extspecnames, tables, ncoeff, limmag, calmode, noisefactor, deltaw, spatialres, waveres, ndither, outdir,ms_flat):\n+    def __init__(self, extspecnames, list_grisms, ncoeff, limmag, calmode, noisefactor, deltaw, spatialres, waveres, ndither, mdb, outdir,ms_flat,tables=None):\n \n         self.extspecnames = extspecnames\n         self.tables = tables\n@@ -1172,10 +1254,11 @@ class SelfCalibWave:\n         #self.cube = np.zeros((self.spatialres,self.spatialres,self.waveres,6)) #spatialx,spatialy, wavelenghts, grisms\n         self.cube,self.errcube = MakeCubeTess(ms_flat)\n         self.ms_flat = self.cube\n-        self.list_grisms = GrismList(tables)\n+        self.list_grisms = list_grisms \n         \n         self.ndither = ndither\n         self.outdir = outdir\n+        self.mdb = mdb\n \n     def fit(self):\n         '''looping over wavelengths and filling in the cube using self calib fitting'''\n@@ -1185,26 +1268,26 @@ class SelfCalibWave:\n         \n         for grism in self.list_grisms:\n             for i in range(self.waveres):\n-               \n+                spec_forGW = H5ExtractedSpectraCollection.load(self.extspecnames[0], ids=[H5ExtractedSpectrum.SPEC1D_LABEL,])     \n                 ## if self cal observations or simulations exist no need to dither things (default mode = 0)\n                 if self.calmode==0:\n-                    data2 = SelfCalibSirData(self.extspecnames, self.tables, self.ncoeff, self.limmag, self.wcenters[i],self.deltaw,grism,outdir=self.outdir)\n+                    data2 = SelfCalibSirData(self.extspecnames, self.ncoeff, self.limmag, self.wcenters[i],self.deltaw,grism,self.mdb,outdir=self.outdir)\n                     \n                 ## simple random simulation of dithering spectra in the absence of SelfCal observations (mode = 1)    \n                 elif self.calmode==1:\n-                    data = SelfCalibSirData(self.extspecnames, self.tables, self.ncoeff, self.limmag, self.wcenters[i],self.deltaw,grism,outdir=self.outdir)\n-                    data2 = SelfDitherData(data,ndithers=self.ndither,noisefactor = self.noisefactor) \n+                    data = SelfCalibSirData(self.extspecnames, self.ncoeff, self.limmag, self.wcenters[i],self.deltaw,grism,self.mdb,outdir=self.outdir)\n+                    data2 = SelfDitherData(data, self.mdb, specforGW.getGWAPositionName(), ndithers=self.ndither,noisefactor = self.noisefactor) \n                     \n                 ## More realistic simulation of selfCal pattern using GAIA star positions in the absence of SelfCal (mode=2)    \n                 else:\n-                    data2 = SelfCalibSirGaiaData(self.extspecnames, self.tables, self.ncoeff, self.limmag, self.wcenters[i],self.deltaw,grism, self.noisefactor, self.ndither,outdir=self.outdir) \n+                    data2 = SelfCalibSirGaiaData(self.extspecnames, self.tables, self.ncoeff, self.limmag, self.wcenters[i],self.deltaw,grism, self.noisefactor, self.ndither,self.mdb,outdir=self.outdir) \n                \n             #np.savez('/home/shemmati/Work/Projects/spectra/star_catalog_test_g'+str(grism)+'_w'+str(self.wcenters[i])+'.npz',data2.obs,data2.catalog,data2.index_star2obs,data2.index_det2obs) ### comment out later \n                 ##########debugging###################\n                 print('grism:',grism)\n                 print('wave:',i)\n                 ##########debugging###################\n-                m = SelfCalib(data2)\n+                m = SelfCalib(data2,specforGW.getGWAPositionName(),self.mdb)\n                 m.fit()\n                 g = list_grisms_main.index(grism) \n                 self.cube[i,:,:,g], self.errcube[i,:,:,g] = m.OutputSir(self.spatialres)\n",
                            "fixed confliccts and cleaned RelFlux argparse in main",
                            "Tava",
                            "2023-08-08T09:58:46.000+02:00",
                            "4e7de5b7efecb422d1ea867998c1d0b6baedcadc"
                        ]
                    ],
                    "SIR_ModelsCalibration/python/SIR_ModelsCalibration/CRVModelCalibration.py": [
                        [
                            "@@ -1020,11 +1020,12 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n         for ptg_id in self._nisp_xmls.keys():\n             nisp_exp = self.load_exposure(ptg_id)\n             self.location_table.opt_model.setPointingFromImage(nisp_exp)\n-\n+            self.location_table.setPointingID(ptg_id)\n+            \n             for item in catalog:\n                 star = catalog.createAstronomicalObject(item)\n                 lo = self.location_table.create_location_object(star, (0, 1))\n-\n+                \n                 spectrum = CRVModelCalibrationCore._get_1st_spectrum(lo, order)\n                 if spectrum is None:\n                     continue\n",
                            "Merge branch 'crv_fix' into 'develop'",
                            "Marco Fumana",
                            "2023-08-04T16:18:37.000+00:00",
                            "b2f7f6f0cb6fa827eed516c93d24ef72f3eff9e4"
                        ],
                        [
                            "@@ -123,7 +123,6 @@ def mainMethod(args):\n     # Read stars from catalog\n     catalog = loadCatalog(mdb, args.workdir, tu_cat=args.tu_cat, mer_cat=args.mer_cat)\n     catalog_selection = core.get_catalog_selection(args.config)\n-    catalog.select(catalog_selection, args.objects_list, workdir=args.workdir)\n \n     # Initialize calibration module\n     core.set_models(mdb, args.crv_model, args.ids_model, args.opt_model)\n@@ -131,12 +130,19 @@ def mainMethod(args):\n \n     factory_master = None\n     tilt_computed = False\n+    catalog_selected = False\n     for order in (GrismModel.Order_0, GrismModel.Order_1):\n         logger.info(f\"Compute model for {order} orders\")\n \n         core.read_parameters_file(order, args.config)\n         core.reset_global_fit_values(order)\n-\n+        \n+        if catalog_selected is False:\n+            if (star_prob:=core.get_star_prob()) is not None:\n+                catalog.set_star_threshold(star_prob)            \n+            catalog.select(catalog_selection, args.objects_list, workdir=args.workdir)\n+            catalog_selected = True\n+            \n         if tilt_computed is False:\n             core.compute_tilts(args.mdb)\n             tilt_computed = True\n",
                            "Merge branch 'bug_in_chuck_size' into 'develop'",
                            "Marco Fumana",
                            "2023-08-04T15:11:59.000+00:00",
                            "d8c342870c2334b76cc9e6f3f9d47c964dfe50d5"
                        ],
                        [
                            "@@ -123,7 +123,6 @@ def mainMethod(args):\n     # Read stars from catalog\n     catalog = loadCatalog(mdb, args.workdir, tu_cat=args.tu_cat, mer_cat=args.mer_cat)\n     catalog_selection = core.get_catalog_selection(args.config)\n-    catalog.select(catalog_selection, args.objects_list, workdir=args.workdir)\n \n     # Initialize calibration module\n     core.set_models(mdb, args.crv_model, args.ids_model, args.opt_model)\n@@ -131,12 +130,19 @@ def mainMethod(args):\n \n     factory_master = None\n     tilt_computed = False\n+    catalog_selected = False\n     for order in (GrismModel.Order_0, GrismModel.Order_1):\n         logger.info(f\"Compute model for {order} orders\")\n \n         core.read_parameters_file(order, args.config)\n         core.reset_global_fit_values(order)\n-\n+        \n+        if catalog_selected is False:\n+            if (star_prob:=core.get_star_prob()) is not None:\n+                catalog.set_star_threshold(star_prob)            \n+            catalog.select(catalog_selection, args.objects_list, workdir=args.workdir)\n+            catalog_selected = True\n+            \n         if tilt_computed is False:\n             core.compute_tilts(args.mdb)\n             tilt_computed = True\n",
                            "MER catalog",
                            "Marco Fumana",
                            "2023-08-04T15:11:59.000+00:00",
                            "c8204cf36e3906a15756c9835f0faf25875d7de8"
                        ],
                        [
                            "@@ -174,7 +174,7 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n     \"\"\"Core class to performe Curvature Model calibration\"\"\"\n     DEFAULT_INI = \"SIR_CRVModelCalibration.ini\"\n \n-    def __init__(self, workdir: str, filename: str):\n+    def __init__(self, workdir: str, filename: str, key:str = 'PTGID'):\n         \"\"\"Initialize the class\n \n         Parameters\n@@ -185,7 +185,7 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n         filename: str\n           The json filename containg the XMLs science frames\n         \"\"\"\n-        super().__init__(workdir, filename)\n+        super().__init__(workdir, filename, key=key)\n         self.location_table = None\n         self.crv_models = {}\n         self.ids_models = {}\n@@ -239,28 +239,6 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n         return self._get_ini_file(\"SIR_CRVModelCalibration\", CRVModelCalibrationCore.DEFAULT_INI, config)\n \n \n-\n-    def _open_frames_xmls(self, filename: str):\n-        \"\"\"Opens the input sci frames and store them into a dictionary\n-\n-        Parameters\n-        ----------\n-        filename: str\n-          The json file which collects all the science frame XML\n-        \"\"\"\n-        with open(os.path.join(self._workdir, filename), 'r', encoding=\"utf-8\") as json_file:\n-            sci_frames = json.load(json_file)\n-\n-        if len(sci_frames) == 0:\n-            raise Exception(\"No input frames\")\n-\n-        logger.info(\"Opening frames...\")\n-        self._nisp_xmls = {}\n-        for sci_frame in sci_frames:\n-            nisp_exp = DpdScienceFrame.load(self._workdir, sci_frame)\n-            ptg_id = nisp_exp.getMetadata().getAsInt('PTGID')\n-            self._nisp_xmls[ptg_id] = sci_frame\n-\n     def load_exposure(self, ptg_id:int):\n         \"\"\"Loads an exposure content of a give pointing ID\n \n@@ -454,7 +432,7 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n           The Optical Model XML file name\n         \"\"\"\n         self.location_table = LocationTable()\n-        ptg_id = nisp_exp.getMetadata().getAsInt('PTGID')\n+        ptg_id = nisp_exp.getMetadata().getAsInt(self._key)\n         self.location_table.setPointingID(ptg_id)\n \n         self.location_table.setGWATilt(self._gwa_tilt)\n@@ -1007,7 +985,7 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n           The spectrum order\n         \"\"\"\n \n-        global_crv_model = GlobalCRVModel(self._det_model, order=order)\n+        global_crv_model = GlobalCRVModel(self._det_model, order=order, gwa_tilt=self._gwa_tilt)\n         global_crv_model.setDegs(self._params.as_int('poly_order'),\n                                  self._params.as_int('mod_xorder'),\n                                  self._params.as_int('mod_yorder'))\n@@ -1187,7 +1165,7 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n         adjust.recompute_pointing(nisp_exp, catalog, opt_model, self._params.as_bool('regions'))\n \n         center, angle = opt_model.getPointing()\n-        ptg_id =  nisp_exp.getMetadata().getAsInt('PTGID')\n+        ptg_id =  nisp_exp.getMetadata().getAsInt(self._key)\n         logger.info(f\"New pointing center for {ptg_id}: {center[0]:.8g}, {center[1]:.8g}\")\n         logger.info(f\"New pointing angle for  {ptg_id}: {angle:.4g}\")\n         return\n",
                            "Merge branch 'pivot' into 'develop'",
                            "Marco Fumana",
                            "2023-07-04T17:28:44.000+00:00",
                            "98d1d6538d9431aa147ef10824d9875223993b6b"
                        ],
                        [
                            "@@ -174,7 +174,7 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n     \"\"\"Core class to performe Curvature Model calibration\"\"\"\n     DEFAULT_INI = \"SIR_CRVModelCalibration.ini\"\n \n-    def __init__(self, workdir: str, filename: str):\n+    def __init__(self, workdir: str, filename: str, key:str = 'PTGID'):\n         \"\"\"Initialize the class\n \n         Parameters\n@@ -185,7 +185,7 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n         filename: str\n           The json filename containg the XMLs science frames\n         \"\"\"\n-        super().__init__(workdir, filename)\n+        super().__init__(workdir, filename, key=key)\n         self.location_table = None\n         self.crv_models = {}\n         self.ids_models = {}\n@@ -239,28 +239,6 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n         return self._get_ini_file(\"SIR_CRVModelCalibration\", CRVModelCalibrationCore.DEFAULT_INI, config)\n \n \n-\n-    def _open_frames_xmls(self, filename: str):\n-        \"\"\"Opens the input sci frames and store them into a dictionary\n-\n-        Parameters\n-        ----------\n-        filename: str\n-          The json file which collects all the science frame XML\n-        \"\"\"\n-        with open(os.path.join(self._workdir, filename), 'r', encoding=\"utf-8\") as json_file:\n-            sci_frames = json.load(json_file)\n-\n-        if len(sci_frames) == 0:\n-            raise Exception(\"No input frames\")\n-\n-        logger.info(\"Opening frames...\")\n-        self._nisp_xmls = {}\n-        for sci_frame in sci_frames:\n-            nisp_exp = DpdScienceFrame.load(self._workdir, sci_frame)\n-            ptg_id = nisp_exp.getMetadata().getAsInt('PTGID')\n-            self._nisp_xmls[ptg_id] = sci_frame\n-\n     def load_exposure(self, ptg_id:int):\n         \"\"\"Loads an exposure content of a give pointing ID\n \n@@ -454,7 +432,7 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n           The Optical Model XML file name\n         \"\"\"\n         self.location_table = LocationTable()\n-        ptg_id = nisp_exp.getMetadata().getAsInt('PTGID')\n+        ptg_id = nisp_exp.getMetadata().getAsInt(self._key)\n         self.location_table.setPointingID(ptg_id)\n \n         self.location_table.setGWATilt(self._gwa_tilt)\n@@ -1007,7 +985,7 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n           The spectrum order\n         \"\"\"\n \n-        global_crv_model = GlobalCRVModel(self._det_model, order=order)\n+        global_crv_model = GlobalCRVModel(self._det_model, order=order, gwa_tilt=self._gwa_tilt)\n         global_crv_model.setDegs(self._params.as_int('poly_order'),\n                                  self._params.as_int('mod_xorder'),\n                                  self._params.as_int('mod_yorder'))\n@@ -1187,7 +1165,7 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n         adjust.recompute_pointing(nisp_exp, catalog, opt_model, self._params.as_bool('regions'))\n \n         center, angle = opt_model.getPointing()\n-        ptg_id =  nisp_exp.getMetadata().getAsInt('PTGID')\n+        ptg_id =  nisp_exp.getMetadata().getAsInt(self._key)\n         logger.info(f\"New pointing center for {ptg_id}: {center[0]:.8g}, {center[1]:.8g}\")\n         logger.info(f\"New pointing angle for  {ptg_id}: {angle:.4g}\")\n         return\n",
                            "Pivot model calibration with DM9.2 and new DetectorLayout",
                            "Marco Fumana",
                            "2023-07-04T17:28:44.000+00:00",
                            "3762cff177929f93aea0196b7402c020169ab0d0"
                        ],
                        [
                            "@@ -30,7 +30,13 @@ import argparse\n \n import numpy as np\n from numpy.polynomial.chebyshev import chebfit\n+from numpy.polynomial.chebyshev import Chebyshev\n+from numpy.polynomial.polynomial import Polynomial\n+from numpy.polynomial.polynomial import polyfit\n+\n from astropy.stats import sigma_clip\n+from astropy.table import Table, Column\n+from astropy import units as u\n \n import ElementsKernel.Logging as log\n import ST_DataModelBindings.bas.ppr_stub as ppr_dict\n@@ -120,7 +126,7 @@ def mainMethod(args):\n     catalog.select(catalog_selection, args.objects_list, workdir=args.workdir)\n \n     # Initialize calibration module\n-    core.set_models(mdb, args.crv_model, args.ids_model)\n+    core.set_models(mdb, args.crv_model, args.ids_model, args.opt_model)\n     core.dump_cleaned_output(out_filename)\n \n     factory_master = None\n@@ -187,6 +193,7 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n         self._y_mms = []\n         self._coeffs = []\n         self.traces = {}\n+        self._debug = False\n         self.dq_parameters = ppr_dict.genericKeyValueParameters()\n \n \n@@ -338,8 +345,9 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n             self.traces[ptg_id] = {}\n \n         self._open_regions(order)\n+        self._create_debug_table()\n \n-    def set_models(self, mdb, crv_model_xml:str, ids_model_xml:str):\n+    def set_models(self, mdb, crv_model_xml:str, ids_model_xml:str=None, opt_model_xml:str=None):\n         \"\"\"Setup the CRV and IDS instrument model instances.\n \n         Parameters\n@@ -364,12 +372,76 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n             # CRV model\n             filename = os.path.join(self._workdir, crv_model_xml)\n             self.crv_models[order] = GlobalCRVModel.load(filename, self._det_model, order, self._gwa_tilt)\n+\n+        if ids_model_xml is None:\n+            self.create_linear_ids(mdb, opt_model_xml)\n+            return\n+\n         for order in (GrismModel.Order_0, GrismModel.Order_1):\n             # IDS model\n             filename = os.path.join(self._workdir, ids_model_xml)\n             self.ids_models[order] = GlobalIDSModel.load(filename, self._det_model, order, self._gwa_tilt)\n \n \n+    def create_linear_ids(self, mdb, opt_model_xml):\n+        \"\"\"Create a linear IDS in case a real IDS model is not available.\n+        This solution can be used if for some reason previous IDS can not be used\n+        \"\"\"\n+\n+        _opt_model = self._load_opt_xml(opt_model_xml)\n+\n+        dlambda ={}\n+        if self._gwa_pos[0:3] == 'BGS':\n+            dlambda[1] = mdb.get('SpaceSegment.Instrument.NISP.NISPGBAAverageDLambda')\n+            dlambda[0] = mdb.get('SpaceSegment.Instrument.NISP.NISPGBBAverageDLambda')\n+            drange = (8500., 14000.)\n+        elif self._gwa_pos[0:3] == 'RGS':\n+            dlambda[1] = mdb.get('SpaceSegment.Instrument.NISP.NISPGRAAverageDLambda')\n+            dlambda[0] = mdb.get('SpaceSegment.Instrument.NISP.NISPGRBAverageDLambda')\n+            drange = (11000., 19000.)\n+        else:\n+            raise Exception(\"Invalid GWA position\")\n+\n+        for order in (GrismModel.Order_0, GrismModel.Order_1):\n+            rlambda = _opt_model.getReferenceLambda(order)\n+            b=1./dlambda[order]*self._det_model.getPixelSize()\n+            poly = Polynomial([-b*rlambda, b])\n+            coeffs = poly.convert(domain=drange, kind=Chebyshev).coef\n+            self.ids_models[order] = self._create_global_ids(order, coeffs, drange)\n+\n+\n+    def _load_opt_xml(self, opt_model_xml):\n+        if opt_model_xml is None:\n+            raise Exception(\"OPT model XML is required to create a linear IDS model\")\n+\n+        _opt_model = OpticalModel.load(os.path.join(self._workdir, opt_model_xml), self._det_model)\n+        _opt_model.set_gwa_tilt(gwa_tilt=self._gwa_tilt)\n+        return _opt_model\n+\n+    def _create_global_ids(self, order, coeffs, drange):\n+        \"\"\"Creates a Global linear IDS model (no distortions)\n+        \"\"\"\n+        ids=GlobalIDSModel(self._det_model, order=order)\n+\n+        box = self._det_model.getEnvelopeBox()\n+        ids.setXRange(box[0][0], box[1][0])\n+        ids.setYRange(box[0][1], box[1][1])\n+\n+        ids.setDegs(len(coeffs)-1, 1,1)\n+        ids.set1DRange(*drange)\n+\n+        logger.info(f\"Linear IDS model ({order} order) created from scratch:\")\n+        logger.info(f\"Global X range: {ids.getXRange()}\")\n+        logger.info(f\"Global Y range: {ids.getYRange()}\")\n+        logger.info(f\"Local range: {ids.get1Dstart()}, {ids.get1Dstop()}\")\n+\n+        for deg, coeff in enumerate(coeffs):\n+            ids.setMatrix(np.array([[coeff, 0.],[0.,0.]]), deg)\n+            logger.info(f\"Global {deg} matrix: {ids.getMatrix(deg)}\")\n+\n+        return ids\n+\n+\n     def set_location_table(self, nisp_exp, opt_model_xml:str, catalog):\n         \"\"\"Sets the location table for the current NispSurveyExposure\n \n@@ -438,6 +510,7 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n                                         f'CRVcalib_{ptg_id}_{self._gwa_pos}_{self._gwa_tilt}_order{order}_{det_id}.reg')\n                 self._regions[ptg_id][det_id] = open(filename, 'w')\n \n+\n     def _close_regions(self):\n         \"\"\"Closes region files.\n         \"\"\"\n@@ -453,6 +526,76 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n             for region in regions.values():\n                 region.flush()\n \n+    def _create_debug_table(self):\n+        self._debug_table = None\n+        if 'debug' not in self._params:\n+            return\n+        if self._params.as_bool('debug') == False:\n+            return\n+\n+        self._debug_table = Table()\n+        self._debug_table.add_column(Column(name='ID', dtype=np.int64,\n+                                            description=\"The object ID\"))\n+        self._debug_table.add_column(Column(name='PTG_ID', dtype=np.int64,\n+                                            description=\"The pointing ID\"))\n+        self._debug_table.add_column(Column(name='DET_ID', dtype=np.uint8,\n+                                            description=\"The detector ID\"))\n+        self._debug_table.add_column(Column(name='RA', dtype=np.float32))\n+        self._debug_table.add_column(Column(name='DEC', dtype=np.float32))\n+\n+        self._debug_table.add_column(Column(name='Xmm', dtype=np.float32, unit=u.mm,\n+                                            description=\"The object FOV positions [mm]\"))\n+        self._debug_table.add_column(Column(name='Ymm', dtype=np.float32, unit=u.mm,\n+                                            description=\"The object FOV positions [mm]\"))\n+        self._debug_table.add_column(Column(name='Xpix', dtype=np.float32, unit=u.pix,\n+                                            description=\"The object FOV positions [pixel]\"))\n+        self._debug_table.add_column(Column(name='Ypix', dtype=np.float32, unit=u.pix,\n+                                            description=\"The object FOV positions [pixel]\"))\n+        self._debug_table.add_column(Column(name='Smm', dtype=np.float32,\n+                                            description=\"The trace slope computed on pixels positions\"))\n+        self._debug_table.add_column(Column(name='Spix', dtype=np.float32,\n+                                            description=\"The trace slope computed on mm positions\"))\n+        self._debug_table.add_column(Column(name='Tmm', dtype=np.float32,\n+                                            description=\"The trace angle computed on pixels positions\"))\n+        self._debug_table.add_column(Column(name='Tpix', dtype=np.float32,\n+                                            description=\"The angle slope computed on mm positions\"))\n+        self._debug_table.add_column(Column(name='Tpix-mm', dtype=np.float32,\n+                                            description=\"The angles differences (pix-mm)\"))\n+        self._debug_table.add_column(Column(name='N', dtype=np.uint16,\n+                                            description=\"The number of points used in fit\"))\n+        self._debug_table.add_column(Column(name='J', dtype=np.float32,\n+                                            description=\"The J magnitude\"))\n+\n+\n+    def _add_debug_entry(self, star, spectrum, xy_pix, xy_fov):\n+\n+        x = xy_fov[:,0][~xy_fov[:,0].mask]\n+        y = xy_fov[:,1][~xy_fov[:,1].mask]\n+        s_mm=polyfit(x, y, 1)[1]\n+\n+        x = xy_pix[:,0][~xy_pix[:,0].mask]\n+        y = xy_pix[:,1][~xy_pix[:,1].mask]\n+        s_pix =polyfit(x, y, 1)[1]\n+\n+        ao = star.getAstronomicalObject()\n+        ra, dec = ao.getCoords()\n+        pos_mm = star.getFOVPosition()\n+        x_pix, y_pix = spectrum.getLambdaRefPosition()\n+        self._debug_table.add_row(vals={'ID': spectrum.getObjectID(),\n+                                        'PTG_ID': spectrum.getPointingID(),\n+                                        'DET_ID': spectrum.getDetectorID(),\n+                                        'RA': ra, 'DEC': dec,\n+                                        'Xmm': pos_mm[0], 'Ymm': pos_mm[1],\n+                                        'Xpix': x_pix, 'Ypix': y_pix,\n+                                        'Smm': s_mm, 'Spix': s_pix,\n+                                        'Tmm': np.rad2deg(np.arctan(s_mm)),\n+                                        'Tpix': np.rad2deg(np.arctan(s_pix)),\n+                                        'N': len(x), 'J': ao.getMagnitude('J').getValue()\n+                                        })\n+        self._debug_table['Tpix-mm'] = self._debug_table['Tpix'] - self._debug_table['Tmm']\n+\n+\n+\n     def _extract_image(self, star, nisp_exp, order:int):\n         \"\"\"Extracts image thumbnail around spectrum\n         \"\"\"\n@@ -580,6 +723,9 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n         if coeffs is None:\n             return\n \n+        if self._debug_table is not None:\n+            self._add_debug_entry(star, spectrum, xy_pix, xy_fov)\n+\n         # Store coeff values\n         self._coeffs.append(coeffs)\n \n@@ -903,6 +1049,11 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n \n         self._close_regions()\n \n+        if self._debug_table is not None:\n+            self._debug_table.write(os.path.join(self._aux_dir,\n+                                                 f\"CRV_{self._gwa_pos}_{self._gwa_tilt}_order{order}.fits\"),\n+                                    format='fits', overwrite=True)\n+\n     @staticmethod\n     def _get_1st_spectrum(lo, order):\n         for spectrum in lo.getAllSpectra():\n",
                            "Merge branch 'no_ids_required' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-06-28T08:48:35.000+00:00",
                            "a63d5542c8c5ea51522121f356e7351e76e8f313"
                        ],
                        [
                            "@@ -30,7 +30,13 @@ import argparse\n \n import numpy as np\n from numpy.polynomial.chebyshev import chebfit\n+from numpy.polynomial.chebyshev import Chebyshev\n+from numpy.polynomial.polynomial import Polynomial\n+from numpy.polynomial.polynomial import polyfit\n+\n from astropy.stats import sigma_clip\n+from astropy.table import Table, Column\n+from astropy import units as u\n \n import ElementsKernel.Logging as log\n import ST_DataModelBindings.bas.ppr_stub as ppr_dict\n@@ -120,7 +126,7 @@ def mainMethod(args):\n     catalog.select(catalog_selection, args.objects_list, workdir=args.workdir)\n \n     # Initialize calibration module\n-    core.set_models(mdb, args.crv_model, args.ids_model)\n+    core.set_models(mdb, args.crv_model, args.ids_model, args.opt_model)\n     core.dump_cleaned_output(out_filename)\n \n     factory_master = None\n@@ -187,6 +193,7 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n         self._y_mms = []\n         self._coeffs = []\n         self.traces = {}\n+        self._debug = False\n         self.dq_parameters = ppr_dict.genericKeyValueParameters()\n \n \n@@ -338,8 +345,9 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n             self.traces[ptg_id] = {}\n \n         self._open_regions(order)\n+        self._create_debug_table()\n \n-    def set_models(self, mdb, crv_model_xml:str, ids_model_xml:str):\n+    def set_models(self, mdb, crv_model_xml:str, ids_model_xml:str=None, opt_model_xml:str=None):\n         \"\"\"Setup the CRV and IDS instrument model instances.\n \n         Parameters\n@@ -364,12 +372,76 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n             # CRV model\n             filename = os.path.join(self._workdir, crv_model_xml)\n             self.crv_models[order] = GlobalCRVModel.load(filename, self._det_model, order, self._gwa_tilt)\n+\n+        if ids_model_xml is None:\n+            self.create_linear_ids(mdb, opt_model_xml)\n+            return\n+\n         for order in (GrismModel.Order_0, GrismModel.Order_1):\n             # IDS model\n             filename = os.path.join(self._workdir, ids_model_xml)\n             self.ids_models[order] = GlobalIDSModel.load(filename, self._det_model, order, self._gwa_tilt)\n \n \n+    def create_linear_ids(self, mdb, opt_model_xml):\n+        \"\"\"Create a linear IDS in case a real IDS model is not available.\n+        This solution can be used if for some reason previous IDS can not be used\n+        \"\"\"\n+\n+        _opt_model = self._load_opt_xml(opt_model_xml)\n+\n+        dlambda ={}\n+        if self._gwa_pos[0:3] == 'BGS':\n+            dlambda[1] = mdb.get('SpaceSegment.Instrument.NISP.NISPGBAAverageDLambda')\n+            dlambda[0] = mdb.get('SpaceSegment.Instrument.NISP.NISPGBBAverageDLambda')\n+            drange = (8500., 14000.)\n+        elif self._gwa_pos[0:3] == 'RGS':\n+            dlambda[1] = mdb.get('SpaceSegment.Instrument.NISP.NISPGRAAverageDLambda')\n+            dlambda[0] = mdb.get('SpaceSegment.Instrument.NISP.NISPGRBAverageDLambda')\n+            drange = (11000., 19000.)\n+        else:\n+            raise Exception(\"Invalid GWA position\")\n+\n+        for order in (GrismModel.Order_0, GrismModel.Order_1):\n+            rlambda = _opt_model.getReferenceLambda(order)\n+            b=1./dlambda[order]*self._det_model.getPixelSize()\n+            poly = Polynomial([-b*rlambda, b])\n+            coeffs = poly.convert(domain=drange, kind=Chebyshev).coef\n+            self.ids_models[order] = self._create_global_ids(order, coeffs, drange)\n+\n+\n+    def _load_opt_xml(self, opt_model_xml):\n+        if opt_model_xml is None:\n+            raise Exception(\"OPT model XML is required to create a linear IDS model\")\n+\n+        _opt_model = OpticalModel.load(os.path.join(self._workdir, opt_model_xml), self._det_model)\n+        _opt_model.set_gwa_tilt(gwa_tilt=self._gwa_tilt)\n+        return _opt_model\n+\n+    def _create_global_ids(self, order, coeffs, drange):\n+        \"\"\"Creates a Global linear IDS model (no distortions)\n+        \"\"\"\n+        ids=GlobalIDSModel(self._det_model, order=order)\n+\n+        box = self._det_model.getEnvelopeBox()\n+        ids.setXRange(box[0][0], box[1][0])\n+        ids.setYRange(box[0][1], box[1][1])\n+\n+        ids.setDegs(len(coeffs)-1, 1,1)\n+        ids.set1DRange(*drange)\n+\n+        logger.info(f\"Linear IDS model ({order} order) created from scratch:\")\n+        logger.info(f\"Global X range: {ids.getXRange()}\")\n+        logger.info(f\"Global Y range: {ids.getYRange()}\")\n+        logger.info(f\"Local range: {ids.get1Dstart()}, {ids.get1Dstop()}\")\n+\n+        for deg, coeff in enumerate(coeffs):\n+            ids.setMatrix(np.array([[coeff, 0.],[0.,0.]]), deg)\n+            logger.info(f\"Global {deg} matrix: {ids.getMatrix(deg)}\")\n+\n+        return ids\n+\n+\n     def set_location_table(self, nisp_exp, opt_model_xml:str, catalog):\n         \"\"\"Sets the location table for the current NispSurveyExposure\n \n@@ -438,6 +510,7 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n                                         f'CRVcalib_{ptg_id}_{self._gwa_pos}_{self._gwa_tilt}_order{order}_{det_id}.reg')\n                 self._regions[ptg_id][det_id] = open(filename, 'w')\n \n+\n     def _close_regions(self):\n         \"\"\"Closes region files.\n         \"\"\"\n@@ -453,6 +526,76 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n             for region in regions.values():\n                 region.flush()\n \n+    def _create_debug_table(self):\n+        self._debug_table = None\n+        if 'debug' not in self._params:\n+            return\n+        if self._params.as_bool('debug') == False:\n+            return\n+\n+        self._debug_table = Table()\n+        self._debug_table.add_column(Column(name='ID', dtype=np.int64,\n+                                            description=\"The object ID\"))\n+        self._debug_table.add_column(Column(name='PTG_ID', dtype=np.int64,\n+                                            description=\"The pointing ID\"))\n+        self._debug_table.add_column(Column(name='DET_ID', dtype=np.uint8,\n+                                            description=\"The detector ID\"))\n+        self._debug_table.add_column(Column(name='RA', dtype=np.float32))\n+        self._debug_table.add_column(Column(name='DEC', dtype=np.float32))\n+\n+        self._debug_table.add_column(Column(name='Xmm', dtype=np.float32, unit=u.mm,\n+                                            description=\"The object FOV positions [mm]\"))\n+        self._debug_table.add_column(Column(name='Ymm', dtype=np.float32, unit=u.mm,\n+                                            description=\"The object FOV positions [mm]\"))\n+        self._debug_table.add_column(Column(name='Xpix', dtype=np.float32, unit=u.pix,\n+                                            description=\"The object FOV positions [pixel]\"))\n+        self._debug_table.add_column(Column(name='Ypix', dtype=np.float32, unit=u.pix,\n+                                            description=\"The object FOV positions [pixel]\"))\n+        self._debug_table.add_column(Column(name='Smm', dtype=np.float32,\n+                                            description=\"The trace slope computed on pixels positions\"))\n+        self._debug_table.add_column(Column(name='Spix', dtype=np.float32,\n+                                            description=\"The trace slope computed on mm positions\"))\n+        self._debug_table.add_column(Column(name='Tmm', dtype=np.float32,\n+                                            description=\"The trace angle computed on pixels positions\"))\n+        self._debug_table.add_column(Column(name='Tpix', dtype=np.float32,\n+                                            description=\"The angle slope computed on mm positions\"))\n+        self._debug_table.add_column(Column(name='Tpix-mm', dtype=np.float32,\n+                                            description=\"The angles differences (pix-mm)\"))\n+        self._debug_table.add_column(Column(name='N', dtype=np.uint16,\n+                                            description=\"The number of points used in fit\"))\n+        self._debug_table.add_column(Column(name='J', dtype=np.float32,\n+                                            description=\"The J magnitude\"))\n+\n+\n+    def _add_debug_entry(self, star, spectrum, xy_pix, xy_fov):\n+\n+        x = xy_fov[:,0][~xy_fov[:,0].mask]\n+        y = xy_fov[:,1][~xy_fov[:,1].mask]\n+        s_mm=polyfit(x, y, 1)[1]\n+\n+        x = xy_pix[:,0][~xy_pix[:,0].mask]\n+        y = xy_pix[:,1][~xy_pix[:,1].mask]\n+        s_pix =polyfit(x, y, 1)[1]\n+\n+        ao = star.getAstronomicalObject()\n+        ra, dec = ao.getCoords()\n+        pos_mm = star.getFOVPosition()\n+        x_pix, y_pix = spectrum.getLambdaRefPosition()\n+        self._debug_table.add_row(vals={'ID': spectrum.getObjectID(),\n+                                        'PTG_ID': spectrum.getPointingID(),\n+                                        'DET_ID': spectrum.getDetectorID(),\n+                                        'RA': ra, 'DEC': dec,\n+                                        'Xmm': pos_mm[0], 'Ymm': pos_mm[1],\n+                                        'Xpix': x_pix, 'Ypix': y_pix,\n+                                        'Smm': s_mm, 'Spix': s_pix,\n+                                        'Tmm': np.rad2deg(np.arctan(s_mm)),\n+                                        'Tpix': np.rad2deg(np.arctan(s_pix)),\n+                                        'N': len(x), 'J': ao.getMagnitude('J').getValue()\n+                                        })\n+        self._debug_table['Tpix-mm'] = self._debug_table['Tpix'] - self._debug_table['Tmm']\n+\n+\n+\n     def _extract_image(self, star, nisp_exp, order:int):\n         \"\"\"Extracts image thumbnail around spectrum\n         \"\"\"\n@@ -580,6 +723,9 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n         if coeffs is None:\n             return\n \n+        if self._debug_table is not None:\n+            self._add_debug_entry(star, spectrum, xy_pix, xy_fov)\n+\n         # Store coeff values\n         self._coeffs.append(coeffs)\n \n@@ -903,6 +1049,11 @@ class CRVModelCalibrationCore(ModelCalibrationCore):\n \n         self._close_regions()\n \n+        if self._debug_table is not None:\n+            self._debug_table.write(os.path.join(self._aux_dir,\n+                                                 f\"CRV_{self._gwa_pos}_{self._gwa_tilt}_order{order}.fits\"),\n+                                    format='fits', overwrite=True)\n+\n     @staticmethod\n     def _get_1st_spectrum(lo, order):\n         for spectrum in lo.getAllSpectra():\n",
                            "CRV works on new data",
                            "Marco Fumana",
                            "2023-06-28T08:48:35.000+00:00",
                            "217a4e91660cbb754d3d53043d2012fa7c2e8cab"
                        ]
                    ],
                    "SIR_ModelsCalibration/python/SIR_ModelsCalibration/ModelCalibration.py": [
                        [
                            "@@ -277,3 +277,10 @@ class ModelCalibrationCore(ParametersParse):\n             tilt_angle = int(tilt_angle * _precision)\n             tilt_angle = float(tilt_angle / _precision)\n             self._extra_tilts[key] = tilt_angle - nisp_exp.getMetadata().getAsDouble('GWA_TILT')\n+\n+\n+    def get_star_prob(self):\n+        if 'star_prob' in self._params:\n+            return self._params.as_float('star_prob')\n+        \n+        return None\n\\ No newline at end of file\n",
                            "Merge branch 'bug_in_chuck_size' into 'develop'",
                            "Marco Fumana",
                            "2023-08-04T15:11:59.000+00:00",
                            "d8c342870c2334b76cc9e6f3f9d47c964dfe50d5"
                        ],
                        [
                            "@@ -22,6 +22,7 @@\n #\n \n import os\n+import json\n import numpy as np\n from numpy.polynomial import polynomial\n \n@@ -43,8 +44,9 @@ logger = log.getLogger('ModelCalibration')\n \n class ModelCalibrationCore(ParametersParse):\n     \"\"\"Common class for models clibration\"\"\"\n-    def __init__(self, workdir: str, filename: str):\n+    def __init__(self, workdir: str, filename: str, key:str=None):\n         super().__init__(workdir)\n+        self._key = key\n         self._aux_dir = None\n         self._nisp_xmls = {}\n         self._extra_tilts = {}\n@@ -66,10 +68,42 @@ class ModelCalibrationCore(ParametersParse):\n     @nisp_xmls.setter\n     def nisp_xmls(self, value):\n         self._nisp_xmls = value\n+        \n+    @property\n+    def extra_tilts(self):\n+        return self._extra_tilts\n+\n+    @extra_tilts.setter\n+    def extra_tilts(self, value):\n+        self._extra_tilts = value\n+        \n+\n+\n+    def _open_frames_xmls(self, filename: str):\n+        \"\"\"Opens the input sci frames and store them into a dictionary\n \n-    def _open_frames_xmls(self, filename:str):\n-        pass\n+        Parameters\n+        ----------\n+        filename: str\n+          The json file which collects all the science frame XML\n+        \"\"\"\n+        if filename is None:\n+            #Pass of the previous version\n+            return\n+        \n+        with open(os.path.join(self._workdir, filename), 'r', encoding=\"utf-8\") as json_file:\n+            sci_frames = json.load(json_file)\n \n+        if len(sci_frames) == 0:\n+            raise Exception(\"No input frames\")\n+\n+        logger.info(\"Opening frames...\")\n+        self._nisp_xmls = {}\n+        for sci_frame in sci_frames:\n+            nisp_exp = DpdScienceFrame.load(self._workdir, sci_frame)\n+            ptg_id = nisp_exp.getMetadata().getAsInt(self._key)\n+            self._nisp_xmls[ptg_id] = sci_frame\n+            \n \n     def get_out_filename(self, output_xml:str, overwrite:bool=False):\n         \"\"\"Gets the full output file name and check if it already exists\n@@ -214,21 +248,32 @@ class ModelCalibrationCore(ParametersParse):\n         return DpdScienceFrame.load(self._workdir, filename)\n \n \n-    def compute_tilts(self, mdb, crv_model=None):\n-        \"\"\"Compute tilts for each exposure\n+    def compute_tilts(self, mdb:str=None, crv_model:str=None):\n+        \"\"\"Computes the image tilts and save these values\n+\n+        Parameters\n+        ----------\n+        params: str\n+          The parameter file used by compute tilt class\n+\n+        mdb: str\n+          The Mission DataBase file name\n+\n+        crv_xml: str\n+          The XML file name for the CRV model\n         \"\"\"\n         self._extra_tilts = {}\n         if self._params.as_bool('compute_tilt') is False:\n-            self._extra_tilts = {ptg_id:0.0 for ptg_id in self._nisp_xmls}\n+            self._extra_tilts = {key:0.0 for key in self._nisp_xmls}\n             return\n \n-        for ptg_id in self._nisp_xmls:\n-            nisp_exp = self._load_exposure(ptg_id)\n+        for key, nisp_xml in self._nisp_xmls.items():\n+            nisp_exp = self._load_exposure(key)\n \n             tilt_computation = TiltComputationCore(self._workdir, self._ini_file, nisp_exp)\n             tilt_angle, tilt_angle_err = tilt_computation.invoke(nisp_exp, mdb_file=mdb, crv_file=crv_model)\n-            logger.info('%d: grism tilt computed: %.3e +/- %.3e [degrees]', ptg_id, tilt_angle, tilt_angle_err)\n+            logger.info('%d: grism tilt computed: %.3e +/- %.3e [degrees]', key, tilt_angle, tilt_angle_err)\n             _precision = 10**self._params.as_int('tilt_digits')\n             tilt_angle = int(tilt_angle * _precision)\n             tilt_angle = float(tilt_angle / _precision)\n-            self._extra_tilts[ptg_id] = tilt_angle - nisp_exp.getMetadata().getAsDouble('GWA_TILT')\n+            self._extra_tilts[key] = tilt_angle - nisp_exp.getMetadata().getAsDouble('GWA_TILT')\n",
                            "Merge branch 'pivot' into 'develop'",
                            "Marco Fumana",
                            "2023-07-04T17:28:44.000+00:00",
                            "98d1d6538d9431aa147ef10824d9875223993b6b"
                        ],
                        [
                            "@@ -22,6 +22,7 @@\n #\n \n import os\n+import json\n import numpy as np\n from numpy.polynomial import polynomial\n \n@@ -43,8 +44,9 @@ logger = log.getLogger('ModelCalibration')\n \n class ModelCalibrationCore(ParametersParse):\n     \"\"\"Common class for models clibration\"\"\"\n-    def __init__(self, workdir: str, filename: str):\n+    def __init__(self, workdir: str, filename: str, key:str=None):\n         super().__init__(workdir)\n+        self._key = key\n         self._aux_dir = None\n         self._nisp_xmls = {}\n         self._extra_tilts = {}\n@@ -66,10 +68,42 @@ class ModelCalibrationCore(ParametersParse):\n     @nisp_xmls.setter\n     def nisp_xmls(self, value):\n         self._nisp_xmls = value\n+        \n+    @property\n+    def extra_tilts(self):\n+        return self._extra_tilts\n+\n+    @extra_tilts.setter\n+    def extra_tilts(self, value):\n+        self._extra_tilts = value\n+        \n+\n+\n+    def _open_frames_xmls(self, filename: str):\n+        \"\"\"Opens the input sci frames and store them into a dictionary\n \n-    def _open_frames_xmls(self, filename:str):\n-        pass\n+        Parameters\n+        ----------\n+        filename: str\n+          The json file which collects all the science frame XML\n+        \"\"\"\n+        if filename is None:\n+            #Pass of the previous version\n+            return\n+        \n+        with open(os.path.join(self._workdir, filename), 'r', encoding=\"utf-8\") as json_file:\n+            sci_frames = json.load(json_file)\n \n+        if len(sci_frames) == 0:\n+            raise Exception(\"No input frames\")\n+\n+        logger.info(\"Opening frames...\")\n+        self._nisp_xmls = {}\n+        for sci_frame in sci_frames:\n+            nisp_exp = DpdScienceFrame.load(self._workdir, sci_frame)\n+            ptg_id = nisp_exp.getMetadata().getAsInt(self._key)\n+            self._nisp_xmls[ptg_id] = sci_frame\n+            \n \n     def get_out_filename(self, output_xml:str, overwrite:bool=False):\n         \"\"\"Gets the full output file name and check if it already exists\n@@ -214,21 +248,32 @@ class ModelCalibrationCore(ParametersParse):\n         return DpdScienceFrame.load(self._workdir, filename)\n \n \n-    def compute_tilts(self, mdb, crv_model=None):\n-        \"\"\"Compute tilts for each exposure\n+    def compute_tilts(self, mdb:str=None, crv_model:str=None):\n+        \"\"\"Computes the image tilts and save these values\n+\n+        Parameters\n+        ----------\n+        params: str\n+          The parameter file used by compute tilt class\n+\n+        mdb: str\n+          The Mission DataBase file name\n+\n+        crv_xml: str\n+          The XML file name for the CRV model\n         \"\"\"\n         self._extra_tilts = {}\n         if self._params.as_bool('compute_tilt') is False:\n-            self._extra_tilts = {ptg_id:0.0 for ptg_id in self._nisp_xmls}\n+            self._extra_tilts = {key:0.0 for key in self._nisp_xmls}\n             return\n \n-        for ptg_id in self._nisp_xmls:\n-            nisp_exp = self._load_exposure(ptg_id)\n+        for key, nisp_xml in self._nisp_xmls.items():\n+            nisp_exp = self._load_exposure(key)\n \n             tilt_computation = TiltComputationCore(self._workdir, self._ini_file, nisp_exp)\n             tilt_angle, tilt_angle_err = tilt_computation.invoke(nisp_exp, mdb_file=mdb, crv_file=crv_model)\n-            logger.info('%d: grism tilt computed: %.3e +/- %.3e [degrees]', ptg_id, tilt_angle, tilt_angle_err)\n+            logger.info('%d: grism tilt computed: %.3e +/- %.3e [degrees]', key, tilt_angle, tilt_angle_err)\n             _precision = 10**self._params.as_int('tilt_digits')\n             tilt_angle = int(tilt_angle * _precision)\n             tilt_angle = float(tilt_angle / _precision)\n-            self._extra_tilts[ptg_id] = tilt_angle - nisp_exp.getMetadata().getAsDouble('GWA_TILT')\n+            self._extra_tilts[key] = tilt_angle - nisp_exp.getMetadata().getAsDouble('GWA_TILT')\n",
                            "Pivot model calibration with DM9.2 and new DetectorLayout",
                            "Marco Fumana",
                            "2023-07-04T17:28:44.000+00:00",
                            "3762cff177929f93aea0196b7402c020169ab0d0"
                        ],
                        [
                            "@@ -98,7 +98,7 @@ class ModelCalibrationCore(ParametersParse):\n         os.makedirs(self._aux_dir, exist_ok=True)\n \n \n-    def set_detector_model(self, mdb):\n+    def set_detector_model(self, mdb, rotate=True):\n         \"\"\"Initializes the Detector Model\n \n         Parameters\n@@ -106,7 +106,7 @@ class ModelCalibrationCore(ParametersParse):\n         mdb:\n           The Euclid Mission Database instance\n         \"\"\"\n-        self._det_model = DetectorModel(self._gwa_pos, mdb)\n+        self._det_model = DetectorModel(self._gwa_pos, mdb, rotate=rotate)\n \n     def _set_grism(self):\n         \"\"\"Sets grism name and grism nominal tilt. Values are picked from the first image.\n",
                            "Merge branch 'tips_files' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-06-13T07:10:52.000+00:00",
                            "61cae9289d03f2a737dc7288ba67aced263ab3e2"
                        ],
                        [
                            "@@ -98,7 +98,7 @@ class ModelCalibrationCore(ParametersParse):\n         os.makedirs(self._aux_dir, exist_ok=True)\n \n \n-    def set_detector_model(self, mdb):\n+    def set_detector_model(self, mdb, rotate=True):\n         \"\"\"Initializes the Detector Model\n \n         Parameters\n@@ -106,7 +106,7 @@ class ModelCalibrationCore(ParametersParse):\n         mdb:\n           The Euclid Mission Database instance\n         \"\"\"\n-        self._det_model = DetectorModel(self._gwa_pos, mdb)\n+        self._det_model = DetectorModel(self._gwa_pos, mdb, rotate=rotate)\n \n     def _set_grism(self):\n         \"\"\"Sets grism name and grism nominal tilt. Values are picked from the first image.\n",
                            "Improved TIPS files usage",
                            "Marco Fumana",
                            "2023-06-13T07:10:52.000+00:00",
                            "659130d13e07725545b02d479dc5cabd1908b198"
                        ]
                    ],
                    "SIR_ModelsCalibration/python/SIR_ModelsCalibration/OPTModelCalibration.py": [
                        [
                            "@@ -117,6 +117,10 @@ def mainMethod(args):\n     catalog = loadCatalog(mdb, args.workdir, tu_cat=args.tu_cat, mer_cat=args.mer_cat)\n \n     catalog_selection = core.get_catalog_selection()\n+    \n+    if (star_prob:=core.get_star_prob()) is not None:\n+        catalog.set_star_threshold(star_prob)\n+        \n     catalog.select(catalog_selection, args.objects_list, workdir=args.workdir)\n \n     tips_files = core.load_tips_files()\n@@ -596,7 +600,7 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n         results = OPTModelCalibrationCore._create_results_table()\n         ptg_id = nisp_exp.getMetadata().getAsInt(self._key)\n \n-        chuck_size = len(expected_1st)//9\n+        chuck_size = max(len(expected_1st)//9, 1) #Avoid division by 0 with few objects\n \n         original_extra_tilt = None\n         if self._extra_tilts[ptg_id] != 0.0:\n@@ -668,7 +672,7 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n         \"\"\"\n         results = OPTModelCalibrationCore._create_results_table()\n \n-        chuck_size = len(catalog)//9\n+        chuck_size = max(len(catalog)//9, 1) #Avoid division by 0 with few objects\n \n         for k, item in enumerate(catalog, 1):\n             if k%chuck_size == 0:\n",
                            "Merge branch 'bug_in_chuck_size' into 'develop'",
                            "Marco Fumana",
                            "2023-08-04T15:11:59.000+00:00",
                            "d8c342870c2334b76cc9e6f3f9d47c964dfe50d5"
                        ],
                        [
                            "@@ -142,8 +142,8 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n     \"\"\"Class which collects methods used to calibrate the Optical Model\"\"\"\n     DEFAULT_INI = \"SIR_OPTModelCalibration.ini\"\n \n-    def __init__(self, workdir: str, filename: str):\n-        super().__init__(workdir, filename)\n+    def __init__(self, workdir: str, filename: str, key:str='PTGID'):\n+        super().__init__(workdir, filename, key=key)\n \n         self._params = None\n         self._0th_engine = None\n@@ -280,28 +280,6 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n         OPTModelCalibrationCore._compute_deltas(measured)\n \n \n-    def _open_frames_xmls(self, filename: str):\n-        \"\"\"Opens the input sci frames and store them into a dictionary\n-\n-        Parameters\n-        ----------\n-        filename: str\n-          The json file which collects all the science frame XML\n-        \"\"\"\n-        with open(os.path.join(self._workdir, filename), 'r', encoding=\"utf-8\") as json_file:\n-            sci_frames = json.load(json_file)\n-\n-        if len(sci_frames) == 0:\n-            raise Exception(\"No input frames\")\n-\n-        logger.info(\"Opening frames...\")\n-        self._nisp_xmls = {}\n-        for sci_frame in sci_frames:\n-            nisp_exp = DpdScienceFrame.load(self._workdir, sci_frame)\n-            ptg_id = nisp_exp.getMetadata().getAsInt('PTGID')\n-            self._nisp_xmls[ptg_id] = sci_frame\n-\n-\n     def load_tips_files(self):\n         \"\"\"Loads the tips filenames. These files are used to create a perfect model just for debug purposes\n \n@@ -616,7 +594,7 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n         \"\"\"\n \n         results = OPTModelCalibrationCore._create_results_table()\n-        ptg_id = nisp_exp.getMetadata().getAsInt('PTGID')\n+        ptg_id = nisp_exp.getMetadata().getAsInt(self._key)\n \n         chuck_size = len(expected_1st)//9\n \n",
                            "Merge branch 'pivot' into 'develop'",
                            "Marco Fumana",
                            "2023-07-04T17:28:44.000+00:00",
                            "98d1d6538d9431aa147ef10824d9875223993b6b"
                        ],
                        [
                            "@@ -142,8 +142,8 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n     \"\"\"Class which collects methods used to calibrate the Optical Model\"\"\"\n     DEFAULT_INI = \"SIR_OPTModelCalibration.ini\"\n \n-    def __init__(self, workdir: str, filename: str):\n-        super().__init__(workdir, filename)\n+    def __init__(self, workdir: str, filename: str, key:str='PTGID'):\n+        super().__init__(workdir, filename, key=key)\n \n         self._params = None\n         self._0th_engine = None\n@@ -280,28 +280,6 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n         OPTModelCalibrationCore._compute_deltas(measured)\n \n \n-    def _open_frames_xmls(self, filename: str):\n-        \"\"\"Opens the input sci frames and store them into a dictionary\n-\n-        Parameters\n-        ----------\n-        filename: str\n-          The json file which collects all the science frame XML\n-        \"\"\"\n-        with open(os.path.join(self._workdir, filename), 'r', encoding=\"utf-8\") as json_file:\n-            sci_frames = json.load(json_file)\n-\n-        if len(sci_frames) == 0:\n-            raise Exception(\"No input frames\")\n-\n-        logger.info(\"Opening frames...\")\n-        self._nisp_xmls = {}\n-        for sci_frame in sci_frames:\n-            nisp_exp = DpdScienceFrame.load(self._workdir, sci_frame)\n-            ptg_id = nisp_exp.getMetadata().getAsInt('PTGID')\n-            self._nisp_xmls[ptg_id] = sci_frame\n-\n-\n     def load_tips_files(self):\n         \"\"\"Loads the tips filenames. These files are used to create a perfect model just for debug purposes\n \n@@ -616,7 +594,7 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n         \"\"\"\n \n         results = OPTModelCalibrationCore._create_results_table()\n-        ptg_id = nisp_exp.getMetadata().getAsInt('PTGID')\n+        ptg_id = nisp_exp.getMetadata().getAsInt(self._key)\n \n         chuck_size = len(expected_1st)//9\n \n",
                            "Pivot model calibration with DM9.2 and new DetectorLayout",
                            "Marco Fumana",
                            "2023-07-04T17:28:44.000+00:00",
                            "3762cff177929f93aea0196b7402c020169ab0d0"
                        ],
                        [
                            "@@ -121,7 +121,7 @@ def mainMethod(args):\n \n     tips_files = core.load_tips_files()\n \n-    opt_model = core.load_opt_model(args.opt_model)\n+    opt_model = core.load_opt_model(args.opt_model, reset=True)\n \n     core.compute_tilts(args.mdb)\n \n@@ -326,9 +326,7 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n         return tips_files\n \n \n-\n-\n-    def load_opt_model(self, xml_file:str):\n+    def load_opt_model(self, xml_file:str, reset:bool=True):\n         \"\"\"Loads the already existing OptModel (as first guess) and trim (or enlarge) it according to the new degs\n \n         Parameters\n@@ -342,6 +340,11 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n         opt_model.resize(self._params.as_int('deg'), self._params.as_int('deg'))\n \n         self.set_reference_lambda(opt_model)\n+\n+        if reset is True:\n+            #Remove previous DQC parameters\n+            opt_model.xml.Parameters = ppr_dict.genericKeyValueParameters()\n+\n         return opt_model\n \n \n",
                            "Merge branch 'bug_DQC_duplication' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-06-16T12:28:34.000+00:00",
                            "6e4dca7449b6e2cc2667baa6ea88280ef48c8126"
                        ],
                        [
                            "@@ -199,6 +199,10 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n         measured: astropy.table.Table\n           Table containing measured positions\n         \"\"\"\n+        if order not in self._params['orders']:\n+            logger.info(f\"No {order} orders calibration required\")\n+            return None\n+\n         logger.info(f\"Starting {order} orders calibration...\")\n \n         measured = None\n@@ -920,6 +924,9 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n     def compute_dqc(self, measured, opt_model, order:str):\n         \"\"\"Computes the DQC values for the 1st order measurements\n         \"\"\"\n+        if measured is None:\n+            return\n+\n         prefix = f'{self._gwa_pos}_{self._gwa_tilt}'\n \n         #Create an empty container\n",
                            "Merge branch 'orders_param' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-06-16T12:16:13.000+00:00",
                            "cec74667f145b22b5ec5f415d1fd6e652101fa04"
                        ],
                        [
                            "@@ -121,7 +121,7 @@ def mainMethod(args):\n \n     tips_files = core.load_tips_files()\n \n-    opt_model = core.load_opt_model(args.opt_model)\n+    opt_model = core.load_opt_model(args.opt_model, reset=True)\n \n     core.compute_tilts(args.mdb)\n \n@@ -322,9 +322,7 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n         return tips_files\n \n \n-\n-\n-    def load_opt_model(self, xml_file:str):\n+    def load_opt_model(self, xml_file:str, reset:bool=True):\n         \"\"\"Loads the already existing OptModel (as first guess) and trim (or enlarge) it according to the new degs\n \n         Parameters\n@@ -338,6 +336,11 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n         opt_model.resize(self._params.as_int('deg'), self._params.as_int('deg'))\n \n         self.set_reference_lambda(opt_model)\n+\n+        if reset is True:\n+            #Remove previous DQC parameters\n+            opt_model.xml.Parameters = ppr_dict.genericKeyValueParameters()\n+\n         return opt_model\n \n \n",
                            "Cleaned DQC already existing",
                            "Marco Fumana",
                            "2023-06-15T16:37:58.000+00:00",
                            "123bc69ab058049b19077828478344fa6c647ae3"
                        ],
                        [
                            "@@ -199,6 +199,10 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n         measured: astropy.table.Table\n           Table containing measured positions\n         \"\"\"\n+        if order not in self._params['orders']:\n+            logger.info(f\"No {order} orders calibration required\")\n+            return None\n+\n         logger.info(f\"Starting {order} orders calibration...\")\n \n         measured = None\n@@ -920,6 +924,9 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n     def compute_dqc(self, measured, opt_model, order:str):\n         \"\"\"Computes the DQC values for the 1st order measurements\n         \"\"\"\n+        if measured is None:\n+            return\n+\n         prefix = f'{self._gwa_pos}_{self._gwa_tilt}'\n \n         #Create an empty container\n",
                            "Added orders parameters",
                            "Marco Fumana",
                            "2023-06-15T12:53:32.000+00:00",
                            "ddb5b326338c7fe4ce905b81c0225266cf67c612"
                        ],
                        [
                            "@@ -260,6 +260,7 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n             self.update_positions(opt_model, measured)\n \n         self._write_regions(measured)\n+        self.save_measured(measured, '_final', order)\n \n \n         return measured\n@@ -734,7 +735,7 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n         return results\n \n \n-    def save_measured(self, measured, niter:int, order:str):\n+    def save_measured(self, measured, niter:str, order:str):\n         \"\"\"Saves the measured table\n         \"\"\"\n         if self._params.as_bool('debug') is False:\n@@ -958,7 +959,7 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n             dq_parameters.Parameter.append(param)\n \n             param = ppr_dict.genericKVParam()\n-            param.Key = f'{prefix}_Std_{axis}_1st_order'\n+            param.Key = f'{prefix}_Std_{axis}_{order}_order'\n             param.Description = f'{prefix}: std of differences between {axis} expected '\\\n                 f'and measured positions of {order} orders'\n             param.DoubleValue = std\n",
                            "Merge branch 'bug_in_dqc' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-06-14T13:58:30.000+00:00",
                            "e8650a231b9a68303b8295298c41b53a3954ccdc"
                        ],
                        [
                            "@@ -260,6 +260,7 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n             self.update_positions(opt_model, measured)\n \n         self._write_regions(measured)\n+        self.save_measured(measured, '_final', order)\n \n \n         return measured\n@@ -734,7 +735,7 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n         return results\n \n \n-    def save_measured(self, measured, niter:int, order:str):\n+    def save_measured(self, measured, niter:str, order:str):\n         \"\"\"Saves the measured table\n         \"\"\"\n         if self._params.as_bool('debug') is False:\n@@ -958,7 +959,7 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n             dq_parameters.Parameter.append(param)\n \n             param = ppr_dict.genericKVParam()\n-            param.Key = f'{prefix}_Std_{axis}_1st_order'\n+            param.Key = f'{prefix}_Std_{axis}_{order}_order'\n             param.Description = f'{prefix}: std of differences between {axis} expected '\\\n                 f'and measured positions of {order} orders'\n             param.DoubleValue = std\n",
                            "Fixed bug in 0th order DQC writing",
                            "Marco Fumana",
                            "2023-06-14T13:58:30.000+00:00",
                            "d7a56cb681af73c2c3527be8caac1eeb87c5ade9"
                        ],
                        [
                            "@@ -125,13 +125,14 @@ def mainMethod(args):\n \n     core.compute_tilts(args.mdb)\n \n-    measured = core.iterate(opt_model, catalog, '0th')\n-    core.compute_dqc(measured, opt_model, '0th')\n+    if tips_files is None:\n+        measured = core.iterate(opt_model, catalog, '0th')\n+        core.compute_dqc(measured, opt_model, '0th')\n \n     measured = core.iterate(opt_model, catalog, '1st', tips_files=tips_files)\n     core.compute_dqc(measured, opt_model, '1st')\n \n-    core.display_opt_model(opt_model)\n+    core.display_opt_model(opt_model, tips_files=tips_files)\n \n     if out_filename is not None:\n         opt_model.save(out_filename, overwrite=args.overwrite)\n@@ -219,7 +220,6 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n             measured = self.measure_positions(opt_model, catalog, niter, order,\n                                               tips_files=tips_files)\n             self.close_pdf()\n-            self._write_regions(measured)\n             self._display_summary(measured, order)\n             self.save_measured(measured, niter, order)\n \n@@ -246,7 +246,7 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n         #Perform FIT on final measured data\n         if order == '1st':\n             self._fit_1st_order_model(opt_model, measured)\n-            self.plot_final_model(opt_model, catalog)\n+            #self.plot_final_model(opt_model, catalog)\n         else:\n             self._fit_0th_order_model(opt_model, measured)\n \n@@ -255,10 +255,26 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n             logger.info(f\"Remeasured positions for DQC checks\")\n             measured = self.measure_positions(opt_model, catalog, 'check', order)\n             logger.info(f\"Final chi2 value for {order} orders: {self._compute_chi2(measured, order):.4e}\")\n+        else:\n+            logger.info(f\"Updates positions using the computed OPT model\")\n+            self.update_positions(opt_model, measured)\n+\n+        self._write_regions(measured)\n+\n \n         return measured\n \n \n+    def update_positions(self, opt_model, measured):\n+        for row in measured:\n+            abs_exp = opt_model.get1stOrderReferencePosition(row['RA'],row['DEC'])\n+            row['XMOD'] = abs_exp[0]\n+            row['YMOD'] = abs_exp[1]\n+\n+        measured.remove_columns(('XABS_DELTA', 'YABS_DELTA'))\n+        OPTModelCalibrationCore._compute_deltas(measured)\n+\n+\n     def _open_frames_xmls(self, filename: str):\n         \"\"\"Opens the input sci frames and store them into a dictionary\n \n@@ -293,7 +309,10 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n \n         for filename in glob.glob(os.path.join(self._workdir, 'data', self._params['tips_files'])):\n             table = Table.read(filename, format='ascii')\n-            table = table[['X_IMAGE', 'Y_IMAGE', 'ID']]\n+            table = table[['X_IMAGE', 'Y_IMAGE', 'ID', 'RA', 'DEC']]\n+            table['X_IMAGE']-=4 #Remove prescan\n+            table['Y_IMAGE']-=4\n+\n             table = table[(table['X_IMAGE']>=0) & (table['X_IMAGE']<=self._det_model.getDetXPixels()-1)]\n             table = table[(table['Y_IMAGE']>=0) & (table['Y_IMAGE']<=self._det_model.getDetYPixels()-1)]\n \n@@ -478,20 +497,20 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n \n \n     @staticmethod\n-    def _compute_deltas(results, pixel_size):\n+    def _compute_deltas(results):\n \n-        results.add_column(Column(data=(results['XMEAS']-results['XMOD'])/pixel_size,\n-                                  name='XABS_DELTA', dtype=np.float32, unit=u.pixel,\n+        results.add_column(Column(data=(results['XMEAS']-results['XMOD']),\n+                                  name='XABS_DELTA', dtype=np.float32, unit=u.mm,\n                                   description=\"Differences between measured and NEW \"\\\n                                   \"expected position [pix]\"))\n-        results.add_column(Column(data=(results['YMEAS']-results['YMOD'])/pixel_size,\n-                                  name='YABS_DELTA', dtype=np.float32, unit=u.pixel,\n+        results.add_column(Column(data=(results['YMEAS']-results['YMOD']),\n+                                  name='YABS_DELTA', dtype=np.float32, unit=u.mm,\n                                   description=\"Differences between measured and NEW \"\\\n                                   \"expected position [pix]\"))\n \n \n     def measure_positions(self, opt_model, catalog, niter:int, order:str, tips_files=None):\n-        \"\"\"Measures only the 0th orders positions\n+        \"\"\"Measures only the 0th or 1st orders positions\n         \"\"\"\n \n         measured = []\n@@ -526,7 +545,7 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n             del nisp_exp\n \n         measured = self._join_measures(measured)\n-        OPTModelCalibrationCore._compute_deltas(measured, opt_model.det_model.getPixelSize())\n+        OPTModelCalibrationCore._compute_deltas(measured)\n \n         return measured\n \n@@ -667,7 +686,7 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n \n         for k, item in enumerate(catalog, 1):\n             if k%chuck_size == 0:\n-                logger.info(f\"Searched {k-1}/{len(catalog)} 1st order in TIPS files\")\n+                logger.info(f\"Searched {k-1}/{len(catalog)} 1st orders in TIPS files\")\n \n             obj_id = int(item['ID'])\n             for det_id in tips_files:\n@@ -680,27 +699,30 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n                 continue\n \n             ra, dec = float(item['RA']), float(item['DEC'])\n-            abs_exp = opt_model.get1stOrderReferencePosition(ra, dec)\n \n             #Removes prescan values\n-            abs_mm = self._det_model.getFOVPosition(float(tips_item['X_IMAGE'])-5,\n-                                                    float(tips_item['Y_IMAGE'])-5, det_id)\n+            _x = float(tips_item['X_IMAGE'])-1\n+            _y = float(tips_item['Y_IMAGE'])-1\n+            if det_id[0] in ('1', '2'):\n+                #Rotate TIPS positions\n+                _x = 2039-_x\n+                _y = 2039-_y\n+\n+            tips_mm = self._det_model.getFOVPosition(_x, _y, det_id)\n+            pos_mm = opt_model.getUndistortedObjectPosition(ra, dec)\n \n             if self._params.as_bool('regions') is True:\n-                _x = float(tips_item['X_IMAGE'])-4\n-                _y = float(tips_item['Y_IMAGE'])-4\n-                if det_id[0] in ('1', '2'):\n-                    #Rotate TIPS positions\n-                    _x = 2041-_x\n-                    _y = 2041-_y\n-                self._regions[ptg_id][det_id].write(f\"image;box {_x:.2f} {_y:.2f} 7 7\"\n+\n+                self._regions[ptg_id][det_id].write(f\"image;box {_x+1:.2f} {_y+1:.2f} 7 7\"\n                                                     f\"#color=red text={{{obj_id}}} width=4\\n\")\n-                self._regions[ptg_id][det_id].write(f'wcs;circle({float(item[\"RA\"]):.2f}, {float(item[\"DEC\"]):.2f},1\")'\n+                self._regions[ptg_id][det_id].write(f'wcs;circle({float(item[\"RA\"]):.8f}, {float(item[\"DEC\"]):.8f},1\")'\n                                                     f\"#color=cyan text={{{obj_id}}} width=4\\n\")\n+                pix_pos = self._det_model.getPixel(*pos_mm, det_id)\n+                self._regions[ptg_id][det_id].write(f\"image;box {pix_pos[0]+1:.2f} {pix_pos[1]+1:.2f} 4 4\"\n+                                                    f\"#color=magenta text={{{obj_id}}} width=2\\n\")\n \n-            pos = opt_model.getUndistortedObjectPosition(ra, dec)\n-            results.add_row((ptg_id, item['ID'], det_id, item['RA'], item['DEC'], pos[0], pos[1],\n-                             abs_exp[0], abs_exp[1], abs_mm[0], abs_mm[1]))\n+            results.add_row((ptg_id, item['ID'], det_id, item['RA'], item['DEC'], pos_mm[0], pos_mm[1],\n+                             pos_mm[0], pos_mm[1], tips_mm[0], tips_mm[1]))\n \n         if self._params.as_bool('regions') is True:\n             for regions in self._regions.values():\n@@ -848,7 +870,7 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n         logger.debug(f\"0th order dy matrix:\\n{ycoeffs}\")\n \n \n-    def _retrieve_expected_positions(self, catalog, opt_model, order:str=0, tips_files=None):\n+    def _retrieve_expected_positions(self, catalog, opt_model, order:str=0):\n         \"\"\"Loads from catalog the expected object position and return them.\n \n         Parameters\n@@ -1006,7 +1028,7 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n         return chi2\n \n \n-    def display_opt_model(self, opt_model):\n+    def display_opt_model(self, opt_model, tips_files=None):\n         \"\"\"Displays the Optical Model matrices\n \n         \"\"\"\n@@ -1018,7 +1040,13 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n         logger.info(f\"0th order dy matrix:\\n{opt_model.getDyDisplacemnt(0)}\")\n \n         if self._params.as_bool('regions') is True:\n-            logger.info(\"Magenta regions: the measured positions\")\n+            if tips_files is not None:\n+                logger.info(\"Red boxes: TIPS expected positions\")\n+                logger.info(\"Cyan circles: NIR expected positions (local WCS)\")\n+                logger.info(\"Magenta bixes: SIR expected positions (global WCS)\")\n+                logger.info(\"Magenta cicles: the measured positions (TIPS positions)\")\n+            else:\n+                logger.info(\"Magenta circles: the measured positions\")\n             logger.info(\"Blue regions   : the new fitted positions\")\n \n \n",
                            "Merge branch 'tips_files' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-06-13T07:10:52.000+00:00",
                            "61cae9289d03f2a737dc7288ba67aced263ab3e2"
                        ],
                        [
                            "@@ -125,13 +125,14 @@ def mainMethod(args):\n \n     core.compute_tilts(args.mdb)\n \n-    measured = core.iterate(opt_model, catalog, '0th')\n-    core.compute_dqc(measured, opt_model, '0th')\n+    if tips_files is None:\n+        measured = core.iterate(opt_model, catalog, '0th')\n+        core.compute_dqc(measured, opt_model, '0th')\n \n     measured = core.iterate(opt_model, catalog, '1st', tips_files=tips_files)\n     core.compute_dqc(measured, opt_model, '1st')\n \n-    core.display_opt_model(opt_model)\n+    core.display_opt_model(opt_model, tips_files=tips_files)\n \n     if out_filename is not None:\n         opt_model.save(out_filename, overwrite=args.overwrite)\n@@ -219,7 +220,6 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n             measured = self.measure_positions(opt_model, catalog, niter, order,\n                                               tips_files=tips_files)\n             self.close_pdf()\n-            self._write_regions(measured)\n             self._display_summary(measured, order)\n             self.save_measured(measured, niter, order)\n \n@@ -246,7 +246,7 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n         #Perform FIT on final measured data\n         if order == '1st':\n             self._fit_1st_order_model(opt_model, measured)\n-            self.plot_final_model(opt_model, catalog)\n+            #self.plot_final_model(opt_model, catalog)\n         else:\n             self._fit_0th_order_model(opt_model, measured)\n \n@@ -255,10 +255,26 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n             logger.info(f\"Remeasured positions for DQC checks\")\n             measured = self.measure_positions(opt_model, catalog, 'check', order)\n             logger.info(f\"Final chi2 value for {order} orders: {self._compute_chi2(measured, order):.4e}\")\n+        else:\n+            logger.info(f\"Updates positions using the computed OPT model\")\n+            self.update_positions(opt_model, measured)\n+\n+        self._write_regions(measured)\n+\n \n         return measured\n \n \n+    def update_positions(self, opt_model, measured):\n+        for row in measured:\n+            abs_exp = opt_model.get1stOrderReferencePosition(row['RA'],row['DEC'])\n+            row['XMOD'] = abs_exp[0]\n+            row['YMOD'] = abs_exp[1]\n+\n+        measured.remove_columns(('XABS_DELTA', 'YABS_DELTA'))\n+        OPTModelCalibrationCore._compute_deltas(measured)\n+\n+\n     def _open_frames_xmls(self, filename: str):\n         \"\"\"Opens the input sci frames and store them into a dictionary\n \n@@ -293,7 +309,10 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n \n         for filename in glob.glob(os.path.join(self._workdir, 'data', self._params['tips_files'])):\n             table = Table.read(filename, format='ascii')\n-            table = table[['X_IMAGE', 'Y_IMAGE', 'ID']]\n+            table = table[['X_IMAGE', 'Y_IMAGE', 'ID', 'RA', 'DEC']]\n+            table['X_IMAGE']-=4 #Remove prescan\n+            table['Y_IMAGE']-=4\n+\n             table = table[(table['X_IMAGE']>=0) & (table['X_IMAGE']<=self._det_model.getDetXPixels()-1)]\n             table = table[(table['Y_IMAGE']>=0) & (table['Y_IMAGE']<=self._det_model.getDetYPixels()-1)]\n \n@@ -478,20 +497,20 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n \n \n     @staticmethod\n-    def _compute_deltas(results, pixel_size):\n+    def _compute_deltas(results):\n \n-        results.add_column(Column(data=(results['XMEAS']-results['XMOD'])/pixel_size,\n-                                  name='XABS_DELTA', dtype=np.float32, unit=u.pixel,\n+        results.add_column(Column(data=(results['XMEAS']-results['XMOD']),\n+                                  name='XABS_DELTA', dtype=np.float32, unit=u.mm,\n                                   description=\"Differences between measured and NEW \"\\\n                                   \"expected position [pix]\"))\n-        results.add_column(Column(data=(results['YMEAS']-results['YMOD'])/pixel_size,\n-                                  name='YABS_DELTA', dtype=np.float32, unit=u.pixel,\n+        results.add_column(Column(data=(results['YMEAS']-results['YMOD']),\n+                                  name='YABS_DELTA', dtype=np.float32, unit=u.mm,\n                                   description=\"Differences between measured and NEW \"\\\n                                   \"expected position [pix]\"))\n \n \n     def measure_positions(self, opt_model, catalog, niter:int, order:str, tips_files=None):\n-        \"\"\"Measures only the 0th orders positions\n+        \"\"\"Measures only the 0th or 1st orders positions\n         \"\"\"\n \n         measured = []\n@@ -526,7 +545,7 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n             del nisp_exp\n \n         measured = self._join_measures(measured)\n-        OPTModelCalibrationCore._compute_deltas(measured, opt_model.det_model.getPixelSize())\n+        OPTModelCalibrationCore._compute_deltas(measured)\n \n         return measured\n \n@@ -667,7 +686,7 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n \n         for k, item in enumerate(catalog, 1):\n             if k%chuck_size == 0:\n-                logger.info(f\"Searched {k-1}/{len(catalog)} 1st order in TIPS files\")\n+                logger.info(f\"Searched {k-1}/{len(catalog)} 1st orders in TIPS files\")\n \n             obj_id = int(item['ID'])\n             for det_id in tips_files:\n@@ -680,27 +699,30 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n                 continue\n \n             ra, dec = float(item['RA']), float(item['DEC'])\n-            abs_exp = opt_model.get1stOrderReferencePosition(ra, dec)\n \n             #Removes prescan values\n-            abs_mm = self._det_model.getFOVPosition(float(tips_item['X_IMAGE'])-5,\n-                                                    float(tips_item['Y_IMAGE'])-5, det_id)\n+            _x = float(tips_item['X_IMAGE'])-1\n+            _y = float(tips_item['Y_IMAGE'])-1\n+            if det_id[0] in ('1', '2'):\n+                #Rotate TIPS positions\n+                _x = 2039-_x\n+                _y = 2039-_y\n+\n+            tips_mm = self._det_model.getFOVPosition(_x, _y, det_id)\n+            pos_mm = opt_model.getUndistortedObjectPosition(ra, dec)\n \n             if self._params.as_bool('regions') is True:\n-                _x = float(tips_item['X_IMAGE'])-4\n-                _y = float(tips_item['Y_IMAGE'])-4\n-                if det_id[0] in ('1', '2'):\n-                    #Rotate TIPS positions\n-                    _x = 2041-_x\n-                    _y = 2041-_y\n-                self._regions[ptg_id][det_id].write(f\"image;box {_x:.2f} {_y:.2f} 7 7\"\n+\n+                self._regions[ptg_id][det_id].write(f\"image;box {_x+1:.2f} {_y+1:.2f} 7 7\"\n                                                     f\"#color=red text={{{obj_id}}} width=4\\n\")\n-                self._regions[ptg_id][det_id].write(f'wcs;circle({float(item[\"RA\"]):.2f}, {float(item[\"DEC\"]):.2f},1\")'\n+                self._regions[ptg_id][det_id].write(f'wcs;circle({float(item[\"RA\"]):.8f}, {float(item[\"DEC\"]):.8f},1\")'\n                                                     f\"#color=cyan text={{{obj_id}}} width=4\\n\")\n+                pix_pos = self._det_model.getPixel(*pos_mm, det_id)\n+                self._regions[ptg_id][det_id].write(f\"image;box {pix_pos[0]+1:.2f} {pix_pos[1]+1:.2f} 4 4\"\n+                                                    f\"#color=magenta text={{{obj_id}}} width=2\\n\")\n \n-            pos = opt_model.getUndistortedObjectPosition(ra, dec)\n-            results.add_row((ptg_id, item['ID'], det_id, item['RA'], item['DEC'], pos[0], pos[1],\n-                             abs_exp[0], abs_exp[1], abs_mm[0], abs_mm[1]))\n+            results.add_row((ptg_id, item['ID'], det_id, item['RA'], item['DEC'], pos_mm[0], pos_mm[1],\n+                             pos_mm[0], pos_mm[1], tips_mm[0], tips_mm[1]))\n \n         if self._params.as_bool('regions') is True:\n             for regions in self._regions.values():\n@@ -848,7 +870,7 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n         logger.debug(f\"0th order dy matrix:\\n{ycoeffs}\")\n \n \n-    def _retrieve_expected_positions(self, catalog, opt_model, order:str=0, tips_files=None):\n+    def _retrieve_expected_positions(self, catalog, opt_model, order:str=0):\n         \"\"\"Loads from catalog the expected object position and return them.\n \n         Parameters\n@@ -1006,7 +1028,7 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n         return chi2\n \n \n-    def display_opt_model(self, opt_model):\n+    def display_opt_model(self, opt_model, tips_files=None):\n         \"\"\"Displays the Optical Model matrices\n \n         \"\"\"\n@@ -1018,7 +1040,13 @@ class OPTModelCalibrationCore(ModelCalibrationCore):\n         logger.info(f\"0th order dy matrix:\\n{opt_model.getDyDisplacemnt(0)}\")\n \n         if self._params.as_bool('regions') is True:\n-            logger.info(\"Magenta regions: the measured positions\")\n+            if tips_files is not None:\n+                logger.info(\"Red boxes: TIPS expected positions\")\n+                logger.info(\"Cyan circles: NIR expected positions (local WCS)\")\n+                logger.info(\"Magenta bixes: SIR expected positions (global WCS)\")\n+                logger.info(\"Magenta cicles: the measured positions (TIPS positions)\")\n+            else:\n+                logger.info(\"Magenta circles: the measured positions\")\n             logger.info(\"Blue regions   : the new fitted positions\")\n \n \n",
                            "Improved TIPS files usage",
                            "Marco Fumana",
                            "2023-06-13T07:10:52.000+00:00",
                            "659130d13e07725545b02d479dc5cabd1908b198"
                        ]
                    ],
                    "SIR_SortFrames/python/SIR_SortFrames/SIR_SortFrames_ByGrism.py": [
                        [
                            "@@ -84,7 +84,9 @@ def mainMethod(args) -> None:\n \n         # get grism name\n         grism = f\"{root.findtext('.//Data/Grism')}_{root.findtext('.//Data/GrismWheelTilt')}\"\n-\n+        # FIX ANOTHER STUPID SIM BUG\n+        grism=grism.replace('3','4')\n+        # END FIX TO BE DELETED IN OPERATIONS\n         # save Science Frame file name in the list of the current grism\n         organized_list[grism] = organized_list.get(grism, list()) + [name]\n \n",
                            "Merge branch 'bug_in_chuck_size' into 'develop'",
                            "Marco Fumana",
                            "2023-08-04T15:11:59.000+00:00",
                            "d8c342870c2334b76cc9e6f3f9d47c964dfe50d5"
                        ]
                    ],
                    "SIR_ModelsCalibration/auxdir/SIR_IDSModelCalibration.ini": [
                        [
                            "@@ -24,6 +24,11 @@ blue_horne = 12350.0\n [[BGS]]\n order1_wstart = 9000.0\n order1_wend = 13750.0\n+order0_wstart = 9000.0\n+order0_wend = 14000.0\n+blue_horne = 9325.0\n+\n+\n \n #Catalog selection used for 0th orders\n [CatalogSelection]\n",
                            "Merge branch 'fix_ids' into 'develop'",
                            "Marco Fumana",
                            "2023-07-20T07:50:35.000+00:00",
                            "18ede2f6c58afaa1325d4e3010b5ee2d6ce13158"
                        ]
                    ],
                    "SIR_ModelsCalibration/auxdir/SIR_PivotModelCalibration.ini": [
                        [
                            "@@ -5,6 +5,8 @@ nir_mask = 1100\n steps = 5\n step_shift = 12.0\n sigma = 3.0\n+compute_tilt = True\n+tilt_digits = 2\n \n \n [TiltComputationCore]\n@@ -19,5 +21,5 @@ bits = LOWQE,DARKNODET\n \n \n [CatalogSelection]\n-J=12:16\n+J=12:16.0\n TYPE=1:1\n",
                            "Merge branch 'pivot' into 'develop'",
                            "Marco Fumana",
                            "2023-07-04T17:28:44.000+00:00",
                            "98d1d6538d9431aa147ef10824d9875223993b6b"
                        ]
                    ],
                    "SIR_ModelsCalibration/python/SIR_ModelsCalibration/PivotModelCalibration.py": [
                        [
                            "@@ -24,7 +24,6 @@\n import os\n import json\n import argparse\n-from collections import OrderedDict\n \n \n import numpy as np\n@@ -118,11 +117,14 @@ def mainMethod(args):\n     catalog_selection = core.get_catalog_selection()\n     catalog.select(catalog_selection, args.objects_list, workdir=args.workdir)\n \n-    opt_core = OPTModelCalibrationCore(args.workdir, args.sci_frame)\n+    opt_core = OPTModelCalibrationCore(args.workdir, args.sci_frame, key='EXPNUM')\n     opt_core.read_parameters_file(args.config)\n     opt_core.set_detector_model(mdb)\n \n     opt_core.set_1st_engines()\n+    \n+    #Set extra tilts from pivot computation\n+    opt_core.extra_tilts = core.extra_tilts\n \n     measured = core.measure_positions(args.opt_model, catalog, opt_core)\n     #from astropy.table import Table\n@@ -147,10 +149,9 @@ class PivotModelCalibrationCore(ModelCalibrationCore):\n     \"\"\"This class contains the core methods to compute the grism rotation center\"\"\"\n     DEFAULT_INI = \"SIR_PivotModelCalibration.ini\"\n \n-    def __init__(self, workdir:str, filename:str):\n-        super().__init__(workdir, filename)\n+    def __init__(self, workdir:str, filename:str, key:str='EXPNUM'):\n+        super().__init__(workdir, filename, key=key)\n         self._profile_fitter = None\n-        self._extra_tilts = OrderedDict()\n \n \n     def __del__(self):\n@@ -167,7 +168,7 @@ class PivotModelCalibrationCore(ModelCalibrationCore):\n         gwa_name = f'{self._gwa_pos}_{self._gwa_tilt}'\n         self.read_ini_sections(ini_file, \"PivotModelCalibrationCore\", gwa_name)\n         self._ini_file = ini_file\n-\n+        \n \n     def get_catalog_selection(self):\n         return self._ini_file\n@@ -183,55 +184,34 @@ class PivotModelCalibrationCore(ModelCalibrationCore):\n         delta_angle-= self._extra_tilts[self.lower_angle]\n         return delta_angle\n \n-    def _open_frames_xmls(self, sci_frame:str):\n-        \"\"\"Open the json collection XML file names by exposure number\n-\n-                Parameters\n-                ----------\n-                sci_frame: str\n-                  The json file containg the XML file names\n-        \"\"\"\n-        with open(os.path.join(self._workdir, sci_frame), 'r', encoding='utf-8') as fp:\n-            json_list = json.load(fp)\n-\n-        self._nisp_xmls = OrderedDict()\n-        for item in json_list:\n-            nisp_exp = DpdScienceFrame.load(self._workdir, item)\n-            exp_num = nisp_exp.getMetadata().getAsInt('EXPNUM')\n-\n-            self._nisp_xmls[exp_num] = item\n-\n-        if len(self._nisp_xmls) == 0:\n-            raise Exception(\"No exposures\")\n-\n \n-    def compute_tilts(self, mdb:str=None, crv_model:str=None):\n-        \"\"\"Computes the image tilts and save these values\n+    #def compute_tilts(self, mdb:str=None, crv_model:str=None):\n+        #\"\"\"Computes the image tilts and save these values\n \n-        Parameters\n-        ----------\n-        params: str\n-          The parameter file used by compute tilt class\n+        #Parameters\n+        #----------\n+        #params: str\n+          #The parameter file used by compute tilt class\n \n-        mdb: str\n-          The Mission DataBase file name\n+        #mdb: str\n+          #The Mission DataBase file name\n \n-        crv_xml: str\n-          The XML file name for the CRV model\n-        \"\"\"\n-        #pick an exposure: all exposures have the same GWA_POS and GWA_TILT\n-        for item in self._nisp_xmls:\n-            nisp_exp = DpdScienceFrame.load(self._workdir, self._nisp_xmls[item])\n-            break\n+        #crv_xml: str\n+          #The XML file name for the CRV model\n+        #\"\"\"\n+        ##pick an exposure: all exposures have the same GWA_POS and GWA_TILT\n+        #for item in self._nisp_xmls:\n+            #nisp_exp = DpdScienceFrame.load(self._workdir, self._nisp_xmls[item])\n+            #break\n \n-        tilt_computation = TiltComputationCore(self._workdir, self._ini_file, nisp_exp)\n+        #tilt_computation = TiltComputationCore(self._workdir, self._ini_file, nisp_exp)\n \n-        self._extra_tilts =  OrderedDict()\n-        for exp_num, nisp_xml in self._nisp_xmls.items():\n-            nisp_exp = DpdScienceFrame.load(self._workdir, nisp_xml)\n-            tilt_angle, tilt_angle_err = tilt_computation.invoke(nisp_exp, mdb_file=mdb,\n-                                                                 crv_file=crv_model)\n-            self._extra_tilts[exp_num] = tilt_angle\n+        #self._extra_tilts =  {}\n+        #for exp_num, nisp_xml in self._nisp_xmls.items():\n+            #nisp_exp = DpdScienceFrame.load(self._workdir, nisp_xml)\n+            #tilt_angle, tilt_angle_err = tilt_computation.invoke(nisp_exp, mdb_file=mdb,\n+                                                                 #crv_file=crv_model)\n+            #self._extra_tilts[exp_num] = tilt_angle\n \n     @property\n     def lower_angle(self):\n@@ -337,8 +317,8 @@ class PivotModelCalibrationCore(ModelCalibrationCore):\n             lines = []\n \n             for exp_num in (self.lower_angle, self.higher_angle):\n-                pixel = self._det_model.getPixel(float(measure[f'XABS_{exp_num}']),\n-                                                 float(measure[f'YABS_{exp_num}']), det_num)\n+                pixel = self._det_model.getPixel(float(measure[f'XMEAS_{exp_num}']),\n+                                                 float(measure[f'YMEAS_{exp_num}']), det_num)\n                 profiles = self._measure_profiles(obj_id, pixel, nisp_exps[exp_num], arange, region=_region)\n                 if len(profiles) >0:\n                     lines.append(np.polyfit(profiles[:,0], profiles[:,1], 1))\n@@ -457,8 +437,8 @@ class PivotModelCalibrationCore(ModelCalibrationCore):\n \n         _r = 0.0\n         for exp_num in (self.lower_angle, self.higher_angle):\n-            _r+= np.sqrt((measure[f'XABS_{exp_num}'] - measure['XPIVOT'])**2 + \\\n-                        (measure[f'YABS_{exp_num}'] - measure['YPIVOT'])**2)\n+            _r+= np.sqrt((measure[f'XMEAS_{exp_num}'] - measure['XPIVOT'])**2 + \\\n+                        (measure[f'YMEAS_{exp_num}'] - measure['YPIVOT'])**2)\n         return _r/2.\n \n     def _create_circle(self, pos, color:str, size:int, text:str='', dash:bool=False):\n@@ -612,10 +592,18 @@ class PivotModelCalibrationCore(ModelCalibrationCore):\n         opt_model.set_gwa_tilt(self._gwa_tilt)\n \n         measured = {}\n-\n+        \n         for exp_num in (self.lower_angle, self.higher_angle):\n+            #Create an optical model for each frame. \n+            #In this way we can run the recipe using frames with different tilts\n+            #(emergency cases)\n+            \n             opt_core._nisp_xmls = {exp_num: self._nisp_xmls[exp_num]}\n-\n+            tmp_tilt = self._load_exposure(exp_num).getMetadata().getAsInt('GWA_TILT')\n+            if tmp_tilt != self._gwa_tilt:\n+                logger.warning(f\"Updated Optical Model GWA TILT for exposure {exp_num}\")\n+                opt_model.set_gwa_tilt(tmp_tilt)\n+                \n             ##For the first calibration run, assuming with are dealing with tiny angles\n             ##this correction is comment out\n             ##Once we obtain calibrated matrices we can comment out with correction\n@@ -623,9 +611,9 @@ class PivotModelCalibrationCore(ModelCalibrationCore):\n \n             opt_core.open_pdf(self._params.as_bool('debug'), exp_num)\n \n-            _, measured_1st = opt_core.measure_positions(opt_model, catalog, exp_num, tips_files=None)\n+            measured_1st = opt_core.measure_positions(opt_model, catalog, exp_num, '1st', tips_files=None)\n \n-            opt_core.save_measured(measured_1st, exp_num)\n+            opt_core.save_measured(measured_1st, exp_num, '1st')\n \n             opt_core.close_pdf()\n \n@@ -644,8 +632,8 @@ class PivotModelCalibrationCore(ModelCalibrationCore):\n                                  'XMOD_2', 'YMOD_2'))\n         measured.rename_columns(('DET_1', 'RA_1', 'DEC_1', 'XOBJ_1', 'YOBJ_1', 'XMOD_1', 'YMOD_1'),\n                                 ('DET', 'RA', 'DEC', 'XOBJ', 'YOXJ', 'XMOD', 'YMOD'))\n-        measured.rename_columns(('XABS_1', 'YABS_1', 'XABS_2', 'YABS_2'),\n-                                (f'XABS_{keys[0]}', f'YABS_{keys[0]}', f'XABS_{keys[1]}', f'YABS_{keys[1]}'))\n+        measured.rename_columns(('XMEAS_1', 'YMEAS_1', 'XMEAS_2', 'YMEAS_2'),\n+                                (f'XMEAS_{keys[0]}', f'YMEAS_{keys[0]}', f'XMEAS_{keys[1]}', f'YMEAS_{keys[1]}'))\n \n \n         measured.add_column(Column(length=len(measured), name='XPIVOT', dtype=np.float64, unit=u.mm,\n@@ -760,8 +748,8 @@ class PivotModelCalibrationCore(ModelCalibrationCore):\n         exp_num: int\n           The exposure number\n         \"\"\"\n-        xabs_label = f'XABS_{exp_num}'\n-        yabs_label = f'YABS_{exp_num}'\n+        xabs_label = f'XMEAS_{exp_num}'\n+        yabs_label = f'YMEAS_{exp_num}'\n \n         deltax = []\n         deltay = []\n@@ -771,8 +759,8 @@ class PivotModelCalibrationCore(ModelCalibrationCore):\n             deltax.append(item[xabs_label] - pos_mm[0])\n             deltay.append(item[yabs_label] - pos_mm[1])\n \n-        return {'X':np.array(deltax)/ opt_model.pixel_size,\n-                'Y':np.array(deltay)/ opt_model.pixel_size}\n+        return {'X':np.array(deltax)/ opt_model.det_model.getPixelSize(),\n+                'Y':np.array(deltay)/ opt_model.det_model.getPixelSize()}\n \n     @staticmethod\n     def _measure_0th_order_dqc(opt_model, measured):\n@@ -791,13 +779,13 @@ class PivotModelCalibrationCore(ModelCalibrationCore):\n         deltax = []\n         deltay = []\n         for item in measured:\n-            pos_mm = opt_model.get0thOrderReferencePosition(float(item['ra']), float(item['dec']))\n+            pos_mm = opt_model.get0thOrderReferencePosition(float(item['RA']), float(item['DEC']))\n \n-            deltax.append(item['X0TH'] - pos_mm[0])\n-            deltay.append(item['Y0TH'] - pos_mm[1])\n+            deltax.append(item['XMEAS'] - pos_mm[0])\n+            deltay.append(item['YMEAS'] - pos_mm[1])\n \n-        return {'X':np.array(deltax)/ opt_model.pixel_size,\n-                'Y':np.array(deltay)/ opt_model.pixel_size}\n+        return {'X':np.array(deltax)/ opt_model.det_model.getPixelSize(),\n+                'Y':np.array(deltay)/ opt_model.det_model.getPixelSize()}\n \n \n     def compute_0th_order_dqc(self, catalog, opt_model, opt_core):\n@@ -818,8 +806,6 @@ class PivotModelCalibrationCore(ModelCalibrationCore):\n         logger.info(\"Creating 0th orders DQC...\")\n         original_extra_tilt = opt_model.extra_tilt\n \n-        sigma = self._params.as_float('sigma')\n-\n         for exp_num in (self.lower_angle, self.higher_angle):\n             nisp_exp = DpdScienceFrame.load(self._workdir, self._nisp_xmls[exp_num])\n \n@@ -827,7 +813,7 @@ class PivotModelCalibrationCore(ModelCalibrationCore):\n             opt_model.extra_tilt = self._extra_tilts[exp_num] - original_extra_tilt\n \n             #Do we have one catalog for each poiting?\n-            expected_0th = opt_core._retrieve_expected_positions(catalog, opt_model, order=0)\n+            expected_0th = opt_core._retrieve_expected_positions(catalog, opt_model, order='0th')\n \n             #We must define engine for each images because 0th order engine depends on image\n             #Please refurbish the 0th order engine!\n",
                            "Merge branch 'pivot' into 'develop'",
                            "Marco Fumana",
                            "2023-07-04T17:28:44.000+00:00",
                            "98d1d6538d9431aa147ef10824d9875223993b6b"
                        ]
                    ],
                    "SIR_ModelsCalibration/tests/python/ModelCalibration_test.py": [
                        [
                            "@@ -101,7 +101,7 @@ class TestModelCalibrationCore:\n \n \n     def test_nisp_exp(self, tmpdir):\n-        core = ModelCalibrationCore(tmpdir, 'filename')\n+        core = ModelCalibrationCore(tmpdir, None)\n \n         nisp_exps = MagicMock()\n         core.nisp_exps = nisp_exps\n",
                            "Merge branch 'pivot' into 'develop'",
                            "Marco Fumana",
                            "2023-07-04T17:28:44.000+00:00",
                            "98d1d6538d9431aa147ef10824d9875223993b6b"
                        ]
                    ],
                    "SIR_ModelsCalibration/tests/python/PivotModelCalibration_test.py": [
                        [
                            "@@ -23,7 +23,6 @@\n \n \n import os\n-from collections import OrderedDict\n \n import numpy as np\n from astropy.table import Table\n@@ -158,7 +157,7 @@ class TestPivotModelCalibrationCore:\n         with pytest.raises(Exception) as empty:\n             core._open_frames_xmls(sci_frame)\n \n-        assert str(empty.value) == \"No exposures\"\n+        assert str(empty.value) == \"No input frames\"\n \n \n     @patch('SIR_ModelsCalibration.PivotModelCalibration.DpdScienceFrame.load')\n@@ -189,18 +188,25 @@ class TestPivotModelCalibrationCore:\n         assert core._nisp_xmls[1] == \"a.xml\"\n         assert core._nisp_xmls[2] == \"b.xml\"\n \n-    @patch('SIR_ModelsCalibration.PivotModelCalibration.TiltComputationCore')\n-    @patch('SIR_ModelsCalibration.PivotModelCalibration.DpdScienceFrame.load')\n-    def test_compute_tilts(self, mock_load, mock_tilt, tmpdir):\n+    @patch('SIR_ModelsCalibration.ModelCalibration.TiltComputationCore')\n+    def test_compute_tilts(self, mock_tilt, tmpdir):\n         core = TestPivotModelCalibrationCore.get_core(tmpdir, None)\n-        core._nisp_xmls = OrderedDict()\n+        core._nisp_xmls = {}\n         core._nisp_xmls[1] = \"a.xml\"\n         core._nisp_xmls[2] = \"b.xml\"\n \n         image0 = MagicMock()\n+        meta0 = MagicMock()\n+        meta0.getAsDouble = MagicMock(return_value=3)\n+        image0.getMetadata = MagicMock(return_value=meta0)\n+        \n         image1 = MagicMock()\n-        image2 = MagicMock()\n-        mock_load.side_effect = [image0, image1, image2]\n+        meta1 = MagicMock()\n+        meta1.getAsDouble = MagicMock(return_value=7)\n+        image1.getMetadata = MagicMock(return_value=meta1)\n+\n+        core._load_exposure = MagicMock(side_effect=[image0, image1])                \n+                \n         tilt = MagicMock()\n         mock_tilt.return_value = tilt\n         tilt.invoke = MagicMock(side_effect = [(100, 1000.), (200, 2000.)])\n@@ -208,22 +214,25 @@ class TestPivotModelCalibrationCore:\n         mdb = MagicMock()\n         crv_xml = MagicMock()\n         ini_file = MagicMock()\n+        core._params = MagicMock()\n+        core._params.as_bool = MagicMock(return_value=True)\n+        core._params.as_int = MagicMock(return_value=3)\n         core._get_ini_file = MagicMock(return_value=ini_file)\n         core.compute_tilts(mdb=mdb, crv_model=crv_xml)\n \n         assert len(core._extra_tilts) == 2\n-        assert core._extra_tilts[1] == 100\n-        assert core._extra_tilts[2] == 200\n+        assert np.allclose(core._extra_tilts[1], 100-3)\n+        assert np.allclose(core._extra_tilts[2], 200-7)\n \n-        assert tilt.invoke.call_args_list[0][0][0] is image1\n+        assert tilt.invoke.call_args_list[0][0][0] is image0\n         assert tilt.invoke.call_args_list[0][1]['mdb_file'] is mdb\n         assert tilt.invoke.call_args_list[0][1]['crv_file'] is crv_xml\n \n-        assert tilt.invoke.call_args_list[1][0][0] is image2\n+        assert tilt.invoke.call_args_list[1][0][0] is image1\n         assert tilt.invoke.call_args_list[1][1]['mdb_file'] is mdb\n         assert tilt.invoke.call_args_list[1][1]['crv_file'] is crv_xml\n \n-        assert len(mock_tilt.call_args_list) == 1\n+        assert len(mock_tilt.call_args_list) == 2\n \n \n     def test_lower_angle1(self, tmpdir):\n@@ -237,7 +246,7 @@ class TestPivotModelCalibrationCore:\n \n     def test_lower_angle2(self, tmpdir):\n         core = TestPivotModelCalibrationCore.get_core(tmpdir, None)\n-        core._extra_tilts = OrderedDict({1:-0.1, 2:0.2})\n+        core._extra_tilts = {1:-0.1, 2:0.2}\n \n         assert core.lower_angle == 1\n \n@@ -252,7 +261,7 @@ class TestPivotModelCalibrationCore:\n \n     def test_higher_angle2(self, tmpdir):\n         core = TestPivotModelCalibrationCore.get_core(tmpdir, None)\n-        core._extra_tilts = OrderedDict({1:-0.1, 2:0.2})\n+        core._extra_tilts = {1:-0.1, 2:0.2}\n \n         assert core.higher_angle == 2\n \n@@ -318,8 +327,8 @@ class TestPivotModelCalibrationCore:\n         radiuses = [1.0, 1.01, 0.99]\n \n         core = TestPivotModelCalibrationCore.get_core(tmpdir, None)\n-        core._extra_tilts = OrderedDict({1:-0.1, 2:0.2})\n-        core._nisp_xmls= OrderedDict({1: None, 2: None})\n+        core._extra_tilts = {1:-0.1, 2:0.2}\n+        core._nisp_xmls= {1: None, 2: None}\n         core._det_model = det_model\n         core._get_region = MagicMock(side_effect=regions)\n         core._measure_profiles = MagicMock(side_effect=profiles)\n@@ -327,8 +336,8 @@ class TestPivotModelCalibrationCore:\n         core._compute_radius = MagicMock(side_effect=radiuses)\n         core._params = TestPivotModelCalibrationCore.get_params(nir_mask=0, steps=4, step_shift=10., regions=False)\n         measures = Table({'DET':['11','22','33'], 'ID':[1000, 2000, 3000],\n-                          'XABS_1':[0.11, 0.21, 0.31], 'YABS_1':[1.11, 1.21, 1.31],\n-                          'XABS_2':[0.12, 0.22, 0.32], 'YABS_2':[1.12, 1.22, 1.32],\n+                          'XMEAS_1':[0.11, 0.21, 0.31], 'YMEAS_1':[1.11, 1.21, 1.31],\n+                          'XMEAS_2':[0.12, 0.22, 0.32], 'YMEAS_2':[1.12, 1.22, 1.32],\n                           'XPIVOT':[0.0, 0.0, 0.0], 'YPIVOT':[0.0, 0.0, 0.0],\n                           'RADIUS':[0.0, 0.0, 0.0]})\n \n@@ -414,9 +423,9 @@ class TestPivotModelCalibrationCore:\n \n     def test_compute_radius(self, tmpdir):\n         core = TestPivotModelCalibrationCore.get_core(tmpdir, None)\n-        core._extra_tilts = OrderedDict({10:-0.1, 20:0.2})\n+        core._extra_tilts = {10:-0.1, 20:0.2}\n \n-        measures = Table({'XABS_10':[1.0,], 'YABS_10':[0.0,], 'XABS_20':[1.1,], 'YABS_20':[0.2,],\n+        measures = Table({'XMEAS_10':[1.0,], 'YMEAS_10':[0.0,], 'XMEAS_20':[1.1,], 'YMEAS_20':[0.2,],\n                           'XPIVOT':[2.0,], 'YPIVOT':[-0.1,]})\n \n         r1 = core._compute_radius(measures[0])\n",
                            "Merge branch 'pivot' into 'develop'",
                            "Marco Fumana",
                            "2023-07-04T17:28:44.000+00:00",
                            "98d1d6538d9431aa147ef10824d9875223993b6b"
                        ]
                    ],
                    "SIR_DetectorScalingCalibration/python/SIR_DetectorScalingCalibration/FlatMaker.py": [
                        [
                            "@@ -520,50 +520,12 @@ class FlatMaker(object):\n             TimestampStart=sys_stub.utcMicrosecDateTime(2022, 12, 1, 0, 0),\r\n             TimestampEnd=sys_stub.utcMicrosecDateTime(2025, 12, 31, 0, 0))\r\n \r\n-        exposure_config = nisp_stub.nispExposureConfiguration.Factory(RawValue=1,\r\n-                                                                      KeywordConfiguration='SpectroGrismRGS0',\r\n-                                                                      InstrumentConfiguration='SpectroEngineeringDark')\r\n-\r\n-        macc_values = nisp_stub.maccValues.Factory(NRead=16, \r\n-                                                   NGroup=15, \r\n-                                                   NDrop=12)\r\n-\r\n-        exposure_time = ins_stub.exposureTime.Factory(Value=1.41,\r\n-                                                      Unit=utd_stub.stdUnit.s)\r\n-\r\n-        readout_mode = nisp_stub.nispReadoutMode.Factory(ReadoutModeMethod='UpTheRamp',\r\n-                                                         MACCValues=macc_values,\r\n-                                                         FrameTime=exposure_time)\r\n-\r\n-        grism_wheel_orientation = nisp_stub.grismWheelOrientation.Factory(Angle=288,\r\n-                                                                          ReferencePosition='RGS270')\r\n-\r\n-        obs_date_time = img_stub.spaceObservationDateTime.Factory(\r\n-            UTC=sys_stub.utcMicrosecDateTime.now(),\r\n-            OBT=sys_stub.taiMicrosecDateTime.now(),\r\n-            MJD=pd.Timestamp.now().to_julian_date())\r\n-\r\n-        observation = sir_stub.sirObservation.Factory(FieldId=0,\r\n-                                                      ObservationId=52929,\r\n-                                                      DitherObservation=1,\r\n-                                                      PointingId=90581,\r\n-                                                      Exposure=1,\r\n-                                                      TotalExposure=4,\r\n-                                                      ObservationDateTime=obs_date_time)\r\n-\r\n         data_container = dss_stub.dataContainer.Factory(FileName=fits_filename,\r\n                                                         filestatus='PROPOSED')\r\n \r\n         data = sir_stub.detectorScaling.Factory(ValidityRange=calib_valid_period,\r\n-                                                CalibrationID=grism, # 'Reference_SC8'\r\n+                                                CalibrationID=grism, \r\n                                                 CalibrationVersion=1,\r\n-                                                ExposureConfiguration=exposure_config,\r\n-                                                ReadoutMode=readout_mode,\r\n-                                                CalibUnit=nisp_stub.nispCalibUnit.Factory(Status=0),\r\n-                                                GrismWheelPos='RGS000',\r\n-                                                GrismWheelOrientation=grism_wheel_orientation,\r\n-                                                GrismWheelTilt=0,\r\n-                                                Observation=observation,\r\n                                                 DataStorage=sir_stub.detectorScalingFitsFile.Factory(data_container))\r\n \r\n         data.DataStorage.format = 'sir.detectorScaling'\r\n",
                            "Merge branch 'DM9.2_update' into 'develop'",
                            "Marco Fumana",
                            "2023-07-04T16:53:54.000+00:00",
                            "92a00df491420b2f4b71089faca5b008e7ab7f5c"
                        ]
                    ],
                    "SIR_DetectorScalingCalibration/tests/python/FlatMaker_test.py": [
                        [
                            "@@ -140,7 +140,7 @@ def test_init(temp_data_dir, init_fixture, fake_QE_fits_fixture):\n     with pytest.raises(TypeError, match='.*missing 5 required positional arguments:.*'):\n         FlatMaker()\n \n-@pytest.mark.skip(reason=\"DM 9.2 update required\")\n+\n def test_output_fits(temp_data_dir, init_fixture, fake_QE_fits_fixture, fake_grism_transmission_fits_fixture):\n \n     data_dir = temp_data_dir\n",
                            "Merge branch 'DM9.2_update' into 'develop'",
                            "Marco Fumana",
                            "2023-07-04T16:53:54.000+00:00",
                            "92a00df491420b2f4b71089faca5b008e7ab7f5c"
                        ],
                        [
                            "@@ -140,7 +140,7 @@ def test_init(temp_data_dir, init_fixture, fake_QE_fits_fixture):\n     with pytest.raises(TypeError, match='.*missing 5 required positional arguments:.*'):\n         FlatMaker()\n \n-\n+@pytest.mark.skip(reason=\"DM 9.2 update required\")\n def test_output_fits(temp_data_dir, init_fixture, fake_QE_fits_fixture, fake_grism_transmission_fits_fixture):\n \n     data_dir = temp_data_dir\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T11:37:04.000+00:00",
                            "a8c3a089f6127a5f2ab3b1477dac0c0f7261e341"
                        ],
                        [
                            "@@ -140,7 +140,7 @@ def test_init(temp_data_dir, init_fixture, fake_QE_fits_fixture):\n     with pytest.raises(TypeError, match='.*missing 5 required positional arguments:.*'):\n         FlatMaker()\n \n-\n+@pytest.mark.skip(reason=\"DM 9.2 update required\")\n def test_output_fits(temp_data_dir, init_fixture, fake_QE_fits_fixture, fake_grism_transmission_fits_fixture):\n \n     data_dir = temp_data_dir\n",
                            "Updated pipeline to DM 9.2",
                            "Marco Fumana",
                            "2023-06-30T11:37:04.000+00:00",
                            "3277d589e6f602e72c8d8e8b7ccc050ff7e92dd5"
                        ]
                    ],
                    ".jenkinsFile": [
                        [
                            "@@ -1,3 +1,3 @@\n #!groovy\n-@Library('integration-library@release-9') _\n-pipelineElements(artifactId:\"SIR_Calibration\", component:'eden.3.0')\n+@Library(value='integration-library@release-10') _\n+pipelineElements(name:\"SIR_Calibration\", component:'eden.3.1')\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T11:37:04.000+00:00",
                            "a8c3a089f6127a5f2ab3b1477dac0c0f7261e341"
                        ]
                    ],
                    "Makefile": [
                        [
                            "@@ -44,170 +44,18 @@\n #\n ################################################################################\n \n-# settings\n-CMAKE := cmake\n-CTEST := ctest\n-NINJA := $(shell which ninja-build 2> /dev/null)\n-ifeq ($(NINJA),)\n-  NINJA := $(shell which ninja 2> /dev/null)\n-endif\n-\n-# Looking for the Custom make library\n-\n-CUSTOM_MAKE_LIB := Custom.mk\n-\n-ifneq ($(wildcard $(CURDIR)/make/$(CUSTOM_MAKE_LIB)),)\n-  CUSTOM_MAKE_LIB_FILE := $(CURDIR)/make/$(CUSTOM_MAKE_LIB)\n-else\n-  ifneq ($(CMAKE_PREFIX_PATH),)\n-    PREFIX_LIST := $(subst :, ,$(CMAKE_PREFIX_PATH))\n-    CUSTOM_MAKE_LIB_LIST := $(foreach dir,$(PREFIX_LIST),$(wildcard $(dir)/share/Elements/make/$(CUSTOM_MAKE_LIB) $(dir)/../make/$(CUSTOM_MAKE_LIB)))\n-  endif\n-  CUSTOM_MAKE_LIB_LIST += /usr/share/Elements/make/$(CUSTOM_MAKE_LIB)\n-  CUSTOM_MAKE_LIB_FILE := $(firstword $(CUSTOM_MAKE_LIB_LIST))\n-endif\n-\n-# Looking for the ToolChain\n-\n-TOOLCHAIN_NAME := ElementsToolChain.cmake\n+ELEMENTS_MAKE_LIB := Elements.mk\n \n-ifneq ($(wildcard $(CURDIR)/cmake/$(TOOLCHAIN_NAME)),)\n-  TOOLCHAIN_FILE := $(CURDIR)/cmake/$(TOOLCHAIN_NAME)\n+ifneq ($(wildcard $(CURDIR)/make/$(ELEMENTS_MAKE_LIB)),)\n+  ELEMENTS_MAKE_LIB_FILE := $(CURDIR)/make/$(ELEMENTS_MAKE_LIB)\n else\n   ifneq ($(CMAKE_PREFIX_PATH),)\n     PREFIX_LIST := $(subst :, ,$(CMAKE_PREFIX_PATH))\n-    TOOLCHAIN_LIST := $(foreach dir,$(PREFIX_LIST),$(wildcard $(dir)/lib*/cmake/ElementsProject/$(TOOLCHAIN_NAME) $(dir)/$(TOOLCHAIN_NAME)))\n-    TOOLCHAIN_FILE := $(firstword $(TOOLCHAIN_LIST))\n-  endif\n-endif\n-\n-override ALL_CMAKEFLAGS := -Wno-dev --no-warn-unused-cli\n-\n-ifneq ($(TOOLCHAIN_FILE),)\n-  # A toolchain has been found. Lets use it.\n-  override ALL_CMAKEFLAGS += -DCMAKE_TOOLCHAIN_FILE=$(TOOLCHAIN_FILE)\n-endif\n-\n-\n-BUILD_PREFIX_NAME := build\n-\n-override ALL_CMAKEFLAGS += -DUSE_LOCAL_INSTALLAREA=ON -DBUILD_PREFIX_NAME:STRING=$(BUILD_PREFIX_NAME)\n-override ALL_CMAKEFLAGS += -DUSE_VERSIONED_LIBRARIES=OFF\n-\n-ifndef BINARY_TAG\n-  ifdef CMAKECONFIG\n-    BINARY_TAG := ${CMAKECONFIG}\n-  else\n-    ifdef CMTCONFIG\n-      BINARY_TAG := ${CMTCONFIG}\n-    endif\n-  endif\n-endif\n-\n-ifdef BINARY_TAG\n-  BUILD_SUBDIR := $(BUILD_PREFIX_NAME).$(BINARY_TAG)\n-else\n-  BUILD_SUBDIR := $(BUILD_PREFIX_NAME)\n-endif\n-BUILDDIR := $(CURDIR)/$(BUILD_SUBDIR)\n-\n-# build tool\n-\n-ifneq ($(USE_NINJA),)\n-  # enable Ninja\n-  override ALL_CMAKEFLAGS += -GNinja\n-  BUILD_CONF_FILE := build.ninja\n-  BUILDFLAGS := $(NINJAFLAGS)\n-  ifneq ($(VERBOSE),)\n-    BUILDFLAGS := -v $(BUILDFLAGS)\n+    ELEMENTS_MAKE_LIB_LIST := $(foreach dir,$(PREFIX_LIST),$(wildcard $(dir)/share/Elements/make/$(ELEMENTS_MAKE_LIB) $(dir)/../make/$(ELEMENTS_MAKE_LIB)))\n   endif\n-else\n-  BUILD_CONF_FILE := Makefile\n+  ELEMENTS_MAKE_LIB_LIST += /usr/share/Elements/make/$(ELEMENTS_MAKE_LIB)\n+  ELEMENTS_MAKE_LIB_FILE := $(firstword $(ELEMENTS_MAKE_LIB_LIST))\n endif\n-BUILD_CMD := $(CMAKE) --build $(BUILD_SUBDIR) --target\n-\n-\n-# Use environment variable for extra flags\n-\n-# Replace the \":\" from eclipse variable list to spaces  \n-ifneq ($(EXPAND_FLAGS),)\n-  CMAKEFLAGS := $(subst :-, -,$(CMAKEFLAGS))\n-endif\n-\n-ifneq ($(CMAKEFLAGS),)\n-  override ALL_CMAKEFLAGS += $(CMAKEFLAGS)\n-endif\n-\n-# default target\n-all:\n-\n-# deep clean\n-purge:\n-\t$(RM) -r $(BUILDDIR) $(CURDIR)/InstallArea/$(BINARY_TAG)\n-\tfind $(CURDIR) \"(\" -name \"InstallArea\" -prune -o -name \"*.pyc\" -o -name \"*.pyo\" \")\" -a -type f -exec $(RM) -v \\{} \\;\n-\tfind $(CURDIR) -depth -type d -name \"__pycache__\" -exec $(RM) -rv \\{} \\;\n-\n-# Remove all the possible directories and the whole InstallArea as well\n-mrproper:\n-\t$(RM) -r $(CURDIR)/build $(CURDIR)/build.* $(CURDIR)/InstallArea\n-\tfind $(CURDIR) \"(\" -name \"*.pyc\" -o -name \"*.pyo\" \")\" -a -type f -exec $(RM) -v \\{} \\;\n-\tfind $(CURDIR) -depth -type d -name \"__pycache__\" -exec $(RM) -rv \\{} \\;\n-\n-# delegate any target to the build directory (except 'purge')\n-ifneq ($(MAKECMDGOALS),purge)\n-ifneq ($(MAKECMDGOALS),mrproper)\n-%: $(BUILDDIR)/$(BUILD_CONF_FILE) FORCE\n-\t+$(BUILD_CMD) $* -- $(BUILDFLAGS)\n-endif\n-endif\n-\n-# aliases\n-.PHONY: configure tests FORCE\n-ifneq ($(wildcard $(BUILDDIR)/$(BUILD_CONF_FILE)),)\n-configure: rebuild_cache\n-else\n-configure: $(BUILDDIR)/$(BUILD_CONF_FILE)\n-endif\n-\t@ # do not delegate further\n-\n-\n-# This wrapping around the test target is used to ensure the generation of\n-# the XML output from ctest.\n-test: $(BUILDDIR)/$(BUILD_CONF_FILE)\n-\t$(RM) -r $(BUILDDIR)/Testing $(BUILDDIR)/html\n-\t-cd $(BUILDDIR) && $(CTEST) -T test $(ARGS)\n-\t+$(BUILD_CMD) JUnitSummary\n-\n-\n-# This target ensures that the \"all\" target is called before\n-# running the tests (unlike the \"test\" default target of CMake)\n-tests: all\n-\t$(RM) -r $(BUILDDIR)/Testing $(BUILDDIR)/html\n-\t-cd $(BUILDDIR) && $(CTEST) -T test $(ARGS)\n-\t+$(BUILD_CMD) JUnitSummary\n-\n-ifeq ($(VERBOSE),)\n-# less verbose install\n-# (emulate the default CMake install target)\n-install: all\n-\tcd $(BUILDDIR) && $(CMAKE) -P cmake_install.cmake | grep -v \"^-- Up-to-date:\"\n-endif\n-\n-# import the library to look for a custom Makefile\n--include $(CUSTOM_MAKE_LIB_FILE)\n-\n-# ensure that the target are always passed to the CMake Makefile\n-FORCE: ;\n-\n-# Makefiles are used as implicit targets in make, but we should not consider\n-# them for delegation.\n-$(MAKEFILE_LIST): ;\n-\n-\n-# trigger CMake configuration\n-$(BUILDDIR)/$(BUILD_CONF_FILE): | $(BUILDDIR)\n-\tcd $(BUILDDIR) && $(CMAKE) $(ALL_CMAKEFLAGS) $(CURDIR)\n-\n-$(BUILDDIR):\n-\tmkdir -p $(BUILDDIR)\n \n+$(info Using the $(ELEMENTS_MAKE_LIB_FILE) make library)\n+include $(ELEMENTS_MAKE_LIB_FILE)\n\\ No newline at end of file\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T11:37:04.000+00:00",
                            "a8c3a089f6127a5f2ab3b1477dac0c0f7261e341"
                        ]
                    ],
                    "SIR_MergeCalibrations/python/SIR_MergeCalibrations/MergeCalibs.py": [
                        [
                            "@@ -92,7 +92,6 @@ class MergeCalibs:\n         Returns:\n             list: lxml.etree.Element objects containing calibrations (e.g <RGS000>)\n         \"\"\"\n-\n         return [e for e in root.find('Data').getchildren() if 'RGS' in e.tag or 'BGS' in e.tag]\n     # -------------------------------------------------------------------------#\n \n@@ -109,7 +108,7 @@ class MergeCalibs:\n         Returns:\n             list: lxml.etree.Element objects (Parameters) corresponding do DQC\n         \"\"\"\n-        return root.find('Parameters').getchildren()\n+        return root.find('Parameters').getchildren() if root.find('Parameters') is not None else []\n     # -------------------------------------------------------------------------#\n \n \n@@ -152,11 +151,25 @@ class MergeCalibs:\n         if verify and not self._schema.validate(root):\n             self._logger.warn(f\"Invalid {filename} product of type {self._prod_name}. Skip adding.\")\n \n-        # get all calibrations sections\n-        self._new_calib.extend(self._get_calibrations(root))\n+        # loop all \"new\" calibrations to skip duplicated \"new\" calibrations to add \n+        for calib in  self._get_calibrations(root):\n+\n+            new_calib_ids = [self.getid(el) for el in self._new_calib]\n+\n+            if self.getid(calib) not in new_calib_ids:\n+                # get all calibrations sections\n+                self._new_calib.append(calib)\n+                \n+                # get all dqc parameters sections\n+                self._new_dqc.extend(self._get_dqc_params(root)) \n+            else:\n+                self._logger.warn(f\"Duplicated new grism calibration {self.getid(calib)}. Skip adding.\")\n+    \n+    # -------------------------------------------------------------------------#\n \n-        # get all dqc parameters sections\n-        self._new_dqc.extend(self._get_dqc_params(root)) \n+    def getid (self, item) -> tuple: \n+        # get the calibration \"ID\" as name, GWA, TILT      \n+        return (item.tag, item.find('GWATilt').text, item.find('ExtraTilt').text)\n     # -------------------------------------------------------------------------#\n \n \n@@ -177,17 +190,16 @@ class MergeCalibs:\n \n         # --- Calibrations ---\n \n-        # get the calibration \"ID\" as name, GWA, TILT\n-        id = lambda item : (item.tag, item.find('GWATilt').text, item.find('ExtraTilt').text)\n+\n \n         # get all \"old calib from file\" to be added to possible \"old calibs\" from previous call\n         self._old_calib = self._get_calibrations(root)\n \n         # get ids for all \"new calibrations\" available\n-        new_calib_ids = [id(el) for el in self._new_calib]\n+        new_calib_ids = [self.getid(el) for el in self._new_calib]\n \n         # remove from \"old\" calibrations the ones that have the \"update\" in new calibs\n-        self._old_calib  = [el for el in self._old_calib if id(el) not in new_calib_ids]\n+        self._old_calib  = [el for el in self._old_calib if self.getid(el) not in new_calib_ids]\n         # --- DQC parameters ---\n \n         # get all \"old DQC from file\" to be added to possible \"old DQC\" from previous call\n@@ -200,7 +212,6 @@ class MergeCalibs:\n \n         # remove from \"old\" DQC the ones that have the \"update\" in new DQC\n         self._old_dqc = [par for par in self._old_dqc if name(par) not in new_DQC_names and \"regions\" not in name(par) and \"delta\" not in name(par)]\n-        print(self._old_dqc) \n     # -------------------------------------------------------------------------#\n \n \n@@ -222,7 +233,7 @@ class MergeCalibs:\n                     tag.ProductType(self._prod_name),\n                     tag.SoftwareName(\"SIR\"),\n                     tag.SoftwareRelease(\"soft\"),\n-                    tag.EuclidPipelineSoftwareRelease(\"rela\"),\n+                    #tag.EuclidPipelineSoftwareRelease(\"rela\"),\n                     tag.ProdSDC(\"SDC-IT\"),\n                     tag.DataSetRelease(release),\n                     tag.Purpose(\"UNKNOWN\"),\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T11:37:04.000+00:00",
                            "a8c3a089f6127a5f2ab3b1477dac0c0f7261e341"
                        ]
                    ],
                    "SIR_MergeCalibrations/python/SIR_MergeCalibrations/SIR_MergeCalibCrv.py": [
                        [
                            "@@ -65,7 +65,7 @@ def mainMethod(args) -> None:\n \n     # create merged calib object and set to OPT product vis XSD\n     opt_calib = MergeCalibs.MergeCalibs()\n-    opt_calib.set_calibration_product('euc-test-sir-CrvModel.xsd')\n+    opt_calib.set_calibration_product('euc-sir-CrvModel.xsd')\n \n     # loop all input calib files and add calibration sections\n     for file in json.load(open(os.path.join(args.workdir,args.calib_list),'r')):\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T11:37:04.000+00:00",
                            "a8c3a089f6127a5f2ab3b1477dac0c0f7261e341"
                        ]
                    ],
                    "SIR_MergeCalibrations/python/SIR_MergeCalibrations/SIR_MergeCalibIds.py": [
                        [
                            "@@ -65,7 +65,7 @@ def mainMethod(args) -> None:\n \n     # create merged calib object and set to OPT product vis XSD\n     opt_calib = MergeCalibs.MergeCalibs()\n-    opt_calib.set_calibration_product('euc-test-sir-IdsModel.xsd')\n+    opt_calib.set_calibration_product('euc-sir-IdsModel.xsd')\n \n     # loop all input calib files and add calibration sections\n     for file in json.load(open(os.path.join(args.workdir,args.calib_list),'r')):\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T11:37:04.000+00:00",
                            "a8c3a089f6127a5f2ab3b1477dac0c0f7261e341"
                        ]
                    ],
                    "SIR_MergeCalibrations/python/SIR_MergeCalibrations/SIR_MergeCalibOpt.py": [
                        [
                            "@@ -65,7 +65,7 @@ def mainMethod(args) -> None:\n \n     # create merged calib object and set to OPT product vis XSD\n     opt_calib = MergeCalibs.MergeCalibs()\n-    opt_calib.set_calibration_product('euc-test-sir-OptModel.xsd')\n+    opt_calib.set_calibration_product('euc-sir-OptModel.xsd')\n \n     # loop all input calib files and add calibration sections\n     for file in json.load(open(os.path.join(args.workdir,args.calib_list),'r')):\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T11:37:04.000+00:00",
                            "a8c3a089f6127a5f2ab3b1477dac0c0f7261e341"
                        ]
                    ],
                    "SIR_ModelsCalibration/tests/data/crv.xml": [
                        [
                            "@@ -1,26 +1,30 @@\n-<?xml version='1.0' encoding='utf-8'?>\n-<crv:DpdSirCrvModel xmlns:crv=\"http://euclid.esa.org/schema/dpd/sir/crvmodel\">\n-  <Header>\n-    <ProductId>01d2a23f-4760-494b-8b52-f93136825ed7</ProductId>\n-    <ProductType>DpdSirCrvModel</ProductType>\n-    <SoftwareName>SIR</SoftwareName>\n-    <SoftwareRelease>soft</SoftwareRelease>\n-    <EuclidPipelineSoftwareRelease>rela</EuclidPipelineSoftwareRelease>\n-    <ProdSDC>SDC-IT</ProdSDC>\n-    <DataSetRelease>RELEASE</DataSetRelease>\n-    <Purpose>UNKNOWN</Purpose>\n-    <PlanId>UNKNOWN</PlanId>\n-    <PPOId>UNKNOWN</PPOId>\n-    <PipelineDefinitionId>UNKNOWN</PipelineDefinitionId>\n-    <PpoStatus>HAPPY</PpoStatus>\n-    <ManualValidationStatus>VALID</ManualValidationStatus>\n-    <ExpirationDate>1970-01-01T00:00:00.001Z</ExpirationDate>\n-    <ToBePublished>0</ToBePublished>\n-    <Published>0</Published>\n-    <Curator>SIR_PF</Curator>\n-    <CreationDate>2022-06-30T14:27:54.801606Z</CreationDate>\n-  </Header>\n-  <Data><ValidityRange><TimestampStart>2022-06-30T14:27:54.801641Z</TimestampStart><TimestampEnd>2022-06-30T14:27:54.801641Z</TimestampEnd></ValidityRange><CalibrationID>2022-06-30T14:27:54.801</CalibrationID><RGS000>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<dpd-sir-crvmodel:DpdSirCrvModel xmlns:dpd-sir-crvmodel=\"http://ecdm.euclid-ec.org/schema/dpd/sir/crvmodel\">\n+ <Header>\n+  <ProductId>EUC_SIR_CRVMODEL_PVRH2_DM9.1-TIPS_004</ProductId>\n+  <ProductType>DpdSirCrvModel</ProductType>\n+  <SoftwareName>SIR</SoftwareName>\n+  <SoftwareRelease>soft</SoftwareRelease>\n+  <ProdSDC>SDC-IT</ProdSDC>\n+  <DataSetRelease>TIPS_004</DataSetRelease>\n+  <Purpose>UNKNOWN</Purpose>\n+  <PlanId>UNKNOWN</PlanId>\n+  <PPOId>UNKNOWN</PPOId>\n+  <PipelineDefinitionId>UNKNOWN</PipelineDefinitionId>\n+  <PpoStatus>HAPPY</PpoStatus>\n+  <ManualValidationStatus>UNKNOWN</ManualValidationStatus>\n+  <ExpirationDate>1970-01-01T00:00:00.001000Z</ExpirationDate>\n+  <ToBePublished>0</ToBePublished>\n+  <Published>0</Published>\n+  <Curator>SIR_PF</Curator>\n+  <CreationDate>2022-06-30T14:27:54.801606Z</CreationDate>\n+ </Header>\n+  <Data><ValidityRange>\n+<TimestampStart>2022-06-30T14:27:54.801641Z</TimestampStart>\n+<TimestampEnd>2022-06-30T14:27:54.801641Z</TimestampEnd>\n+</ValidityRange><CalibrationID>2022-06-30T14:27:54.801</CalibrationID>\n+<RGS000>\n+   <Date>2022-06-30T14:27:54.801641Z</Date>\n \t\t\t<GWATilt>0</GWATilt>\n \t\t\t<ExtraTilt>0.0</ExtraTilt>\n \t\t\t<SpectralOrder>\n@@ -85,6 +89,7 @@\n \t\t\t</SpectralOrder>\n \t\t</RGS000>\n \t<RGS000>\n+   <Date>2022-06-30T14:27:54.801641Z</Date>\n \t\t\t<GWATilt>-4</GWATilt>\n \t\t\t<ExtraTilt>0.0</ExtraTilt>\n \t\t\t<SpectralOrder>\n@@ -149,6 +154,7 @@\n \t\t\t</SpectralOrder>\n \t\t</RGS000>\n \t<RGS180>\n+   <Date>2022-06-30T14:27:54.801641Z</Date>\n \t\t\t<GWATilt>4</GWATilt>\n \t\t\t<ExtraTilt>0.0</ExtraTilt>\n \t\t\t<SpectralOrder>\n@@ -213,6 +219,7 @@\n \t\t\t</SpectralOrder>\n \t\t</RGS180>\n \t<RGS180>\n+   <Date>2022-06-30T14:27:54.801641Z</Date>\n \t\t\t<GWATilt>0</GWATilt>\n \t\t\t<ExtraTilt>0.0</ExtraTilt>\n \t\t\t<SpectralOrder>\n@@ -277,4 +284,4 @@\n \t\t\t</SpectralOrder>\n \t\t</RGS180>\n \t</Data>\n-</crv:DpdSirCrvModel>\n+</dpd-sir-crvmodel:DpdSirCrvModel>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T11:37:04.000+00:00",
                            "a8c3a089f6127a5f2ab3b1477dac0c0f7261e341"
                        ]
                    ],
                    "SIR_ModelsCalibration/tests/data/dec1.xml": [
                        [
                            "@@ -1,6 +1,8 @@\n-<?xml version=\"1.0\" ?>\n-<ns1:DpdSirDecontaminatedSpectra xmlns:ns1=\"http://euclid.esa.org/schema/dpd/sir/decontaminated\">\n-\t<Header>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<de:DpdSirDecontaminatedSpectra \n+ xmlns:de=\"http://ecdm.euclid-ec.org/schema/dpd/sir/decontaminated\"\n+ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+    <Header>\n \t\t<ProductId>UNKNOWN</ProductId>\n \t\t<ProductType>DpdSirDecontaminatedSpectra</ProductType>\n \t\t<SoftwareName>SIR_Pipeline</SoftwareName>\n@@ -43,4 +45,4 @@\n \t\t</Observation>\n \t\t<DetectorId>11</DetectorId>\n \t</Data>\n-</ns1:DpdSirDecontaminatedSpectra>\n+</de:DpdSirDecontaminatedSpectra>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T11:37:04.000+00:00",
                            "a8c3a089f6127a5f2ab3b1477dac0c0f7261e341"
                        ]
                    ],
                    "SIR_ModelsCalibration/tests/data/dec2.xml": [
                        [
                            "@@ -1,6 +1,8 @@\n-<?xml version=\"1.0\" ?>\n-<ns1:DpdSirDecontaminatedSpectra xmlns:ns1=\"http://euclid.esa.org/schema/dpd/sir/decontaminated\">\n-\t<Header>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<de:DpdSirDecontaminatedSpectra \n+ xmlns:de=\"http://ecdm.euclid-ec.org/schema/dpd/sir/decontaminated\"\n+ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+    <Header>\n \t\t<ProductId>UNKNOWN</ProductId>\n \t\t<ProductType>DpdSirDecontaminatedSpectra</ProductType>\n \t\t<SoftwareName>SIR_Pipeline</SoftwareName>\n@@ -43,4 +45,4 @@\n \t\t</Observation>\n \t\t<DetectorId>11</DetectorId>\n \t</Data>\n-</ns1:DpdSirDecontaminatedSpectra>\n+</de:DpdSirDecontaminatedSpectra>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T11:37:04.000+00:00",
                            "a8c3a089f6127a5f2ab3b1477dac0c0f7261e341"
                        ]
                    ],
                    "SIR_ModelsCalibration/tests/data/dec3.xml": [
                        [
                            "@@ -1,6 +1,8 @@\n-<?xml version=\"1.0\" ?>\n-<ns1:DpdSirDecontaminatedSpectra xmlns:ns1=\"http://euclid.esa.org/schema/dpd/sir/decontaminated\">\n-\t<Header>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<de:DpdSirDecontaminatedSpectra \n+ xmlns:de=\"http://ecdm.euclid-ec.org/schema/dpd/sir/decontaminated\"\n+ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+    <Header>\n \t\t<ProductId>UNKNOWN</ProductId>\n \t\t<ProductType>DpdSirDecontaminatedSpectra</ProductType>\n \t\t<SoftwareName>SIR_Pipeline</SoftwareName>\n@@ -43,4 +45,4 @@\n \t\t</Observation>\n \t\t<DetectorId>11</DetectorId>\n \t</Data>\n-</ns1:DpdSirDecontaminatedSpectra>\n+</de:DpdSirDecontaminatedSpectra>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T11:37:04.000+00:00",
                            "a8c3a089f6127a5f2ab3b1477dac0c0f7261e341"
                        ]
                    ],
                    "SIR_ModelsCalibration/tests/data/ids.xml": [
                        [
                            "@@ -1,26 +1,32 @@\n-<?xml version='1.0' encoding='utf-8'?>\n-<ids:DpdSirIdsModel xmlns:ids=\"http://euclid.esa.org/schema/dpd/sir/idsmodel\">\n-  <Header>\n-    <ProductId>943ae1c9-fd0b-474f-b6aa-aa4ea816467b</ProductId>\n-    <ProductType>DpdSirIdsModel</ProductType>\n-    <SoftwareName>SIR</SoftwareName>\n-    <SoftwareRelease>soft</SoftwareRelease>\n-    <EuclidPipelineSoftwareRelease>rela</EuclidPipelineSoftwareRelease>\n-    <ProdSDC>SDC-IT</ProdSDC>\n-    <DataSetRelease>RELEASE</DataSetRelease>\n-    <Purpose>UNKNOWN</Purpose>\n-    <PlanId>UNKNOWN</PlanId>\n-    <PPOId>UNKNOWN</PPOId>\n-    <PipelineDefinitionId>UNKNOWN</PipelineDefinitionId>\n-    <PpoStatus>HAPPY</PpoStatus>\n-    <ManualValidationStatus>VALID</ManualValidationStatus>\n-    <ExpirationDate>1970-01-01T00:00:00.001Z</ExpirationDate>\n-    <ToBePublished>0</ToBePublished>\n-    <Published>0</Published>\n-    <Curator>SIR_PF</Curator>\n-    <CreationDate>2022-06-30T18:41:22.517576Z</CreationDate>\n-  </Header>\n-  <Data><ValidityRange><TimestampStart>2022-06-30T18:41:22.517626Z</TimestampStart><TimestampEnd>2022-06-30T18:41:22.517626Z</TimestampEnd></ValidityRange><CalibrationID>2022-06-30T18:41:22.517</CalibrationID><RGS000>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<dpd-sir-idsmodel:DpdSirIdsModel xmlns:dpd-sir-idsmodel=\"http://ecdm.euclid-ec.org/schema/dpd/sir/idsmodel\">\n+ <Header>\n+  <ProductId>EUC_SIR_IDSMODEL_PVRH2_START</ProductId>\n+  <ProductType>DpdSirIdsModel</ProductType>\n+  <SoftwareName>SIR</SoftwareName>\n+  <SoftwareRelease>soft</SoftwareRelease>\n+  <ProdSDC>SDC-IT</ProdSDC>\n+  <DataSetRelease>PVRH2_FG_ALL</DataSetRelease>\n+  <Purpose>UNKNOWN</Purpose>\n+  <PlanId>UNKNOWN</PlanId>\n+  <PPOId>UNKNOWN</PPOId>\n+  <PipelineDefinitionId>UNKNOWN</PipelineDefinitionId>\n+  <PpoStatus>HAPPY</PpoStatus>\n+  <ManualValidationStatus>VALID</ManualValidationStatus>\n+  <ExpirationDate>1970-01-01T00:00:00.001000Z</ExpirationDate>\n+  <ToBePublished>0</ToBePublished>\n+  <Published>0</Published>\n+  <Curator>SIR_PF</Curator>\n+  <CreationDate>2022-06-30T18:41:22.517576Z</CreationDate>\n+ </Header>\n+  <Data>\n+<ValidityRange>\n+<TimestampStart>2022-06-30T18:41:22.517626Z</TimestampStart>\n+<TimestampEnd>2022-06-30T18:41:22.517626Z</TimestampEnd>\n+</ValidityRange>\n+<CalibrationID>2022-06-30T18:41:22.517</CalibrationID>\n+<RGS000>\n+   <Date>2023-06-20T00:00:00.00001Z</Date>\n \t\t\t<GWATilt>0</GWATilt>\n \t\t\t<ExtraTilt>0.0</ExtraTilt>\n \t\t\t<SpectralOrder>\n@@ -78,6 +84,7 @@\n \t\t\t</SpectralOrder>\n \t\t</RGS000>\n \t<RGS000>\n+   <Date>2023-06-20T00:00:00.00001Z</Date>\n \t\t\t<GWATilt>-4</GWATilt>\n \t\t\t<ExtraTilt>0.0</ExtraTilt>\n \t\t\t<SpectralOrder>\n@@ -135,6 +142,7 @@\n \t\t\t</SpectralOrder>\n \t\t</RGS000>\n \t<RGS180>\n+   <Date>2023-06-20T00:00:00.00001Z</Date>\n \t\t\t<GWATilt>4</GWATilt>\n \t\t\t<ExtraTilt>0.0</ExtraTilt>\n \t\t\t<SpectralOrder>\n@@ -192,6 +200,7 @@\n \t\t\t</SpectralOrder>\n \t\t</RGS180>\n \t<RGS180>\n+   <Date>2023-06-20T00:00:00.00001Z</Date>\n \t\t\t<GWATilt>0</GWATilt>\n \t\t\t<ExtraTilt>0.0</ExtraTilt>\n \t\t\t<SpectralOrder>\n@@ -1398,4 +1407,4 @@\n \t\t\t<Unit>pixels</Unit>\n \t\t</Parameter>\n \t</Parameters>\n-</ids:DpdSirIdsModel>\n+</dpd-sir-idsmodel:DpdSirIdsModel>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T11:37:04.000+00:00",
                            "a8c3a089f6127a5f2ab3b1477dac0c0f7261e341"
                        ]
                    ],
                    "SIR_ModelsCalibration/tests/data/opt.xml": [
                        [
                            "@@ -1,11 +1,10 @@\n <?xml version='1.0' encoding='utf-8'?>\n-<opt:DpdSirOptModel xmlns:opt=\"http://euclid.esa.org/schema/dpd/sir/optmodel\">\n+<opt:DpdSirOptModel xmlns:opt=\"http://ecdm.euclid-ec.org/schema/dpd/sir/optmodel\">\n   <Header>\n     <ProductId>5a749c25-bef0-4fcb-8e63-5f2fded48a40</ProductId>\n     <ProductType>DpdSirOptModel</ProductType>\n     <SoftwareName>SIR</SoftwareName>\n     <SoftwareRelease>soft</SoftwareRelease>\n-    <EuclidPipelineSoftwareRelease>rela</EuclidPipelineSoftwareRelease>\n     <ProdSDC>SDC-IT</ProdSDC>\n     <DataSetRelease>RELEASE</DataSetRelease>\n     <Purpose>UNKNOWN</Purpose>\n@@ -20,7 +19,12 @@\n     <Curator>SIR_PF</Curator>\n     <CreationDate>2022-06-23T15:19:21.009539Z</CreationDate>\n   </Header>\n-  <Data><ValidityRange><TimestampStart>2022-06-23T15:19:21.009620Z</TimestampStart><TimestampEnd>2022-06-23T15:19:21.009620Z</TimestampEnd></ValidityRange><CalibrationID>2022-06-23T15:19:21.009</CalibrationID><RGS000>\n+  <Data><ValidityRange>\n+<TimestampStart>2022-06-23T15:19:21.009620Z</TimestampStart>\n+<TimestampEnd>2022-06-23T15:19:21.009620Z</TimestampEnd>\n+</ValidityRange><CalibrationID>2022-06-23T15:19:21.009</CalibrationID>\n+<RGS000>\n+<Date>2023-06-15T00:00:00.00001Z</Date>\n \t\t\t<GWATilt>0</GWATilt>\n \t\t\t<ExtraTilt>0.0</ExtraTilt>\n \t\t\t<Reference>\n@@ -59,6 +63,7 @@\n \t\t\t</Displacements>\n \t\t</RGS000>\n \t<RGS000>\n+<Date>2023-06-15T00:00:00.00001Z</Date>\n \t\t\t<GWATilt>-4</GWATilt>\n \t\t\t<ExtraTilt>0.0</ExtraTilt>\n \t\t\t<Reference>\n@@ -97,6 +102,7 @@\n \t\t\t</Displacements>\n \t\t</RGS000>\n \t<RGS180>\n+<Date>2023-06-15T00:00:00.00001Z</Date>\n \t\t\t<GWATilt>4</GWATilt>\n \t\t\t<ExtraTilt>0.0</ExtraTilt>\n \t\t\t<Reference>\n@@ -135,6 +141,7 @@\n \t\t\t</Displacements>\n \t\t</RGS180>\n \t<RGS180>\n+<Date>2023-06-15T00:00:00.00001Z</Date>\n \t\t\t<GWATilt>0</GWATilt>\n \t\t\t<ExtraTilt>0.0</ExtraTilt>\n \t\t\t<Reference>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T11:37:04.000+00:00",
                            "a8c3a089f6127a5f2ab3b1477dac0c0f7261e341"
                        ]
                    ],
                    "SIR_ModelsCalibration/tests/python/CRVModelCalibration_test.py": [
                        [
                            "@@ -21,22 +21,17 @@\n # Author: Marco Fumana\n #\n import os\n-import json\n-import configparser\n \n import numpy as np\n+from numpy.polynomial.chebyshev import Chebyshev\n+from numpy.polynomial.polynomial import Polynomial\n \n import pytest\n from unittest.mock import MagicMock, patch\n \n-from astropy.table import Table, Column\n-\n-from SIR_Utilities.Mdb import Mdb\n-\n from SIR_ModelsCalibration.CRVModelCalibration import CRVModelCalibrationCore\n from SIR_ModelsCalibration.CRVModelCalibration import DQCIntervals\n-from SIR_ModelsCalibration.ModelCalibration import ModelCalibrationCore\n-\n+from SIR_InstrumentModelsBinding import DetectorModel as CDetectorModel\n \n class TestDQCIntervals:\n     def test_init(self):\n@@ -147,4 +142,113 @@ class TestCRVModelCalibration:\n \n         catalog = MagicMock()\n \n+    @patch('SIR_ModelsCalibration.CRVModelCalibration.CRVModelCalibrationCore._open_frames_xmls')\n+    def test_create_global_ids(self, mock_open, tmpdir):\n+        core = CRVModelCalibrationCore(tmpdir, \"filename\")\n+\n+        box = 100*np.random.rand(2,2)\n+        box[0]*=-1\n+        det_model = CDetectorModel(\"RGS000\")\n+        det_model.getEnvelopeBox = MagicMock(return_value=box)\n+        core._det_model = det_model\n+\n+        coeffs = 10*np.random.rand(3)\n+\n+        drange = (7070., 9010.)\n+\n+        ids = core._create_global_ids(0, coeffs, drange)\n+\n+        assert ids.getGrismOrder() == 0\n+        assert np.allclose(ids.getXRange(), [box[0][0], box[1][0]])\n+        assert np.allclose(ids.getYRange(), [box[0][1], box[1][1]])\n+        assert np.allclose(ids.get1Dstart(), drange[0])\n+        assert np.allclose(ids.get1Dstop(), drange[1])\n+        assert ids.getXDeg() == 1\n+        assert ids.getYDeg() == 1\n+        assert ids.getDeg() == len(coeffs)-1\n+\n+        for deg, c in enumerate(coeffs):\n+            assert np.allclose(ids.getMatrix(deg), [[c, 0], [0, 0]])\n+\n+\n+    @patch('SIR_ModelsCalibration.CRVModelCalibration.CRVModelCalibrationCore._open_frames_xmls')\n+    def test_create_linear_ids1(self, mock_open, tmpdir):\n+        core = CRVModelCalibrationCore(tmpdir, \"filename\")\n+\n+        with pytest.raises(Exception) as no_opt:\n+            core.create_linear_ids(None, None)\n \n+        assert \"OPT model XML is required to create a linear IDS model\" == str(no_opt.value)\n+\n+\n+    @patch('SIR_ModelsCalibration.CRVModelCalibration.CRVModelCalibrationCore._open_frames_xmls')\n+    def test_create_linear_ids2(self, mock_open, tmpdir):\n+        core = CRVModelCalibrationCore(tmpdir, \"filename\")\n+        core._det_model = MagicMock()\n+        core._det_model.getPixelSize = MagicMock(return_value=0.018)\n+        core._create_global_ids = MagicMock()\n+\n+        opt = MagicMock()\n+        opt.getReferenceLambda = MagicMock(side_effect=[18600, 12500])\n+        opt.set_gwa_tilt = MagicMock()\n+        core._load_opt_xml = MagicMock(return_value=opt)\n+\n+        mdb = {'SpaceSegment.Instrument.NISP.NISPGBAAverageDLambda':12,\n+               'SpaceSegment.Instrument.NISP.NISPGBBAverageDLambda':650,\n+               'SpaceSegment.Instrument.NISP.NISPGRAAverageDLambda':13,\n+               'SpaceSegment.Instrument.NISP.NISPGRBAverageDLambda':700}\n+\n+        core._gwa_pos = 'RGS000'\n+\n+        core.create_linear_ids(mdb, 'opt_model_xml')\n+\n+        #Order 0\n+        b = 1./700*0.018\n+        coeffs = Polynomial([-b*18600, b]).convert(domain=(11000., 19000.), kind=Chebyshev).coef\n+        assert core._create_global_ids.call_args_list[0][0][0] == 0\n+        assert np.allclose(core._create_global_ids.call_args_list[0][0][1], coeffs)\n+        assert np.allclose(core._create_global_ids.call_args_list[0][0][2], (11000., 19000.))\n+\n+        #Order 1\n+        b = 1./13*0.018\n+        coeffs = Polynomial([-b*12500, b]).convert(domain=(11000., 19000.), kind=Chebyshev).coef\n+        assert core._create_global_ids.call_args_list[1][0][0] == 1\n+        assert np.allclose(core._create_global_ids.call_args_list[1][0][1], coeffs)\n+        assert np.allclose(core._create_global_ids.call_args_list[1][0][2], (11000., 19000.))\n+\n+\n+\n+    @patch('SIR_ModelsCalibration.CRVModelCalibration.CRVModelCalibrationCore._open_frames_xmls')\n+    def test_create_linear_ids2(self, mock_open, tmpdir):\n+        core = CRVModelCalibrationCore(tmpdir, \"filename\")\n+        core._det_model = MagicMock()\n+        core._det_model.getPixelSize = MagicMock(return_value=0.018)\n+        core._create_global_ids = MagicMock()\n+\n+        opt = MagicMock()\n+        opt.getReferenceLambda = MagicMock(side_effect=[18600, 12500])\n+        opt.set_gwa_tilt = MagicMock()\n+        core._load_opt_xml = MagicMock(return_value=opt)\n+\n+        mdb = {'SpaceSegment.Instrument.NISP.NISPGBAAverageDLambda':12,\n+               'SpaceSegment.Instrument.NISP.NISPGBBAverageDLambda':650,\n+               'SpaceSegment.Instrument.NISP.NISPGRAAverageDLambda':13,\n+               'SpaceSegment.Instrument.NISP.NISPGRBAverageDLambda':700}\n+\n+        core._gwa_pos = 'BGS000'\n+\n+        core.create_linear_ids(mdb, 'opt_model_xml')\n+\n+        #Order 0\n+        b = 1./650*0.018\n+        coeffs = Polynomial([-b*18600, b]).convert(domain=(8500., 14000.), kind=Chebyshev).coef\n+        assert core._create_global_ids.call_args_list[0][0][0] == 0\n+        assert np.allclose(core._create_global_ids.call_args_list[0][0][1], coeffs)\n+        assert np.allclose(core._create_global_ids.call_args_list[0][0][2], (8500., 14000.))\n+\n+        #Order 1\n+        b = 1./12*0.018\n+        coeffs = Polynomial([-b*12500, b]).convert(domain=(8500., 14000.), kind=Chebyshev).coef\n+        assert core._create_global_ids.call_args_list[1][0][0] == 1\n+        assert np.allclose(core._create_global_ids.call_args_list[1][0][1], coeffs)\n+        assert np.allclose(core._create_global_ids.call_args_list[1][0][2], (8500., 14000.))\n",
                            "Merge branch 'no_ids_required' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-06-28T08:48:35.000+00:00",
                            "a63d5542c8c5ea51522121f356e7351e76e8f313"
                        ]
                    ],
                    "SIR_ModelsCalibration/tests/python/OPTModelCalibration_test.py": [
                        [
                            "@@ -327,3 +327,58 @@ class TestOPTModelCalibrationCore:\n \n         assert str(invalid.value) == \"Invalid axis Z\"\n \n+\n+    def test_load_model1(self, tmpdir):\n+        xml_path = TestOPTModelCalibrationCore.get_xml_data_dir()\n+\n+        Mdb.getNISPDetectorSlots = MagicMock()\n+        det = MagicMock()\n+        det.getGWAPosition = MagicMock(return_value=\"RGS000\")\n+\n+        core = TestOPTModelCalibrationCore.get_core(tmpdir, 'filename')\n+        core._det_model = det\n+        core._gwa_tilt = 0\n+        core._params = TestOPTModelCalibrationCore.get_params(\"RGS000_0\")\n+\n+        det.getEnvelopeBox = MagicMock(return_value=np.zeros((2,2)))\n+        opt_model = core.load_opt_model(os.path.join(xml_path, 'opt.xml'), reset=True)\n+\n+        assert len(opt_model.xml.Parameters.Parameter) == 0\n+\n+\n+    def test_load_model2(self, tmpdir):\n+        xml_path = TestOPTModelCalibrationCore.get_xml_data_dir()\n+\n+        Mdb.getNISPDetectorSlots = MagicMock()\n+        det = MagicMock()\n+        det.getGWAPosition = MagicMock(return_value=\"RGS000\")\n+\n+        core = TestOPTModelCalibrationCore.get_core(tmpdir, 'filename')\n+        core._det_model = det\n+        core._gwa_tilt = 0\n+        core._params = TestOPTModelCalibrationCore.get_params(\"RGS000_0\")\n+\n+        det.getEnvelopeBox = MagicMock(return_value=np.zeros((2,2)))\n+        opt_model = core.load_opt_model(os.path.join(xml_path, 'opt.xml'), reset=False)\n+\n+        assert len(opt_model.xml.Parameters.Parameter) > 0\n+\n+\n+    def test_load_model3(self, tmpdir):\n+        xml_path = TestOPTModelCalibrationCore.get_xml_data_dir()\n+\n+        Mdb.getNISPDetectorSlots = MagicMock()\n+        det = MagicMock()\n+        det.getGWAPosition = MagicMock(return_value=\"RGS000\")\n+\n+        core = TestOPTModelCalibrationCore.get_core(tmpdir, 'filename')\n+        core._det_model = det\n+        core._gwa_tilt = 0\n+        core._params = TestOPTModelCalibrationCore.get_params(\"RGS000_0\")\n+        core._params['deg'] = 1\n+\n+        det.getEnvelopeBox = MagicMock(return_value=np.zeros((2,2)))\n+        opt_model = core.load_opt_model(os.path.join(xml_path, 'opt.xml'), reset=False)\n+\n+        assert opt_model.X.shape == (2,2)\n+        assert opt_model.Y.shape == (2,2)\n",
                            "Merge branch 'bug_DQC_duplication' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-06-16T12:28:34.000+00:00",
                            "6e4dca7449b6e2cc2667baa6ea88280ef48c8126"
                        ]
                    ],
                    "SIR_ModelsCalibration/auxdir/SIR_OPTModelCalibration.ini": [
                        [
                            "@@ -6,13 +6,14 @@ regions = True\n debug = True\n dao_threshold = 10.0\n fwhm = 6.0\n-niters = 10\n+niters = 1\n lambda_0 = 18660.0\n lambda_1 = 12525.567\n sigma = 3.0\n-compute_tilt = true\n+compute_tilt = false\n tilt_digits=2\n keep_pointing = true\n+orders = 0th,1st\n \n [[RGS]]\n lambda_0 = 18660.0\n@@ -24,19 +25,19 @@ lambda_1 = 12525.567\n \n [[RGS000_0]]\n results = OPT_RGS000_0_results.fits\n-#tips_files = EUC_SIM_NIS-TASK-OTHER-000013-004_*.cat\n+#tips_files = EUC_SIM_NIS-TASK-OBJECT-000024-036_0E43D1A0EBFB-0042192_20230531T152331.632496Z_PV001_NISP_24_0_4_catalog_*.cat\n \n [[RGS000_-4]]\n results = OPT_RGS000_-4_results.fits\n-#tips_files = EUC_SIM_NIS-TASK-OTHER-000013-006_*cat\n+#tips_files = EUC_SIM_NIS-TASK-OBJECT-000024-038_0E43D1A0EBFB-0042192_20230531T152331.664492Z_PV001_NISP_24_0_4_catalog_*.cat\n \n [[RGS180_0]]\n results = OPT_RGS180_0_results.fits\n-#tips_files = EUC_SIM_NIS-TASK-OTHER-000013-007_*cat\n+#tips_files = EUC_SIM_NIS-TASK-OBJECT-000024-039_0E43D1A0EBFB-0042192_20230531T152331.939761Z_PV001_NISP_24_0_4_catalog_*.cat\n \n [[RGS180_4]]\n results = OPT_RGS180_4_results.fits\n-#tips_files = EUC_SIM_NIS-TASK-OTHER-000013-005_*cat\n+#tips_files = EUC_SIM_NIS-TASK-OBJECT-000024-037_0E43D1A0EBFB-0042192_20230531T152331.648527Z_PV001_NISP_24_0_4_catalog_*.cat\n \n [[BGS000_0]]\n results = OPT_BGS000_0_results.fits\n@@ -44,7 +45,8 @@ results = OPT_BGS000_0_results.fits\n \n \n [CatalogSelection]\n-J=12:16.7\n+J=12:16.0\n+#16.7\n TYPE=1:1\n \n \n",
                            "Merge branch 'orders_param' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-06-16T12:16:13.000+00:00",
                            "cec74667f145b22b5ec5f415d1fd6e652101fa04"
                        ]
                    ]
                },
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": [
                    {
                        "name": "3.2.0",
                        "created_at": "2023-04-12T14:23:19.000+00:00",
                        "author_name": "Marco Fumana"
                    },
                    {
                        "name": "4.0.0",
                        "created_at": "2023-08-11T15:52:48.000+02:00",
                        "author_name": "Tava"
                    }
                ]
            },
            "PF-SIR/SIR_Validation": {
                "start date": "2023-06-09 09:00",
                "end date": "2023-08-16 15:00",
                "start tag": "> 3.0.0",
                "end tag": "> 3.0.0",
                "count_files_modified": "2",
                "modifications_by_file": {
                    "CMakeLists.txt": [
                        [
                            "@@ -7,4 +7,4 @@ find_package(ElementsProject)\n #---------------------------------------------------------------\n \n # Declare project name and version\n-elements_project(SIR_Validation 3.1 USE SIR_Pipeline 3.1 SIR_Calibration 3.1 PF_Validation 2.1.1)\n+elements_project(SIR_Validation 4.0 USE SIR_Pipeline 4.0 SIR_Calibration 4.0 PF_Validation 2.2.0)\n",
                            "Merge branch 'EDEN-3.1_dependency_update' into 'develop'",
                            "Lorenzo Bramante",
                            "2023-08-03T06:48:34.000+00:00",
                            "4c34ae68754eaf767311d9ef52e37f9305ca6bc4"
                        ],
                        [
                            "@@ -7,4 +7,4 @@ find_package(ElementsProject)\n #---------------------------------------------------------------\n \n # Declare project name and version\n-elements_project(SIR_Validation 3.1 USE SIR_Pipeline 3.1 SIR_Calibration 3.1 PF_Validation 2.2)\n+elements_project(SIR_Validation 4.0 USE SIR_Pipeline 4.0 SIR_Calibration 4.0 PF_Validation 2.2.0)\n",
                            "Updated dependencies for eden3.1",
                            "lbramante",
                            "2023-08-02T18:32:13.000+02:00",
                            "121ec3c00b1a2b267d444772f6bdb83490d3ce68"
                        ],
                        [
                            "@@ -7,4 +7,4 @@ find_package(ElementsProject)\n #---------------------------------------------------------------\n \n # Declare project name and version\n-elements_project(SIR_Validation 3.1 USE SIR_Pipeline 3.1 SIR_Calibration 3.1 PF_Validation 2.1.1)\n+elements_project(SIR_Validation 3.1 USE SIR_Pipeline 3.1 SIR_Calibration 3.1 PF_Validation 2.2)\n",
                            "PF_validation upgrade for eden3.1",
                            "lbramante",
                            "2023-08-01T12:30:47.000+02:00",
                            "52d3ca89d1ff738ca6f201bdd803c04856d88c2c"
                        ]
                    ],
                    "build.sh": [
                        [
                            "@@ -1,4 +1,3 @@\n-eden.3.0\n make configure\n make all\n make install\n",
                            "Merge branch 'EDEN-3.1_dependency_update' into 'develop'",
                            "Lorenzo Bramante",
                            "2023-08-03T06:48:34.000+00:00",
                            "4c34ae68754eaf767311d9ef52e37f9305ca6bc4"
                        ]
                    ]
                },
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": [
                    {
                        "name": "3.0.0",
                        "created_at": "2022-11-21T12:04:49.000+01:00",
                        "author_name": "Lorenzo Bramante"
                    }
                ]
            },
            "PF-SIR/SIR_Tools": {
                "start date": "2023-06-09 09:00",
                "end date": "2023-08-16 15:00",
                "start tag": "> 0.4.1",
                "end tag": "> 0.4.1",
                "count_files_modified": "8",
                "modifications_by_file": {
                    "SIR_VisualCheck/CMakeLists.txt": [
                        [
                            "@@ -10,4 +10,5 @@ elements_add_python_program(SIR_LocateSpectra SIR_VisualCheck.LocateSpectra)\n elements_add_python_program(SIR_LocateObjects SIR_VisualCheck.LocateObjects)\n elements_add_python_program(SIR_LocateHalphas SIR_VisualCheck.LocateHalphas)\n elements_add_python_program(SIR_CheckOpticalDistortions SIR_VisualCheck.CheckOpticalDistortions)\n+elements_add_python_program(SIR_FirstModelFit SIR_VisualCheck.FirstModelFit)\n \n",
                            "Added new recipe",
                            "mfumana",
                            "2023-08-08T13:35:06.000+00:00",
                            "d0b2d3edc7b3aa2b5ec4c6152f8f7c6c52038c8f"
                        ]
                    ],
                    "SIR_VisualCheck/python/SIR_VisualCheck/FirstModelFit.py": [
                        [
                            "@@ -0,0 +1,119 @@\n+#\n+# Copyright (C) 2012-2020 Euclid Science Ground Segment\n+#\n+# This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General\n+# Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option)\n+# any later version.\n+#\n+# This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied\n+# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n+# details.\n+#\n+# You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to\n+# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+#\n+\n+#\n+# File LocateObject.py\n+#\n+# Created on: Nov 17, 2016\n+#\n+# Author: Paolo Franzetti\n+#         Marco Fumana\n+#         Paolo Luigi Scala\n+#\n+\n+\"\"\"This program retrieve stars and galaxies position from the catatlogs and creates a ds9 region file\"\"\"\n+\n+import os\n+import argparse\n+import numpy as np\n+from matplotlib import pyplot as plt\n+\n+from astropy.table import Table\n+\n+import ElementsKernel.Logging as log\n+\n+from SIR_Utilities.Mdb import Mdb\n+\n+from SIR_InstrumentModels.DetectorModel import DetectorModel\n+\n+from SIR_ToolsUtilities.FileUtils import get_aux_dir\n+\n+logger = log.getLogger('FirstModelFit')\n+\n+def defineSpecificProgramOptions():\n+    \"\"\"\n+    Defines the (command line and configuration file) options specific to this task\n+\n+    Returns:\n+      An ArgumentParser.\n+    \"\"\"\n+    \n+    parser = argparse.ArgumentParser()\n+    parser.add_argument('--ver', action='version', version='0.1')\n+    parser.add_argument('--workdir', type=str, required=True,\n+                        help='The root working directory where the data is located')\n+    parser.add_argument('--mdb', type=str, required=True,\n+                        help='Euclid MDB')\n+    parser.add_argument('--points', type=str, required=True,\n+                        help='Table with distorted and undistoreted points')\n+    parser.add_argument('--gwa_pos', type=str, required=True,\n+                        help='Grism wheel positions')\n+    parser.add_argument('--deg', type=int, required=False, default=3,\n+                        help='Degree of fit')\n+            \n+            \n+    return parser\n+\n+\n+def mainMethod(args):\n+    \"\"\"\n+    The task main method.\n+\n+    This method is the entry point to the program.\n+    See the ElementsProgram documentation for more details.\n+    \"\"\"\n+\n+    mdb = Mdb.load(args.workdir, args.mdb)\n+\n+    det=DetectorModel(args.gwa_pos, mdb, rotate=True)\n+\n+    points = Table.read(os.path.join(args.workdir, args.points), format='ascii')\n+\n+\n+    obj_poss = np.zeros((len(points), 2))\n+    spec_poss = np.zeros((len(points), 2))\n+                \n+    for k, row in enumerate(points):\n+        mm_pos=det.getFOVPosition(row['XOBJ'], row['YOBJ'], str(row['DETID']))\n+        obj_poss[k] = mm_pos[0], mm_pos[1]\n+                \n+        mm_pos=det.getFOVPosition(row['XSPEC'], row['YSPEC'], str(row['DETID']))\n+        spec_poss[k] = mm_pos[0], mm_pos[1]\n+    \n+    xcoeffs = np.polyfit(obj_poss[:,0], spec_poss[:,0], args.deg)\n+    ycoeffs = np.polyfit(obj_poss[:,1], spec_poss[:,1], args.deg)\n+    \n+    xpoly = np.poly1d(xcoeffs)\n+    ypoly = np.poly1d(ycoeffs)\n+    \n+    xdelta = xpoly(obj_poss[:,0]) - spec_poss[:,0]\n+    ydelta = ypoly(obj_poss[:,1]) - spec_poss[:,1]\n+    xdelta/=det.getPixelSize()\n+    ydelta/=det.getPixelSize()\n+        \n+    print(xpoly)\n+    print(xcoeffs)\n+    print(f'X: dmin={xdelta.min()}\\tdmax={xdelta.max()}\\tdmean={np.abs(xdelta).mean()}')\n+    \n+    print(ypoly)    \n+    print(ycoeffs)    \n+    print(f'Y: dmin={ydelta.min()}\\tdmax={ydelta.max()}\\tdmean={np.abs(ydelta).mean()}')\n+    \n+    fig, axs = plt.subplots(1, 2)\n+    \n+    axs[0].scatter(obj_poss[:,0], xdelta)\n+    axs[1].scatter(obj_poss[:,1], ydelta)\n+\n+    plt.show()\n\\ No newline at end of file\n",
                            "Added new recipe",
                            "mfumana",
                            "2023-08-08T13:35:01.000+00:00",
                            "71e5f3c312a5f65123ba1fd1141637048a42e257"
                        ]
                    ],
                    "SIR_VisualCheck/python/SIR_VisualCheck/LocateSpectra.py": [
                        [
                            "@@ -159,6 +159,7 @@ def locateSpectra(args):\n             ao = loc_object.getAstronomicalObject()\n \n             createObjectRegion(loc_object, region, obj_id, args.object_color)\n+            createObjectRegionPix(location_table, ao, det_id, region, obj_id)\n \n             # Read first order spectra\n             for spectrum in loc_object.getAllSpectra():\n@@ -200,6 +201,20 @@ def get_loctab_files(workdir, loc_table):\n \n     return loc_tables\n \n+\n+def createObjectRegionPix(location_table, ao, det_id, region, obj_id):\n+    \"\"\"Create region entry for object according to location table OPT model\n+\n+    \"\"\"\n+\n+    mm_pos = location_table.opt_model.getUndistortedObjectPosition(*ao.getCoords())\n+    pix_pos = location_table.opt_model.det_model.getPixel(mm_pos[0], mm_pos[1], det_id)\n+\n+    region.write(\"image; circle(%.2f,%.2f,1) \" % (pix_pos[0], pix_pos[1]))\n+    region.write(\"# tag={Object pix} text={%s} color=cyan width=2 tag={%s}\\n\" % (obj_id, obj_id))\n+\n+\n+\n def createObjectRegion(loc_object, region, obj_id, color='green'):\n     \"\"\"Create region entry for object\n \n@@ -216,7 +231,7 @@ def createObjectRegion(loc_object, region, obj_id, color='green'):\n     ao = loc_object.getAstronomicalObject()\n     coords = ao.getCoords()\n     region.write(\"circle(%.6fd,%.6fd,1) \" % (coords[0], coords[1]))\n-    region.write(\"# tag={Object} color=%s tag={%s}\\n\" % (color, obj_id))\n+    region.write(\"# tag={Object} text={%s} color=%s tag={%s}\\n\" % (obj_id, color, obj_id))\n \n \n def createSlitRegion(spectrum, region, obj_id, color='red'):\n",
                            "Added WCS according to SIR models",
                            "mfumana",
                            "2023-08-08T09:44:01.000+00:00",
                            "334e8cac8b4c71af12cb745f5f529602c3d70019"
                        ],
                        [
                            "@@ -27,7 +27,6 @@\n \n import os\n import json\n-import numpy\n import shutil\n import tempfile\n import argparse\n@@ -35,12 +34,12 @@ import argparse\n import ElementsKernel.Logging as log\n \n from SIR_InstrumentModels.DetectorModel import DetectorModel\n-from SIR_InstrumentModels.GrismModel import GrismModel\n from SIR_Utilities.Mdb import Mdb\n \n from SIR_ToolsUtilities.FileUtils import get_aux_dir\n from SIR_SpectraLocation.DpdLocationTable import DpdLocationTable\n from SIR_Catalogs.GenericCatalog import define_catalog_inputs, define_catalog_parameters, loadCatalog\n+from ST_DataModelBindings.dpd.sir import scienceframe_stub\n \n \n def defineSpecificProgramOptions():\n@@ -71,6 +70,9 @@ def defineSpecificProgramOptions():\n                         help='Missiong DataBase file')\n     parser.add_argument('--aux_dir', type=str, required=False, default=None,\n                         help='The output directory for region files')\n+    parser.add_argument('--sci_frame', type=str, required=False, default=None,\n+                        help='If provided, open DS9 with region files')\n+        \n \n     return parser\n \n@@ -159,7 +161,7 @@ def locateSpectra(args):\n             createObjectRegion(loc_object, region, obj_id, args.object_color)\n \n             # Read first order spectra\n-            for spectrum in loc_object.getAllSpectra():#ByOrder(GrismModel.Order_1):\n+            for spectrum in loc_object.getAllSpectra():\n                 if DetectorModel.isValidDetector(spectrum.getDetectorNumber()):\n                     createSlitRegion(spectrum, region, obj_id, args.slit_color)\n                     createSpectrumRegion(spectrum, region, obj_id, wstart, wend, args.spectrum_color)\n@@ -181,6 +183,9 @@ def locateSpectra(args):\n \n     logger.info(\"Done\")\n \n+    if args.sci_frame is not None:\n+        show(args.workdir, args.sci_frame, regions)\n+\n \n def get_loctab_files(workdir, loc_table):\n     loc_tables = {}\n@@ -266,3 +271,25 @@ def createSpectrumRegion(spectrum, region, obj_id, wstart, wend, color='green'):\n     region.write(f\"image;polygon {pix1[0]+1} {pix1[1]+1-0.5} {pix2[0]+1} {pix2[1]+1-0.5} {pix3[0]+1} {pix3[1]+1+0.5} {pix4[0]+1} {pix4[1]+1+0.5}\")\n     region.write(\"# tag={Order %d} tag={%s} move=1 select=1 highlite=0 color=%s\\n\" % (spectrum.getOrder(), obj_id, color))\n \n+\n+def show(workdir, xml, regions):\n+    \n+    # load the XML\n+    with open(os.path.join(workdir, xml)) as xml_file:\n+        xml_text = xml_file.read()\n+    sci_frame = scienceframe_stub.CreateFromDocument(xml_text)\n+\n+    # get the MEF name\n+    fitsfile = str(os.path.join(workdir, 'data', sci_frame.Data.DataStorage.DataContainer.FileName))    \n+    \n+    cmd = 'ds9 -zscale'\n+    for item in regions:\n+        obs_id, dither, det_id = item\n+        regfile = str(os.path.join(workdir, 'aux', f'SIR_LocateSpectra_{obs_id}_{dither}_{det_id}.reg'))\n+        line = f' {fitsfile}[DET{det_id}.SCI] -region load {regfile}'\n+        cmd+=line\n+    cmd+='&'\n+\n+    os.system(cmd)\n+    \n+    \n\\ No newline at end of file\n",
                            "Added show flag",
                            "mfumana",
                            "2023-07-25T14:55:16.000+00:00",
                            "ffe63ff9ace60b912e48980e27293b0eab03bd3d"
                        ],
                        [
                            "@@ -263,6 +263,6 @@ def createSpectrumRegion(spectrum, region, obj_id, wstart, wend, color='green'):\n     pix2 = spectrum.computePosition(wend, 0)\n     pix3 = spectrum.computePosition(wend, lpos)\n     pix4 = spectrum.computePosition(wstart, lpos)\n-    region.write(f\"image;polygon {pix1[0]+1} {pix1[1]+1} {pix2[0]+1} {pix2[1]+1} {pix3[0]+1} {pix3[1]+1} {pix4[0]+1} {pix4[1]+1}\")\n-    region.write(\"# tag={Order %d} tag={%s} move=1 color=%s\\n\" % (spectrum.getOrder(), obj_id, color))\n+    region.write(f\"image;polygon {pix1[0]+1} {pix1[1]+1-0.5} {pix2[0]+1} {pix2[1]+1-0.5} {pix3[0]+1} {pix3[1]+1+0.5} {pix4[0]+1} {pix4[1]+1+0.5}\")\n+    region.write(\"# tag={Order %d} tag={%s} move=1 select=1 highlite=0 color=%s\\n\" % (spectrum.getOrder(), obj_id, color))\n \n",
                            "Adjusted aperture size in created regions",
                            "mfumana",
                            "2023-07-25T13:31:02.000+00:00",
                            "fe8631a0e685cd0675605f2ebae3ae8186d20b93"
                        ],
                        [
                            "@@ -59,8 +59,6 @@ def defineSpecificProgramOptions():\n                         help='The root working directory where the data is located')\n     parser.add_argument('--loc_table', type=str, required=True,\n                         help='The input location table to check')\n-    parser.add_argument('--detector', type=int, required=False, default=0,\n-                        help='Detector number (default=all)')\n     parser.add_argument('--object_color', type=str, dest='object_color',  # default='green',\n                         help='Color for object positions')\n     parser.add_argument('--slit_color', type=str, dest='slit_color',  # default='red',\n@@ -88,17 +86,6 @@ def mainMethod(args):\n     locateSpectra(args)\n \n \n-def _getDetectorList(detector):\n-    \"\"\"Parse detector and create detector list\n-    \"\"\"\n-    if hasattr(detector, '__iter__'):\n-        return detector\n-    elif DetectorModel.isOnDetector(detector) is False:\n-        return DetectorModel.getDetectorRange()\n-    else:\n-        return [detector, ]\n-\n-\n def locateSpectra(args):\n     \"\"\"Read the LocationTable a create ds9 region for the selected detectors\n \n@@ -122,8 +109,6 @@ def locateSpectra(args):\n     else:\n         catalog = None\n \n-    detector_list = _getDetectorList(args.detector)\n-\n     regions = {}\n     if args.aux_dir is None:\n         aux_dir = get_aux_dir(args.workdir)\n@@ -135,17 +120,16 @@ def locateSpectra(args):\n \n     table_files = get_loctab_files(args.workdir, args.loc_table)\n \n-    for det_num in detector_list:\n-        logger.info(\"Processing detector %s\" % DetectorModel.getDetectorID(det_num))\n+    for det_id in DetectorModel.getDetectorIDRange():\n+        logger.info(f\"Processing detector {det_id}\")\n \n         # Location LocationTable for the current detector\n-        if det_num not in table_files:\n-            logger.warning(f\"Missing location table for detector: {DetectorModel.getDetectorID(det_num)}\")\n+        if det_id not in table_files:\n+            logger.warning(f\"Missing location table for detector: {det_id}\")\n             continue\n \n-        location_table = table_files[det_num]\n-        #location_tables = DpdLocationTable.load(args.workdir, table_files[det_num])\n-\n+        location_table = table_files[det_id]\n+        \n         if catalog is not None:\n             catalog_ids = catalog.getObjectsID(location_table.getIds())\n         else:\n@@ -159,7 +143,6 @@ def locateSpectra(args):\n             wend = 19000.\n \n         # Open output file\n-        det_id = DetectorModel.getDetectorID(det_num)\n         obs_id = location_table.getObservationID()\n         dither = f\"{location_table.getGWAPositionName()}_{location_table.getGWATilt()}\"\n         if (obs_id, dither, det_id) in regions:\n@@ -181,8 +164,8 @@ def locateSpectra(args):\n                     createSlitRegion(spectrum, region, obj_id, args.slit_color)\n                     createSpectrumRegion(spectrum, region, obj_id, wstart, wend, args.spectrum_color)\n \n-    for det_num in table_files:\n-        table_files[det_num].close()\n+    for det_id in table_files:\n+        table_files[det_id].close()\n \n \n     for item in regions:\n@@ -206,9 +189,9 @@ def get_loctab_files(workdir, loc_table):\n \n     for _file in files:\n         lt = DpdLocationTable.open(workdir, _file)\n-        det_num = lt[0].getDetectorNumber()\n+        det_id = lt[0].getDetectorID()\n         #lt[0].close()\n-        loc_tables[det_num] = lt[0]#_file\n+        loc_tables[det_id] = lt[0]#_file\n \n     return loc_tables\n \n",
                            "Removed detector number from LocateSpectra check (ID is used)",
                            "mfumana",
                            "2023-07-24T16:22:13.000+00:00",
                            "a626995aedd77eb646504d205ee18e6940f76f6c"
                        ]
                    ],
                    "SIR_FileHandling/python/SIR_FileHandling/CreateSpectraFits.py": [
                        [
                            "@@ -160,7 +160,7 @@ def createSpectraFits(workdir, spectra, id_list, decont=None):\n \n             #Dump file\n             outfile = os.path.join(out_dir, '%s_%s.fits' % (spec_id, detector))\n-            hdulist.writeto(outfile, clobber=True)\n+            hdulist.writeto(outfile, overwrite=True)\n \n             logger.info(\"Creating file %s\" % outfile)\n \n",
                            "Replaced old astropy call",
                            "mfumana",
                            "2023-08-08T09:43:44.000+00:00",
                            "33b1c6a35c5506a5988b257240b896feeb9c14da"
                        ]
                    ],
                    "SIR_VisualCheck/conf/SIR_LocateSpectra.conf": [
                        [
                            "@@ -1,5 +1,3 @@\n-detector = 0\n-\n object_color = blue\n slit_color = red\n spectrum_color = green\n",
                            "Remove no more existing parameter",
                            "mfumana",
                            "2023-07-25T13:30:31.000+00:00",
                            "88f8f89ef2afcd69c0041dbf187f11df7aad6bc0"
                        ]
                    ],
                    "SIR_VisualCheck/python/SIR_VisualCheck/LocateObjects.py": [
                        [
                            "@@ -79,7 +79,7 @@ def mainMethod(args):\n     catalog = loadCatalog(mdb, args.workdir, tu_cat=args.tu_cat, mer_cat=args.mer_cat)\n     catalog.select(args.catalog_selection, args.objects_list, workdir=args.workdir)    \n \n-    #locateWCSObjects(catalog, args.workdir)\n+    locateWCSObjects(catalog, args.workdir)\n \n     if args.opt_model is not None:\n         if args.sci_frame is None:\n",
                            "Restored global WCS region file",
                            "mfumana",
                            "2023-07-24T14:17:41.000+00:00",
                            "db3c6bf827bfb8fad5cb47e914de394348666481"
                        ],
                        [
                            "@@ -26,15 +26,16 @@\n \"\"\"This program retrieve stars and galaxies position from the catatlogs and creates a ds9 region file\"\"\"\n \n import os\n-import numpy\n import argparse\n \n import ElementsKernel.Logging as log\n \n from SIR_Utilities.Mdb import Mdb\n-from SIR_Catalogs.GenericCatalog import define_catalog_inputs, define_catalog_parameters, loadCatalog\n+from SIR_Utilities.DpdScienceFrame import DpdScienceFrame\n \n-from SIR_Catalogs.AstronomicalObject import AstronomicalObject\n+from SIR_Catalogs.GenericCatalog import define_catalog_inputs, define_catalog_parameters, loadCatalog\n+from SIR_InstrumentModels.OpticalModel import OpticalModel\n+from SIR_InstrumentModels.DetectorModel import DetectorModel\n \n from SIR_ToolsUtilities.FileUtils import get_aux_dir\n \n@@ -57,12 +58,11 @@ def defineSpecificProgramOptions():\n                         help='The root working directory where the data is located')\n     parser.add_argument('--mdb', type=str, required=True,\n                         help='Euclid MDB')\n-    parser.add_argument('--zero_order_low_mag', type=float, dest='zero_order_low_mag', default=numpy.inf,\n-                        help='Lower magnitude limit of 0th orders used in pointing refinement')\n-    parser.add_argument('--zero_order_high_mag', type=float, dest='zero_order_high_mag', default=-numpy.inf,\n-                        help='Upper magnitude limit of 0th orders used in pointing refinement')\n-    parser.add_argument('--mag_band', type=str, dest='mag_band', #default='J',\n-                        help='Magnitude band of 0th orders used for refinement')\n+    parser.add_argument('--opt_model', type=str, required=False, default=None,\n+                        help='Optical model')    \n+    parser.add_argument('--sci_frame', type=str, required=False, default=None,\n+                        help='Frame used to center the OPT model')\n+        \n     return parser\n \n \n@@ -74,34 +74,52 @@ def mainMethod(args):\n     See the ElementsProgram documentation for more details.\n     \"\"\"\n \n-    mdb, _ = Mdb.load(args.workdir, args.mdb)\n+    mdb = Mdb.load(args.workdir, args.mdb)\n+\n+    catalog = loadCatalog(mdb, args.workdir, tu_cat=args.tu_cat, mer_cat=args.mer_cat)\n+    catalog.select(args.catalog_selection, args.objects_list, workdir=args.workdir)    \n+\n+    #locateWCSObjects(catalog, args.workdir)\n+\n+    if args.opt_model is not None:\n+        if args.sci_frame is None:\n+            raise Exception(\"Sci frame is required if OPT model is provided\")\n+        \n+        nisp_exp = DpdScienceFrame.load(args.workdir, args.sci_frame)\n+        \n+        exp_header = nisp_exp.getMetadata()\n+        gwa_tilt = exp_header.getAsInt('GWA_TILT')\n+        gwa_pos = exp_header.getAsString('GWA_POS')\n+\n+        # creating the models\n+        det_model = DetectorModel(gwa_pos, mdb, rotate=True)\n \n-    catalog = loadCatalog(mdb, args)\n-    catalog.select(args.catalog_selection, args.objects_list)    \n+        opt_model = OpticalModel.load(os.path.join(args.workdir, args.opt_model), det_model)\n+        opt_model.set_gwa_tilt(gwa_tilt=gwa_tilt)\n+        opt_model.setPointingFromImage(nisp_exp)        \n+        \n+        auxdir = get_aux_dir(args.workdir)\n+        locateOPTObjects(catalog, opt_model, auxdir)\n \n-    locateObjects(catalog, args)\n \n \n-def locateObjects(catalog, args):\n+def locateWCSObjects(catalog, workdir):\n     \"\"\"Read the stars and the galaxies catalogs and create ds9 region file\n \n     \"\"\"\n \n     #Create the region file\n-    outfile = os.path.join(get_aux_dir(args.workdir), \"SIR_LocateObjects.reg\")\n-    region = open(outfile, \"w\")\n-\n-    #Fill the region file\n-    _locateStars(catalog, region, args.mag_band, args.zero_order_high_mag, args.zero_order_low_mag)\n+    outfile = os.path.join(get_aux_dir(workdir), \"SIR_LocateObjects.reg\")\n+    with open(outfile, \"w\") as region:\n \n-    _locateGalaxies(catalog, region, args.mag_band, args.zero_order_high_mag, args.zero_order_low_mag)\n+        #Fill the region file\n+        _locateWCSStars(catalog, region)\n+        _locateWCSGalaxies(catalog, region)\n \n-    #Save the region file\n-    region.close()\n     logger.info(\"Created file %s\" % outfile)\n \n \n-def _locateStars(catalog, region, mag_band, zero_order_high_mag, zero_order_low_mag):\n+def _locateWCSStars(catalog, region):\n     \"\"\"Fill region file with stars info\n \n     @param stars_table: HDU Instance of table containg the stars catalog\n@@ -116,28 +134,16 @@ def _locateStars(catalog, region, mag_band, zero_order_high_mag, zero_order_low_\n     for item in catalog:\n         obj = catalog.createAstronomicalObject(item)\n         \n-        if obj.getType() == AstronomicalObject.Galaxy:\n+        if obj.isGalaxy():\n             continue\n \n-        if obj.hasMagnitude(mag_band) == False:\n-            continue\n-\n-        obj_mag = obj.getMagnitude(mag_band)\n-        if obj_mag.hasValue() == False:\n-            continue\n-\n-        mag_value = obj_mag.getValue()\n-        if mag_value is None:\n-            continue\n-\n-        if zero_order_high_mag <= mag_value < zero_order_low_mag:\n-            ra, dec = obj.getCoords()\n-            region.write(\"circle(%.6fd,%.6fd,1) \" % (ra,dec))\n-            obj_id = obj.getId()\n-            region.write(\"# tag={Object} tag={%s} text={%s} color=red\\n\" % (obj_id, obj_id))\n+        ra, dec = obj.getCoords()\n+        region.write(\"circle(%.6fd,%.6fd,2) \" % (ra,dec))\n+        obj_id = obj.getId()\n+        region.write(\"# tag={Object} tag={%s} text={%s} color=red\\n\" % (obj_id, obj_id))\n \n \n-def _locateGalaxies(catalog, region, mag_band, zero_order_high_mag, zero_order_low_mag):\n+def _locateWCSGalaxies(catalog, region):\n     \"\"\"Fill region file with galaxies info\n \n     @param table: HDU Instance of table containg the galaxies catalog\n@@ -149,11 +155,45 @@ def _locateGalaxies(catalog, region, mag_band, zero_order_high_mag, zero_order_l\n \n     for item in catalog:\n         obj = catalog.createAstronomicalObject(item)\n-        if obj.getType() == AstronomicalObject.Star:\n+        if obj.isStar():\n             continue\n \n         ra, dec = obj.getCoords()\n-        region.write(\"circle(%.6fd,%.6fd,1) \" % (ra, dec))\n+        region.write(\"circle(%.6fd,%.6fd,2) \" % (ra, dec))\n         obj_id = obj.getId()\n         region.write(\"# tag={Object} tag={%s} text={%s} color=green\\n\" % (obj_id, obj_id))\n \n+\n+\n+def locateOPTObjects(catalog, opt_model, auxdir):\n+    \"\"\"Read the stars and the galaxies catalogs and create ds9 region file\n+\n+    \"\"\"\n+\n+    #Create the region file\n+    det_model = opt_model.det_model\n+    \n+    \n+    outfiles = {}\n+    for det_id in DetectorModel.getDetectorIDRange():\n+        outfiles[det_id] = open(os.path.join(auxdir, f\"SIR_LocateObjects_{det_id}.reg\"), 'w')\n+    \n+    for item in catalog:\n+        ra, dec = float(item['RA']), float(item['DEC'])\n+        \n+        mm_pos = opt_model.getReferencePosition(ra, dec, order=1)\n+        pix_pos = det_model.getPixel(mm_pos)\n+    \n+        if det_model.isOnDetector(pix_pos) is False:\n+            continue\n+        \n+        _id = item['ID']\n+        \n+        det_id = det_model.getDetectorID(pix_pos)\n+        outfiles[det_id].write(f\"circle({ra:.8f}d,{dec:.8f}d,1) #text={{{_id}}} color=blue\\n\")\n+        outfiles[det_id].write(f\"image;circle({pix_pos[0]+1}, {pix_pos[1]+1},2)#color=cyan \")\n+        outfiles[det_id].write(f\"tag={{{_id}}} text={{{_id}}}\\n\")\n+    \n+    for det_id in DetectorModel.getDetectorIDRange():\n+        logger.info(f\"Saving file {outfiles[det_id].name}\")\n+        outfiles[det_id].close()\n\\ No newline at end of file\n",
                            "Merge branch 'eden-3.0' into 'develop'",
                            "Marco Fumana",
                            "2023-07-24T14:11:40.000+00:00",
                            "24bcc3419c3e5d6a9ff7e495bb004b8c7da85db1"
                        ],
                        [
                            "@@ -26,15 +26,16 @@\n \"\"\"This program retrieve stars and galaxies position from the catatlogs and creates a ds9 region file\"\"\"\n \n import os\n-import numpy\n import argparse\n \n import ElementsKernel.Logging as log\n \n from SIR_Utilities.Mdb import Mdb\n-from SIR_Catalogs.GenericCatalog import define_catalog_inputs, define_catalog_parameters, loadCatalog\n+from SIR_Utilities.DpdScienceFrame import DpdScienceFrame\n \n-from SIR_Catalogs.AstronomicalObject import AstronomicalObject\n+from SIR_Catalogs.GenericCatalog import define_catalog_inputs, define_catalog_parameters, loadCatalog\n+from SIR_InstrumentModels.OpticalModel import OpticalModel\n+from SIR_InstrumentModels.DetectorModel import DetectorModel\n \n from SIR_ToolsUtilities.FileUtils import get_aux_dir\n \n@@ -57,12 +58,11 @@ def defineSpecificProgramOptions():\n                         help='The root working directory where the data is located')\n     parser.add_argument('--mdb', type=str, required=True,\n                         help='Euclid MDB')\n-    parser.add_argument('--zero_order_low_mag', type=float, dest='zero_order_low_mag', default=numpy.inf,\n-                        help='Lower magnitude limit of 0th orders used in pointing refinement')\n-    parser.add_argument('--zero_order_high_mag', type=float, dest='zero_order_high_mag', default=-numpy.inf,\n-                        help='Upper magnitude limit of 0th orders used in pointing refinement')\n-    parser.add_argument('--mag_band', type=str, dest='mag_band', #default='J',\n-                        help='Magnitude band of 0th orders used for refinement')\n+    parser.add_argument('--opt_model', type=str, required=False, default=None,\n+                        help='Optical model')    \n+    parser.add_argument('--sci_frame', type=str, required=False, default=None,\n+                        help='Frame used to center the OPT model')\n+        \n     return parser\n \n \n@@ -74,34 +74,52 @@ def mainMethod(args):\n     See the ElementsProgram documentation for more details.\n     \"\"\"\n \n-    mdb, _ = Mdb.load(args.workdir, args.mdb)\n+    mdb = Mdb.load(args.workdir, args.mdb)\n+\n+    catalog = loadCatalog(mdb, args.workdir, tu_cat=args.tu_cat, mer_cat=args.mer_cat)\n+    catalog.select(args.catalog_selection, args.objects_list, workdir=args.workdir)    \n+\n+    #locateWCSObjects(catalog, args.workdir)\n+\n+    if args.opt_model is not None:\n+        if args.sci_frame is None:\n+            raise Exception(\"Sci frame is required if OPT model is provided\")\n+        \n+        nisp_exp = DpdScienceFrame.load(args.workdir, args.sci_frame)\n+        \n+        exp_header = nisp_exp.getMetadata()\n+        gwa_tilt = exp_header.getAsInt('GWA_TILT')\n+        gwa_pos = exp_header.getAsString('GWA_POS')\n+\n+        # creating the models\n+        det_model = DetectorModel(gwa_pos, mdb, rotate=True)\n \n-    catalog = loadCatalog(mdb, args)\n-    catalog.select(args.catalog_selection, args.objects_list)    \n+        opt_model = OpticalModel.load(os.path.join(args.workdir, args.opt_model), det_model)\n+        opt_model.set_gwa_tilt(gwa_tilt=gwa_tilt)\n+        opt_model.setPointingFromImage(nisp_exp)        \n+        \n+        auxdir = get_aux_dir(args.workdir)\n+        locateOPTObjects(catalog, opt_model, auxdir)\n \n-    locateObjects(catalog, args)\n \n \n-def locateObjects(catalog, args):\n+def locateWCSObjects(catalog, workdir):\n     \"\"\"Read the stars and the galaxies catalogs and create ds9 region file\n \n     \"\"\"\n \n     #Create the region file\n-    outfile = os.path.join(get_aux_dir(args.workdir), \"SIR_LocateObjects.reg\")\n-    region = open(outfile, \"w\")\n-\n-    #Fill the region file\n-    _locateStars(catalog, region, args.mag_band, args.zero_order_high_mag, args.zero_order_low_mag)\n+    outfile = os.path.join(get_aux_dir(workdir), \"SIR_LocateObjects.reg\")\n+    with open(outfile, \"w\") as region:\n \n-    _locateGalaxies(catalog, region, args.mag_band, args.zero_order_high_mag, args.zero_order_low_mag)\n+        #Fill the region file\n+        _locateWCSStars(catalog, region)\n+        _locateWCSGalaxies(catalog, region)\n \n-    #Save the region file\n-    region.close()\n     logger.info(\"Created file %s\" % outfile)\n \n \n-def _locateStars(catalog, region, mag_band, zero_order_high_mag, zero_order_low_mag):\n+def _locateWCSStars(catalog, region):\n     \"\"\"Fill region file with stars info\n \n     @param stars_table: HDU Instance of table containg the stars catalog\n@@ -116,28 +134,16 @@ def _locateStars(catalog, region, mag_band, zero_order_high_mag, zero_order_low_\n     for item in catalog:\n         obj = catalog.createAstronomicalObject(item)\n         \n-        if obj.getType() == AstronomicalObject.Galaxy:\n+        if obj.isGalaxy():\n             continue\n \n-        if obj.hasMagnitude(mag_band) == False:\n-            continue\n-\n-        obj_mag = obj.getMagnitude(mag_band)\n-        if obj_mag.hasValue() == False:\n-            continue\n-\n-        mag_value = obj_mag.getValue()\n-        if mag_value is None:\n-            continue\n-\n-        if zero_order_high_mag <= mag_value < zero_order_low_mag:\n-            ra, dec = obj.getCoords()\n-            region.write(\"circle(%.6fd,%.6fd,1) \" % (ra,dec))\n-            obj_id = obj.getId()\n-            region.write(\"# tag={Object} tag={%s} text={%s} color=red\\n\" % (obj_id, obj_id))\n+        ra, dec = obj.getCoords()\n+        region.write(\"circle(%.6fd,%.6fd,2) \" % (ra,dec))\n+        obj_id = obj.getId()\n+        region.write(\"# tag={Object} tag={%s} text={%s} color=red\\n\" % (obj_id, obj_id))\n \n \n-def _locateGalaxies(catalog, region, mag_band, zero_order_high_mag, zero_order_low_mag):\n+def _locateWCSGalaxies(catalog, region):\n     \"\"\"Fill region file with galaxies info\n \n     @param table: HDU Instance of table containg the galaxies catalog\n@@ -149,11 +155,45 @@ def _locateGalaxies(catalog, region, mag_band, zero_order_high_mag, zero_order_l\n \n     for item in catalog:\n         obj = catalog.createAstronomicalObject(item)\n-        if obj.getType() == AstronomicalObject.Star:\n+        if obj.isStar():\n             continue\n \n         ra, dec = obj.getCoords()\n-        region.write(\"circle(%.6fd,%.6fd,1) \" % (ra, dec))\n+        region.write(\"circle(%.6fd,%.6fd,2) \" % (ra, dec))\n         obj_id = obj.getId()\n         region.write(\"# tag={Object} tag={%s} text={%s} color=green\\n\" % (obj_id, obj_id))\n \n+\n+\n+def locateOPTObjects(catalog, opt_model, auxdir):\n+    \"\"\"Read the stars and the galaxies catalogs and create ds9 region file\n+\n+    \"\"\"\n+\n+    #Create the region file\n+    det_model = opt_model.det_model\n+    \n+    \n+    outfiles = {}\n+    for det_id in DetectorModel.getDetectorIDRange():\n+        outfiles[det_id] = open(os.path.join(auxdir, f\"SIR_LocateObjects_{det_id}.reg\"), 'w')\n+    \n+    for item in catalog:\n+        ra, dec = float(item['RA']), float(item['DEC'])\n+        \n+        mm_pos = opt_model.getReferencePosition(ra, dec, order=1)\n+        pix_pos = det_model.getPixel(mm_pos)\n+    \n+        if det_model.isOnDetector(pix_pos) is False:\n+            continue\n+        \n+        _id = item['ID']\n+        \n+        det_id = det_model.getDetectorID(pix_pos)\n+        outfiles[det_id].write(f\"circle({ra:.8f}d,{dec:.8f}d,1) #text={{{_id}}} color=blue\\n\")\n+        outfiles[det_id].write(f\"image;circle({pix_pos[0]+1}, {pix_pos[1]+1},2)#color=cyan \")\n+        outfiles[det_id].write(f\"tag={{{_id}}} text={{{_id}}}\\n\")\n+    \n+    for det_id in DetectorModel.getDetectorIDRange():\n+        logger.info(f\"Saving file {outfiles[det_id].name}\")\n+        outfiles[det_id].close()\n\\ No newline at end of file\n",
                            "Updated LocateObject to work with the new Pipeline 4.0",
                            "Marco Fumana",
                            "2023-07-24T14:11:40.000+00:00",
                            "e505ecd6c2e0ea26ed4020949f998ddf0ca19dee"
                        ]
                    ],
                    "CMakeLists.txt": [
                        [
                            "@@ -7,7 +7,7 @@ find_package(ElementsProject)\n #---------------------------------------------------------------\n \n # Declare project name and version\n-elements_project(SIR_Tools 3.1\n+elements_project(SIR_Tools 4.0\n                  USE\n-                 SIR_Pipeline 3.1)\n+                 SIR_Pipeline 4.0)\n \n",
                            "Merge branch 'eden-3.0' into 'develop'",
                            "Marco Fumana",
                            "2023-07-24T14:11:40.000+00:00",
                            "24bcc3419c3e5d6a9ff7e495bb004b8c7da85db1"
                        ]
                    ],
                    "SIR_VisualCheck/conf/SIR_LocateObjects.conf": [
                        [
                            "@@ -1,2 +1,2 @@\n-mag_band=J\n+\n \n",
                            "Merge branch 'eden-3.0' into 'develop'",
                            "Marco Fumana",
                            "2023-07-24T14:11:40.000+00:00",
                            "24bcc3419c3e5d6a9ff7e495bb004b8c7da85db1"
                        ]
                    ]
                },
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": [
                    {
                        "name": "0.4.1",
                        "created_at": "2018-03-29T13:37:27.000+02:00",
                        "author_name": "mfumana"
                    }
                ]
            },
            "PF-SIR/SIR_Pipeline": {
                "start date": "2023-06-09 09:00",
                "end date": "2023-08-16 15:00",
                "start tag": "> 3.2.0",
                "end tag": "> 4.0.0",
                "count_files_modified": "124",
                "modifications_by_file": {
                    "CMakeLists.txt": [
                        [
                            "@@ -6,7 +6,7 @@ find_package(ElementsProject)\n #---------------------------------------------------------------\n \n # Declare project name and version\n-elements_project(SIR_Pipeline 4.0\n+elements_project(SIR_Pipeline 4.1\n                  USE\n                  EL_ImageLib 2.3.0\n                  EL_SpectrumLib 2.6.0)\n",
                            "bump to 4.1",
                            "Tava",
                            "2023-08-11T15:34:13.000+02:00",
                            "009a52cbdd620177cefc04639963ce4d99bc34c3"
                        ],
                        [
                            "@@ -7,7 +7,7 @@ find_package(ElementsProject)\n \n # Declare project name and version\n elements_project(SIR_Pipeline 4.0\n-                 USE \n-                 EL_ImageLib 2.1.0\n-                 EL_SpectrumLib 2.4.1)\n+                 USE\n+                 EL_ImageLib 2.3.0\n+                 EL_SpectrumLib 2.6.0)\n \n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ],
                        [
                            "@@ -7,7 +7,7 @@ find_package(ElementsProject)\n \n # Declare project name and version\n elements_project(SIR_Pipeline 4.0\n-                 USE \n-                 EL_ImageLib 2.1.0\n-                 EL_SpectrumLib 2.4.1)\n+                 USE\n+                 EL_ImageLib 2.3.0\n+                 EL_SpectrumLib 2.6.0)\n \n",
                            "Updated pipeline to DM9.2",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "604412eacacc8163e4783496ac3e7b93de8299e8"
                        ]
                    ],
                    ".gitlab-ci.yml": [
                        [
                            "@@ -10,7 +10,7 @@ stages:\n   - test\n \n before_script:\n-  - eval $(/usr/bin/lodeen_env EDEN-3.1)\n+  - source /cvmfs/euclid-dev.in2p3.fr/EDEN-3.1/bin/activate\n   - git clean -ffdx  --exclude=\".status/\" \n \n \n",
                            "Merge branch 'decon_thumbs_test' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-08-10T14:34:34.000+00:00",
                            "8f6c269ccbaf09ad1adcbe76810e1a69c27eb444"
                        ],
                        [
                            "@@ -10,7 +10,7 @@ stages:\n   - test\n \n before_script:\n-  - eval $(/usr/bin/lodeen_env EDEN-3.0)\n+  - eval $(/usr/bin/lodeen_env EDEN-3.1)\n   - git clean -ffdx  --exclude=\".status/\" \n \n \n",
                            "Merge branch 'CI_fix' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T11:55:09.000+00:00",
                            "3d53954983191f229f885581a0b9ff94f216a76f"
                        ],
                        [
                            "@@ -10,7 +10,7 @@ stages:\n   - test\n \n before_script:\n-  - eval $(/usr/bin/lodeen_env EDEN-3.0)\n+  - eval $(/usr/bin/lodeen_env EDEN-3.1)\n   - git clean -ffdx  --exclude=\".status/\" \n \n \n",
                            "Updated the environment to 3.1 for CI",
                            "Marco Fumana",
                            "2023-06-30T11:55:09.000+00:00",
                            "efe8599b7f28cb8f47bed4a4bcc1462a37487ab4"
                        ]
                    ],
                    "SIR_SpectraDecontamination/python/SIR_SpectraDecontamination/DecontaminatedSpectrum.py": [
                        [
                            "@@ -94,7 +94,7 @@ class DecontaminatedSpectrum(SpectrumContainer):\n \n                 n_contaminants = len(spectrum_cutout.contaminants)\n \n-                contaminants = np.zeros((n_contaminants,), dtype=[('id', np.int64), ('order', np.uint8)])\n+                contaminants = np.zeros((n_contaminants,), dtype=[('id', np.int64), ('order', np.int8)])\n \n                 for i, contam in enumerate(spectrum_cutout.contaminants):\n                     contaminants[i]['id'] = contam.object_id\n@@ -227,7 +227,7 @@ class DecontaminatedSpectrum(SpectrumContainer):\n     @property\n     def contaminants(self) -> np.ndarray:\n         \"\"\"\n-        A table listing contaminants, with the columns (id, order) [NumPy ndarray, (int64, uint8)].\n+        A table listing contaminants, with the columns (id, order) [NumPy ndarray, (int64, int8)].\n         \"\"\"\n         if self._contaminants is None and self._h5object is not None:\n             self._contaminants = np.array(self._h5object['contaminants'])\n",
                            "Merge branch 'decon_thumbs_test' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-08-10T14:34:34.000+00:00",
                            "8f6c269ccbaf09ad1adcbe76810e1a69c27eb444"
                        ],
                        [
                            "@@ -23,7 +23,10 @@\n Contains the class,  `DecontaminatedSpectrum`, which stores the key output quantity of the SpectraDecontamination\n Module.\"\"\"\n \n+from typing import Union\n+\n import numpy as np\n+from shapely.geometry import Point, Polygon\n \n from SIR_InstrumentModels.DetectorModel import DetectorModel\n from SIR_SpectraLocation.H5LocationTable import H5LocationTable\n@@ -49,13 +52,17 @@ class DecontaminatedSpectrum(SpectrumContainer):\n                  '_contaminants',\n                  '_collection',\n                  '_location',\n+                 '_boundary',\n                  '_y_mag',\n                  '_j_mag',\n                  '_h_mag',\n                  '_y_flux',\n                  '_j_flux',\n                  '_h_flux',\n-                 '_kernel')\n+                 '_kernel',\n+                 '_semimajor',\n+                 '_semiminor',\n+                 '_theta')\n \n     def __init__(self,\n                  collection: 'DecontaminatedSpectraCollection',\n@@ -75,6 +82,10 @@ class DecontaminatedSpectrum(SpectrumContainer):\n         self._contamination = None\n         self._wavelengths = None\n         self._kernel = None\n+        self._semimajor = None\n+        self._semiminor = None\n+        self._theta = None\n+        self._boundary = None\n \n         if spectrum_cutout is not None:\n             xoff, yoff = spectrum_cutout.spec_info.get_offset()\n@@ -101,9 +112,14 @@ class DecontaminatedSpectrum(SpectrumContainer):\n             self.variance = spectrum_cutout.variance\n             self.mask = spectrum_cutout.flags\n             self.kernel = spectrum_cutout.spec_info.const_kernel\n+            if self.kernel is not None:\n+                self.semimajor = spectrum_cutout.spec_info.semimajor\n+                self.semiminor = spectrum_cutout.spec_info.semiminor\n+                self.theta = spectrum_cutout.spec_info.theta\n \n             self.contaminants = contaminants\n             self.location = spectrum_cutout.spec_info.location_spectrum\n+            self._boundary = spectrum_cutout.spec_info.boundary\n             self.y_mag = spectrum_cutout.spec_info.astro_object_info.mag('Y')\n             self.j_mag = spectrum_cutout.spec_info.astro_object_info.mag('J')\n             self.h_mag = spectrum_cutout.spec_info.astro_object_info.mag('H')\n@@ -117,6 +133,7 @@ class DecontaminatedSpectrum(SpectrumContainer):\n             self._mask = None\n             self._contaminants = None\n             self._location = None\n+            self._boundary = None\n             self._y_mag = None\n             self._j_mag = None\n             self._h_mag = None\n@@ -129,11 +146,15 @@ class DecontaminatedSpectrum(SpectrumContainer):\n         self._contamination = None\n         self._wavelengths = None\n         self._kernel = None\n+        self._semimajor = None\n+        self._semiminor = None\n+        self._theta = None\n         self._science = None\n         self._variance = None\n         self._mask = None\n         self._contaminants = None\n         self._location = None\n+        self._boundary = None\n         self._y_mag = None\n         self._j_mag = None\n         self._h_mag = None\n@@ -179,7 +200,7 @@ class DecontaminatedSpectrum(SpectrumContainer):\n         if self._mask is None and self._h5object is not None:\n             mask = np.array(self._h5object['mask'])\n             mask[self.variance == 0] = Flags.VOID\n-            mask[self.variance == 0] = Flags.INVALID\n+            mask[self.variance == np.inf] = Flags.INVALID\n             self._mask = mask\n         return self._mask\n \n@@ -188,7 +209,7 @@ class DecontaminatedSpectrum(SpectrumContainer):\n         Utils.verify_2d_numpy_array(mask)\n         if self._variance is not None:\n             mask[self.variance == 0] = Flags.VOID\n-            mask[self.variance == 0] = Flags.INVALID\n+            mask[self.variance == np.inf] = Flags.INVALID\n         else:\n             raise RuntimeError(\"The variance of this spectrum must be set before the mask can be set.\")\n         self._mask = mask\n@@ -234,6 +255,28 @@ class DecontaminatedSpectrum(SpectrumContainer):\n     def location(self, loc: LocationSpectrum):\n         self._location = loc\n \n+    @property\n+    def boundary(self) -> np.ndarray:\n+        \"\"\"\n+        An array of points [(x1, y1), (x2, y2), ...] around the border of the spectrum, in detector coordinates.\n+        \"\"\"\n+        if self._boundary is None and self._h5object is not None:\n+            self._boundary = np.array(self._h5object['boundary'])\n+        return self._boundary\n+\n+    @boundary.setter\n+    def boundary(self, boundary):\n+        Utils.verify_2d_numpy_array(mask)\n+        self._boundary = boundary\n+\n+    @property\n+    def polygon(self) -> Polygon:\n+        \"\"\"\n+        A Shapely Polygon describing the boundary of the spectrum, in detector coordinates.\n+        \"\"\"\n+        if self.boundary is not None:\n+            return Polygon(self.boundary)\n+\n     @property\n     def y_mag(self) -> float:\n         if self._y_mag is None and self._h5object is not None:\n@@ -348,6 +391,48 @@ class DecontaminatedSpectrum(SpectrumContainer):\n \n         return self._wavelengths\n \n+    @property\n+    def semimajor(self) -> Union[float, None]:\n+        if self._semimajor is None and self._h5object is not None:\n+            try:\n+                kernel = self._h5object['kernel']\n+                self._semimajor = float(kernel.attrs['semimajor'])\n+            except KeyError:\n+                self._semimajor = None\n+        return self._semimajor\n+\n+    @semimajor.setter\n+    def semimajor(self, semimajor):\n+        self._semimajor = semimajor\n+\n+    @property\n+    def semiminor(self) -> Union[float, None]:\n+        if self._semiminor is None and self._h5object is not None:\n+            try:\n+                kernel = self._h5object['kernel']\n+                self._semiminor = float(kernel.attrs['semiminor'])\n+            except KeyError:\n+                self._semiminor = None\n+        return self._semiminor\n+\n+    @semiminor.setter\n+    def semiminor(self, semiminor):\n+        self._semiminor = semiminor\n+\n+    @property\n+    def theta(self) -> Union[float, None]:\n+        if self._theta is None and self._h5object is not None:\n+            try:\n+                kernel = self._h5object['kernel']\n+                self._theta = float(kernel.attrs['theta'])\n+            except KeyError:\n+                self._theta = None\n+        return self._theta\n+\n+    @theta.setter\n+    def theta(self, theta):\n+        self._theta = theta\n+\n     def __str__(self) -> str:\n         string = super().__str__()\n         if 'Uninitialized' not in string:\n@@ -363,6 +448,32 @@ class DecontaminatedSpectrum(SpectrumContainer):\n \n         return string\n \n+    def rasterize_polygon(self, polygon: Polygon) -> np.ndarray:\n+        \"\"\"\n+        Creates a rasterized mask of a polygon: pixels within the polygon are True. False otherwise.\n+\n+        This is useful for displaying which pixels are contaminated by a spectrum: simply provide the polygon\n+        of the contaminating spectrum to see which pixels are contaminated by that spectrum.\n+\n+        Parameters\n+        ---------\n+\n+        polygon: Polygon\n+            A Shapely Polygon object that will be masked. The vertex coordinates should be detector coordinates.\n+\n+        Returns\n+        -------\n+\n+        mask: np.ndarray\n+            An array with the same dimensions as the pixel layers of the spectrum. Pixels are set to True inside\n+            of the polygon, False elsewhere.\n+        \"\"\"\n+        mask = np.zeros(shape=self.science.shape, dtype=bool)\n+        # The polygon is expanded by half of the maximum diameter of a pixel to account for pixels on the edge.\n+        # 0.5 * sqrt(2) is approximately 0.7071\n+        vertices = np.array(polygon.buffer(0.7071, join_style=2).boundary.coords)[:-1]\n+        return Utils.rasterize(mask, self.offset, vertices)\n+\n     def _compute_total_contamination(self):\n         \"\"\"\n         Compute the total contamination for the spectrum\n@@ -418,6 +529,11 @@ class DecontaminatedSpectrum(SpectrumContainer):\n         crv_end = float(location_group['crv_coeffs'].attrs['wavelength_end'])\n         crv.setRange(crv_start, crv_end)\n \n+        detector_model = self._collection.detector_models[(self.dither, self.detector)]\n+\n+        x_pivot = float(location_group.attrs['x_pivot'])\n+        y_pivot = float(location_group.attrs['y_pivot'])\n+\n         loc = LocationSpectrum()\n         loc.setObjectID(self.id)\n         loc.setDetector(DetectorModel.getDetectorName(self.detector))\n@@ -433,5 +549,7 @@ class DecontaminatedSpectrum(SpectrumContainer):\n         loc.setLambdaRefPosition(np.array(reference_position))\n         loc.setGWATilt(gwa_tilt)\n         loc.setExtraTilt(extra_tilt)\n+        loc.setDetectorModel(detector_model)\n+        loc.setPivot(x_pivot, y_pivot)\n \n         return loc\n",
                            "Merge branch 'decontamination-with-new-tables' into 'develop'",
                            "Marco Fumana",
                            "2023-07-12T15:52:55.000+00:00",
                            "6ac38f0c2d5531e352ba378b25b5531fac1193dc"
                        ],
                        [
                            "@@ -23,7 +23,10 @@\n Contains the class,  `DecontaminatedSpectrum`, which stores the key output quantity of the SpectraDecontamination\n Module.\"\"\"\n \n+from typing import Union\n+\n import numpy as np\n+from shapely.geometry import Point, Polygon\n \n from SIR_InstrumentModels.DetectorModel import DetectorModel\n from SIR_SpectraLocation.H5LocationTable import H5LocationTable\n@@ -49,13 +52,17 @@ class DecontaminatedSpectrum(SpectrumContainer):\n                  '_contaminants',\n                  '_collection',\n                  '_location',\n+                 '_boundary',\n                  '_y_mag',\n                  '_j_mag',\n                  '_h_mag',\n                  '_y_flux',\n                  '_j_flux',\n                  '_h_flux',\n-                 '_kernel')\n+                 '_kernel',\n+                 '_semimajor',\n+                 '_semiminor',\n+                 '_theta')\n \n     def __init__(self,\n                  collection: 'DecontaminatedSpectraCollection',\n@@ -75,6 +82,10 @@ class DecontaminatedSpectrum(SpectrumContainer):\n         self._contamination = None\n         self._wavelengths = None\n         self._kernel = None\n+        self._semimajor = None\n+        self._semiminor = None\n+        self._theta = None\n+        self._boundary = None\n \n         if spectrum_cutout is not None:\n             xoff, yoff = spectrum_cutout.spec_info.get_offset()\n@@ -101,9 +112,14 @@ class DecontaminatedSpectrum(SpectrumContainer):\n             self.variance = spectrum_cutout.variance\n             self.mask = spectrum_cutout.flags\n             self.kernel = spectrum_cutout.spec_info.const_kernel\n+            if self.kernel is not None:\n+                self.semimajor = spectrum_cutout.spec_info.semimajor\n+                self.semiminor = spectrum_cutout.spec_info.semiminor\n+                self.theta = spectrum_cutout.spec_info.theta\n \n             self.contaminants = contaminants\n             self.location = spectrum_cutout.spec_info.location_spectrum\n+            self._boundary = spectrum_cutout.spec_info.boundary\n             self.y_mag = spectrum_cutout.spec_info.astro_object_info.mag('Y')\n             self.j_mag = spectrum_cutout.spec_info.astro_object_info.mag('J')\n             self.h_mag = spectrum_cutout.spec_info.astro_object_info.mag('H')\n@@ -117,6 +133,7 @@ class DecontaminatedSpectrum(SpectrumContainer):\n             self._mask = None\n             self._contaminants = None\n             self._location = None\n+            self._boundary = None\n             self._y_mag = None\n             self._j_mag = None\n             self._h_mag = None\n@@ -129,11 +146,15 @@ class DecontaminatedSpectrum(SpectrumContainer):\n         self._contamination = None\n         self._wavelengths = None\n         self._kernel = None\n+        self._semimajor = None\n+        self._semiminor = None\n+        self._theta = None\n         self._science = None\n         self._variance = None\n         self._mask = None\n         self._contaminants = None\n         self._location = None\n+        self._boundary = None\n         self._y_mag = None\n         self._j_mag = None\n         self._h_mag = None\n@@ -179,7 +200,7 @@ class DecontaminatedSpectrum(SpectrumContainer):\n         if self._mask is None and self._h5object is not None:\n             mask = np.array(self._h5object['mask'])\n             mask[self.variance == 0] = Flags.VOID\n-            mask[self.variance == 0] = Flags.INVALID\n+            mask[self.variance == np.inf] = Flags.INVALID\n             self._mask = mask\n         return self._mask\n \n@@ -188,7 +209,7 @@ class DecontaminatedSpectrum(SpectrumContainer):\n         Utils.verify_2d_numpy_array(mask)\n         if self._variance is not None:\n             mask[self.variance == 0] = Flags.VOID\n-            mask[self.variance == 0] = Flags.INVALID\n+            mask[self.variance == np.inf] = Flags.INVALID\n         else:\n             raise RuntimeError(\"The variance of this spectrum must be set before the mask can be set.\")\n         self._mask = mask\n@@ -234,6 +255,28 @@ class DecontaminatedSpectrum(SpectrumContainer):\n     def location(self, loc: LocationSpectrum):\n         self._location = loc\n \n+    @property\n+    def boundary(self) -> np.ndarray:\n+        \"\"\"\n+        An array of points [(x1, y1), (x2, y2), ...] around the border of the spectrum, in detector coordinates.\n+        \"\"\"\n+        if self._boundary is None and self._h5object is not None:\n+            self._boundary = np.array(self._h5object['boundary'])\n+        return self._boundary\n+\n+    @boundary.setter\n+    def boundary(self, boundary):\n+        Utils.verify_2d_numpy_array(mask)\n+        self._boundary = boundary\n+\n+    @property\n+    def polygon(self) -> Polygon:\n+        \"\"\"\n+        A Shapely Polygon describing the boundary of the spectrum, in detector coordinates.\n+        \"\"\"\n+        if self.boundary is not None:\n+            return Polygon(self.boundary)\n+\n     @property\n     def y_mag(self) -> float:\n         if self._y_mag is None and self._h5object is not None:\n@@ -348,6 +391,48 @@ class DecontaminatedSpectrum(SpectrumContainer):\n \n         return self._wavelengths\n \n+    @property\n+    def semimajor(self) -> Union[float, None]:\n+        if self._semimajor is None and self._h5object is not None:\n+            try:\n+                kernel = self._h5object['kernel']\n+                self._semimajor = float(kernel.attrs['semimajor'])\n+            except KeyError:\n+                self._semimajor = None\n+        return self._semimajor\n+\n+    @semimajor.setter\n+    def semimajor(self, semimajor):\n+        self._semimajor = semimajor\n+\n+    @property\n+    def semiminor(self) -> Union[float, None]:\n+        if self._semiminor is None and self._h5object is not None:\n+            try:\n+                kernel = self._h5object['kernel']\n+                self._semiminor = float(kernel.attrs['semiminor'])\n+            except KeyError:\n+                self._semiminor = None\n+        return self._semiminor\n+\n+    @semiminor.setter\n+    def semiminor(self, semiminor):\n+        self._semiminor = semiminor\n+\n+    @property\n+    def theta(self) -> Union[float, None]:\n+        if self._theta is None and self._h5object is not None:\n+            try:\n+                kernel = self._h5object['kernel']\n+                self._theta = float(kernel.attrs['theta'])\n+            except KeyError:\n+                self._theta = None\n+        return self._theta\n+\n+    @theta.setter\n+    def theta(self, theta):\n+        self._theta = theta\n+\n     def __str__(self) -> str:\n         string = super().__str__()\n         if 'Uninitialized' not in string:\n@@ -363,6 +448,32 @@ class DecontaminatedSpectrum(SpectrumContainer):\n \n         return string\n \n+    def rasterize_polygon(self, polygon: Polygon) -> np.ndarray:\n+        \"\"\"\n+        Creates a rasterized mask of a polygon: pixels within the polygon are True. False otherwise.\n+\n+        This is useful for displaying which pixels are contaminated by a spectrum: simply provide the polygon\n+        of the contaminating spectrum to see which pixels are contaminated by that spectrum.\n+\n+        Parameters\n+        ---------\n+\n+        polygon: Polygon\n+            A Shapely Polygon object that will be masked. The vertex coordinates should be detector coordinates.\n+\n+        Returns\n+        -------\n+\n+        mask: np.ndarray\n+            An array with the same dimensions as the pixel layers of the spectrum. Pixels are set to True inside\n+            of the polygon, False elsewhere.\n+        \"\"\"\n+        mask = np.zeros(shape=self.science.shape, dtype=bool)\n+        # The polygon is expanded by half of the maximum diameter of a pixel to account for pixels on the edge.\n+        # 0.5 * sqrt(2) is approximately 0.7071\n+        vertices = np.array(polygon.buffer(0.7071, join_style=2).boundary.coords)[:-1]\n+        return Utils.rasterize(mask, self.offset, vertices)\n+\n     def _compute_total_contamination(self):\n         \"\"\"\n         Compute the total contamination for the spectrum\n@@ -418,6 +529,11 @@ class DecontaminatedSpectrum(SpectrumContainer):\n         crv_end = float(location_group['crv_coeffs'].attrs['wavelength_end'])\n         crv.setRange(crv_start, crv_end)\n \n+        detector_model = self._collection.detector_models[(self.dither, self.detector)]\n+\n+        x_pivot = float(location_group.attrs['x_pivot'])\n+        y_pivot = float(location_group.attrs['y_pivot'])\n+\n         loc = LocationSpectrum()\n         loc.setObjectID(self.id)\n         loc.setDetector(DetectorModel.getDetectorName(self.detector))\n@@ -433,5 +549,7 @@ class DecontaminatedSpectrum(SpectrumContainer):\n         loc.setLambdaRefPosition(np.array(reference_position))\n         loc.setGWATilt(gwa_tilt)\n         loc.setExtraTilt(extra_tilt)\n+        loc.setDetectorModel(detector_model)\n+        loc.setPivot(x_pivot, y_pivot)\n \n         return loc\n",
                            "Decontamination Model Improvements",
                            "Nathaniel Stickley",
                            "2023-07-12T15:52:55.000+00:00",
                            "6dd740cedcda8864c167b5224f591df15e61b3fa"
                        ]
                    ],
                    "SIR_SpectraDecontamination/python/SIR_SpectraDecontamination/SpectraCollectionIndex.py": [
                        [
                            "@@ -113,7 +113,7 @@ class SpectraCollectionIndex:\n     object and write the contents of the index to the file. It can also\n     load the contents of a previously-written index.\n     \"\"\"\n-    TABLE_FORMAT = [('dither', np.int8),\n+    TABLE_FORMAT = [('dither', np.int32),\n                     ('detector', np.int8),\n                     ('id',    np.int64),\n                     ('j_mag', np.float16),\n@@ -158,13 +158,13 @@ class SpectraCollectionIndex:\n         return tuple(np.unique(self.table['id']))\n \n     def get_detectors(self, dither: int) -> tuple:\n-        matches = self.table['dither'] == np.int8(dither)\n+        matches = self.table['dither'] == np.int32(dither)\n         return tuple(np.unique(self.table['detector'][matches]).astype(int))\n \n     def filter_by_dither(self, dither: Union[int, None]) -> 'SpectraCollectionIndex':\n         if dither is None:\n             return self\n-        matches = self.table['dither'] == np.int8(dither)\n+        matches = self.table['dither'] == np.int32(dither)\n         table = np.copy(self.table[matches])\n         return SpectraCollectionIndex(table=table)\n \n@@ -338,7 +338,7 @@ class SpectraCollectionIndex:\n \n         table = np.zeros((n_spectra,), dtype=cls.TABLE_FORMAT)\n \n-        table['dither'][:] = np.int8(hdf5_file.attrs['Dither'])\n+        table['dither'][:] = np.int32(hdf5_file.attrs['Dither'])\n         table['detector'][:] = np.int8(hdf5_file.attrs['Detector'])\n \n         for i, spec_id in enumerate(spectra):\n",
                            "Merge branch 'decon_thumbs_test' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-08-10T14:34:34.000+00:00",
                            "8f6c269ccbaf09ad1adcbe76810e1a69c27eb444"
                        ]
                    ],
                    "SIR_SpectraDecontamination/tests/python/Executor_test.py": [
                        [
                            "@@ -164,6 +164,9 @@ def test_exec_max_spectra_nonzero_part_raises_exception_when_missing_env_variabl\n \n     executor = Executor(args, logger)\n \n+    # fix issue 22869 in jenkins tests\n+    module.os.path.isfile = real_isfile\n+\n     with pytest.raises(RuntimeError, match=\".*DECON_FILE_COUNTER must also be set.\"):\n         executor.exec()\n \n",
                            "Merge branch 'decon_thumbs_test' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-08-10T14:34:34.000+00:00",
                            "8f6c269ccbaf09ad1adcbe76810e1a69c27eb444"
                        ],
                        [
                            "@@ -79,6 +79,8 @@ class Args:\n         self.config = 'config.xml'\n         self.pipeline = False\n         self.logdir = './logs'\n+        self.gaussian_profile = True\n+        self.second_order_limit = 16\n \n \n @pytest.fixture\n",
                            "Merge branch 'decontamination-with-new-tables' into 'develop'",
                            "Marco Fumana",
                            "2023-07-12T15:52:55.000+00:00",
                            "6ac38f0c2d5531e352ba378b25b5531fac1193dc"
                        ],
                        [
                            "@@ -79,6 +79,8 @@ class Args:\n         self.config = 'config.xml'\n         self.pipeline = False\n         self.logdir = './logs'\n+        self.gaussian_profile = True\n+        self.second_order_limit = 16\n \n \n @pytest.fixture\n",
                            "Decontamination Model Improvements",
                            "Nathaniel Stickley",
                            "2023-07-12T15:52:55.000+00:00",
                            "6dd740cedcda8864c167b5224f591df15e61b3fa"
                        ]
                    ],
                    "SIR_SpectraExtraction/python/SIR_SpectraExtraction/SpectraExtractionCore.py": [
                        [
                            "@@ -393,10 +393,11 @@ class SpectraExtractionCore(ParametersParse):\n                     \"compatible with the optimal extraction\"\n                 )\n             if self._cutouts is None or self._exp_orientation is None:\n-                raise ValueError(\n-                    \"optimal extraction requires --sci_frames \" \"and --cutouts\"\n-                )\n-\n+                logger.warning(\"optimal extraction requires --sci_frames \" \"and --cutouts\")\n+                engine1d = 'MEAN'\n+                self._params[\"engine1d\"] = engine1d\n+                logger.warning(f\"Extraction method set to {engine1d}\")\n+                \n         self._engine1D = ENGINES1D[engine1d](self._params.as_float(\"cov_tol\"))\n \n     def getDecontImage(self, decont_spectrum):\n",
                            "Merge branch 'decon_thumbs_test' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-08-10T14:34:34.000+00:00",
                            "8f6c269ccbaf09ad1adcbe76810e1a69c27eb444"
                        ]
                    ],
                    "SIR_SpectraExtraction/tests/python/SpectraExtractionCore_test.py": [
                        [
                            "@@ -35,7 +35,7 @@ from unittest.mock import MagicMock, patch\n from SIR_InstrumentModelsBinding import Detector\n from SIR_SpectraLocation.LocationTable import LocationTable\n from SIR_SpectraExtraction.SpectraExtractionCore import SpectraExtractionCore\n-from SIR_SpectraExtraction.Extraction1D import Extracted1DMean, Extracted1DSum\n+from SIR_SpectraExtraction.Extraction1D import Extracted1DMean, Extracted1DSum, Extracted1DOptimal\n \n \n class TestSpectraExtractionCore:\n@@ -661,6 +661,38 @@ class TestSpectraExtractionCore:\n         core.generateEngine1D()\n \n         assert isinstance(core._engine1D, Extracted1DMean)\n+    \n+    @patch('SIR_SpectraExtraction.SpectraExtractionCore.logger')\n+    def test_generate1D_5(self, mock_logger):\n+        core = SpectraExtractionCore(None, None, None, None)\n+        core._params = ConfigObj()\n+        core._params['engine1d'] =\"OPT\"\n+        core._params['cov_tol'] = -1.0\n+\n+        core.generateEngine1D()\n+\n+        assert isinstance(core._engine1D, Extracted1DMean) \n+        assert core._params['engine1d'] == \"MEAN\"\n+        \n+        assert mock_logger.warning.call_args_list[0][0][0] == \"optimal extraction requires --sci_frames \" \"and --cutouts\"\n+        assert mock_logger.warning.call_args_list[1][0][0] == \"Extraction method set to MEAN\"\n+\n+    @patch('SIR_SpectraExtraction.SpectraExtractionCore.SpectraExtractionCore.compute_exposure_orientation')\n+    def test_generate1D_6(self, mock_orien):\n+        cuts = MagicMock()\n+        exps = MagicMock()\n+        loc = MagicMock()\n+        dec = MagicMock()\n+        core = SpectraExtractionCore(None, loc, dec, cuts, exps)\n+        core._exp_orientation = 1.0\n+        core._params = ConfigObj()\n+        core._params['engine1d'] =\"OPT\"\n+        core._params['cov_tol'] = -1.0\n+\n+        core.generateEngine1D()\n+\n+        assert isinstance(core._engine1D, Extracted1DOptimal) \n+        assert core._params['engine1d'] == \"OPT\"\n \n \n     def test_invoke1(self):\n",
                            "Merge branch 'decon_thumbs_test' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-08-10T14:34:34.000+00:00",
                            "8f6c269ccbaf09ad1adcbe76810e1a69c27eb444"
                        ]
                    ],
                    "SIR_Catalogs/python/SIR_Catalogs/CatalogInterface.py": [
                        [
                            "@@ -41,7 +41,8 @@ class CatalogInterface(object):\n     \"\"\" generic catalog interface \"\"\"\n     MAG_BANDS = ('Y', 'J', 'H')\n     MAGERR_BANDS = ('Y_ERR', 'J_ERR', 'H_ERR')\n-\n+    STAR_PROB_THRESHOLD = 0.7\n+    \n     def __init__(self):\n         self._data = None\n         self._origin = None\n@@ -181,7 +182,8 @@ class CatalogInterface(object):\n                            ('ANGLE', np.float32),\n                            ('Z_TRUE', np.float32),\n                            ('LOGF_HALPHA_EXT', np.float32),\n-                           ('MER_TILE', np.int64)])\n+                           ('MER_TILE', np.int64),\n+                           ('STAR_PROB', np.float32)])\n \n         return np.empty(size, dtype=dtypes)\n \n@@ -409,3 +411,15 @@ class CatalogInterface(object):\n         catalog.select(conditions, objects_list)\n \n         return catalog\n+\n+    def set_star_threshold(self, threshold:float):\n+        \"\"\"Set star threshould and redefine separation between stars and galaxies\n+        \"\"\"\n+        logger.info(f\"Redefining number of stars: new star prob {threshold}\")\n+        \n+        idx = self._data['STAR_PROB']>=threshold\n+        self._data['TYPE'][idx] = AstronomicalObject.Star\n+        self._data['TYPE'][~idx] = AstronomicalObject.Galaxy\n+        \n+        nstars = np.count_nonzero(self._data['TYPE'] == AstronomicalObject.Star)\n+        logger.info(f\"Stars {nstars} over {len(self._data)} objects\")\n\\ No newline at end of file\n",
                            "Merge branch 'no_empty_loctabs' into 'develop'",
                            "Marco Fumana",
                            "2023-08-04T16:26:16.000+00:00",
                            "b040534c0618405da6e8607cee6ea0b9ef640913"
                        ],
                        [
                            "@@ -399,9 +399,10 @@ class CatalogInterface(object):\n \n         ids1 = self._data['ID'][sep_constraint]\n         ids2 = ids[idx[sep_constraint]]\n+        dists = d2d[sep_constraint]\n \n-        return np.array([ids1, ids2]).T\n-\n+        return Table({'id1': ids1, 'id2': ids2, 'd2d': dists})\n+        \n     def new_from_selection(self, conditions=None, objects_list=None):\n         catalog = self.__class__()\n         catalog.setData((self._data, ))\n",
                            "Merge branch 'match_with_distances' into 'develop'",
                            "Marco Fumana",
                            "2023-07-20T07:47:03.000+00:00",
                            "5a051d79ff8424be51bce4152394570c92614e2f"
                        ],
                        [
                            "@@ -399,9 +399,10 @@ class CatalogInterface(object):\n \n         ids1 = self._data['ID'][sep_constraint]\n         ids2 = ids[idx[sep_constraint]]\n+        dists = d2d[sep_constraint]\n \n-        return np.array([ids1, ids2]).T\n-\n+        return Table({'id1': ids1, 'id2': ids2, 'd2d': dists})\n+        \n     def new_from_selection(self, conditions=None, objects_list=None):\n         catalog = self.__class__()\n         catalog.setData((self._data, ))\n",
                            "Allowed multiple matches in taget search",
                            "Marco Fumana",
                            "2023-07-20T07:47:03.000+00:00",
                            "8f5b105ac9d77e62765fe35eef1ae1352a76b993"
                        ]
                    ],
                    "SIR_Catalogs/python/SIR_Catalogs/MERCatalog.py": [
                        [
                            "@@ -45,14 +45,14 @@ class MERCatalog(CatalogInterface):\n     COLS = [\"OBJECT_ID\",\n             \"RIGHT_ASCENSION\",\n             \"DECLINATION\",\n-            \"FLUX_Y_TOTAL\",\n-            \"FLUX_J_TOTAL\",\n-            \"FLUX_H_TOTAL\",\n-            \"FLUXERR_Y_TOTAL\",\n-            \"FLUXERR_J_TOTAL\",\n-            \"FLUXERR_H_TOTAL\",\n-            \"POINT_LIKE_FLAG\",\n-            \"A_IMAGE\",\n+            \"FLUX_Y_TEMPLFIT\",\n+            \"FLUX_J_TEMPLFIT\",\n+            \"FLUX_H_TEMPLFIT\",\n+            \"FLUXERR_Y_TEMPLFIT\",\n+            \"FLUXERR_J_TEMPLFIT\",\n+            \"FLUXERR_H_TEMPLFIT\",\n+            \"POINT_LIKE_PROB\",\n+            \"KRON_RADIUS\",\n             \"POSITION_ANGLE\",\n             \"ELLIPTICITY\"]\n \n@@ -118,23 +118,26 @@ class MERCatalog(CatalogInterface):\n         data = fitsio.read(filename, ext=1, columns=MERCatalog.COLS)\n \n         # first count objects with positive mag\n-        data = data[(data['FLUX_Y_TOTAL'] > 0.) & (data['FLUX_J_TOTAL'] > 0.) & (data['FLUX_H_TOTAL'] > 0.)]\n+        data = data[(data['FLUX_Y_TEMPLFIT'] > 0.) & (data['FLUX_J_TEMPLFIT'] > 0.) & (data['FLUX_H_TEMPLFIT'] > 0.)]\n \n         _data = CatalogInterface.getEmpty(len(data))\n \n         _data['ID'] = data['OBJECT_ID']\n         _data['RA'] = data['RIGHT_ASCENSION']\n         _data['DEC'] = data['DECLINATION']\n-        _data['Y'] = -2.5 * np.log10(data['FLUX_Y_TOTAL']) + MERCatalog.ZERO_POINT_CORR\n-        _data['J'] = -2.5 * np.log10(data['FLUX_J_TOTAL']) + MERCatalog.ZERO_POINT_CORR\n-        _data['H'] = -2.5 * np.log10(data['FLUX_H_TOTAL']) + MERCatalog.ZERO_POINT_CORR\n-        _data['Y_ERR'] = 2.5 * np.log10(np.e) / data['FLUX_Y_TOTAL'] * data['FLUXERR_Y_TOTAL']\n-        _data['J_ERR'] = 2.5 * np.log10(np.e) / data['FLUX_J_TOTAL'] * data['FLUXERR_J_TOTAL']\n-        _data['H_ERR'] = 2.5 * np.log10(np.e) / data['FLUX_H_TOTAL'] * data['FLUXERR_H_TOTAL']\n-\n+        _data['Y'] = -2.5 * np.log10(data['FLUX_Y_TEMPLFIT']) + MERCatalog.ZERO_POINT_CORR\n+        _data['J'] = -2.5 * np.log10(data['FLUX_J_TEMPLFIT']) + MERCatalog.ZERO_POINT_CORR\n+        _data['H'] = -2.5 * np.log10(data['FLUX_H_TEMPLFIT']) + MERCatalog.ZERO_POINT_CORR\n+        _data['Y_ERR'] = 2.5 * np.log10(np.e) / data['FLUX_Y_TEMPLFIT'] * data['FLUXERR_Y_TEMPLFIT']\n+        _data['J_ERR'] = 2.5 * np.log10(np.e) / data['FLUX_J_TEMPLFIT'] * data['FLUXERR_J_TEMPLFIT']\n+        _data['H_ERR'] = 2.5 * np.log10(np.e) / data['FLUX_H_TEMPLFIT'] * data['FLUXERR_H_TEMPLFIT']\n+\n+        _data['STAR_PROB'] = data['POINT_LIKE_PROB']\n         _data['TYPE'] = AstronomicalObject.Galaxy\n-        _data['TYPE'][data['POINT_LIKE_FLAG'] == 1] = AstronomicalObject.Star\n-        _data['A_IMAGE'] = data['A_IMAGE'] * MERCatalog.PIXEL_SCALE\n+        stars_idx = data['POINT_LIKE_PROB'] >= CatalogInterface.STAR_PROB_THRESHOLD\n+        _data['TYPE'][stars_idx] = AstronomicalObject.Star\n+        \n+        _data['A_IMAGE'] = data['KRON_RADIUS'] * MERCatalog.PIXEL_SCALE\n         # Replace ellipticity == 1 with 0.99\n         ellipticity_idx = data['ELLIPTICITY'] >= 0.99\n         replacing_ellipticity = np.count_nonzero(ellipticity_idx)\n@@ -154,4 +157,7 @@ class MERCatalog(CatalogInterface):\n             tile_id = 0\n \n         _data['MER_TILE'] = tile_id\n+\n+        logger.info(f\"Tile {tile_id}: {np.count_nonzero(_data['TYPE'] == AstronomicalObject.Star)} stars over {len(_data)} objects\")\n+        \n         return _data\n",
                            "Merge branch 'no_empty_loctabs' into 'develop'",
                            "Marco Fumana",
                            "2023-08-04T16:26:16.000+00:00",
                            "b040534c0618405da6e8607cee6ea0b9ef640913"
                        ]
                    ],
                    "SIR_Catalogs/python/SIR_Catalogs/TrueUniverseCatalog.py": [
                        [
                            "@@ -104,6 +104,7 @@ class TrueUniverseCatalog(CatalogInterface):\n         _data['H_ERR'] = 0.0\n \n         _data['TYPE'] = AstronomicalObject.Star\n+        _data['STAR_PROB'] = 1.0\n         _data['A_IMAGE'] = 0.0\n         _data['B_IMAGE'] = 0.0\n         _data['ANGLE'] = 0.0\n@@ -145,6 +146,7 @@ class TrueUniverseCatalog(CatalogInterface):\n         _data['J_ERR'] = 0.0\n         _data['H_ERR'] = 0.0\n         _data['TYPE'] = AstronomicalObject.Galaxy\n+        _data['STAR_PROB'] = 0.0\n         _data['Z_TRUE'] = data['Z_OBS']\n \n         if release == 7:\n",
                            "Merge branch 'no_empty_loctabs' into 'develop'",
                            "Marco Fumana",
                            "2023-08-04T16:26:16.000+00:00",
                            "b040534c0618405da6e8607cee6ea0b9ef640913"
                        ]
                    ],
                    "SIR_Catalogs/tests/python/MERCatalog_test.py": [
                        [
                            "@@ -46,34 +46,35 @@ class TestMERCatalog(object):\n     def __createTileData(self, nrows=10):\n         data = np.zeros(nrows, dtype=[('OBJECT_ID', 'i8'),\n                                       ('POINT_LIKE_FLAG', 'i1'),\n-                                      ('FLUX_Y_TOTAL', 'f8'),\n-                                      ('FLUX_J_TOTAL', 'f8'),\n-                                      ('FLUX_H_TOTAL', 'f8'),\n-                                      ('FLUXERR_Y_TOTAL', 'f8'),\n-                                      ('FLUXERR_J_TOTAL', 'f8'),\n-                                      ('FLUXERR_H_TOTAL', 'f8'),\n+                                      ('FLUX_Y_TEMPLFIT', 'f8'),\n+                                      ('FLUX_J_TEMPLFIT', 'f8'),\n+                                      ('FLUX_H_TEMPLFIT', 'f8'),\n+                                      ('FLUXERR_Y_TEMPLFIT', 'f8'),\n+                                      ('FLUXERR_J_TEMPLFIT', 'f8'),\n+                                      ('FLUXERR_H_TEMPLFIT', 'f8'),\n                                       ('RIGHT_ASCENSION', 'f4'),\n                                       ('DECLINATION', 'f4'),\n                                       ('ISOAREA', 'f4'),\n                                       ('ELLIPTICITY', 'f4'),\n                                       ('POSITION_ANGLE', 'f4'),\n-                                      ('A_IMAGE', 'f4')])\n+                                      ('KRON_RADIUS', 'f4'),\n+                                      ('POINT_LIKE_PROB', 'f4')])\n         for i in range(0, nrows):\n             data[i]['OBJECT_ID'] = i + 1\n-            data[i]['FLUX_Y_TOTAL'] = i + 1 % 5\n-            data[i]['FLUX_J_TOTAL'] = i + 1 % 5\n-            data[i]['FLUX_H_TOTAL'] = i + 1 % 5\n-            data[i]['FLUXERR_Y_TOTAL'] = np.sqrt(i + 1 % 5)\n-            data[i]['FLUXERR_J_TOTAL'] = np.sqrt(i + 1 % 5)\n-            data[i]['FLUXERR_H_TOTAL'] = np.sqrt(i + 1 % 5)\n+            data[i]['FLUX_Y_TEMPLFIT'] = i + 1 % 5\n+            data[i]['FLUX_J_TEMPLFIT'] = i + 1 % 5\n+            data[i]['FLUX_H_TEMPLFIT'] = i + 1 % 5\n+            data[i]['FLUXERR_Y_TEMPLFIT'] = np.sqrt(i + 1 % 5)\n+            data[i]['FLUXERR_J_TEMPLFIT'] = np.sqrt(i + 1 % 5)\n+            data[i]['FLUXERR_H_TEMPLFIT'] = np.sqrt(i + 1 % 5)\n \n             data[i]['RIGHT_ASCENSION'] = np.random.rand()\n             data[i]['DECLINATION'] = np.random.rand()\n             data[i]['ISOAREA'] = 10*np.random.rand()\n             data[i]['ELLIPTICITY'] = 0.99*np.random.rand()\n             data[i]['POSITION_ANGLE'] = np.random.rand()\n-            data[i]['POINT_LIKE_FLAG'] = (i + 1) % 2\n-            data[i]['A_IMAGE'] = 10*np.random.rand()\n+            data[i]['POINT_LIKE_PROB'] = (i + 1) % 2\n+            data[i]['KRON_RADIUS'] = 10*np.random.rand()\n         return data\n \n     def test_loadObjList(self, tmpdir):\n@@ -178,14 +179,14 @@ class TestMERCatalog(object):\n \n         with fitsio.FITS(tile_fname, 'rw') as tile_tmp_file:\n             data = self.__createTileData()\n-            data['FLUX_Y_TOTAL'][0] = -1.\n-            data['FLUX_Y_TOTAL'][4] = -1.\n-            data['FLUX_H_TOTAL'][1] = -1.\n-            data['FLUX_H_TOTAL'][4] = -1.\n-            data['FLUX_J_TOTAL'][2] = -1.\n-            data['FLUX_J_TOTAL'][4] = -1.\n-            data['FLUX_J_TOTAL'][8] = -1.\n-            data['FLUX_H_TOTAL'][8] = -1.\n+            data['FLUX_Y_TEMPLFIT'][0] = -1.\n+            data['FLUX_Y_TEMPLFIT'][4] = -1.\n+            data['FLUX_H_TEMPLFIT'][1] = -1.\n+            data['FLUX_H_TEMPLFIT'][4] = -1.\n+            data['FLUX_J_TEMPLFIT'][2] = -1.\n+            data['FLUX_J_TEMPLFIT'][4] = -1.\n+            data['FLUX_J_TEMPLFIT'][8] = -1.\n+            data['FLUX_H_TEMPLFIT'][8] = -1.\n             tile_tmp_file.write(data, header={'TILEID': 1})\n \n         mc = MERCatalog.load([tile_fname])\n@@ -194,21 +195,24 @@ class TestMERCatalog(object):\n         idx = [3, 5, 6, 7, 9]\n         assert np.allclose(mc._data['RA'], data['RIGHT_ASCENSION'][idx])\n         assert np.allclose(mc._data['DEC'], data['DECLINATION'][idx])\n-        assert np.allclose(mc._data['Y'], -2.5 * np.log10(data['FLUX_Y_TOTAL'][idx]) + MERCatalog.ZERO_POINT_CORR)\n-        assert np.allclose(mc._data['J'], -2.5 * np.log10(data['FLUX_J_TOTAL'][idx]) + MERCatalog.ZERO_POINT_CORR)\n-        assert np.allclose(mc._data['H'], -2.5 * np.log10(data['FLUX_H_TOTAL'][idx]) + MERCatalog.ZERO_POINT_CORR)\n-        assert np.allclose(mc._data['Y_ERR'], 2.5 * np.log10(np.e) / data['FLUX_Y_TOTAL'][idx] * data['FLUXERR_Y_TOTAL'][idx])\n-        assert np.allclose(mc._data['J_ERR'], 2.5 * np.log10(np.e) / data['FLUX_J_TOTAL'][idx] * data['FLUXERR_J_TOTAL'][idx])\n-        assert np.allclose(mc._data['H_ERR'], 2.5 * np.log10(np.e) / data['FLUX_H_TOTAL'][idx] * data['FLUXERR_H_TOTAL'][idx])\n+        assert np.allclose(mc._data['Y'], -2.5 * np.log10(data['FLUX_Y_TEMPLFIT'][idx]) + MERCatalog.ZERO_POINT_CORR)\n+        assert np.allclose(mc._data['J'], -2.5 * np.log10(data['FLUX_J_TEMPLFIT'][idx]) + MERCatalog.ZERO_POINT_CORR)\n+        assert np.allclose(mc._data['H'], -2.5 * np.log10(data['FLUX_H_TEMPLFIT'][idx]) + MERCatalog.ZERO_POINT_CORR)\n+        assert np.allclose(mc._data['Y_ERR'], 2.5 * np.log10(np.e) / data['FLUX_Y_TEMPLFIT'][idx] * data['FLUXERR_Y_TEMPLFIT'][idx])\n+        assert np.allclose(mc._data['J_ERR'], 2.5 * np.log10(np.e) / data['FLUX_J_TEMPLFIT'][idx] * data['FLUXERR_J_TEMPLFIT'][idx])\n+        assert np.allclose(mc._data['H_ERR'], 2.5 * np.log10(np.e) / data['FLUX_H_TEMPLFIT'][idx] * data['FLUXERR_H_TEMPLFIT'][idx])\n \n         assert np.allclose(mc._data['TYPE'][[0, 1, 3, 4]], AstronomicalObject.Galaxy)\n         assert mc._data['TYPE'][2] == AstronomicalObject.Star\n-        assert np.allclose(mc._data['A_IMAGE'], data['A_IMAGE'][idx] * MERCatalog.PIXEL_SCALE)\n-        assert np.allclose(mc._data['B_IMAGE'], data['A_IMAGE'][idx] * MERCatalog.PIXEL_SCALE * (1 - data['ELLIPTICITY'][idx]))\n+        assert np.allclose(mc._data['A_IMAGE'], data['KRON_RADIUS'][idx] * MERCatalog.PIXEL_SCALE)\n+        assert np.allclose(mc._data['B_IMAGE'], data['KRON_RADIUS'][idx] * MERCatalog.PIXEL_SCALE * (1 - data['ELLIPTICITY'][idx]))\n         assert np.allclose(mc._data['ANGLE'], data['POSITION_ANGLE'][idx])\n         assert np.allclose(mc._data['Z_TRUE'], 0.0)\n         assert np.allclose(mc._data['LOGF_HALPHA_EXT'], 0.0)\n         assert np.allclose(mc._data['MER_TILE'], 1)\n+        \n+        assert np.allclose(mc._data['STAR_PROB'], data['POINT_LIKE_PROB'][idx])\n+        \n \n     @patch('ST_DM_MDBTools.Mdb.Mdb')\n     def test_load2(self, mock_mdb, tmpdir):\n@@ -221,14 +225,14 @@ class TestMERCatalog(object):\n \n         with fitsio.FITS(tile_fname, 'rw') as tile_tmp_file:\n             data = self.__createTileData()\n-            data['FLUX_Y_TOTAL'][0] = -1.\n-            data['FLUX_Y_TOTAL'][4] = -1.\n-            data['FLUX_H_TOTAL'][1] = -1.\n-            data['FLUX_H_TOTAL'][4] = -1.\n-            data['FLUX_J_TOTAL'][2] = -1.\n-            data['FLUX_J_TOTAL'][4] = -1.\n-            data['FLUX_J_TOTAL'][8] = -1.\n-            data['FLUX_H_TOTAL'][8] = -1.\n+            data['FLUX_Y_TEMPLFIT'][0] = -1.\n+            data['FLUX_Y_TEMPLFIT'][4] = -1.\n+            data['FLUX_H_TEMPLFIT'][1] = -1.\n+            data['FLUX_H_TEMPLFIT'][4] = -1.\n+            data['FLUX_J_TEMPLFIT'][2] = -1.\n+            data['FLUX_J_TEMPLFIT'][4] = -1.\n+            data['FLUX_J_TEMPLFIT'][8] = -1.\n+            data['FLUX_H_TEMPLFIT'][8] = -1.\n             tile_tmp_file.write(data, header={'TILEID': 1})\n \n         mc = MERCatalog.load([tile_fname], mock_mdb)\n@@ -237,21 +241,23 @@ class TestMERCatalog(object):\n         idx = [3, 5, 6, 7, 9]\n         assert np.allclose(mc._data['RA'], data['RIGHT_ASCENSION'][idx])\n         assert np.allclose(mc._data['DEC'], data['DECLINATION'][idx])\n-        assert np.allclose(mc._data['Y'], -2.5 * np.log10(data['FLUX_Y_TOTAL'][idx]) + MERCatalog.ZERO_POINT_CORR)\n-        assert np.allclose(mc._data['J'], -2.5 * np.log10(data['FLUX_J_TOTAL'][idx]) + MERCatalog.ZERO_POINT_CORR)\n-        assert np.allclose(mc._data['H'], -2.5 * np.log10(data['FLUX_H_TOTAL'][idx]) + MERCatalog.ZERO_POINT_CORR)\n-        assert np.allclose(mc._data['Y_ERR'], 2.5 * np.log10(np.e) / data['FLUX_Y_TOTAL'][idx] * data['FLUXERR_Y_TOTAL'][idx])\n-        assert np.allclose(mc._data['J_ERR'], 2.5 * np.log10(np.e) / data['FLUX_J_TOTAL'][idx] * data['FLUXERR_J_TOTAL'][idx])\n-        assert np.allclose(mc._data['H_ERR'], 2.5 * np.log10(np.e) / data['FLUX_H_TOTAL'][idx] * data['FLUXERR_H_TOTAL'][idx])\n+        assert np.allclose(mc._data['Y'], -2.5 * np.log10(data['FLUX_Y_TEMPLFIT'][idx]) + MERCatalog.ZERO_POINT_CORR)\n+        assert np.allclose(mc._data['J'], -2.5 * np.log10(data['FLUX_J_TEMPLFIT'][idx]) + MERCatalog.ZERO_POINT_CORR)\n+        assert np.allclose(mc._data['H'], -2.5 * np.log10(data['FLUX_H_TEMPLFIT'][idx]) + MERCatalog.ZERO_POINT_CORR)\n+        assert np.allclose(mc._data['Y_ERR'], 2.5 * np.log10(np.e) / data['FLUX_Y_TEMPLFIT'][idx] * data['FLUXERR_Y_TEMPLFIT'][idx])\n+        assert np.allclose(mc._data['J_ERR'], 2.5 * np.log10(np.e) / data['FLUX_J_TEMPLFIT'][idx] * data['FLUXERR_J_TEMPLFIT'][idx])\n+        assert np.allclose(mc._data['H_ERR'], 2.5 * np.log10(np.e) / data['FLUX_H_TEMPLFIT'][idx] * data['FLUXERR_H_TEMPLFIT'][idx])\n \n         assert np.allclose(mc._data['TYPE'][[0, 1, 3, 4]], AstronomicalObject.Galaxy)\n         assert mc._data['TYPE'][2] == AstronomicalObject.Star\n-        assert np.allclose(mc._data['A_IMAGE'], data['A_IMAGE'][idx] * pix_scale)\n-        assert np.allclose(mc._data['B_IMAGE'], data['A_IMAGE'][idx] * pix_scale * (1 - data['ELLIPTICITY'][idx]))\n+        assert np.allclose(mc._data['A_IMAGE'], data['KRON_RADIUS'][idx] * pix_scale)\n+        assert np.allclose(mc._data['B_IMAGE'], data['KRON_RADIUS'][idx] * pix_scale * (1 - data['ELLIPTICITY'][idx]))\n         assert np.allclose(mc._data['ANGLE'], data['POSITION_ANGLE'][idx])\n         assert np.allclose(mc._data['Z_TRUE'], 0.0)\n         assert np.allclose(mc._data['LOGF_HALPHA_EXT'], 0.0)\n         assert np.allclose(mc._data['MER_TILE'], 1)\n+        \n+        assert np.allclose(mc._data['STAR_PROB'], data['POINT_LIKE_PROB'][idx])\n \n \n     @patch('ST_DM_MDBTools.Mdb.Mdb')\n@@ -275,22 +281,53 @@ class TestMERCatalog(object):\n \n         assert np.allclose(mc._data['RA'], data['RIGHT_ASCENSION'])\n         assert np.allclose(mc._data['DEC'], data['DECLINATION'])\n-        assert np.allclose(mc._data['Y'], -2.5 * np.log10(data['FLUX_Y_TOTAL']) + MERCatalog.ZERO_POINT_CORR)\n-        assert np.allclose(mc._data['J'], -2.5 * np.log10(data['FLUX_J_TOTAL']) + MERCatalog.ZERO_POINT_CORR)\n-        assert np.allclose(mc._data['H'], -2.5 * np.log10(data['FLUX_H_TOTAL']) + MERCatalog.ZERO_POINT_CORR)\n-        assert np.allclose(mc._data['Y_ERR'], 2.5 * np.log10(np.e) / data['FLUX_Y_TOTAL'] * data['FLUXERR_Y_TOTAL'])\n-        assert np.allclose(mc._data['J_ERR'], 2.5 * np.log10(np.e) / data['FLUX_J_TOTAL'] * data['FLUXERR_J_TOTAL'])\n-        assert np.allclose(mc._data['H_ERR'], 2.5 * np.log10(np.e) / data['FLUX_H_TOTAL'] * data['FLUXERR_H_TOTAL'])\n+        assert np.allclose(mc._data['Y'], -2.5 * np.log10(data['FLUX_Y_TEMPLFIT']) + MERCatalog.ZERO_POINT_CORR)\n+        assert np.allclose(mc._data['J'], -2.5 * np.log10(data['FLUX_J_TEMPLFIT']) + MERCatalog.ZERO_POINT_CORR)\n+        assert np.allclose(mc._data['H'], -2.5 * np.log10(data['FLUX_H_TEMPLFIT']) + MERCatalog.ZERO_POINT_CORR)\n+        assert np.allclose(mc._data['Y_ERR'], 2.5 * np.log10(np.e) / data['FLUX_Y_TEMPLFIT'] * data['FLUXERR_Y_TEMPLFIT'])\n+        assert np.allclose(mc._data['J_ERR'], 2.5 * np.log10(np.e) / data['FLUX_J_TEMPLFIT'] * data['FLUXERR_J_TEMPLFIT'])\n+        assert np.allclose(mc._data['H_ERR'], 2.5 * np.log10(np.e) / data['FLUX_H_TEMPLFIT'] * data['FLUXERR_H_TEMPLFIT'])\n \n         assert np.allclose(mc._data['TYPE'][[1, 3, 5, 7, 9]], AstronomicalObject.Galaxy)\n         assert np.allclose(mc._data['TYPE'][[0, 2, 4, 6, 8]], AstronomicalObject.Star)\n-        assert np.allclose(mc._data['A_IMAGE'], data['A_IMAGE'] * pix_scale)\n-        assert np.allclose(mc._data['B_IMAGE'][2:], data['A_IMAGE'][2:] * pix_scale * (1 - data['ELLIPTICITY'][2:]))\n-        assert np.allclose(mc._data['B_IMAGE'][:2], data['A_IMAGE'][:2] * pix_scale * (1 - 0.99))\n+        assert np.allclose(mc._data['A_IMAGE'], data['KRON_RADIUS'] * pix_scale)\n+        assert np.allclose(mc._data['B_IMAGE'][2:], data['KRON_RADIUS'][2:] * pix_scale * (1 - data['ELLIPTICITY'][2:]))\n+        assert np.allclose(mc._data['B_IMAGE'][:2], data['KRON_RADIUS'][:2] * pix_scale * (1 - 0.99))\n \n         assert np.allclose(mc._data['ANGLE'], data['POSITION_ANGLE'])\n         assert np.allclose(mc._data['Z_TRUE'], 0.0)\n         assert np.allclose(mc._data['LOGF_HALPHA_EXT'], 0.0)\n         assert np.allclose(mc._data['MER_TILE'], 1)\n+        \n+        assert np.allclose(mc._data['STAR_PROB'], data['POINT_LIKE_PROB'])\n+        \n \n+    @patch('SIR_Catalogs.CatalogInterface.logger')\n+    def test_set_star_threshold(self, mock_logger, tmpdir):\n+        tile_fname = tmpdir.join('tmpname.dat')\n+\n+        with fitsio.FITS(tile_fname, 'rw') as tile_tmp_file:\n+            tile_data = self.__createTileData()\n+            tile_tmp_file.write(tile_data, header={'TILEID': 1})\n+\n+        tiles = [tile_fname]\n \n+        mc = MERCatalog.load(tiles)\n+        \n+        #Hack prob\n+        for i in range(10):\n+            mc._data['STAR_PROB'][i] = i/10.\n+        \n+        mc.set_star_threshold(0.21)\n+        \n+        assert mock_logger.info.call_args_list[-1][0][0] == \"Stars 7 over 10 objects\"\n+        \n+        assert np.all(mc._data['TYPE'][0:3] == AstronomicalObject.Galaxy)\n+        assert np.all(mc._data['TYPE'][3:] == AstronomicalObject.Star)\n+        \n+        mc.set_star_threshold(0.61)\n+        \n+        assert mock_logger.info.call_args_list[-1][0][0] == \"Stars 3 over 10 objects\"\n+        \n+        assert np.all(mc._data['TYPE'][0:7] == AstronomicalObject.Galaxy)\n+        assert np.all(mc._data['TYPE'][7:] == AstronomicalObject.Star)        \n\\ No newline at end of file\n",
                            "Merge branch 'no_empty_loctabs' into 'develop'",
                            "Marco Fumana",
                            "2023-08-04T16:26:16.000+00:00",
                            "b040534c0618405da6e8607cee6ea0b9ef640913"
                        ]
                    ],
                    "SIR_Catalogs/tests/python/TUCatalog_test.py": [
                        [
                            "@@ -197,6 +197,9 @@ class TestTUCatalog(object):\n         assert np.allclose(tu._data['TYPE'][0:10], AstronomicalObject.Star)\n         assert np.allclose(tu._data['TYPE'][10:], AstronomicalObject.Galaxy)\n \n+        assert np.allclose(tu._data['STAR_PROB'][0:10], 1.)\n+        assert np.allclose(tu._data['STAR_PROB'][10:], 0.)\n+\n         assert np.allclose(tu._data['A_IMAGE'][0:10],0)\n         assert np.allclose(tu._data['A_IMAGE'][[10,11,14,15,16,18,19]], gdata['DISK_LENGTH'][[0,1,4,5,6,8,9]])\n         assert np.allclose(tu._data['A_IMAGE'][[12,13,17]], gdata['BULGE_LENGTH'][[2,3,7]])\n@@ -253,6 +256,9 @@ class TestTUCatalog(object):\n \n         assert np.allclose(tu._data['TYPE'][0:10], AstronomicalObject.Star)\n         assert np.allclose(tu._data['TYPE'][10:], AstronomicalObject.Galaxy)\n+        \n+        assert np.allclose(tu._data['STAR_PROB'][0:10], 1.)\n+        assert np.allclose(tu._data['STAR_PROB'][10:], 0.)        \n \n         assert np.allclose(tu._data['A_IMAGE'][0:10],0)\n         assert np.allclose(tu._data['A_IMAGE'][[10,11,14,15,16,18]], gdata['DISK_LENGTH'][[0,1,4,5,6,8]])\n",
                            "Merge branch 'no_empty_loctabs' into 'develop'",
                            "Marco Fumana",
                            "2023-08-04T16:26:16.000+00:00",
                            "b040534c0618405da6e8607cee6ea0b9ef640913"
                        ]
                    ],
                    "SIR_SpectraLocation/SIR_SpectraLocation/LocationTable.h": [
                        [
                            "@@ -183,6 +183,11 @@ public:\n    */\n   size_t getSize() const;\n \n+  /**\n+   * @brief Get the LocationObject number collected on a given detector\n+   */\n+  size_t getSize(std::string const &det_id) const;\n+\n   std::unordered_map<AstronomicalObjectID, LocationObjectPtr>::iterator begin();\n   std::unordered_map<AstronomicalObjectID, LocationObjectPtr>::const_iterator begin() const;\n   std::unordered_map<AstronomicalObjectID, LocationObjectPtr>::const_iterator cbegin() const;\n",
                            "Merge branch 'no_empty_loctabs' into 'develop'",
                            "Marco Fumana",
                            "2023-08-04T16:26:16.000+00:00",
                            "b040534c0618405da6e8607cee6ea0b9ef640913"
                        ]
                    ],
                    "SIR_SpectraLocation/python/SIR_SpectraLocation/SpectraLocationCore.py": [
                        [
                            "@@ -116,6 +116,9 @@ class SpectraLocationCore(ParametersParse):\n \n     def invoke(self, nisp_exp, catalog, opt_xml, crv_xml, ids_xml, catalog_selection=None, objects_list=None):\n \n+        if 'star_prob' in self._params:\n+            catalog.set_star_threshold(self._params.as_float('star_prob'))\n+\n         exp_header = nisp_exp.getMetadata()\n         gwa_tilt = exp_header.getAsInt('GWA_TILT')\n         grism_name = exp_header.getAsString('GWA_POS')\n",
                            "Merge branch 'no_empty_loctabs' into 'develop'",
                            "Marco Fumana",
                            "2023-08-04T16:26:16.000+00:00",
                            "b040534c0618405da6e8607cee6ea0b9ef640913"
                        ],
                        [
                            "@@ -41,6 +41,7 @@ from SIR_InstrumentModels.GrismModel import GrismModel\n from SIR_TiltComputation.TiltComputationCore import TiltComputationCore\n \n from SIR_Utilities.ParametersParse import ParametersParse\n+from SIR_Init.LayoutRotation import is_rotated\n \n from .AdjustPointing import AdjustPointing\n \n@@ -124,7 +125,8 @@ class SpectraLocationCore(ParametersParse):\n \n         # creating the models\n         logger.info(\"Creating the instrument models...\")\n-        detector_model = DetectorModel(grism_name, self._mdb)\n+        rotated = is_rotated(nisp_exp)\n+        detector_model = DetectorModel(grism_name, self._mdb, rotate=rotated)\n \n         opt_model = OpticalModel.load(os.path.join(self._workdir, opt_xml), detector_model)\n         opt_model.set_gwa_tilt(gwa_tilt=gwa_tilt)\n",
                            "Merge branch 'bug_in_det_rot' into 'develop'",
                            "Marco Fumana",
                            "2023-07-24T16:25:04.000+00:00",
                            "b9b4e88502a2b518c6eb3264394420a501527e3c"
                        ],
                        [
                            "@@ -41,6 +41,7 @@ from SIR_InstrumentModels.GrismModel import GrismModel\n from SIR_TiltComputation.TiltComputationCore import TiltComputationCore\n \n from SIR_Utilities.ParametersParse import ParametersParse\n+from SIR_Init.LayoutRotation import is_rotated\n \n from .AdjustPointing import AdjustPointing\n \n@@ -124,7 +125,8 @@ class SpectraLocationCore(ParametersParse):\n \n         # creating the models\n         logger.info(\"Creating the instrument models...\")\n-        detector_model = DetectorModel(grism_name, self._mdb)\n+        rotated = is_rotated(nisp_exp)\n+        detector_model = DetectorModel(grism_name, self._mdb, rotate=rotated)\n \n         opt_model = OpticalModel.load(os.path.join(self._workdir, opt_xml), detector_model)\n         opt_model.set_gwa_tilt(gwa_tilt=gwa_tilt)\n",
                            "Applied rotation to detector layout (if required) in SpectraLocation",
                            "mfumana",
                            "2023-07-24T16:02:58.000+00:00",
                            "083a85e0d36374f2ca52029324290118de85dc9f"
                        ],
                        [
                            "@@ -25,7 +25,7 @@\n \"\"\"Module used to perfome the spectra location\"\"\"\n \n import os\n-\n+import numpy as np\n from astropy.table import Table\n \n import ElementsKernel.Logging as log\n@@ -194,11 +194,15 @@ class SpectraLocationCore(ParametersParse):\n             raise Exception(\"No match between catalog and targets\")\n \n         if len(match) > 1:\n-            raise Exception(\"Multiple matches not allowed\")\n+            logger.warning(f\"Multiple matches ({len(match)}) found.\")\n+            \n+        idx = np.argmin(match['d2d'])\n+        obj_id = int(match['id1'][idx])\n+        pn_id = match['id2'][idx]\n \n-        logger.info(\"Found %s (catalog object %s)\", match[0][1], match[0][0])\n+        logger.info(\"Found %s (catalog object %s)\", pn_id, obj_id)\n \n-        return catalog[catalog['ID'] ==  int(match[0][0])][0], match[0][1]\n+        return catalog[catalog['ID'] ==  obj_id][0], pn_id\n \n \n     def get_target_from_catalog(self, catalog):\n",
                            "Merge branch 'match_with_distances' into 'develop'",
                            "Marco Fumana",
                            "2023-07-20T07:47:03.000+00:00",
                            "5a051d79ff8424be51bce4152394570c92614e2f"
                        ],
                        [
                            "@@ -25,7 +25,7 @@\n \"\"\"Module used to perfome the spectra location\"\"\"\n \n import os\n-\n+import numpy as np\n from astropy.table import Table\n \n import ElementsKernel.Logging as log\n@@ -194,11 +194,15 @@ class SpectraLocationCore(ParametersParse):\n             raise Exception(\"No match between catalog and targets\")\n \n         if len(match) > 1:\n-            raise Exception(\"Multiple matches not allowed\")\n+            logger.warning(f\"Multiple matches ({len(match)}) found.\")\n+            \n+        idx = np.argmin(match['d2d'])\n+        obj_id = int(match['id1'][idx])\n+        pn_id = match['id2'][idx]\n \n-        logger.info(\"Found %s (catalog object %s)\", match[0][1], match[0][0])\n+        logger.info(\"Found %s (catalog object %s)\", pn_id, obj_id)\n \n-        return catalog[catalog['ID'] ==  int(match[0][0])][0], match[0][1]\n+        return catalog[catalog['ID'] ==  obj_id][0], pn_id\n \n \n     def get_target_from_catalog(self, catalog):\n",
                            "Allowed multiple matches in taget search",
                            "Marco Fumana",
                            "2023-07-20T07:47:03.000+00:00",
                            "8f5b105ac9d77e62765fe35eef1ae1352a76b993"
                        ]
                    ],
                    "SIR_SpectraLocation/python/SIR_SpectraLocation/SpectraLocationMain.py": [
                        [
                            "@@ -33,12 +33,9 @@ import ElementsKernel.Logging as log\n \n from SIR_SpectraLocation.SpectraLocationCore import SpectraLocationCore\n from SIR_SpectraLocation.DpdLocationTable import DpdLocationTable\n-from SIR_SpectraLocation.LocationTableDQC import LocationTableDQC\n \n from SIR_Utilities.DpdScienceFrame import DpdScienceFrame\n from SIR_Utilities.Mdb import Mdb\n-from SIR_Utilities.Formatters import str_to_bool\n-from SIR_InstrumentModelsBinding import Detector\n from SIR_InstrumentModels.DetectorModel import DetectorModel\n \n \n@@ -155,9 +152,9 @@ def mainMethod(args):\n     logger.info('Entering SpectraLocation mainMethod()')\n \n     if not all((args.opt_model, args.ids_model, args.crv_model)):\n-        raise Exception('opt_model, ids_model and crv_model should all be specified')\n+        raise Exception('opt_model, ids_model and crv_model must all be specified')\n \n-    output_file_names = getOutputFileNames(args)\n+    check_output(args.workdir, args.loc_table, args.overwrite)\n     # load the MDB file\n     mdb = Mdb.load(args.workdir, args.mdb)\n \n@@ -177,65 +174,73 @@ def mainMethod(args):\n \n     #Save INI file content into the LocationTables\n     args.ini_file = spectra_location.get_ini_content()\n-    saveResults(lt, output_file_names, args, dqc=dqc)\n+    save_results(args.workdir, args.loc_table, lt, args, dqc=dqc)\n \n     # the end\n     logger.info(\"Done\")\n \n \n-def checkFileExists(filename, overwrite):\n+def _check_file_exists(filename:str, overwrite:bool):\n     \"\"\"Check if output file already exists and raise an exception in case it exists and overwrite flag is true.\n     \"\"\"\n-    if os.path.isfile(filename):\n-        if overwrite is False:\n-            raise Exception(\"Output location table %s file already exists\" % filename)\n-        else:\n-            logger.warning(\"Output location table %s file will be overwritten\" % filename)\n-\n-\n-def getOutputFileNames(args):\n-    # get the work_dir and the data_dir\n-    if args.loc_table.endswith('.json'):\n-        basename = args.loc_table[:-5]\n-    else:\n-        raise Exception(\"json file is required as loc_table output\")\n-\n-\n-    data_dir = os.path.join(args.workdir, 'data')\n-    if not os.path.isdir(data_dir):\n-        os.makedirs(data_dir)\n-\n-    output_file_names = {}\n-    output_file_names[Detector.NO_DET] = os.path.join(args.workdir, args.loc_table)\n-\n-    checkFileExists(output_file_names[Detector.NO_DET], args.overwrite)\n-\n-    for detector in DetectorModel.getDetectorRange():\n-        det_name = DetectorModel.getDetectorName(detector)\n-        output_file_names[detector] = f\"{basename}_{det_name}.xml\"\n+    if os.path.isfile(filename) is False:\n+        return\n+    \n+    if overwrite is False:\n+        raise Exception(\"Output location table %s file already exists\" % filename)\n \n-        checkFileExists(output_file_names[detector], args.overwrite)\n+    logger.warning(\"Output location table %s file will be overwritten\" % filename)\n \n-    return output_file_names\n \n-\n-def saveResults(lt, output_file_names, args, dqc=None):\n-\n-    # output writing\n-    # if os.path.isfile(output_file_name):\n-    #    os.remove(output_file_name)\n+def check_output(workdir:str, json_name:str, overwrite:bool) -> str:\n+    \"\"\"Creates output file names XML and check if they already exist.\n+    \"\"\"\n+    if json_name.endswith('.json') is False:\n+        raise Exception(\"json file is required as loc_table output\")\n+    \n+    full_path = os.path.join(workdir, json_name)\n+    _check_file_exists(full_path, overwrite)\n+    return full_path \n+    \n+        \n+def _get_filenames(workdir:str, json_name:str) -> dict:\n+    \"\"\"Creates output XML filenames: full path\n+    \"\"\"\n+    json_name = os.path.normpath(json_name)\n+    workdir = os.path.normpath(workdir)\n+    \n+    #Remove extention\n+    basename = os.path.splitext(json_name)[0]\n+    #Remove workdir in case out json file is provided with the full path.\n+    if basename.startswith(workdir):\n+        basename = basename[len(workdir)+1:] #+1 is the /\n+    \n+    return {det_id:  f\"{basename}_DET_{det_id}.xml\" for det_id in DetectorModel.getDetectorIDRange()}\n+\n+\n+def save_results(workdir:str, json_name:str, lt, args, dqc=None):\n+    \"\"\"Save Location tables XML, h5 and json file\n+    \"\"\"\n \n     # List of files collected in the json output file\n-    data_dir = os.path.join(args.workdir, 'data')\n+    datadir = os.path.join(workdir, 'data')\n+    os.makedirs(datadir, exist_ok=True)\n \n     # One xml and related h5 file is created for each detector\n     logger.info(\"Writing the location table data products on disk\")\n-    filelist = []\n-    for detector in DetectorModel.getDetectorRange():\n-        lt.setDetector(detector)\n-        DpdLocationTable.save(lt, data_dir, os.path.join(args.workdir, output_file_names[detector]), args=args, dq=dqc)\n-        filelist.append(output_file_names[detector])\n-\n-    json_file = open(output_file_names[Detector.NO_DET], 'w')\n-    json_file.write(json.dumps(filelist))\n-    json_file.close()\n+    filenames = _get_filenames(workdir, json_name)\n+    for det_id in DetectorModel.getDetectorIDRange():\n+        if lt.getSize(det_id) == 0:\n+            #Empty table: do not save it\n+            logger.info(f\"Location Table for detector {det_id} not created: no spectra\")\n+            filenames.pop(det_id)\n+            continue\n+        \n+        lt.setDetector(det_id)\n+        _full_name = os.path.join(workdir, filenames[det_id])\n+        DpdLocationTable.save(lt, datadir, _full_name, args=args, dq=dqc)        \n+\n+    _full_name = os.path.join(workdir, json_name)\n+    with open(_full_name, 'w') as json_file:\n+        json_file.write(json.dumps(list(filenames.values())))\n+    logger.info(f\"Json file {_full_name} saved\")\n",
                            "Merge branch 'no_empty_loctabs' into 'develop'",
                            "Marco Fumana",
                            "2023-08-04T16:26:16.000+00:00",
                            "b040534c0618405da6e8607cee6ea0b9ef640913"
                        ]
                    ],
                    "SIR_SpectraLocation/src/lib/LocationTable.cpp": [
                        [
                            "@@ -308,6 +308,17 @@ size_t LocationTable::getSize() const\n     return m_location_objects.size();\n }\n \n+size_t LocationTable::getSize(std::string const &det_id) const{\n+  Detector::Number det_num = DetectorModel::getDetectorNumber(det_id);\n+\n+  size_t nobj = 0;\n+  for (auto const &item: m_location_objects){\n+    nobj+= static_cast<size_t>(item.second->hasSpectraOnDetector(det_num));\n+  }\n+  return nobj;\n+}\n+\n+\n \n std::unordered_map<AstronomicalObjectID, LocationObjectPtr>::iterator LocationTable::begin() {\n   return m_location_objects.begin();\n",
                            "Merge branch 'no_empty_loctabs' into 'develop'",
                            "Marco Fumana",
                            "2023-08-04T16:26:16.000+00:00",
                            "b040534c0618405da6e8607cee6ea0b9ef640913"
                        ]
                    ],
                    "SIR_SpectraLocation/tests/python/SpectraLocationMain_test.py": [
                        [
                            "@@ -0,0 +1,229 @@\n+#\n+# Copyright (C) 2015-2020 Euclid Science Ground Segment\n+#\n+# This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General\n+# Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option)\n+# any later version.\n+#\n+# This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied\n+# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n+# details.\n+#\n+# You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to\n+# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+#\n+\n+#\n+# File SIR_SpectraLocationMain_test.py\n+#\n+# Created on: Jul 31, 2023\n+#\n+# Author: Marco Fumana\n+#\n+\n+import os\n+import json\n+\n+import pytest\n+from unittest.mock import MagicMock, patch\n+\n+from SIR_InstrumentModels.DetectorModel import DetectorModel\n+\n+from SIR_SpectraLocation.SpectraLocationMain import _get_filenames\n+from SIR_SpectraLocation.SpectraLocationMain import _check_file_exists\n+from SIR_SpectraLocation.SpectraLocationMain import check_output\n+from SIR_SpectraLocation.SpectraLocationMain import save_results\n+\n+\n+class TestSpectraLocationMain:\n+\n+    @patch('SIR_SpectraLocation.SpectraLocationMain.os.path.isfile', return_value=False)\n+    def test__check_file_exists1(self, mock_os):\n+        \"\"\"\n+        \"\"\"\n+        \n+        #Nothing to do: file does not exist\n+        _check_file_exists(\"aaaaaaaaaa\", overwrite=True)\n+        _check_file_exists(\"aaaaaaaaaa\", overwrite=False)\n+\n+    @patch('SIR_SpectraLocation.SpectraLocationMain.logger')\n+    @patch('SIR_SpectraLocation.SpectraLocationMain.os.path.isfile', return_value=True)\n+    def test__check_file_exists2(self, mock_os, mock_log):\n+        \"\"\"\n+        \"\"\"\n+        \n+        #File exists overwrite True: raise warning\n+        _check_file_exists(\"aaaaaaaaaa\", overwrite=True)\n+        \n+        assert mock_log.warning.call_args_list[0][0][0] == \"Output location table aaaaaaaaaa file will be overwritten\"\n+        \n+    @patch('SIR_SpectraLocation.SpectraLocationMain.logger')\n+    @patch('SIR_SpectraLocation.SpectraLocationMain.os.path.isfile', return_value=True)\n+    def test__check_file_exists3(self, mock_os, mock_log):\n+        \"\"\"\n+        \"\"\"\n+        \n+        #File exists overwrite True: raise warning\n+        with pytest.raises(Exception) as file_exists:\n+            _check_file_exists(\"aaaaaaaaaa\", overwrite=False)\n+               \n+        assert \"Output location table aaaaaaaaaa file already exists\" == str(file_exists.value)\n+        \n+        \n+    def test_check_output1(self):\n+        \"\"\"\n+        \"\"\"\n+        \n+        #File exists overwrite True: raise warning\n+        with pytest.raises(Exception) as file_exists:\n+            check_output(None, \"a.xml\", None)\n+               \n+        assert \"json file is required as loc_table output\" == str(file_exists.value)\n+        \n+    \n+    @patch('SIR_SpectraLocation.SpectraLocationMain._check_file_exists')    \n+    def test_check_output2(self, mock_check_file_exists, tmpdir):\n+        \"\"\"\n+        \"\"\"\n+        \n+        #File exists overwrite True: raise warning\n+        mock_bool = MagicMock()\n+        fullname = check_output(tmpdir, \"a.json\", mock_bool)\n+        \n+        assert fullname == os.path.join(tmpdir, \"a.json\")\n+        \n+        assert mock_check_file_exists.call_args_list[0][0][0] == fullname\n+        assert mock_check_file_exists.call_args_list[0][0][1] is mock_bool\n+        \n+        \n+    def test_get_filenames1(self, tmpdir):\n+        filenames = _get_filenames(str(tmpdir), \"abc.json\")\n+        \n+        for det_id in DetectorModel.getDetectorIDRange():\n+            assert filenames[det_id] == f\"abc_DET_{det_id}.xml\"\n+            \n+        assert len(filenames) == 16\n+        \n+    def test_get_filenames2(self, tmpdir):\n+        \"\"\"Check workdir is removed in json list\"\"\"\n+        filenames = _get_filenames(str(tmpdir), os.path.join(tmpdir, \"abc.json\"))\n+        \n+        for det_id in DetectorModel.getDetectorIDRange():\n+            assert filenames[det_id] == f\"abc_DET_{det_id}.xml\"\n+            \n+        assert len(filenames) == 16    \n+    \n+    def test_get_filenames3(self, tmpdir):\n+        \"\"\"Check workdir (with final /) is removed in json list\"\"\"\n+        filenames = _get_filenames(str(tmpdir)+'/', os.path.join(tmpdir, \"abc.json\"))\n+        \n+        for det_id in DetectorModel.getDetectorIDRange():\n+            assert filenames[det_id] == f\"abc_DET_{det_id}.xml\"\n+            \n+        assert len(filenames) == 16      \n+\n+    @patch('SIR_SpectraLocation.SpectraLocationMain.DpdLocationTable')\n+    def test_save_results1(self, mock_dpd, tmpdir):\n+        \n+        def getSize(det_id):\n+            if det_id == '22':\n+                return 2\n+            if det_id == '33':\n+                return 1\n+            return 0\n+        \n+        args = MagicMock()\n+        args.workdir = tmpdir\n+        dqc = MagicMock()\n+        lt = MagicMock()\n+        lt.getSize = getSize\n+        outfile = \"lt_test.json\"\n+        \n+        _data_dir = os.path.join(args.workdir, 'data')\n+        assert os.path.isdir(_data_dir) is False\n+        assert os.path.isfile(os.path.join(tmpdir, outfile)) is False\n+        \n+        \n+        save_results(str(tmpdir), outfile, lt, args, dqc=dqc)\n+        assert os.path.isdir(_data_dir) is True\n+        \n+        assert lt.setDetector.call_args_list[0][0][0] == '22'\n+        assert lt.setDetector.call_args_list[1][0][0] == '33'\n+        \n+        assert mock_dpd.save.call_args_list[0][0][0] is lt\n+        assert mock_dpd.save.call_args_list[0][0][1] == _data_dir\n+        assert mock_dpd.save.call_args_list[0][0][2] == os.path.join(tmpdir, \"lt_test_DET_22.xml\")\n+        assert mock_dpd.save.call_args_list[0][1]['args'] is args\n+        assert mock_dpd.save.call_args_list[0][1]['dq'] is dqc\n+        \n+        assert mock_dpd.save.call_args_list[1][0][0] is lt\n+        assert mock_dpd.save.call_args_list[1][0][1] == _data_dir\n+        assert mock_dpd.save.call_args_list[1][0][2] == os.path.join(tmpdir, \"lt_test_DET_33.xml\")\n+        assert mock_dpd.save.call_args_list[1][1]['args'] is args\n+        assert mock_dpd.save.call_args_list[1][1]['dq'] is dqc        \n+                \n+        assert os.path.isfile(os.path.join(tmpdir, outfile)) is True\n+        \n+        with open(os.path.join(tmpdir, outfile), 'r') as results:\n+            xmls = json.load(results)\n+            \n+        assert len(xmls) == 2\n+        assert xmls[0] == \"lt_test_DET_22.xml\"\n+        assert xmls[1] == \"lt_test_DET_33.xml\"\n+            \n+            \n+\n+    @patch('SIR_SpectraLocation.SpectraLocationMain.DpdLocationTable')\n+    def test_save_results2(self, mock_dpd, tmpdir):\n+        \"\"\"Check with extra path\n+        \"\"\"\n+        def getSize(det_id):\n+            if det_id == '22':\n+                return 2\n+            if det_id == '33':\n+                return 1\n+            return 0\n+        \n+        args = MagicMock()\n+        args.workdir = tmpdir\n+        dqc = MagicMock()\n+        lt = MagicMock()\n+        lt.getSize = getSize\n+        os.makedirs(os.path.join(tmpdir, \"extra_dir\"), exist_ok=True)\n+        outfile = \"extra_dir/lt_test.json\"\n+        \n+        _data_dir = os.path.join(args.workdir, 'data')\n+        assert os.path.isdir(_data_dir) is False\n+        assert os.path.isfile(os.path.join(tmpdir, outfile)) is False\n+        \n+        \n+        save_results(str(tmpdir), outfile, lt, args, dqc=dqc)\n+        assert os.path.isdir(_data_dir) is True\n+        \n+        assert lt.setDetector.call_args_list[0][0][0] == '22'\n+        assert lt.setDetector.call_args_list[1][0][0] == '33'\n+        \n+        assert mock_dpd.save.call_args_list[0][0][0] is lt\n+        assert mock_dpd.save.call_args_list[0][0][1] == _data_dir\n+        assert mock_dpd.save.call_args_list[0][0][2] == os.path.join(tmpdir, \"extra_dir/lt_test_DET_22.xml\")\n+        assert mock_dpd.save.call_args_list[0][1]['args'] is args\n+        assert mock_dpd.save.call_args_list[0][1]['dq'] is dqc\n+        \n+        assert mock_dpd.save.call_args_list[1][0][0] is lt\n+        assert mock_dpd.save.call_args_list[1][0][1] == _data_dir\n+        assert mock_dpd.save.call_args_list[1][0][2] == os.path.join(tmpdir, \"extra_dir/lt_test_DET_33.xml\")\n+        assert mock_dpd.save.call_args_list[1][1]['args'] is args\n+        assert mock_dpd.save.call_args_list[1][1]['dq'] is dqc        \n+                \n+        assert os.path.isfile(os.path.join(tmpdir, outfile)) is True\n+        \n+        with open(os.path.join(tmpdir, outfile), 'r') as results:\n+            xmls = json.load(results)\n+            \n+        assert len(xmls) == 2\n+        assert xmls[0] == \"extra_dir/lt_test_DET_22.xml\"\n+        assert xmls[1] == \"extra_dir/lt_test_DET_33.xml\"\n+            \n+\n+        \n+        \n\\ No newline at end of file\n",
                            "Merge branch 'no_empty_loctabs' into 'develop'",
                            "Marco Fumana",
                            "2023-08-04T16:26:16.000+00:00",
                            "b040534c0618405da6e8607cee6ea0b9ef640913"
                        ]
                    ],
                    "SIR_SpectraLocation/tests/src/LocationTable_test.cpp": [
                        [
                            "@@ -1001,6 +1001,131 @@ BOOST_AUTO_TEST_CASE(setOrders_test1)\n }\n \n \n+BOOST_AUTO_TEST_CASE( getSize_test1 )\n+{\n+\n+  LocationTable table;\n+  table.setObservationID(123456);\n+  table.setFieldID(1234);\n+  BOOST_CHECK(table.getSize() == 0);\n+  for(auto &det_id: DetectorModel::getDetectorIDRange()){\n+    BOOST_CHECK(table.getSize(det_id) == 0);\n+  }\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE( getSize_test2 )\n+{\n+\n+  LocationTable table;\n+  table.setObservationID(123456);\n+  table.setFieldID(1234);\n+  \n+  AstronomicalObjectPtr aobj1(std::make_shared<AstronomicalObject>(123));\n+  LocationObjectPtr obj1(std::make_shared<LocationObject>(aobj1));\n+  LocationSpectrumPtr spec11(std::make_shared<LocationSpectrum>(GrismModel::Order_0, GrismModel::RGS000));\n+  LocationSpectrumPtr spec12(std::make_shared<LocationSpectrum>(GrismModel::Order_1, GrismModel::RGS000));\n+  spec11->setDetector(Detector::Number::DET_11);\n+  spec12->setDetector(Detector::Number::DET_11);\n+  obj1->addSpectrum(spec11);\n+  obj1->addSpectrum(spec12);\n+  table.addLocationObject(obj1);\n+\n+  BOOST_CHECK(table.getSize() == 1);\n+  for(auto &det_id: DetectorModel::getDetectorIDRange()){\n+    if (det_id == \"11\"){\n+      BOOST_CHECK(table.getSize(det_id) == 1);\n+    }\n+    else{\n+      BOOST_CHECK(table.getSize(det_id) == 0);\n+    }\n+    \n+  }\n+\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE( getSize_test3 )\n+{\n+\n+  LocationTable table;\n+  table.setObservationID(123456);\n+  table.setFieldID(1234);\n+  \n+  AstronomicalObjectPtr aobj1(std::make_shared<AstronomicalObject>(123));\n+  LocationObjectPtr obj1(std::make_shared<LocationObject>(aobj1));\n+  LocationSpectrumPtr spec11(std::make_shared<LocationSpectrum>(GrismModel::Order_0, GrismModel::RGS000));\n+  LocationSpectrumPtr spec12(std::make_shared<LocationSpectrum>(GrismModel::Order_1, GrismModel::RGS000));\n+  spec11->setDetector(Detector::Number::DET_11);\n+  spec12->setDetector(Detector::Number::DET_12);\n+  obj1->addSpectrum(spec11);\n+  obj1->addSpectrum(spec12);\n+  table.addLocationObject(obj1);\n+\n+  BOOST_CHECK(table.getSize() == 1);\n+\n+  for(auto &det_id: DetectorModel::getDetectorIDRange()){\n+    if ((det_id == \"11\") || (det_id == \"12\")){\n+      BOOST_CHECK(table.getSize(det_id) == 1);\n+    }\n+    else{\n+      BOOST_CHECK(table.getSize(det_id) == 0);\n+    }\n+    \n+  }\n+}\n+\n+\n+\n+BOOST_AUTO_TEST_CASE( getSize_test4 )\n+{\n+\n+  LocationTable table;\n+  table.setObservationID(123456);\n+  table.setFieldID(1234);\n+  \n+  AstronomicalObjectPtr aobj1(std::make_shared<AstronomicalObject>(123));\n+  LocationObjectPtr obj1(std::make_shared<LocationObject>(aobj1));\n+  LocationSpectrumPtr spec1_11(std::make_shared<LocationSpectrum>(GrismModel::Order_0, GrismModel::RGS000));\n+  LocationSpectrumPtr spec1_12(std::make_shared<LocationSpectrum>(GrismModel::Order_1, GrismModel::RGS000));\n+  LocationSpectrumPtr _spec1_11(std::make_shared<LocationSpectrum>(GrismModel::Order_1, GrismModel::RGS000));\n+\n+  spec1_11->setDetector(Detector::Number::DET_11);\n+  spec1_12->setDetector(Detector::Number::DET_12);\n+  _spec1_11->setDetector(Detector::Number::DET_11);\n+  obj1->addSpectrum(spec1_11);\n+  obj1->addSpectrum(spec1_12);\n+  obj1->addSpectrum(_spec1_11);\n+  table.addLocationObject(obj1);\n+\n+  AstronomicalObjectPtr aobj2(std::make_shared<AstronomicalObject>(456));\n+  LocationObjectPtr obj2(std::make_shared<LocationObject>(aobj2));\n+  LocationSpectrumPtr spec2_11(std::make_shared<LocationSpectrum>(GrismModel::Order_1, GrismModel::RGS000));\n+  LocationSpectrumPtr spec2_13(std::make_shared<LocationSpectrum>(GrismModel::Order_1, GrismModel::RGS000));\n+  spec2_11->setDetector(Detector::Number::DET_11);\n+  spec2_13->setDetector(Detector::Number::DET_13);\n+  obj2->addSpectrum(spec2_11);\n+  obj2->addSpectrum(spec2_13);\n+  table.addLocationObject(obj2);\n+\n+  BOOST_CHECK(table.getSize() == 2);\n+  for(auto &det_id: DetectorModel::getDetectorIDRange()){\n+    if (det_id == \"11\"){\n+      BOOST_CHECK(table.getSize(det_id) == 2);\n+      continue;\n+    }\n+    if (det_id == \"12\"){\n+      BOOST_CHECK(table.getSize(det_id) == 1);\n+      continue;\n+    }\n+    if (det_id == \"13\"){\n+      BOOST_CHECK(table.getSize(det_id) == 1);\n+      continue;\n+    }\n+    BOOST_CHECK(table.getSize(det_id) == 0);\n+  }\n+}\n+\n BOOST_AUTO_TEST_SUITE_END ()\n \n \n",
                            "Merge branch 'no_empty_loctabs' into 'develop'",
                            "Marco Fumana",
                            "2023-08-04T16:26:16.000+00:00",
                            "b040534c0618405da6e8607cee6ea0b9ef640913"
                        ]
                    ],
                    "SIR_SpectraExtraction/python/SIR_SpectraExtraction/SpectraExtractionMain.py": [
                        [
                            "@@ -269,13 +269,13 @@ def mainMethod(args):\n         )\n \n     loc_table = loc_table[0]\n-    dec_spectra = get_correct_decspectra(args.workdir, args.dec_spectra, loc_table)\n+    dec_xml, dec_h5 = get_correct_decspectra(args.workdir, args.dec_spectra, loc_table)\n \n     data_dir = os.path.join(args.workdir, \"data\")\n-    if dec_spectra is not None:\n-        logger.info(\"Reading Decontaminated Spectra from %s ...\", dec_spectra)\n+    if dec_h5 is not None:\n+        logger.info(\"Reading Decontaminated Spectra from %s ...\", dec_h5)\n         decont_spectra = DecontaminatedSpectraCollection(\n-            os.path.join(data_dir, dec_spectra), data_dir=data_dir\n+            os.path.join(data_dir, dec_h5), data_dir=data_dir\n         )\n     else:\n         decont_spectra = None\n@@ -288,7 +288,9 @@ def mainMethod(args):\n     extracted_spectra = extraction.invoke(catalog)\n \n     dqc = extraction.compute_dqc(extracted_spectra)\n-    dqc.get_decontamination_dqc(os.path.join(args.workdir, args.dec_spectra))\n+    \n+    if dec_xml is not None:\n+        dqc.get_decontamination_dqc(os.path.join(args.workdir, dec_xml))\n \n     # output writing\n     logger.info(\"Writing the extracted spectra data product on disk\")\n@@ -359,9 +361,9 @@ def get_correct_decspectra(workdir, dec_spectra, loc_table):\n         if dpd.Data.Observation.DitherObservation == dither:\n             if dpd.Data.DetectorId == det_id:\n                 logger.info(f\"Detecontamined spectra collection in use {xml_filename}\")\n-                return dpd.Data.CollectionFile.DataContainer.FileName\n+                return xml_filename, dpd.Data.CollectionFile.DataContainer.FileName\n             \n     else:\n         logger.warning(f\"Decontaminated spectra collection not found for {dither} and {det_id}\")\n \n-    return None\n+    return None, None\n",
                            "Merge branch 'ext_bug_DM9.2_2' into 'develop'",
                            "Marco Fumana",
                            "2023-08-01T09:37:04.000+00:00",
                            "57b1d4b79f74b139a8e7c735288b42b5b3c1631e"
                        ],
                        [
                            "@@ -341,35 +341,27 @@ def create_json(workdir, extr_spectra):\n def get_correct_decspectra(workdir, dec_spectra, loc_table):\n     \"\"\"get correct decontaminated spectra from dither/detector\"\"\"\n \n-    detector = loc_table.getDetectorName()\n+    det_id = loc_table.getDetectorID()\n     dither = loc_table.getDither()\n \n-    out = None\n     if dec_spectra.endswith(\".json\"):\n         with open(os.path.join(workdir, dec_spectra)) as f:\n             xml_filenames = json.load(f)\n     else:\n-        xml_filenames = [\n-            dec_spectra,\n-        ]\n+        xml_filenames = [dec_spectra, ]\n \n     for xml_filename in xml_filenames:\n         with open(os.path.join(workdir, xml_filename)) as xml_file:\n             xml_text = xml_file.read()\n \n         dpd = decontaminated_stub.CreateFromDocument(xml_text)\n-        mydith = dpd.Data.Observation.DitherObservation\n-\n-        if mydith == dither:\n-            h5file = dpd.Data.CollectionFile.DataContainer.FileName\n-            id = h5file.rindex(\"DET\")\n-            mydet = h5file[id : id + 6]\n-            if mydet == detector:\n-                out = h5file\n-                break\n+\n+        if dpd.Data.Observation.DitherObservation == dither:\n+            if dpd.Data.DetectorId == det_id:\n+                logger.info(f\"Detecontamined spectra collection in use {xml_filename}\")\n+                return dpd.Data.CollectionFile.DataContainer.FileName\n+            \n     else:\n-        logger.warning(\n-            f\"Decontaminated spectra collection not found for {dither} and {detector}\"\n-        )\n+        logger.warning(f\"Decontaminated spectra collection not found for {dither} and {det_id}\")\n \n-    return out\n+    return None\n",
                            "Merge branch 'ext_bug_DM9.2' into 'develop'",
                            "Marco Fumana",
                            "2023-08-01T09:26:48.000+00:00",
                            "9fa27392bf096c3d6661a877ca47cd944fc27091"
                        ],
                        [
                            "@@ -341,35 +341,27 @@ def create_json(workdir, extr_spectra):\n def get_correct_decspectra(workdir, dec_spectra, loc_table):\n     \"\"\"get correct decontaminated spectra from dither/detector\"\"\"\n \n-    detector = loc_table.getDetectorName()\n+    det_id = loc_table.getDetectorID()\n     dither = loc_table.getDither()\n \n-    out = None\n     if dec_spectra.endswith(\".json\"):\n         with open(os.path.join(workdir, dec_spectra)) as f:\n             xml_filenames = json.load(f)\n     else:\n-        xml_filenames = [\n-            dec_spectra,\n-        ]\n+        xml_filenames = [dec_spectra, ]\n \n     for xml_filename in xml_filenames:\n         with open(os.path.join(workdir, xml_filename)) as xml_file:\n             xml_text = xml_file.read()\n \n         dpd = decontaminated_stub.CreateFromDocument(xml_text)\n-        mydith = dpd.Data.Observation.DitherObservation\n-\n-        if mydith == dither:\n-            h5file = dpd.Data.CollectionFile.DataContainer.FileName\n-            id = h5file.rindex(\"DET\")\n-            mydet = h5file[id : id + 6]\n-            if mydet == detector:\n-                out = h5file\n-                break\n+\n+        if dpd.Data.Observation.DitherObservation == dither:\n+            if dpd.Data.DetectorId == det_id:\n+                logger.info(f\"Detecontamined spectra collection in use {xml_filename}\")\n+                return dpd.Data.CollectionFile.DataContainer.FileName\n+            \n     else:\n-        logger.warning(\n-            f\"Decontaminated spectra collection not found for {dither} and {detector}\"\n-        )\n+        logger.warning(f\"Decontaminated spectra collection not found for {dither} and {det_id}\")\n \n-    return out\n+    return None\n",
                            "Bug fixed in case decontaminated json is provided",
                            "Marco Fumana",
                            "2023-08-01T09:26:48.000+00:00",
                            "a6c1f94d4f5e245eb7c15d42f06265e1cabfbe2a"
                        ]
                    ],
                    "SIR_InstrumentModels/SIR_InstrumentModels/DetectorModel.h": [
                        [
                            "@@ -559,6 +559,7 @@ void setWCS(std::string const &filename, const bool rotated=false);\n    * @return True if inside, False otherwise\n    */\n   bool isInside(double const x_pix, double const y_pix) const;\n+  bool isInside(PixelPosition const &pix) const;\n \n   bool hasWCS(std::string const &det_id) const;\n   Array<double> getCD(std::string const &det_id) const;\n",
                            "Merge branch 'PN_no_stuck2' into 'develop'",
                            "Marco Fumana",
                            "2023-07-27T09:31:25.000+00:00",
                            "b2271bee21065f2f1c1ca58a7e3531744c0ea180"
                        ],
                        [
                            "@@ -339,6 +339,13 @@ public:\n   */\n   static const std::vector<Detector::Number> range;\n \n+  /**\n+  * @brief vector of detector ID\n+  * @param std::string\n+  * @return a vector of Detector ID\n+  */\n+  static const std::vector<std::string> id_range;\n+\n   /**\n   * @brief detector names\n   * @param string of detectors\n@@ -431,6 +438,12 @@ void setWCS(std::string const &filename, const bool rotated=false);\n    */\n   static std::vector<Detector::Number> getDetectorRange();\n \n+  /**\n+   * @brief Get vector with detector enums between DET_11 and Detector_16\n+   * @return Detector enum vector\n+   */\n+  static std::vector<std::string> getDetectorIDRange();\n+  \n   /** \n   * @brief get map from IDs to Numbers\n   * @return a map\n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ],
                        [
                            "@@ -339,6 +339,13 @@ public:\n   */\n   static const std::vector<Detector::Number> range;\n \n+  /**\n+  * @brief vector of detector ID\n+  * @param std::string\n+  * @return a vector of Detector ID\n+  */\n+  static const std::vector<std::string> id_range;\n+\n   /**\n   * @brief detector names\n   * @param string of detectors\n@@ -431,6 +438,12 @@ void setWCS(std::string const &filename, const bool rotated=false);\n    */\n   static std::vector<Detector::Number> getDetectorRange();\n \n+  /**\n+   * @brief Get vector with detector enums between DET_11 and Detector_16\n+   * @return Detector enum vector\n+   */\n+  static std::vector<std::string> getDetectorIDRange();\n+  \n   /** \n   * @brief get map from IDs to Numbers\n   * @return a map\n",
                            "Fitted mode is now implemented in background subtraction",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "5cac1ca71bbf905c0b9db259d4fb526a2e5e49ee"
                        ]
                    ],
                    "SIR_InstrumentModels/src/lib/DetectorModel.cpp": [
                        [
                            "@@ -828,6 +828,15 @@ bool DetectorModel::isInside(double const x_pix, double const y_pix) const\n         (y_pix >= -PIXEL_OFFSET && y_pix <= (double)getDetYPixels() - 1 + PIXEL_OFFSET));\n }\n \n+bool DetectorModel::isInside(PixelPosition const &pix) const\n+{\n+  if (DetectorModel::isOnDetector(pix) == false){\n+    return false;\n+  }\n+  return isInside(pix[0], pix[1]);\n+}\n+\n+\n bool DetectorModel::isRotated() const{\n   return m_rotated;\n }\n",
                            "Merge branch 'PN_no_stuck2' into 'develop'",
                            "Marco Fumana",
                            "2023-07-27T09:31:25.000+00:00",
                            "b2271bee21065f2f1c1ca58a7e3531744c0ea180"
                        ],
                        [
                            "@@ -415,6 +415,11 @@ const std::vector<Detector::Number> DetectorModel::range = {Detector::Number::DE\n         Detector::Number::DET_13, Detector::Number::DET_23, Detector::Number::DET_33, Detector::Number::DET_43, \n         Detector::Number::DET_14, Detector::Number::DET_24, Detector::Number::DET_34, Detector::Number::DET_44 };\n \n+const std::vector<std::string> DetectorModel::id_range = {\"11\", \"21\", \"31\", \"41\", \n+                                                          \"12\", \"22\", \"32\", \"42\", \n+                                                          \"13\", \"23\", \"33\", \"43\", \n+                                                          \"14\", \"24\", \"34\", \"44\" };\n+\n const std::vector<std::string> DetectorModel::names = {\"NO_DET\",\n                                                        \"DET_11\", \"DET_21\", \"DET_31\", \"DET_41\", \n                                                        \"DET_12\", \"DET_22\", \"DET_32\", \"DET_42\", \n@@ -535,6 +540,11 @@ std::vector<Detector::Number> DetectorModel::getDetectorRange()\n }\n \n \n+std::vector<std::string> DetectorModel::getDetectorIDRange()\n+{\n+    return DetectorModel::id_range;\n+}\n+\n std::map<std::string, Detector::Number> DetectorModel::getIDs2Numbers(){\n   return DetectorModel::id2num;\n }\n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ],
                        [
                            "@@ -415,6 +415,11 @@ const std::vector<Detector::Number> DetectorModel::range = {Detector::Number::DE\n         Detector::Number::DET_13, Detector::Number::DET_23, Detector::Number::DET_33, Detector::Number::DET_43, \n         Detector::Number::DET_14, Detector::Number::DET_24, Detector::Number::DET_34, Detector::Number::DET_44 };\n \n+const std::vector<std::string> DetectorModel::id_range = {\"11\", \"21\", \"31\", \"41\", \n+                                                          \"12\", \"22\", \"32\", \"42\", \n+                                                          \"13\", \"23\", \"33\", \"43\", \n+                                                          \"14\", \"24\", \"34\", \"44\" };\n+\n const std::vector<std::string> DetectorModel::names = {\"NO_DET\",\n                                                        \"DET_11\", \"DET_21\", \"DET_31\", \"DET_41\", \n                                                        \"DET_12\", \"DET_22\", \"DET_32\", \"DET_42\", \n@@ -535,6 +540,11 @@ std::vector<Detector::Number> DetectorModel::getDetectorRange()\n }\n \n \n+std::vector<std::string> DetectorModel::getDetectorIDRange()\n+{\n+    return DetectorModel::id_range;\n+}\n+\n std::map<std::string, Detector::Number> DetectorModel::getIDs2Numbers(){\n   return DetectorModel::id2num;\n }\n",
                            "Fitted mode is now implemented in background subtraction",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "5cac1ca71bbf905c0b9db259d4fb526a2e5e49ee"
                        ],
                        [
                            "@@ -274,7 +274,7 @@ void DetectorModel::setWCS(std::string const &filename, const bool rotated){\n     m_det_wcs[det_id] = wcs;\n \n     uint32_t sca_id = 0;\n-    if (fits_read_key(fptr, TULONG, \"SCA_ID\", &sca_id, NULL, &status)){\n+    if (fits_read_key(fptr, TUINT, \"SCA_ID\", &sca_id, NULL, &status)){\n       throw std::runtime_error(\"Error reading SCA_ID\");\n     }\n     setSlot(item.first, sca_id);\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ],
                        [
                            "@@ -274,7 +274,7 @@ void DetectorModel::setWCS(std::string const &filename, const bool rotated){\n     m_det_wcs[det_id] = wcs;\n \n     uint32_t sca_id = 0;\n-    if (fits_read_key(fptr, TULONG, \"SCA_ID\", &sca_id, NULL, &status)){\n+    if (fits_read_key(fptr, TUINT, \"SCA_ID\", &sca_id, NULL, &status)){\n       throw std::runtime_error(\"Error reading SCA_ID\");\n     }\n     setSlot(item.first, sca_id);\n",
                            "Updated pipeline to DM9.2",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "604412eacacc8163e4783496ac3e7b93de8299e8"
                        ],
                        [
                            "@@ -755,7 +755,7 @@ Array<double> DetectorModel::getFOVPositions(Array<double> const &pixels, const\n   if (isRotated()){\n     /* Convert original SIM FOV positions into the rotated SIR FOV position */\n     world.col(0).swap(world.col(1));\n-    world.col(0)*=-1;\n+    world.col(1)*=-1;\n   }\n \n   return world;\n",
                            "Merge branch 'bug_ref_lambda_mm_position' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-06-16T14:36:21.000+00:00",
                            "d02039c6cd56c3408bab2c55f9e03c7587c8634f"
                        ],
                        [
                            "@@ -755,7 +755,7 @@ Array<double> DetectorModel::getFOVPositions(Array<double> const &pixels, const\n   if (isRotated()){\n     /* Convert original SIM FOV positions into the rotated SIR FOV position */\n     world.col(0).swap(world.col(1));\n-    world.col(0)*=-1;\n+    world.col(1)*=-1;\n   }\n \n   return world;\n",
                            "Fixed bug in getFOVPositions",
                            "Marco Fumana",
                            "2023-06-16T14:36:21.000+00:00",
                            "dca91522b0f57963d952eb41eba7bcc6eb65a6aa"
                        ]
                    ],
                    "SIR_SpectraLocation/python/SIR_SpectraLocation/LocationTable.py": [
                        [
                            "@@ -314,18 +314,38 @@ class LocationTable(CLocationTable):\n \n             self.addLocationObject(lo)\n \n+\n+    def _is_target_contained(self, spectrum):\n+        pix = spectrum.computePosition(self.getWavelengthStart(), 0)\n+        if self.det_model.isInside(pix) is False:\n+            logger.warning(\"Bluest part of the target out of detector\")\n+            return False\n+    \n+        pix = spectrum.computePosition(self.getWavelengthEnd(), 0)\n+        if self.det_model.isInside(pix) is False:\n+            logger.warning(\"Reddest part of the target out of detector\")\n+            return False\n+    \n+        return True\n+                    \n+        \n     def fill_target_region(self, target, catalog, orders, extra_tilt=0.0, region_xsize=1000, region_ysize=200):\n \n         target_lo = self.create_location_object(target, (GrismModel.Order_1,), extra_tilt=extra_tilt)\n \n         target_spectra = target_lo.getSpectraByOrder(GrismModel.Order_1)\n         if len(target_spectra) == 0:\n-            raise Exception(\"No target spectrum\")\n+            logger.warning(f\"No target spectrum. Skip this frame (PTGID {self.getPointingID()})\")\n+            return\n+            \n         elif len(target_spectra) > 1:\n-            raise Exception(\"Target spectrum not fully contained into a unique detector\")\n-        else:\n-            target_pos = target_spectra[0].getLambdaRefPosition()[target_spectra[0].getApertureSize()//2]\n-            target_det = target_spectra[0].getDetectorNumber()\n+            logger.warning(f\"Target spectrum not fully contained into a unique detector. Skip this frame (PTGID {self.getPointingID()})\")\n+            return\n+\n+        self._is_target_contained(target_spectra[0])\n+\n+        target_pos = target_spectra[0].getLambdaRefPosition()[target_spectra[0].getApertureSize()//2]\n+        target_det = target_spectra[0].getDetectorNumber()\n \n         hxsize = region_xsize/2\n         hysize = region_ysize/2\n",
                            "Merge branch 'PN_no_stuck2' into 'develop'",
                            "Marco Fumana",
                            "2023-07-27T09:31:25.000+00:00",
                            "b2271bee21065f2f1c1ca58a7e3531744c0ea180"
                        ],
                        [
                            "@@ -138,7 +138,7 @@ class LocationTable(CLocationTable):\n         self._lo_factory = value\n \n \n-    def create_location_object(self, ao, orders, extra_tilt=None):\n+    def create_location_object(self, ao, orders=None, extra_tilt=None):\n         \"\"\"\n         Creates the LocationObject starting from the AstronomicalObject and using the LocationObjectFactory\n \n@@ -151,6 +151,9 @@ class LocationTable(CLocationTable):\n         if self.lo_factory is None:\n             raise Exception(\"LocationObject Factory not set yet!\")\n \n+        if orders is None:\n+            orders = self.opt_model.mapped_orders\n+\n         # create the Location Object: computes position, sizes and orientation\n         lo = self.lo_factory.create(ao, orders)\n         if extra_tilt is None:\n",
                            "Merge branch 'fix_many_orders' into 'develop'",
                            "Marco Fumana",
                            "2023-07-26T13:16:25.000+00:00",
                            "25e408c2874245f292f0532e765dcbcc55a21e24"
                        ],
                        [
                            "@@ -138,7 +138,7 @@ class LocationTable(CLocationTable):\n         self._lo_factory = value\n \n \n-    def create_location_object(self, ao, orders, extra_tilt=None):\n+    def create_location_object(self, ao, orders=None, extra_tilt=None):\n         \"\"\"\n         Creates the LocationObject starting from the AstronomicalObject and using the LocationObjectFactory\n \n@@ -151,6 +151,9 @@ class LocationTable(CLocationTable):\n         if self.lo_factory is None:\n             raise Exception(\"LocationObject Factory not set yet!\")\n \n+        if orders is None:\n+            orders = self.opt_model.mapped_orders\n+\n         # create the Location Object: computes position, sizes and orientation\n         lo = self.lo_factory.create(ao, orders)\n         if extra_tilt is None:\n",
                            "Added mapped_orders attribute in OptModel",
                            "Marco Fumana",
                            "2023-07-26T13:16:25.000+00:00",
                            "1a8cb68923cb4246eef1cbfffbaad3ae5b32a565"
                        ],
                        [
                            "@@ -240,8 +240,9 @@ class LocationTable(CLocationTable):\n         loc_spectrum.setLambdaRefValue(self.opt_model.getReferenceLambda(grism_order))\n \n         #Set lambda reference virtual slit on the current detector\n-        slit_pix = self.det_model.getPixels(slit_mm, detector)\n-        loc_spectrum.setLambdaRefPosition(slit_pix)\n+        #slit_pix = self.det_model.getPixels(slit_mm, detector)\n+        #loc_spectrum.setLambdaRefPosition(slit_pix)\n+        loc_spectrum.setFOVLambdaRefPosition(slit_mm)\n \n         loc_spectrum.setPivot(pivot_mm[0], pivot_mm[1])\n \n",
                            "Merge branch 'bug_ref_lambda_mm_position' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-06-16T14:36:21.000+00:00",
                            "d02039c6cd56c3408bab2c55f9e03c7587c8634f"
                        ],
                        [
                            "@@ -240,8 +240,9 @@ class LocationTable(CLocationTable):\n         loc_spectrum.setLambdaRefValue(self.opt_model.getReferenceLambda(grism_order))\n \n         #Set lambda reference virtual slit on the current detector\n-        slit_pix = self.det_model.getPixels(slit_mm, detector)\n-        loc_spectrum.setLambdaRefPosition(slit_pix)\n+        #slit_pix = self.det_model.getPixels(slit_mm, detector)\n+        #loc_spectrum.setLambdaRefPosition(slit_pix)\n+        loc_spectrum.setFOVLambdaRefPosition(slit_mm)\n \n         loc_spectrum.setPivot(pivot_mm[0], pivot_mm[1])\n \n",
                            "Fixed bug in getFOVPositions",
                            "Marco Fumana",
                            "2023-06-16T14:36:21.000+00:00",
                            "dca91522b0f57963d952eb41eba7bcc6eb65a6aa"
                        ]
                    ],
                    "SIR_SpectraDecontamination/python/SIR_SpectraDecontamination/SpectraDecontaminator.py": [
                        [
                            "@@ -453,7 +453,7 @@ class SpectraDecontaminator(object):\n             for object_id in table:\n                 loc = table.getLocationObject(object_id)\n                 astro_object = loc.getAstronomicalObject()\n-                loc = table.create_location_object(astro_object, orders=(0, 1, 2))\n+                loc = table.create_location_object(astro_object)\n \n                 if object_id in object_info:\n                     # the object is already here. Just update the spectra location info.\n",
                            "Merge branch 'dec_orders_optional' into 'develop'",
                            "Marco Fumana",
                            "2023-07-27T07:25:26.000+00:00",
                            "9bf867597ac04490306762c5a67c5a87aac8549e"
                        ],
                        [
                            "@@ -53,6 +53,7 @@ class SpectraDecontaminator(object):\n                  limit_band='H',\n                  limit_mag='1000',\n                  zeroth_order_mag=20,\n+                 second_order_mag=16,\n                  padding=0):\n         \"\"\"\n \n@@ -87,6 +88,10 @@ class SpectraDecontaminator(object):\n             The magnitude limit for flagging the positions of zeroth-order spectra. Zeroth-order spectra\n             that are fainter than this limit in the Y, J, and H bands will be completely ignored.\n \n+        second_order_mag: float\n+            The magnitude limit for flagging the positions of second-order spectra. Second-order spectra\n+            that are fainter than this limit in the Y, J, and H bands will be completely ignored.\n+\n         padding: int\n             The number of pixels around the box specified in the `location_tables` to include in the spectral\n             cutouts.\n@@ -109,6 +114,7 @@ class SpectraDecontaminator(object):\n         self._cutouts = cutouts\n \n         AstroObjectInfo.ZEROTH_ORDER_THRESHOLD = zeroth_order_mag\n+        AstroObjectInfo.SECOND_ORDER_THRESHOLD = second_order_mag\n \n         self._padding = padding\n \n@@ -447,7 +453,7 @@ class SpectraDecontaminator(object):\n             for object_id in table:\n                 loc = table.getLocationObject(object_id)\n                 astro_object = loc.getAstronomicalObject()\n-                loc = table.create_location_object(astro_object, orders=(0, 1))\n+                loc = table.create_location_object(astro_object, orders=(0, 1, 2))\n \n                 if object_id in object_info:\n                     # the object is already here. Just update the spectra location info.\n@@ -456,8 +462,7 @@ class SpectraDecontaminator(object):\n                     # the object has not been added to _objects_by_id yet; add it now:\n                     object_data = AstroObjectInfo(loc, self._cutouts, self._phot_info, limit_band, limit_mag)\n \n-                    # If the object is bright enough and contains all of the required data, load its spectra\n-                    # and add it to object_info\n+                    # If the object is bright enough, load its spectra and add it to object_info\n                     if object_data.is_usable:\n                         object_data.load_spectra(loc, self._det[dither], self._padding)\n                         object_info[object_id] = object_data\n@@ -506,6 +511,7 @@ class SpectraDecontaminator(object):\n         if spec.science is not None and spec.flags is not None:\n             # the spectrum has already been decontaminated; return\n             return\n+\n         self._dec_counter += 1\n         spec_info = spec.spec_info\n         dither = spec_info.dither\n@@ -551,8 +557,9 @@ class SpectraDecontaminator(object):\n                     interpolation_mask = (model_of_contaminant.offset, model_of_contaminant.interpolated_pixels)\n \n                     Utils.set_flag(mask=interpolation_mask, canvas=flag_canvas, flag=Flags.MISSING)\n-                elif contam.order == 0:\n-                    # this contaminant is a zeroth-order, so flag it:\n+                elif contam.order in (0, 2) or contam.astro_object_info.invalid_mag:\n+                    # This contaminant is a zeroth-order, a bright second-order, or an object with unknown magnitude,\n+                    # which means that it cannot be modelled. Flag it:\n                     self._flag_zeroth(contam.bbox, spec_offset, new_flags)\n \n                 contam.clear_convolution_kernel()\n@@ -616,8 +623,9 @@ class SpectraDecontaminator(object):\n         variance_canvas = (decon_spec.spec_info.get_offset(), variance)\n \n         for contam in decon_spec.contaminants:\n-            if contam.order == 0:  # The contaminant is a zeroth-order spectrum.\n-                # Set infinite variance.\n+            if contam.order in (0, 2) or contam.astro_object_info.invalid_mag:\n+                # The contaminant cannot be modelled because it is a zeroth-order, or a bright second-order, or it has\n+                # unknown or invalid magnitudes. So we set infinite variance for the region covered by this spectrum.\n                 _, _, width, height = contam.bbox\n                 var = np.empty((height, width))\n                 var[:] = np.inf\n",
                            "Merge branch 'decontamination-with-new-tables' into 'develop'",
                            "Marco Fumana",
                            "2023-07-12T15:52:55.000+00:00",
                            "6ac38f0c2d5531e352ba378b25b5531fac1193dc"
                        ],
                        [
                            "@@ -53,6 +53,7 @@ class SpectraDecontaminator(object):\n                  limit_band='H',\n                  limit_mag='1000',\n                  zeroth_order_mag=20,\n+                 second_order_mag=16,\n                  padding=0):\n         \"\"\"\n \n@@ -87,6 +88,10 @@ class SpectraDecontaminator(object):\n             The magnitude limit for flagging the positions of zeroth-order spectra. Zeroth-order spectra\n             that are fainter than this limit in the Y, J, and H bands will be completely ignored.\n \n+        second_order_mag: float\n+            The magnitude limit for flagging the positions of second-order spectra. Second-order spectra\n+            that are fainter than this limit in the Y, J, and H bands will be completely ignored.\n+\n         padding: int\n             The number of pixels around the box specified in the `location_tables` to include in the spectral\n             cutouts.\n@@ -109,6 +114,7 @@ class SpectraDecontaminator(object):\n         self._cutouts = cutouts\n \n         AstroObjectInfo.ZEROTH_ORDER_THRESHOLD = zeroth_order_mag\n+        AstroObjectInfo.SECOND_ORDER_THRESHOLD = second_order_mag\n \n         self._padding = padding\n \n@@ -447,7 +453,7 @@ class SpectraDecontaminator(object):\n             for object_id in table:\n                 loc = table.getLocationObject(object_id)\n                 astro_object = loc.getAstronomicalObject()\n-                loc = table.create_location_object(astro_object, orders=(0, 1))\n+                loc = table.create_location_object(astro_object, orders=(0, 1, 2))\n \n                 if object_id in object_info:\n                     # the object is already here. Just update the spectra location info.\n@@ -456,8 +462,7 @@ class SpectraDecontaminator(object):\n                     # the object has not been added to _objects_by_id yet; add it now:\n                     object_data = AstroObjectInfo(loc, self._cutouts, self._phot_info, limit_band, limit_mag)\n \n-                    # If the object is bright enough and contains all of the required data, load its spectra\n-                    # and add it to object_info\n+                    # If the object is bright enough, load its spectra and add it to object_info\n                     if object_data.is_usable:\n                         object_data.load_spectra(loc, self._det[dither], self._padding)\n                         object_info[object_id] = object_data\n@@ -506,6 +511,7 @@ class SpectraDecontaminator(object):\n         if spec.science is not None and spec.flags is not None:\n             # the spectrum has already been decontaminated; return\n             return\n+\n         self._dec_counter += 1\n         spec_info = spec.spec_info\n         dither = spec_info.dither\n@@ -551,8 +557,9 @@ class SpectraDecontaminator(object):\n                     interpolation_mask = (model_of_contaminant.offset, model_of_contaminant.interpolated_pixels)\n \n                     Utils.set_flag(mask=interpolation_mask, canvas=flag_canvas, flag=Flags.MISSING)\n-                elif contam.order == 0:\n-                    # this contaminant is a zeroth-order, so flag it:\n+                elif contam.order in (0, 2) or contam.astro_object_info.invalid_mag:\n+                    # This contaminant is a zeroth-order, a bright second-order, or an object with unknown magnitude,\n+                    # which means that it cannot be modelled. Flag it:\n                     self._flag_zeroth(contam.bbox, spec_offset, new_flags)\n \n                 contam.clear_convolution_kernel()\n@@ -616,8 +623,9 @@ class SpectraDecontaminator(object):\n         variance_canvas = (decon_spec.spec_info.get_offset(), variance)\n \n         for contam in decon_spec.contaminants:\n-            if contam.order == 0:  # The contaminant is a zeroth-order spectrum.\n-                # Set infinite variance.\n+            if contam.order in (0, 2) or contam.astro_object_info.invalid_mag:\n+                # The contaminant cannot be modelled because it is a zeroth-order, or a bright second-order, or it has\n+                # unknown or invalid magnitudes. So we set infinite variance for the region covered by this spectrum.\n                 _, _, width, height = contam.bbox\n                 var = np.empty((height, width))\n                 var[:] = np.inf\n",
                            "Decontamination Model Improvements",
                            "Nathaniel Stickley",
                            "2023-07-12T15:52:55.000+00:00",
                            "6dd740cedcda8864c167b5224f591df15e61b3fa"
                        ]
                    ],
                    "SIR_SpectraDecontamination/tests/python/SpectraDecontaminator_test.py": [
                        [
                            "@@ -272,7 +272,7 @@ class LocationTableStub:\n     def getLocationObject(self, object_id):\n         return self._objects[object_id]\n \n-    def create_location_object(self, astro_object, orders):\n+    def create_location_object(self, astro_object, orders=None):\n         return self._objects[astro_object.getId()]\n \n     def __iter__(self):\n",
                            "Merge branch 'dec_orders_optional' into 'develop'",
                            "Marco Fumana",
                            "2023-07-27T07:25:26.000+00:00",
                            "9bf867597ac04490306762c5a67c5a87aac8549e"
                        ],
                        [
                            "@@ -16,6 +16,19 @@ class SensitivityModelStub:\n     def getSensitivity(self, order):\n         return self._sens\n \n+\n+class PhotometerInfoStub:\n+    def __init__(self, mdb):\n+        self._transmission = {'J': (np.arange(0, 10, 1), np.ones(10)),\n+                              'H': (np.arange(0, 10, 1), np.ones(10))}\n+        self._effective_wav = {'J': 100.0, 'H': 200.0}\n+\n+    def effective_wavelength(self, band):\n+        return self._effective_wav[band.upper()]\n+\n+    def filter_transmission(self, band):\n+        return self._transmission[band.upper()]\n+\n # now we do some monkeypatching, so that we can use the SensitivityModelStub instead of the real SensitivityModel class,\n # which would require an elaborate MDB stub\n \n@@ -48,12 +61,14 @@ import SIR_SpectraDecontamination.SpectraDecontaminator as spec_decon\n from SIR_SpectraDecontamination.SpectraDecontaminator import SpectraDecontaminator\n \n \n+\n @pytest.fixture\n def monkeypatching(monkeypatch):\n     monkeypatch.setattr(spec_decon, 'NestedDict', fake_NestedDict)\n     monkeypatch.setattr(spec_decon, 'SpectrumModeller', fake_SpectrumModeller)\n     monkeypatch.setattr(spec_decon, 'DetectorGrism', fake_DetectorGrism)\n     monkeypatch.setattr(spec_decon, 'AstroObjectInfo', fake_AstroObjectInfo)\n+    monkeypatch.setattr(spec_decon, 'PhotometerInfo', PhotometerInfoStub)\n \n # We begin with a large number of stubs:\n \n@@ -122,19 +137,6 @@ class AstronomicalObjectStub:\n         return self._id\n \n \n-class PhotometerInfoStub:\n-    def __init__(self):\n-        self._transmission = {'J': (np.arange(0, 10, 1), np.ones(10)),\n-                              'H': (np.arange(0, 10, 1), np.ones(10))}\n-        self._effective_wav = {'J': 100.0, 'H': 200.0}\n-\n-    def effective_wavelength(self, band):\n-        return self._effective_wav[band.upper()]\n-\n-    def filter_transmission(self, band):\n-        return self._transmission[band.upper()]\n-\n-\n class LocationSpectrumStub:\n     def __init__(self):\n         self._order = 1\n",
                            "Merge branch 'filter_transmissions_for_decon' into 'develop'",
                            "Marco Fumana",
                            "2023-07-24T15:59:17.000+00:00",
                            "df8868ec367da0dccd53cb02873432200427dfd0"
                        ],
                        [
                            "@@ -16,6 +16,19 @@ class SensitivityModelStub:\n     def getSensitivity(self, order):\n         return self._sens\n \n+\n+class PhotometerInfoStub:\n+    def __init__(self, mdb):\n+        self._transmission = {'J': (np.arange(0, 10, 1), np.ones(10)),\n+                              'H': (np.arange(0, 10, 1), np.ones(10))}\n+        self._effective_wav = {'J': 100.0, 'H': 200.0}\n+\n+    def effective_wavelength(self, band):\n+        return self._effective_wav[band.upper()]\n+\n+    def filter_transmission(self, band):\n+        return self._transmission[band.upper()]\n+\n # now we do some monkeypatching, so that we can use the SensitivityModelStub instead of the real SensitivityModel class,\n # which would require an elaborate MDB stub\n \n@@ -48,12 +61,14 @@ import SIR_SpectraDecontamination.SpectraDecontaminator as spec_decon\n from SIR_SpectraDecontamination.SpectraDecontaminator import SpectraDecontaminator\n \n \n+\n @pytest.fixture\n def monkeypatching(monkeypatch):\n     monkeypatch.setattr(spec_decon, 'NestedDict', fake_NestedDict)\n     monkeypatch.setattr(spec_decon, 'SpectrumModeller', fake_SpectrumModeller)\n     monkeypatch.setattr(spec_decon, 'DetectorGrism', fake_DetectorGrism)\n     monkeypatch.setattr(spec_decon, 'AstroObjectInfo', fake_AstroObjectInfo)\n+    monkeypatch.setattr(spec_decon, 'PhotometerInfo', PhotometerInfoStub)\n \n # We begin with a large number of stubs:\n \n@@ -122,19 +137,6 @@ class AstronomicalObjectStub:\n         return self._id\n \n \n-class PhotometerInfoStub:\n-    def __init__(self):\n-        self._transmission = {'J': (np.arange(0, 10, 1), np.ones(10)),\n-                              'H': (np.arange(0, 10, 1), np.ones(10))}\n-        self._effective_wav = {'J': 100.0, 'H': 200.0}\n-\n-    def effective_wavelength(self, band):\n-        return self._effective_wav[band.upper()]\n-\n-    def filter_transmission(self, band):\n-        return self._transmission[band.upper()]\n-\n-\n class LocationSpectrumStub:\n     def __init__(self):\n         self._order = 1\n",
                            "Merge filter_transmissions_for_decon",
                            "Nathaniel Stickley",
                            "2023-07-24T15:59:17.000+00:00",
                            "410557c8cc3b07f04e44d8ab63d12952039b4d70"
                        ],
                        [
                            "@@ -36,9 +36,7 @@ fake_DetectorGrism = MagicMock()\n \n fake_DetectorGrism.full_wavelength_range = MagicMock(return_value=(12000, 19000))\n \n-import SIR_SpectraDecontamination.AstroObjectInfo as astroinfo\n-\n-astroinfo.AstroObjectInfo = MagicMock()\n+fake_AstroObjectInfo = MagicMock()\n \n import SIR_SpectraDecontamination.NestedDict as ndict\n \n@@ -55,6 +53,7 @@ def monkeypatching(monkeypatch):\n     monkeypatch.setattr(spec_decon, 'NestedDict', fake_NestedDict)\n     monkeypatch.setattr(spec_decon, 'SpectrumModeller', fake_SpectrumModeller)\n     monkeypatch.setattr(spec_decon, 'DetectorGrism', fake_DetectorGrism)\n+    monkeypatch.setattr(spec_decon, 'AstroObjectInfo', fake_AstroObjectInfo)\n \n # We begin with a large number of stubs:\n \n",
                            "Merge branch 'decontamination-with-new-tables' into 'develop'",
                            "Marco Fumana",
                            "2023-07-12T15:52:55.000+00:00",
                            "6ac38f0c2d5531e352ba378b25b5531fac1193dc"
                        ],
                        [
                            "@@ -36,9 +36,7 @@ fake_DetectorGrism = MagicMock()\n \n fake_DetectorGrism.full_wavelength_range = MagicMock(return_value=(12000, 19000))\n \n-import SIR_SpectraDecontamination.AstroObjectInfo as astroinfo\n-\n-astroinfo.AstroObjectInfo = MagicMock()\n+fake_AstroObjectInfo = MagicMock()\n \n import SIR_SpectraDecontamination.NestedDict as ndict\n \n@@ -55,6 +53,7 @@ def monkeypatching(monkeypatch):\n     monkeypatch.setattr(spec_decon, 'NestedDict', fake_NestedDict)\n     monkeypatch.setattr(spec_decon, 'SpectrumModeller', fake_SpectrumModeller)\n     monkeypatch.setattr(spec_decon, 'DetectorGrism', fake_DetectorGrism)\n+    monkeypatch.setattr(spec_decon, 'AstroObjectInfo', fake_AstroObjectInfo)\n \n # We begin with a large number of stubs:\n \n",
                            "Decontamination Model Improvements",
                            "Nathaniel Stickley",
                            "2023-07-12T15:52:55.000+00:00",
                            "6dd740cedcda8864c167b5224f591df15e61b3fa"
                        ]
                    ],
                    "SIR_InstrumentModels/python/SIR_InstrumentModels/OpticalModel.py": [
                        [
                            "@@ -81,6 +81,12 @@ class OpticalModel(object):\n         self.extra_tilt = 0.0\n \n         self._limits = None\n+        \n+        self._mapped_orders = []\n+\n+    @property\n+    def mapped_orders(self):\n+        return self._mapped_orders \n \n \n     def weak_copy(self):\n@@ -173,6 +179,8 @@ class OpticalModel(object):\n             self.__displacements[displacement.Order]['ReferenceLambda'] = displacement.ReferenceLambda\n \n         self.__xml_model = model\n+        self._mapped_orders = [1]+list(self.__displacements.keys())\n+        self._mapped_orders.sort()\n \n \n     def getReferenceLambda(self, order:int):\n",
                            "Merge branch 'fix_many_orders' into 'develop'",
                            "Marco Fumana",
                            "2023-07-26T13:16:25.000+00:00",
                            "25e408c2874245f292f0532e765dcbcc55a21e24"
                        ],
                        [
                            "@@ -28,6 +28,7 @@\n import os\n import warnings\n from copy import deepcopy\n+from datetime import datetime\n \n import numpy as np\n from numpy.polynomial import polynomial\n@@ -847,7 +848,7 @@ class OpticalModel(object):\n         if self.__xml_model is None:\n             raise Exception(\"Grism not set yet!\")\n \n-\n+        self.__xml_model.Date = datetime.utcnow().isoformat(sep='T', timespec='microseconds')+'Z'\n         self.__xml_model.Reference.OptXModel.Data = self._reference['X'].ravel().tolist()\n         self.__xml_model.Reference.OptXModel.Shape = list(self._reference['X'].shape)\n \n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ],
                        [
                            "@@ -28,6 +28,7 @@\n import os\n import warnings\n from copy import deepcopy\n+from datetime import datetime\n \n import numpy as np\n from numpy.polynomial import polynomial\n@@ -847,7 +848,7 @@ class OpticalModel(object):\n         if self.__xml_model is None:\n             raise Exception(\"Grism not set yet!\")\n \n-\n+        self.__xml_model.Date = datetime.utcnow().isoformat(sep='T', timespec='microseconds')+'Z'\n         self.__xml_model.Reference.OptXModel.Data = self._reference['X'].ravel().tolist()\n         self.__xml_model.Reference.OptXModel.Shape = list(self._reference['X'].shape)\n \n",
                            "Updated pipeline to DM9.2",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "604412eacacc8163e4783496ac3e7b93de8299e8"
                        ],
                        [
                            "@@ -79,6 +79,8 @@ class OpticalModel(object):\n         self._gwa_tilt = 0\n         self.extra_tilt = 0.0\n \n+        self._limits = None\n+\n \n     def weak_copy(self):\n         \"\"\"Creates a copy of the OpticalModel sharing the DetectorModel.\n@@ -103,6 +105,7 @@ class OpticalModel(object):\n         model = OpticalModel()\n \n         model.det_model = det_model\n+        model.set_fov_limits()\n \n         if os.path.isfile(xmlfile):\n             with open(xmlfile) as xml:\n@@ -114,6 +117,23 @@ class OpticalModel(object):\n         return model\n \n \n+    def set_fov_limits(self, xmargin:float=5, ymargin:float=5):\n+        \"\"\"Set effective region of the FOV adding margin to the effective detector envelop.\n+        This defined region if use to evaluate if the position of an object will produce light\n+        on the detectors\n+        \"\"\"\n+        self._limits = self.det_model.getEnvelopeBox()\n+        self._limits[0][0]-=xmargin\n+        self._limits[1][0]+=xmargin\n+        self._limits[0][1]-=ymargin\n+        self._limits[1][1]+=ymargin\n+\n+\n+    def is_within_fov(self, xpos:float, ypos:float) -> bool:\n+        \"\"\"Checks if point position is withint FOV limits\"\"\"\n+        return bool((self._limits[0][0] < xpos < self._limits[1][0]) and (self._limits[0][1] < ypos < self._limits[1][1]))\n+\n+\n     def set_gwa_tilt(self, gwa_tilt=0):\n         if self.__xml is None:\n             raise Exception(\"No model loaded yet\")\n@@ -452,6 +472,8 @@ class OpticalModel(object):\n         \"\"\"\n \n         xmm_undist, ymm_undist = self.getUndistortedObjectPosition(ra, dec)\n+        if self.is_within_fov(xmm_undist, ymm_undist) is False:\n+            return xmm_undist, ymm_undist\n \n         xmm = np.polynomial.polynomial.polyval2d(xmm_undist, ymm_undist, self.X)\n         ymm = np.polynomial.polynomial.polyval2d(xmm_undist, ymm_undist, self.Y)\n@@ -479,6 +501,8 @@ class OpticalModel(object):\n         \"\"\"\n \n         xmm_undist, ymm_undist = self.getUndistortedObjectPosition(ra, dec)\n+        if self.is_within_fov(xmm_undist, ymm_undist) is False:\n+            return xmm_undist, ymm_undist\n \n         xmm = np.polynomial.polynomial.polyval2d(xmm_undist, ymm_undist, self.X0th)\n         ymm = np.polynomial.polynomial.polyval2d(xmm_undist, ymm_undist, self.Y0th)\n",
                            "Merge branch 'fov_limits' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-06-14T06:50:40.000+00:00",
                            "f365525b51d145206a3cba69a51a284d32460b4f"
                        ],
                        [
                            "@@ -79,6 +79,8 @@ class OpticalModel(object):\n         self._gwa_tilt = 0\n         self.extra_tilt = 0.0\n \n+        self._limits = None\n+\n \n     def weak_copy(self):\n         \"\"\"Creates a copy of the OpticalModel sharing the DetectorModel.\n@@ -103,6 +105,7 @@ class OpticalModel(object):\n         model = OpticalModel()\n \n         model.det_model = det_model\n+        model.set_fov_limits()\n \n         if os.path.isfile(xmlfile):\n             with open(xmlfile) as xml:\n@@ -114,6 +117,23 @@ class OpticalModel(object):\n         return model\n \n \n+    def set_fov_limits(self, xmargin:float=5, ymargin:float=5):\n+        \"\"\"Set effective region of the FOV adding margin to the effective detector envelop.\n+        This defined region if use to evaluate if the position of an object will produce light\n+        on the detectors\n+        \"\"\"\n+        self._limits = self.det_model.getEnvelopeBox()\n+        self._limits[0][0]-=xmargin\n+        self._limits[1][0]+=xmargin\n+        self._limits[0][1]-=ymargin\n+        self._limits[1][1]+=ymargin\n+\n+\n+    def is_within_fov(self, xpos:float, ypos:float) -> bool:\n+        \"\"\"Checks if point position is withint FOV limits\"\"\"\n+        return bool((self._limits[0][0] < xpos < self._limits[1][0]) and (self._limits[0][1] < ypos < self._limits[1][1]))\n+\n+\n     def set_gwa_tilt(self, gwa_tilt=0):\n         if self.__xml is None:\n             raise Exception(\"No model loaded yet\")\n@@ -452,6 +472,8 @@ class OpticalModel(object):\n         \"\"\"\n \n         xmm_undist, ymm_undist = self.getUndistortedObjectPosition(ra, dec)\n+        if self.is_within_fov(xmm_undist, ymm_undist) is False:\n+            return xmm_undist, ymm_undist\n \n         xmm = np.polynomial.polynomial.polyval2d(xmm_undist, ymm_undist, self.X)\n         ymm = np.polynomial.polynomial.polyval2d(xmm_undist, ymm_undist, self.Y)\n@@ -479,6 +501,8 @@ class OpticalModel(object):\n         \"\"\"\n \n         xmm_undist, ymm_undist = self.getUndistortedObjectPosition(ra, dec)\n+        if self.is_within_fov(xmm_undist, ymm_undist) is False:\n+            return xmm_undist, ymm_undist\n \n         xmm = np.polynomial.polynomial.polyval2d(xmm_undist, ymm_undist, self.X0th)\n         ymm = np.polynomial.polynomial.polyval2d(xmm_undist, ymm_undist, self.Y0th)\n",
                            "Added FOV limits to the optical model",
                            "Marco Fumana",
                            "2023-06-14T06:50:39.000+00:00",
                            "12923db25a3703ee9ff35f76500381c2e3c690da"
                        ],
                        [
                            "@@ -252,7 +252,7 @@ class OpticalModel(object):\n             raise Exception(f\"Invalid GWA position {self.gwa_pos}\")\n \n \n-    def setPointing(self, pointing, pa_angle):\n+    def setPointing(self, pointing, pa_angle, rotate=False):\n         \"\"\"Set the new pointing using already existing WCS.\n \n         @param pointing: FOV center coordinates\n@@ -276,13 +276,18 @@ class OpticalModel(object):\n         if hasattr(pa_angle, 'asDegrees'):\n             pa_angle = pa_angle.asDegrees()\n \n-        orientation = np.deg2rad(pa_angle)\n+        orientation = np.deg2rad(-pa_angle+90)\n \n-        rot_matrix = np.array([[np.cos(orientation), np.sin(orientation)],\n-                               [-np.sin(orientation), np.cos(orientation)]])\n-        dist_matrix = np.array([[-1, 0], [0, 1]])\n+        cd_matrix = np.array([[np.cos(orientation), -np.sin(orientation)],\n+                               [np.sin(orientation), np.cos(orientation)]])\n \n-        self.__wcs.wcs.cd = self.det_model.getFOVScale() * rot_matrix.dot(dist_matrix)/3600.\n+        if rotate:\n+            rot_matrix = np.array([[0, -1], [1, 0]])\n+            cd_matrix = rot_matrix.dot(cd_matrix)\n+\n+        rot_matrix = np.array([[0, -1], [1, 0]])\n+\n+        self.__wcs.wcs.cd = self.det_model.getFOVScale() * cd_matrix/3600.\n \n \n     def getPointing(self):\n@@ -308,26 +313,24 @@ class OpticalModel(object):\n \n         # calculating \"CD\" matrix\n         # the full angle is composed by PA + (rotation Ymosa vs Npole - detector rotation)\n-        theta = header.getAsDouble('PA') + 90\n+        theta = -header.getAsDouble('PA') + 90\n         theta_rad = np.deg2rad(theta)\n \n         # define the cdelt as the pixel size in degrees (CDELT)\n         mm_arcsec = self.det_model.getFOVScale()\n-        cdelt1 = - mm_arcsec / 3600\n+        cdelt1 = mm_arcsec / 3600\n         cdelt2 = mm_arcsec / 3600\n \n-        # calculate CD matrix coefficients\n+        # calculate CD matrix coefficients (copied from NIR)\n         cd = np.zeros((2, 2))\n         cd[0][0] = cdelt1 * np.cos(theta_rad)\n-        cd[0][1] = cdelt2 * np.sin(theta_rad)\n-        cd[1][0] = - cdelt1 * np.sin(theta_rad)\n+        cd[0][1] = -cdelt2 * np.sin(theta_rad)\n+        cd[1][0] = cdelt1 * np.sin(theta_rad)\n         cd[1][1] = cdelt2 * np.cos(theta_rad)\n \n-        #SIM <-> NIR difference\n-        cd = np.array([[0, -1], [1, 0]]).dot(cd)\n-\n         if is_rotated(nisp_exp) and header.get('GWA_POS')!='RGS270':\n-            cd = cd.dot([[0, -1], [1, 0]])\n+            rot = np.array([[0, -1], [1, 0]])\n+            cd = rot.dot(cd)\n \n         #Create a temporary header\n \n@@ -381,7 +384,7 @@ class OpticalModel(object):\n         if self.__wcs is None:\n             raise Exception(\"WCS not set yet!\")\n \n-        return np.rad2deg(np.arctan2(self.__wcs.wcs.cd[1][0], self.__wcs.wcs.cd[1][1]))\n+        return 90 - np.rad2deg(np.arctan2(self.__wcs.wcs.cd[1][0], self.__wcs.wcs.cd[1][1]))\n \n \n     def adjustPointing(self, translation, angle=0.0):\n",
                            "Merge branch 'pointing_from_image' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-06-13T07:10:23.000+00:00",
                            "3a195030ca677fba725eac18b01ce9a22da4da33"
                        ],
                        [
                            "@@ -252,7 +252,7 @@ class OpticalModel(object):\n             raise Exception(f\"Invalid GWA position {self.gwa_pos}\")\n \n \n-    def setPointing(self, pointing, pa_angle):\n+    def setPointing(self, pointing, pa_angle, rotate=False):\n         \"\"\"Set the new pointing using already existing WCS.\n \n         @param pointing: FOV center coordinates\n@@ -276,13 +276,18 @@ class OpticalModel(object):\n         if hasattr(pa_angle, 'asDegrees'):\n             pa_angle = pa_angle.asDegrees()\n \n-        orientation = np.deg2rad(pa_angle)\n+        orientation = np.deg2rad(-pa_angle+90)\n \n-        rot_matrix = np.array([[np.cos(orientation), np.sin(orientation)],\n-                               [-np.sin(orientation), np.cos(orientation)]])\n-        dist_matrix = np.array([[-1, 0], [0, 1]])\n+        cd_matrix = np.array([[np.cos(orientation), -np.sin(orientation)],\n+                               [np.sin(orientation), np.cos(orientation)]])\n \n-        self.__wcs.wcs.cd = self.det_model.getFOVScale() * rot_matrix.dot(dist_matrix)/3600.\n+        if rotate:\n+            rot_matrix = np.array([[0, -1], [1, 0]])\n+            cd_matrix = rot_matrix.dot(cd_matrix)\n+\n+        rot_matrix = np.array([[0, -1], [1, 0]])\n+\n+        self.__wcs.wcs.cd = self.det_model.getFOVScale() * cd_matrix/3600.\n \n \n     def getPointing(self):\n@@ -308,26 +313,24 @@ class OpticalModel(object):\n \n         # calculating \"CD\" matrix\n         # the full angle is composed by PA + (rotation Ymosa vs Npole - detector rotation)\n-        theta = header.getAsDouble('PA') + 90\n+        theta = -header.getAsDouble('PA') + 90\n         theta_rad = np.deg2rad(theta)\n \n         # define the cdelt as the pixel size in degrees (CDELT)\n         mm_arcsec = self.det_model.getFOVScale()\n-        cdelt1 = - mm_arcsec / 3600\n+        cdelt1 = mm_arcsec / 3600\n         cdelt2 = mm_arcsec / 3600\n \n-        # calculate CD matrix coefficients\n+        # calculate CD matrix coefficients (copied from NIR)\n         cd = np.zeros((2, 2))\n         cd[0][0] = cdelt1 * np.cos(theta_rad)\n-        cd[0][1] = cdelt2 * np.sin(theta_rad)\n-        cd[1][0] = - cdelt1 * np.sin(theta_rad)\n+        cd[0][1] = -cdelt2 * np.sin(theta_rad)\n+        cd[1][0] = cdelt1 * np.sin(theta_rad)\n         cd[1][1] = cdelt2 * np.cos(theta_rad)\n \n-        #SIM <-> NIR difference\n-        cd = np.array([[0, -1], [1, 0]]).dot(cd)\n-\n         if is_rotated(nisp_exp) and header.get('GWA_POS')!='RGS270':\n-            cd = cd.dot([[0, -1], [1, 0]])\n+            rot = np.array([[0, -1], [1, 0]])\n+            cd = rot.dot(cd)\n \n         #Create a temporary header\n \n@@ -381,7 +384,7 @@ class OpticalModel(object):\n         if self.__wcs is None:\n             raise Exception(\"WCS not set yet!\")\n \n-        return np.rad2deg(np.arctan2(self.__wcs.wcs.cd[1][0], self.__wcs.wcs.cd[1][1]))\n+        return 90 - np.rad2deg(np.arctan2(self.__wcs.wcs.cd[1][0], self.__wcs.wcs.cd[1][1]))\n \n \n     def adjustPointing(self, translation, angle=0.0):\n",
                            "Optical model Pointing and new detector layout",
                            "Marco Fumana",
                            "2023-06-13T07:10:22.000+00:00",
                            "0072a45e56f151e992c973a1fa687a3e1636eea5"
                        ],
                        [
                            "@@ -94,7 +94,7 @@ class OpticalModel(object):\n \n         #Assign the DetectorModel to both models\n         self.det_model = det_model\n-        opt_copy._detmodel = det_model\n+        opt_copy.det_model = det_model\n \n         return opt_copy\n \n",
                            "Merge branch 'bug_weak_copy' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-06-12T07:13:21.000+00:00",
                            "9c0018cbfd7cc8e76ec635158e57e900ec0f8ad5"
                        ],
                        [
                            "@@ -94,7 +94,7 @@ class OpticalModel(object):\n \n         #Assign the DetectorModel to both models\n         self.det_model = det_model\n-        opt_copy._detmodel = det_model\n+        opt_copy.det_model = det_model\n \n         return opt_copy\n \n",
                            "Bug fixed in weak copy",
                            "Marco Fumana",
                            "2023-06-12T07:13:21.000+00:00",
                            "305529468cdd2b43326468712593ad0dddc814f2"
                        ]
                    ],
                    "SIR_InstrumentModels/tests/python/OpticalModel_test.py": [
                        [
                            "@@ -1512,3 +1512,22 @@ class TestOpticalModel:\n \n         print('***', opt.is_within_fov(-0.5, 2))\n         assert opt.is_within_fov(-0.5, 2) is True\n+        \n+    \n+    def test_mapped_orders1(self):\n+        mdb = MockMDB()\n+    \n+        rdet = DetectorModel(\"RGS000\", mdb, rotate=True)\n+        opt = OpticalModel.load(TestOpticalModel.get_xml_file(), rdet)\n+        \n+        assert opt.mapped_orders == []\n+        \n+\n+    def test_mapped_orders2(self):\n+        mdb = MockMDB()\n+    \n+        rdet = DetectorModel(\"RGS000\", mdb, rotate=True)\n+        opt = OpticalModel.load(TestOpticalModel.get_xml_file(), rdet)\n+        opt.set_gwa_tilt(0)\n+        assert opt.mapped_orders == [0, 1]\n+        \n",
                            "Merge branch 'fix_many_orders' into 'develop'",
                            "Marco Fumana",
                            "2023-07-26T13:16:25.000+00:00",
                            "25e408c2874245f292f0532e765dcbcc55a21e24"
                        ],
                        [
                            "@@ -144,7 +144,7 @@ class TestOpticalModel:\n     @staticmethod\n     def get_xml_file():\n         return os.path.join(os.environ[\"SIR_PIPELINE_PROJECT_ROOT\"],\n-                            \"SIR_InstrumentModels/tests/data/EUC_SIR_OPTMODEL_REAL-DM9-PV_2022-03-29.xml\")\n+                            \"SIR_InstrumentModels/tests/data/EUC_SIR_OPTMODEL_PVRH2.xml\")\n     @staticmethod\n     def get_sci_frame():\n         return os.path.join(os.environ[\"SIR_PIPELINE_PROJECT_ROOT\"],\n@@ -390,8 +390,8 @@ class TestOpticalModel:\n \n         opt.set_gwa_tilt(4)\n \n-        X = np.arange(16, dtype=np.float32)\n-        X.shape = (4, 4)\n+        X = np.arange(25, dtype=np.float32)\n+        X.shape = (5, 5)\n         opt.X = X\n \n         opt.Y = 10+X\n@@ -510,8 +510,8 @@ class TestOpticalModel:\n \n         opt.set_gwa_tilt(4)\n \n-        X = np.arange(16, dtype=np.float32)\n-        X.shape = (4, 4)\n+        X = np.arange(25, dtype=np.float32)\n+        X.shape = (5, 5)\n         opt.X = X\n \n         opt.Y = 10+X\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ],
                        [
                            "@@ -144,7 +144,7 @@ class TestOpticalModel:\n     @staticmethod\n     def get_xml_file():\n         return os.path.join(os.environ[\"SIR_PIPELINE_PROJECT_ROOT\"],\n-                            \"SIR_InstrumentModels/tests/data/EUC_SIR_OPTMODEL_REAL-DM9-PV_2022-03-29.xml\")\n+                            \"SIR_InstrumentModels/tests/data/EUC_SIR_OPTMODEL_PVRH2.xml\")\n     @staticmethod\n     def get_sci_frame():\n         return os.path.join(os.environ[\"SIR_PIPELINE_PROJECT_ROOT\"],\n@@ -390,8 +390,8 @@ class TestOpticalModel:\n \n         opt.set_gwa_tilt(4)\n \n-        X = np.arange(16, dtype=np.float32)\n-        X.shape = (4, 4)\n+        X = np.arange(25, dtype=np.float32)\n+        X.shape = (5, 5)\n         opt.X = X\n \n         opt.Y = 10+X\n@@ -510,8 +510,8 @@ class TestOpticalModel:\n \n         opt.set_gwa_tilt(4)\n \n-        X = np.arange(16, dtype=np.float32)\n-        X.shape = (4, 4)\n+        X = np.arange(25, dtype=np.float32)\n+        X.shape = (5, 5)\n         opt.X = X\n \n         opt.Y = 10+X\n",
                            "Updated pipeline to DM9.2",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "604412eacacc8163e4783496ac3e7b93de8299e8"
                        ],
                        [
                            "@@ -73,6 +73,13 @@ class MockMDB(object):\n                                 'SIR_InstrumentModels/tests/data/Ideal_DetectorSlots.csv')\n         return Table.read(csv_file, format='csv', header_start=1, data_start=2)\n \n+\n+    def getEnvelopeBox(self):\n+        return np.array([[-82.2485485, -77.9166405],\n+                         [ 82.2741895,  77.929518 ]])\n+\n+\n+\n class MockXML:\n     def __init__(self):\n         pass\n@@ -769,6 +776,24 @@ class TestOpticalModel:\n         assert np.allclose(pos_mm[1], y)\n \n \n+    def test_get1stOrderReferencePosition_5(self):\n+        \"\"\"Out of FOV\"\"\"\n+        mdb = MockMDB()\n+        filename = TestOpticalModel.get_xml_file()\n+        opt1 = OpticalModel.load(filename, mdb)\n+\n+        opt1.getUndistortedObjectPosition = MagicMock(return_value = [100., 2.])\n+        opt1.X = np.array([[1, -0.1], [0.1, 0]])\n+        opt1.Y = np.array([[1, 0.05], [-0.15, 0]])\n+        opt1.extra_tilt = 0.0\n+\n+        pivot = [1000., -2000.]\n+        pos_mm = opt1.get1stOrderReferencePosition_(None, None, pivot)\n+\n+        assert np.allclose(pos_mm[0], 100.)\n+        assert np.allclose(pos_mm[1], 2.)\n+\n+\n     def test_get0thOrderReferencePosition_1(self):\n         \"\"\"No pivot\"\"\"\n         mdb = MockMDB()\n@@ -813,6 +838,26 @@ class TestOpticalModel:\n         assert np.allclose(pos_mm[0], x.dot(opt1.getDxDisplacemnt(0).dot(y))+obj_mm[0])\n         assert np.allclose(pos_mm[1], x.dot(opt1.getDyDisplacemnt(0).dot(y))+obj_mm[1])\n \n+\n+\n+    def test_get0thOrderReferencePosition_3(self):\n+        \"\"\"Out of FOV\"\"\"\n+        mdb = MockMDB()\n+        filename = TestOpticalModel.get_xml_file()\n+        opt1 = OpticalModel.load(filename, mdb)\n+\n+        obj_mm = np.array([8., 300.])\n+        opt1.X = np.zeros((2, 2))\n+        opt1.Y = np.zeros((2, 2))\n+        opt1.setDxDisplacement(np.array([[1, -0.1], [0.1, 0]]), 0)\n+        opt1.setDyDisplacement(np.array([[1, 0.05], [-0.15, 0]]), 0)\n+        opt1.extra_tilt = 100.0\n+        opt1.getUndistortedObjectPosition = MagicMock(return_value=[obj_mm[0], obj_mm[1]])\n+        pos_mm = opt1.get0thOrderReferencePosition_('ra', 'dec')\n+\n+        assert np.allclose(pos_mm, obj_mm)\n+\n+\n     def test_rotate_reference_position1(self):\n         mdb = MockMDB()\n         filename = TestOpticalModel.get_xml_file()\n@@ -1397,3 +1442,73 @@ class TestOpticalModel:\n \n         assert opt.det_model is copy_opt.det_model\n \n+\n+    def test_set_fov_limits1(self):\n+        mdb = MockMDB()\n+\n+        rdet = DetectorModel(\"RGS000\", mdb, rotate=True)\n+        opt = OpticalModel.load(TestOpticalModel.get_xml_file(), rdet)\n+\n+        limits = rdet.getEnvelopeBox()\n+        assert np.allclose(opt._limits, [limits[0]-5, limits[1]+5])\n+\n+\n+    def test_set_fov_limits2(self):\n+        mdb = MockMDB()\n+\n+        rdet = DetectorModel(\"RGS000\", mdb, rotate=True)\n+        opt = OpticalModel.load(TestOpticalModel.get_xml_file(), rdet)\n+        opt.set_fov_limits(1, 2)\n+\n+        limits = rdet.getEnvelopeBox()\n+        assert np.allclose(opt._limits, [[limits[0][0]-1, limits[0][1]-2], [limits[1][0]+1, limits[1][1]+2]])\n+\n+\n+    def test_is_within_fov1(self):\n+        mdb = MockMDB()\n+\n+        rdet = DetectorModel(\"RGS000\", mdb, rotate=True)\n+        opt = OpticalModel.load(TestOpticalModel.get_xml_file(), rdet)\n+        opt._limits = np.array([[-1., -2.], [3, 4]])\n+\n+        assert opt.is_within_fov(-2, 0) is False\n+\n+\n+    def test_is_within_fov2(self):\n+        mdb = MockMDB()\n+\n+        rdet = DetectorModel(\"RGS000\", mdb, rotate=True)\n+        opt = OpticalModel.load(TestOpticalModel.get_xml_file(), rdet)\n+        opt._limits = np.array([[-1., -2.], [3, 4]])\n+\n+        assert opt.is_within_fov(4, 0) is False\n+\n+\n+    def test_is_within_fov3(self):\n+        mdb = MockMDB()\n+\n+        rdet = DetectorModel(\"RGS000\", mdb, rotate=True)\n+        opt = OpticalModel.load(TestOpticalModel.get_xml_file(), rdet)\n+        opt._limits = np.array([[-1., -2.], [3, 4]])\n+\n+        assert opt.is_within_fov(0, -3) is False\n+\n+\n+    def test_is_within_fov4(self):\n+        mdb = MockMDB()\n+\n+        rdet = DetectorModel(\"RGS000\", mdb, rotate=True)\n+        opt = OpticalModel.load(TestOpticalModel.get_xml_file(), rdet)\n+        opt._limits = np.array([[-1., -2.], [3, 4]])\n+\n+        assert opt.is_within_fov(0, 5) is False\n+\n+    def test_is_within_fov5(self):\n+        mdb = MockMDB()\n+\n+        rdet = DetectorModel(\"RGS000\", mdb, rotate=True)\n+        opt = OpticalModel.load(TestOpticalModel.get_xml_file(), rdet)\n+        opt._limits = np.array([[-1., -2.], [3, 4]])\n+\n+        print('***', opt.is_within_fov(-0.5, 2))\n+        assert opt.is_within_fov(-0.5, 2) is True\n",
                            "Merge branch 'fov_limits' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-06-14T06:50:40.000+00:00",
                            "f365525b51d145206a3cba69a51a284d32460b4f"
                        ],
                        [
                            "@@ -73,6 +73,13 @@ class MockMDB(object):\n                                 'SIR_InstrumentModels/tests/data/Ideal_DetectorSlots.csv')\n         return Table.read(csv_file, format='csv', header_start=1, data_start=2)\n \n+\n+    def getEnvelopeBox(self):\n+        return np.array([[-82.2485485, -77.9166405],\n+                         [ 82.2741895,  77.929518 ]])\n+\n+\n+\n class MockXML:\n     def __init__(self):\n         pass\n@@ -769,6 +776,24 @@ class TestOpticalModel:\n         assert np.allclose(pos_mm[1], y)\n \n \n+    def test_get1stOrderReferencePosition_5(self):\n+        \"\"\"Out of FOV\"\"\"\n+        mdb = MockMDB()\n+        filename = TestOpticalModel.get_xml_file()\n+        opt1 = OpticalModel.load(filename, mdb)\n+\n+        opt1.getUndistortedObjectPosition = MagicMock(return_value = [100., 2.])\n+        opt1.X = np.array([[1, -0.1], [0.1, 0]])\n+        opt1.Y = np.array([[1, 0.05], [-0.15, 0]])\n+        opt1.extra_tilt = 0.0\n+\n+        pivot = [1000., -2000.]\n+        pos_mm = opt1.get1stOrderReferencePosition_(None, None, pivot)\n+\n+        assert np.allclose(pos_mm[0], 100.)\n+        assert np.allclose(pos_mm[1], 2.)\n+\n+\n     def test_get0thOrderReferencePosition_1(self):\n         \"\"\"No pivot\"\"\"\n         mdb = MockMDB()\n@@ -813,6 +838,26 @@ class TestOpticalModel:\n         assert np.allclose(pos_mm[0], x.dot(opt1.getDxDisplacemnt(0).dot(y))+obj_mm[0])\n         assert np.allclose(pos_mm[1], x.dot(opt1.getDyDisplacemnt(0).dot(y))+obj_mm[1])\n \n+\n+\n+    def test_get0thOrderReferencePosition_3(self):\n+        \"\"\"Out of FOV\"\"\"\n+        mdb = MockMDB()\n+        filename = TestOpticalModel.get_xml_file()\n+        opt1 = OpticalModel.load(filename, mdb)\n+\n+        obj_mm = np.array([8., 300.])\n+        opt1.X = np.zeros((2, 2))\n+        opt1.Y = np.zeros((2, 2))\n+        opt1.setDxDisplacement(np.array([[1, -0.1], [0.1, 0]]), 0)\n+        opt1.setDyDisplacement(np.array([[1, 0.05], [-0.15, 0]]), 0)\n+        opt1.extra_tilt = 100.0\n+        opt1.getUndistortedObjectPosition = MagicMock(return_value=[obj_mm[0], obj_mm[1]])\n+        pos_mm = opt1.get0thOrderReferencePosition_('ra', 'dec')\n+\n+        assert np.allclose(pos_mm, obj_mm)\n+\n+\n     def test_rotate_reference_position1(self):\n         mdb = MockMDB()\n         filename = TestOpticalModel.get_xml_file()\n@@ -1397,3 +1442,73 @@ class TestOpticalModel:\n \n         assert opt.det_model is copy_opt.det_model\n \n+\n+    def test_set_fov_limits1(self):\n+        mdb = MockMDB()\n+\n+        rdet = DetectorModel(\"RGS000\", mdb, rotate=True)\n+        opt = OpticalModel.load(TestOpticalModel.get_xml_file(), rdet)\n+\n+        limits = rdet.getEnvelopeBox()\n+        assert np.allclose(opt._limits, [limits[0]-5, limits[1]+5])\n+\n+\n+    def test_set_fov_limits2(self):\n+        mdb = MockMDB()\n+\n+        rdet = DetectorModel(\"RGS000\", mdb, rotate=True)\n+        opt = OpticalModel.load(TestOpticalModel.get_xml_file(), rdet)\n+        opt.set_fov_limits(1, 2)\n+\n+        limits = rdet.getEnvelopeBox()\n+        assert np.allclose(opt._limits, [[limits[0][0]-1, limits[0][1]-2], [limits[1][0]+1, limits[1][1]+2]])\n+\n+\n+    def test_is_within_fov1(self):\n+        mdb = MockMDB()\n+\n+        rdet = DetectorModel(\"RGS000\", mdb, rotate=True)\n+        opt = OpticalModel.load(TestOpticalModel.get_xml_file(), rdet)\n+        opt._limits = np.array([[-1., -2.], [3, 4]])\n+\n+        assert opt.is_within_fov(-2, 0) is False\n+\n+\n+    def test_is_within_fov2(self):\n+        mdb = MockMDB()\n+\n+        rdet = DetectorModel(\"RGS000\", mdb, rotate=True)\n+        opt = OpticalModel.load(TestOpticalModel.get_xml_file(), rdet)\n+        opt._limits = np.array([[-1., -2.], [3, 4]])\n+\n+        assert opt.is_within_fov(4, 0) is False\n+\n+\n+    def test_is_within_fov3(self):\n+        mdb = MockMDB()\n+\n+        rdet = DetectorModel(\"RGS000\", mdb, rotate=True)\n+        opt = OpticalModel.load(TestOpticalModel.get_xml_file(), rdet)\n+        opt._limits = np.array([[-1., -2.], [3, 4]])\n+\n+        assert opt.is_within_fov(0, -3) is False\n+\n+\n+    def test_is_within_fov4(self):\n+        mdb = MockMDB()\n+\n+        rdet = DetectorModel(\"RGS000\", mdb, rotate=True)\n+        opt = OpticalModel.load(TestOpticalModel.get_xml_file(), rdet)\n+        opt._limits = np.array([[-1., -2.], [3, 4]])\n+\n+        assert opt.is_within_fov(0, 5) is False\n+\n+    def test_is_within_fov5(self):\n+        mdb = MockMDB()\n+\n+        rdet = DetectorModel(\"RGS000\", mdb, rotate=True)\n+        opt = OpticalModel.load(TestOpticalModel.get_xml_file(), rdet)\n+        opt._limits = np.array([[-1., -2.], [3, 4]])\n+\n+        print('***', opt.is_within_fov(-0.5, 2))\n+        assert opt.is_within_fov(-0.5, 2) is True\n",
                            "Added FOV limits to the optical model",
                            "Marco Fumana",
                            "2023-06-14T06:50:39.000+00:00",
                            "12923db25a3703ee9ff35f76500381c2e3c690da"
                        ],
                        [
                            "@@ -1076,12 +1076,11 @@ class TestOpticalModel:\n \n         meta = nisp_exp.getDetector('33').getMetadata()\n \n-        cd_matrix = np.array([[meta.get('CD1_1'), meta.get('CD1_2')],\n-                              [meta.get('CD2_1'), meta.get('CD2_2')]])/0.018 #CD matrix is now in mm\n+        cd_matrix = opt1.wcs.wcs.cd\n \n-        crval = [meta.get('CRVAL1'), meta.get('CRVAL2'), ]\n-        ctype = [meta.get('CTYPE1'), meta.get('CTYPE2'), ]\n-        crpix = [meta.get('CRPIX1'), meta.get('CRPIX2'), ]\n+        crval = opt1.wcs.wcs.crval\n+        ctype = opt1.wcs.wcs.ctype\n+        crpix = opt1.wcs.wcs.crpix\n \n         opt2.set_wcs(ctype, crpix, crval, cd_matrix)\n \n@@ -1115,6 +1114,23 @@ class TestOpticalModel:\n         assert np.allclose(opt1.pointing_angle, nisp_exp.getMetadata().get('PA'))\n \n \n+    def test_pointingAngle(self):\n+        \"\"\"Not adjustment\n+        \"\"\"\n+        filename = TestOpticalModel.get_xml_file()\n+        det = MockMDB()\n+        det.getPixelSize = MagicMock(return_value=0.018)\n+        det.getPixelScale = MagicMock(return_value=0.2989255487304668)\n+        det.getFOVScale = MagicMock(return_value=0.2989255487304668/0.018)\n+\n+        opt1 = OpticalModel.load(filename, det)\n+\n+        nisp_exp = NispSurveyExposure.readFits(TestOpticalModel.get_sci_frame())\n+        opt1.setPointingFromImage(nisp_exp)\n+\n+        assert np.allclose(nisp_exp.getMetadata().getAsDouble('PA'), opt1.pointing_angle)\n+\n+\n     def test_adjustPointing1(self):\n         \"\"\"Not adjustment\n         \"\"\"\n@@ -1185,7 +1201,7 @@ class TestOpticalModel:\n         old_fov = opt.getUndistortedObjectPosition(*old_pointing)\n         new_fov = opt.getUndistortedObjectPosition(*opt.pointing_center)\n \n-        assert np.allclose(old_fov-new_fov, delta, rtol=1E-4)\n+        assert np.allclose(old_fov-new_fov, delta, rtol=1E-3)\n \n \n \n@@ -1274,7 +1290,7 @@ class TestOpticalModel:\n \n         assert opt1.degs == (9, 5)\n \n-\n+    @pytest.mark.skip(reason=\"Re-think  this test now NIR WCS are on a detector basis\")\n     def test_setPointingFromImage(self):\n         \"\"\"Test the Global WCS with the old simulated data (BEFORE detector layout changes)\n         \"\"\"\n",
                            "Merge branch 'pointing_from_image' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-06-13T07:10:23.000+00:00",
                            "3a195030ca677fba725eac18b01ce9a22da4da33"
                        ],
                        [
                            "@@ -1076,12 +1076,11 @@ class TestOpticalModel:\n \n         meta = nisp_exp.getDetector('33').getMetadata()\n \n-        cd_matrix = np.array([[meta.get('CD1_1'), meta.get('CD1_2')],\n-                              [meta.get('CD2_1'), meta.get('CD2_2')]])/0.018 #CD matrix is now in mm\n+        cd_matrix = opt1.wcs.wcs.cd\n \n-        crval = [meta.get('CRVAL1'), meta.get('CRVAL2'), ]\n-        ctype = [meta.get('CTYPE1'), meta.get('CTYPE2'), ]\n-        crpix = [meta.get('CRPIX1'), meta.get('CRPIX2'), ]\n+        crval = opt1.wcs.wcs.crval\n+        ctype = opt1.wcs.wcs.ctype\n+        crpix = opt1.wcs.wcs.crpix\n \n         opt2.set_wcs(ctype, crpix, crval, cd_matrix)\n \n@@ -1115,6 +1114,23 @@ class TestOpticalModel:\n         assert np.allclose(opt1.pointing_angle, nisp_exp.getMetadata().get('PA'))\n \n \n+    def test_pointingAngle(self):\n+        \"\"\"Not adjustment\n+        \"\"\"\n+        filename = TestOpticalModel.get_xml_file()\n+        det = MockMDB()\n+        det.getPixelSize = MagicMock(return_value=0.018)\n+        det.getPixelScale = MagicMock(return_value=0.2989255487304668)\n+        det.getFOVScale = MagicMock(return_value=0.2989255487304668/0.018)\n+\n+        opt1 = OpticalModel.load(filename, det)\n+\n+        nisp_exp = NispSurveyExposure.readFits(TestOpticalModel.get_sci_frame())\n+        opt1.setPointingFromImage(nisp_exp)\n+\n+        assert np.allclose(nisp_exp.getMetadata().getAsDouble('PA'), opt1.pointing_angle)\n+\n+\n     def test_adjustPointing1(self):\n         \"\"\"Not adjustment\n         \"\"\"\n@@ -1185,7 +1201,7 @@ class TestOpticalModel:\n         old_fov = opt.getUndistortedObjectPosition(*old_pointing)\n         new_fov = opt.getUndistortedObjectPosition(*opt.pointing_center)\n \n-        assert np.allclose(old_fov-new_fov, delta, rtol=1E-4)\n+        assert np.allclose(old_fov-new_fov, delta, rtol=1E-3)\n \n \n \n@@ -1274,7 +1290,7 @@ class TestOpticalModel:\n \n         assert opt1.degs == (9, 5)\n \n-\n+    @pytest.mark.skip(reason=\"Re-think  this test now NIR WCS are on a detector basis\")\n     def test_setPointingFromImage(self):\n         \"\"\"Test the Global WCS with the old simulated data (BEFORE detector layout changes)\n         \"\"\"\n",
                            "Optical model Pointing and new detector layout",
                            "Marco Fumana",
                            "2023-06-13T07:10:22.000+00:00",
                            "0072a45e56f151e992c973a1fa687a3e1636eea5"
                        ],
                        [
                            "@@ -1359,3 +1359,25 @@ class TestOpticalModel:\n                 sir_value = sir_exp.getDetector(det_id).getScience()[int(round(sir_pix[0])), int(round(sir_pix[1]))]\n \n                 assert np.allclose(nir_value, sir_value)\n+\n+\n+    def test_weak_copy(self):\n+        \"\"\"This test checks the global rotation is ok.\n+        It checks everything match between NIR exposure (exposure after the NIT_Init)\n+        and the SIR rotated exposure.\n+        \"\"\"\n+\n+        mdb = MockMDB()\n+\n+        rdet = DetectorModel(\"RGS000\", mdb, rotate=True)\n+        opt = OpticalModel.load(TestOpticalModel.get_xml_file(), rdet)\n+\n+        copy_opt = opt.weak_copy()\n+\n+        assert np.allclose(opt.X, copy_opt.X)\n+        assert np.allclose(opt.Y, copy_opt.Y)\n+        assert np.allclose(opt.XPivot, copy_opt.XPivot)\n+        assert np.allclose(opt.YPivot, copy_opt.YPivot)\n+\n+        assert opt.det_model is copy_opt.det_model\n+\n",
                            "Merge branch 'bug_weak_copy' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-06-12T07:13:21.000+00:00",
                            "9c0018cbfd7cc8e76ec635158e57e900ec0f8ad5"
                        ],
                        [
                            "@@ -1359,3 +1359,25 @@ class TestOpticalModel:\n                 sir_value = sir_exp.getDetector(det_id).getScience()[int(round(sir_pix[0])), int(round(sir_pix[1]))]\n \n                 assert np.allclose(nir_value, sir_value)\n+\n+\n+    def test_weak_copy(self):\n+        \"\"\"This test checks the global rotation is ok.\n+        It checks everything match between NIR exposure (exposure after the NIT_Init)\n+        and the SIR rotated exposure.\n+        \"\"\"\n+\n+        mdb = MockMDB()\n+\n+        rdet = DetectorModel(\"RGS000\", mdb, rotate=True)\n+        opt = OpticalModel.load(TestOpticalModel.get_xml_file(), rdet)\n+\n+        copy_opt = opt.weak_copy()\n+\n+        assert np.allclose(opt.X, copy_opt.X)\n+        assert np.allclose(opt.Y, copy_opt.Y)\n+        assert np.allclose(opt.XPivot, copy_opt.XPivot)\n+        assert np.allclose(opt.YPivot, copy_opt.YPivot)\n+\n+        assert opt.det_model is copy_opt.det_model\n+\n",
                            "Bug fixed in weak copy",
                            "Marco Fumana",
                            "2023-06-12T07:13:21.000+00:00",
                            "305529468cdd2b43326468712593ad0dddc814f2"
                        ]
                    ],
                    "SIR_InstrumentModels/python/SIR_InstrumentModels/SensitivityModel.py": [
                        [
                            "@@ -24,6 +24,7 @@\n \n \"\"\"This module contains functions to compute NISP-S sensitivity function\"\"\"\n \n+import os\n import numpy as np\n import ElementsKernel.Logging as log\n from .GrismModel import GrismModel\n@@ -119,6 +120,27 @@ class SensitivityModel(object):\n             self._sens[order] = sens\n             self._variances[order] = None\n \n+    @staticmethod\n+    def _get_PLM_trans(mdb):\n+        filename = mdb.get('SpaceSegment.PLM.PLMTransmissionNISPNominalEOL')[0]\n+        filename = os.path.join(mdb.workdir, 'data', filename)\n+        trans_plm_3d = np.loadtxt(filename, comments='#', delimiter=',', encoding=\"utf-8-sig\", usecols=(0,1))\n+        \n+        #Get unit\n+        with open(filename, 'r') as header:\n+            for line in header:\n+                if line.startswith('#units'):\n+                    _, unit, *_ = line.split()\n+                    break\n+            else:\n+                raise Exception(f\"Units not found in {filename}\")\n+        \n+        if unit[1:] != 'nm':\n+            raise Exception(f\"Invalid transmission unit: {unit}\")     \n+        \n+        return trans_plm_3d\n+\n+\n     @staticmethod\n     def _compute_total_trans(mdb, grism, order):\n         \"\"\"Compute total PLM transmission.\n@@ -146,10 +168,7 @@ class SensitivityModel(object):\n           In case the lambda range values are not Angstroms\n         \"\"\"\n         # load PLM transmission\n-        trans_plm_3d = np.asarray(mdb.get('SpaceSegment.PLM.PLMTransmissionNISPNominalEOL'))\n-        unit = mdb.get('SpaceSegment.PLM.PLMTransmissionNISPNominalEOL', attribute='units')[0]\n-        if unit != 'nm':\n-            raise Exception(f\"Invalid transmission unit: {unit}\")\n+        trans_plm_3d = SensitivityModel._get_PLM_trans(mdb)\n \n         if order == GrismModel.Order_1:\n             hdu = grism + '_ORDER_1'\n",
                            "Merge branch 'fix_mdb_interface' into 'develop'",
                            "Marco Fumana",
                            "2023-07-26T10:37:00.000+00:00",
                            "6871d662f1feab7ea28433dd4e20f9edfc1a900e"
                        ]
                    ],
                    "SIR_InstrumentModels/tests/python/SensitivityModel_test.py": [
                        [
                            "@@ -43,14 +43,14 @@ class SensitivityModelTestCase(unittest.TestCase):\n         t['WAVELENGTH'].unit = unit\n         return t\n \n+    @patch('SIR_InstrumentModels.SensitivityModel.SensitivityModel._get_PLM_trans', return_value=np.zeros((5, 3)))\n     @patch('ST_DM_MDBTools.Mdb.Mdb')\n-    def test__compute_total_trans1(self, mock_mdb):\n+    def test__compute_total_trans1(self, mock_mdb, mock_get_PLM_trans):\n         \"\"\"Test compute total transmission. No error\n         \"\"\"\n \n         for order in (GrismModel.Order_0, GrismModel.Order_1, GrismModel.Order_2):\n-            mock_mdb.get.side_effect = [np.zeros((5, 3)), ('nm', None),  # np.zeros((5, 3)), ('nm', None),\n-                                        12.0, 'Angstrom', 15.0, 'Angstrom']\n+            mock_mdb.get.side_effect = [12.0, 'Angstrom', 15.0, 'Angstrom']\n             mock_mdb.getGrismTransmission.side_effect = [SensitivityModelTestCase.getTransmission(), ]\n             SensitivityModel._compute_total_trans(mock_mdb, 'RGS000', order)\n \n@@ -66,66 +66,66 @@ class SensitivityModelTestCase(unittest.TestCase):\n             with self.assertRaises(Exception):\n                 SensitivityModel._compute_total_trans(mock_mdb, 'RGS000', order)\n \n+    @patch('SIR_InstrumentModels.SensitivityModel.SensitivityModel._get_PLM_trans', return_value=np.zeros((5, 3)))\n     @patch('ST_DM_MDBTools.Mdb.Mdb')\n-    def test__compute_total_trans3(self, mock_mdb):\n+    def test__compute_total_trans3(self, mock_mdb, mock_get_PLM_trans):\n         \"\"\"Test compute total transmission. Invalid NISPGRTransmission unit\n         \"\"\"\n \n         for order in (GrismModel.Order_0, GrismModel.Order_1, GrismModel.Order_2):\n-            mock_mdb.get.side_effect = [np.zeros((5, 3)), ('nm', None),  # np.zeros((5, 3)), ('A', None),\n-                                        12.0, 'Angstrom', 15.0, 'Angstrom']\n+            mock_mdb.get.side_effect = [12.0, 'Angstrom', 15.0, 'Angstrom']\n             mock_mdb.getGrismTransmission.side_effect = [SensitivityModelTestCase.getTransmission(u.A), ]\n \n             with self.assertRaises(Exception):\n                 SensitivityModel._compute_total_trans(mock_mdb, 'RGS000', order)\n \n+    @patch('SIR_InstrumentModels.SensitivityModel.SensitivityModel._get_PLM_trans', return_value=np.zeros((5, 3)))\n     @patch('ST_DM_MDBTools.Mdb.Mdb')\n-    def test__compute_total_trans4(self, mock_mdb):\n+    def test__compute_total_trans4(self, mock_mdb, mock_get_PLM_trans):\n         \"\"\"Test compute total transmission. Invalid NISPLambdaMin unit\n         \"\"\"\n \n         for order in (GrismModel.Order_0, GrismModel.Order_1, GrismModel.Order_2):\n-            mock_mdb.get.side_effect = [np.zeros((5, 3)), ('nm', None),  # np.zeros((5, 3)), ('nm', None),\n-                                        12.0, 'nm', 15.0, 'Angstrom']\n+            mock_mdb.get.side_effect = [12.0, 'nm', 15.0, 'Angstrom']\n             mock_mdb.getGrismTransmission.side_effect = [SensitivityModelTestCase.getTransmission(), ]\n \n             with self.assertRaises(Exception):\n                 SensitivityModel._compute_total_trans(mock_mdb, 'RGS000', order)\n \n+    @patch('SIR_InstrumentModels.SensitivityModel.SensitivityModel._get_PLM_trans', return_value=np.zeros((5, 3)))\n     @patch('ST_DM_MDBTools.Mdb.Mdb')\n-    def test__compute_total_trans5(self, mock_mdb):\n+    def test__compute_total_trans5(self, mock_mdb, mock_get_PLM_trans):\n         \"\"\"Test compute total transmission. Invalid NISPLambdaMax unit\n         \"\"\"\n \n         for order in (GrismModel.Order_0, GrismModel.Order_1, GrismModel.Order_2):\n-            mock_mdb.get.side_effect = [np.zeros((5, 3)), ('nm', None),  # np.zeros((5, 3)), ('nm', None),\n-                                        12.0, 'Angstrom', 15.0, 'nm']\n+            mock_mdb.get.side_effect = [12.0, 'Angstrom', 15.0, 'nm']\n             mock_mdb.getGrismTransmission.side_effect = [SensitivityModelTestCase.getTransmission(), ]\n \n             with self.assertRaises(Exception):\n                 SensitivityModel._compute_total_trans(mock_mdb, 'RGS000', order)\n \n+    @patch('SIR_InstrumentModels.SensitivityModel.SensitivityModel._get_PLM_trans', return_value=np.zeros((5, 3)))\n     @patch('ST_DM_MDBTools.Mdb.Mdb')\n-    def test__compute_total_trans6(self, mock_mdb):\n+    def test__compute_total_trans6(self, mock_mdb, mock_get_PLM_trans):\n         \"\"\"Test compute total transmission. Invalid order\n         \"\"\"\n \n         for order in (-1, 3):\n-            mock_mdb.get.side_effect = [np.zeros((5, 3)), ('nm', None),  # np.zeros((5, 3)), ('nm', None),\n-                                        12.0, 'Angstrom', 15.0, 'Angstrom']\n+            mock_mdb.get.side_effect = [12.0, 'Angstrom', 15.0, 'Angstrom']\n             mock_mdb.getGrismTransmission.side_effect = [SensitivityModelTestCase.getTransmission(), ]\n \n             with self.assertRaises(Exception):\n                 SensitivityModel._compute_total_trans(mock_mdb, 'RGS000', order)\n \n+    @patch('SIR_InstrumentModels.SensitivityModel.SensitivityModel._get_PLM_trans', return_value=np.zeros((5, 3)))\n     @patch('ST_DM_MDBTools.Mdb.Mdb')\n-    def test__compute_sensitivity1(self, mock_mdb):\n+    def test__compute_sensitivity1(self, mock_mdb, mock_get_PLM_trans):\n         \"\"\"Test compute total sensitivity. No error\n         \"\"\"\n \n         for order in (GrismModel.Order_0, GrismModel.Order_1, GrismModel.Order_2):\n-            mock_mdb.get.side_effect = [1, 'J.s', 1, 'm/s', 1, 'm2', np.zeros((5, 3)),\n-                                        ('nm', None),  # np.zeros((5, 3)), ('nm', None),\n+            mock_mdb.get.side_effect = [1, 'J.s', 1, 'm/s', 1, 'm2',                                       \n                                         12.0, 'Angstrom', 15.0, 'Angstrom']\n             mock_mdb.getGrismTransmission.side_effect = [SensitivityModelTestCase.getTransmission(), ]\n \n@@ -194,10 +194,10 @@ class SensitivityModelTestCase(unittest.TestCase):\n         with self.assertRaises(Exception):\n             sens.getVariances(1)\n \n+    @patch('SIR_InstrumentModels.SensitivityModel.SensitivityModel._get_PLM_trans', return_value=np.zeros((5, 3)))\n     @patch('ST_DM_MDBTools.Mdb.Mdb')\n-    def test_get1(self, mock_mdb):\n-        mock_mdb.get.side_effect = [1, 'J.s', 1, 'm/s', 1, 'm2', np.zeros((5, 3)),\n-                                    ('nm', None),  # np.zeros((5, 3)), ('nm', None),\n+    def test_get1(self, mock_mdb, mock_get_PLM_trans):\n+        mock_mdb.get.side_effect = [1, 'J.s', 1, 'm/s', 1, 'm2', \n                                     12.0, 'Angstrom', 15.0, 'Angstrom'] * 3\n         mock_mdb.getGrismTransmission.side_effect = [SensitivityModelTestCase.getTransmission(), ] * 3\n \n@@ -207,4 +207,3 @@ class SensitivityModelTestCase(unittest.TestCase):\n             sens.getWaves(order)\n             sens.getSensitivity(order)\n             self.assertIsNone(sens.getVariances(order))\n-\n",
                            "Merge branch 'fix_mdb_interface' into 'develop'",
                            "Marco Fumana",
                            "2023-07-26T10:37:00.000+00:00",
                            "6871d662f1feab7ea28433dd4e20f9edfc1a900e"
                        ]
                    ],
                    "SIR_SpectraDecontamination/python/SIR_SpectraDecontamination/PhotometerInfo.py": [
                        [
                            "@@ -19,6 +19,8 @@\n #\n # Author: Nathaniel R. Stickley <nrstickley@ipac.caltech.edu>\n \n+import os\n+\n import numpy as np\n \n import SIR_SpectraDecontamination.Utils as Utils\n@@ -39,19 +41,27 @@ class PhotometerInfo(object):\n         mdb: Mdb\n             An Mdb object, loaded with data. This is the object returned by `SIR_Utilities.Mdb.Mdb.load()`\n         \"\"\"\n-        # The transmission curve for the Y, J, and H band filters\n-        y_filter_profile = mdb.get('SpaceSegment.Instrument.NISP.NISPYTransmissionCurves')\n-        j_filter_profile = mdb.get('SpaceSegment.Instrument.NISP.NISPJTransmissionCurves')\n-        h_filter_profile = mdb.get('SpaceSegment.Instrument.NISP.NISPHTransmissionCurves')\n+        data_dir = os.path.join(mdb.workdir, 'data')\n+\n+        # The transmission curve files for the Y, J, and H band filters\n+\n+        y_csv_name = mdb.get('SpaceSegment.Instrument.NISP.NISPYTransmissionCurves')[0]\n+        j_csv_name = mdb.get('SpaceSegment.Instrument.NISP.NISPJTransmissionCurves')[0]\n+        h_csv_name = mdb.get('SpaceSegment.Instrument.NISP.NISPHTransmissionCurves')[0]\n+\n+        y_filter_filename = os.path.join(data_dir, y_csv_name)\n+        j_filter_filename = os.path.join(data_dir, j_csv_name)\n+        h_filter_filename = os.path.join(data_dir, h_csv_name)\n \n         # The transmission curve for the Y band filter (wavelengths in nanometers and transmission fraction)\n-        y_wavs, y_transmission = np.transpose(y_filter_profile)\n+\n+        y_wavs, y_transmission = np.loadtxt(y_filter_filename, comments='#', delimiter=',', encoding=\"utf-8-sig\").T\n \n         # The transmission curve for the J band filter (wavelengths in nanometers and transmission fraction)\n-        j_wavs, j_transmission = np.transpose(j_filter_profile)\n+        j_wavs, j_transmission = np.loadtxt(j_filter_filename, comments='#', delimiter=',', encoding=\"utf-8-sig\").T\n \n         # The transmission curve for the H band filter (wavelengths in nanometers and transmission fraction)\n-        h_wavs, h_transmission = np.transpose(h_filter_profile)\n+        h_wavs, h_transmission = np.loadtxt(h_filter_filename, comments='#', delimiter=',', encoding=\"utf-8-sig\").T\n \n         # Convert from nanometers to Angstroms\n \n",
                            "Merge branch 'filter_transmissions_for_decon' into 'develop'",
                            "Marco Fumana",
                            "2023-07-24T15:59:17.000+00:00",
                            "df8868ec367da0dccd53cb02873432200427dfd0"
                        ]
                    ],
                    "SIR_SpectraDecontamination/tests/python/PhotometerInfo_test.py": [
                        [
                            "@@ -1,3 +1,26 @@\n+#\n+# Copyright (C) 2015-2023 Euclid Science Ground Segment\n+#\n+# This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General\n+# Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option)\n+# any later version.\n+#\n+# This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied\n+# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n+# details.\n+#\n+# You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to\n+# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+#\n+#\n+# File PhotometerInfo.py\n+#\n+# Created on: July, 23, 2018\n+#\n+# Author: Nathaniel R. Stickley <nrstickley@ipac.caltech.edu>\n+\n+import os\n+import shutil\n \n import numpy as np\n import pytest\n@@ -21,19 +44,35 @@ class MissionDatabaseStub:\n         self.h_sens = np.zeros_like(self.h_wavs)\n         self.h_sens[450:550] = 1.0\n \n-        self._data = {'SpaceSegment.Instrument.NISP.NISPYTransmissionCurves':\n-                      np.column_stack((self.y_wavs, self.y_sens)),\n-                      'SpaceSegment.Instrument.NISP.NISPJTransmissionCurves':\n-                      np.column_stack((self.j_wavs, self.j_sens)),\n-                      'SpaceSegment.Instrument.NISP.NISPHTransmissionCurves':\n-                      np.column_stack((self.h_wavs, self.h_sens))}\n+        self._data = {'SpaceSegment.Instrument.NISP.NISPYTransmissionCurves': ['y_trans.csv'],\n+                      'SpaceSegment.Instrument.NISP.NISPJTransmissionCurves': ['j_trans.csv'],\n+                      'SpaceSegment.Instrument.NISP.NISPHTransmissionCurves': ['h_trans.csv']}\n \n     def get(self, key):\n         return self._data[key]\n \n-\n-def test_effective_wavelength():\n+@pytest.fixture\n+def argument_fixture():\n     mdb = MissionDatabaseStub()\n+    mdb.workdir = './'\n+\n+    os.makedirs('./data', exist_ok=True)\n+\n+    y_data = np.column_stack((mdb.y_wavs, mdb.y_sens))\n+    j_data = np.column_stack((mdb.j_wavs, mdb.j_sens))\n+    h_data = np.column_stack((mdb.h_wavs, mdb.h_sens))\n+\n+    np.savetxt('./data/y_trans.csv', y_data, fmt='%.4E', delimiter=',', encoding='utf-8-sig')\n+    np.savetxt('./data/j_trans.csv', j_data, fmt='%.4E', delimiter=',', encoding='utf-8-sig')\n+    np.savetxt('./data/h_trans.csv', h_data, fmt='%.4E', delimiter=',', encoding='utf-8-sig')\n+\n+    yield mdb\n+\n+    shutil.rmtree('./data')\n+\n+\n+def test_effective_wavelength(argument_fixture):\n+    mdb = argument_fixture\n \n     phot = PhotometerInfo(mdb)\n \n@@ -58,8 +97,8 @@ def test_effective_wavelength():\n     assert J_wav is j_wav\n \n \n-def test_filter_transmission():\n-    mdb = MissionDatabaseStub()\n+def test_filter_transmission(argument_fixture):\n+    mdb = argument_fixture\n \n     phot = PhotometerInfo(mdb)\n \n",
                            "Merge branch 'filter_transmissions_for_decon' into 'develop'",
                            "Marco Fumana",
                            "2023-07-24T15:59:17.000+00:00",
                            "df8868ec367da0dccd53cb02873432200427dfd0"
                        ]
                    ],
                    "SIR_SpectraLocation/python/SIR_SpectraLocation/LambdaReferenceCheck.py": [
                        [
                            "@@ -193,7 +193,7 @@ class LambdaReferencesCheck:\n \n         results = LambdaReferencesCheck._create_results_table()\n \n-        chuck_size = len(expected_1st)//9\n+        chuck_size = max(len(expected_1st)//9, 1) #Avoid division by 0\n \n         for k, item in enumerate(expected_1st, 1):\n             if k%chuck_size == 0:\n",
                            "Merge branch 'mask_in_abs_dqc' into 'develop'",
                            "Marco Fumana",
                            "2023-07-21T09:17:14.000+00:00",
                            "bb7299903ca9b1d5aa2bdbf5f9f0042340b2ee6c"
                        ]
                    ],
                    "SIR_Utilities/python/SIR_Utilities/StarABSFitter.py": [
                        [
                            "@@ -445,11 +445,11 @@ class FitProfile(AbsFitter):\n         if profile is None:\n             return None, None\n \n-        x = np.arange(self._rows.start, self._rows.stop)\n+        x = np.arange(self._rows.start, self._rows.stop)[~profile.mask]\n         if len(x) < self._ywin:\n             return None, None\n \n-        return x, profile\n+        return x, profile[~profile.mask]\n \n \n     def compute_init(self, profile, xpos):\n",
                            "Merge branch 'mask_in_abs_dqc' into 'develop'",
                            "Marco Fumana",
                            "2023-07-21T09:17:14.000+00:00",
                            "bb7299903ca9b1d5aa2bdbf5f9f0042340b2ee6c"
                        ]
                    ],
                    "SIR_Utilities/tests/python/StarABSFitter_test.py": [
                        [
                            "@@ -849,7 +849,7 @@ class TestFitProfile:\n         assert np.allclose(model.mean_0, 20.0)\n \n \n-    def test_get_profile(self):\n+    def test_get_profile1(self):\n         fitter = FitProfile()\n         fitter.get_image_profile = MagicMock()\n \n@@ -863,6 +863,98 @@ class TestFitProfile:\n         assert np.isclose(fitter.get_image_profile.call_args_list[0][1]['sigma'], 5.2)\n \n \n+    def test_get_profile2(self):\n+        fitter = FitProfile()\n+        fitter._ywin = 4\n+        fitter._rows = slice(10, 20)\n+        \n+\n+        pix = MagicMock()\n+        nisp_exp = MagicMock()\n+        fitter._get_profile = MagicMock(return_value=None)\n+        \n+        a, b = fitter.get_profile(pix, nisp_exp)\n+        assert a is None\n+        assert b is None\n+\n+\n+    def test_get_profile3(self):\n+        fitter = FitProfile()\n+        fitter._ywin = 4\n+        fitter._rows = slice(10, 20)\n+        \n+\n+        pix = MagicMock()\n+        nisp_exp = MagicMock()\n+        profile = np.ma.array(np.arange(7, 12, 0.5), mask=[False]*10)\n+        fitter._get_profile = MagicMock(return_value=profile)\n+        \n+        a, b = fitter.get_profile(pix, nisp_exp)\n+        \n+        assert np.allclose(a, range(10, 20))\n+        assert np.allclose(b, profile.data)\n+\n+\n+    def test_get_profile4(self):\n+        fitter = FitProfile()\n+        fitter._ywin = 11\n+        fitter._rows = slice(10, 20)\n+        \n+\n+        pix = MagicMock()\n+        nisp_exp = MagicMock()\n+        profile = np.ma.array(np.arange(7, 12, 0.5), mask=[False]*10)\n+        fitter._get_profile = MagicMock(return_value=profile)\n+        \n+        a, b = fitter.get_profile(pix, nisp_exp)\n+        \n+        assert a is None\n+        assert b is None\n+\n+\n+    def test_get_profile5(self):\n+        fitter = FitProfile()\n+        fitter._ywin = 4\n+        fitter._rows = slice(10, 20)\n+        \n+\n+        pix = MagicMock()\n+        nisp_exp = MagicMock()\n+        profile = np.ma.array(np.arange(7, 12, 0.5), mask=[False]*10)\n+        profile.mask[2]=True\n+        profile.mask[5]=True\n+        fitter._get_profile = MagicMock(return_value=profile)\n+        \n+        a, b = fitter.get_profile(pix, nisp_exp)\n+        \n+        assert np.allclose(a, [10, 11, 13, 14, 16, 17, 18, 19])\n+        assert np.allclose(b, [7, 7.5, 8.5, 9, 10, 10.5, 11, 11.5])\n+        \n+\n+    def test_get_profile6(self):\n+        fitter = FitProfile()\n+        fitter._ywin = 6\n+        fitter._rows = slice(10, 20)\n+        \n+\n+        pix = MagicMock()\n+        nisp_exp = MagicMock()\n+        profile = np.ma.array(np.arange(7, 12, 0.5), mask=[False]*10)\n+        profile.mask[0]=True\n+        profile.mask[1]=True\n+        profile.mask[2]=True\n+        profile.mask[3]=True\n+        profile.mask[4]=True\n+        profile.mask[5]=True\n+        fitter._get_profile = MagicMock(return_value=profile)\n+        \n+        a, b = fitter.get_profile(pix, nisp_exp)\n+        \n+        assert a is None\n+        assert b is None\n+        \n+        \n+        \n     def test_fit1(self):\n         \"\"\"No covariance matrix\n         \"\"\"\n@@ -872,7 +964,7 @@ class TestFitProfile:\n         nisp_exp = MagicMock()\n         ax = MagicMock()\n \n-        profile = MagicMock()\n+        profile = np.ma.array([0., 0.2, 0.6, 0.7, 1.0], mask=[False]*5)\n         fitter = FitProfile()\n         fitter._rows = slice(2, 7)\n         fitter._get_profile = MagicMock(return_value=profile)\n@@ -891,13 +983,13 @@ class TestFitProfile:\n \n         _x = [2, 3, 4, 5, 6]\n         assert np.allclose(fitter.cross_correlate.call_args_list[0][0][0], _x)\n-        assert fitter.cross_correlate.call_args_list[0][0][1] is profile\n+        assert np.allclose(fitter.cross_correlate.call_args_list[0][0][1], profile)\n         assert fitter.cross_correlate.call_args_list[0][0][2] is pix\n         assert fitter.cross_correlate.call_args_list[0][1]['ax'] is ax\n \n         assert fitter._fitter.call_args_list[0][0][0] is model_init\n         assert np.allclose(fitter._fitter.call_args_list[0][0][1], _x)\n-        assert fitter._fitter.call_args_list[0][0][2] is profile\n+        assert np.allclose(fitter._fitter.call_args_list[0][0][2], profile)\n \n \n     def test_fit2(self):\n@@ -908,7 +1000,7 @@ class TestFitProfile:\n         nisp_exp = MagicMock()\n         ax = MagicMock()\n \n-        profile = MagicMock()\n+        profile = np.ma.array([0., 0.2, 0.6, 0.7, 1.0], mask=[False]*5)\n         fitter = FitProfile()\n         fitter._rows = slice(2, 7)\n         fitter._get_profile = MagicMock(return_value=profile)\n@@ -929,13 +1021,13 @@ class TestFitProfile:\n \n         _x = [2, 3, 4, 5, 6]\n         assert np.allclose(fitter.cross_correlate.call_args_list[0][0][0], _x)\n-        assert fitter.cross_correlate.call_args_list[0][0][1] is profile\n+        assert np.allclose(fitter.cross_correlate.call_args_list[0][0][1], profile)\n         assert fitter.cross_correlate.call_args_list[0][0][2] is pix\n         assert fitter.cross_correlate.call_args_list[0][1]['ax'] is ax\n \n         assert fitter._fitter.call_args_list[0][0][0] is model_init\n         assert np.allclose(fitter._fitter.call_args_list[0][0][1], _x)\n-        assert fitter._fitter.call_args_list[0][0][2] is profile\n+        assert np.allclose(fitter._fitter.call_args_list[0][0][2], profile)\n \n \n \n@@ -949,7 +1041,7 @@ class TestFitProfile:\n         nisp_exp = MagicMock()\n         ax = MagicMock()\n \n-        profile = MagicMock()\n+        profile = np.ma.array([0., 0.2, 0.6, 0.7, 1.0], mask=[False]*5)\n         fitter = FitProfile()\n         fitter._rows = slice(2, 7)\n         fitter._ywin = 2.5\n@@ -973,13 +1065,13 @@ class TestFitProfile:\n \n         _x = [2, 3, 4, 5, 6]\n         assert np.allclose(fitter.cross_correlate.call_args_list[0][0][0], _x)\n-        assert fitter.cross_correlate.call_args_list[0][0][1] is profile\n+        assert np.allclose(fitter.cross_correlate.call_args_list[0][0][1], profile)\n         assert fitter.cross_correlate.call_args_list[0][0][2] is pix\n         assert fitter.cross_correlate.call_args_list[0][1]['ax'] is ax\n \n         assert fitter._fitter.call_args_list[0][0][0] is model_init\n         assert np.allclose(fitter._fitter.call_args_list[0][0][1], _x)\n-        assert fitter._fitter.call_args_list[0][0][2] is profile\n+        assert np.allclose(fitter._fitter.call_args_list[0][0][2], profile)\n \n \n \n@@ -993,7 +1085,7 @@ class TestFitProfile:\n         nisp_exp = MagicMock()\n         ax = MagicMock()\n \n-        profile = MagicMock()\n+        profile = np.ma.array([0., 0.2, 0.6, 0.7, 1.0], mask=[False]*5)\n         fitter = FitProfile()\n         fitter._rows = slice(2, 7)\n         fitter._cols = slice(2, 7)\n@@ -1018,10 +1110,10 @@ class TestFitProfile:\n \n         _x = [2, 3, 4, 5, 6]\n         assert np.allclose(fitter.cross_correlate.call_args_list[0][0][0], _x)\n-        assert fitter.cross_correlate.call_args_list[0][0][1] is profile\n+        assert np.allclose(fitter.cross_correlate.call_args_list[0][0][1], profile)\n         assert fitter.cross_correlate.call_args_list[0][0][2] is pix\n         assert fitter.cross_correlate.call_args_list[0][1]['ax'] is ax\n \n         assert fitter._fitter.call_args_list[0][0][0] is model_init\n         assert np.allclose(fitter._fitter.call_args_list[0][0][1], _x)\n-        assert fitter._fitter.call_args_list[0][0][2] is profile\n+        assert np.allclose(fitter._fitter.call_args_list[0][0][2], profile)\n",
                            "Merge branch 'mask_in_abs_dqc' into 'develop'",
                            "Marco Fumana",
                            "2023-07-21T09:17:14.000+00:00",
                            "bb7299903ca9b1d5aa2bdbf5f9f0042340b2ee6c"
                        ]
                    ],
                    "SIR_SpectraLocation/python/SIR_SpectraLocation/SpectraTraceCheck.py": [
                        [
                            "@@ -180,7 +180,11 @@ class SpectraTraceCheck:\n         Return: 1D profile (array)\n         \"\"\"\n         clipped = sigma_clip(spec2d, sigma=2.5, axis=1)\n-        return np.ma.sum(clipped, axis=1)\n+        profile = np.ma.sum(clipped, axis=1)\n+        #Remove not finite values from profile\n+        profile.mask[~np.isfinite(profile)] = True\n+        return profile\n+        \n \n \n     def _compute_profile(self, det_image, center):\n@@ -204,11 +208,13 @@ class SpectraTraceCheck:\n             return None, None\n \n         profile_1d = SpectraTraceCheck._derive_cross_disp_profile(det_image[ystart:yend, xstart:xend])\n-        if len(profile_1d) < 5:\n+        \n+        xdata = np.arange(ystart, yend)[~profile_1d.mask]\n+        if len(xdata) < 5:\n             logger.debug(\"Profile too short\")\n             return None, None\n \n-        return np.arange(ystart, yend), profile_1d\n+        return xdata, profile_1d[~profile_1d.mask]\n \n \n     @staticmethod\n@@ -234,9 +240,16 @@ class SpectraTraceCheck:\n \n         # Debug purposes\n         model_init = SpectraTraceCheck._compute_init(profile, xdata[len(xdata)//2])\n+        if model_init is None:\n+            logger.debug(\"No initial model computed\")\n+            return None\n \n         fitter = fitting.LevMarLSQFitter()\n-        model_fit = fitter(model_init, xdata, profile)\n+        try:\n+            model_fit = fitter(model_init, xdata[~profile.mask], profile[~profile.mask])\n+        except:\n+            logger.debug(\"Fit failure\")\n+            return None\n \n         if fitter.fit_info['param_cov'] is None or fitter.fit_info['ierr'] not in (1, 2, 3, 4):\n             logger.debug(\"Peak position fit failed\")\n@@ -267,7 +280,8 @@ class SpectraTraceCheck:\n         \"\"\"\n         _, level, _ = sigma_clipped_stats(profile, sigma=2.0)\n         A = profile.max()- level\n-\n+        if False in np.isfinite([A, level]):\n+            return None\n         return SpectraTraceCheck._get_model(A, xpos, level)\n \n \n",
                            "Merge branch 'mask_in_traces_dqc' into 'develop'",
                            "Marco Fumana",
                            "2023-07-20T10:43:39.000+00:00",
                            "fa8828063addc78ee0c8dc4f3e4323233c379bad"
                        ]
                    ],
                    "SIR_SpectraLocation/tests/python/SpectraTraceCheck_test.py": [
                        [
                            "@@ -0,0 +1,226 @@\n+#\n+# Copyright (C) 2015-2020 Euclid Science Ground Segment\n+#\n+# This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General\n+# Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option)\n+# any later version.\n+#\n+# This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied\n+# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n+# details.\n+#\n+# You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to\n+# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+#\n+\n+#\n+# File SpectraTraceCheck_test.py\n+#\n+# Created on: Jul 20, 2023\n+#\n+# Author: Marco Fumana\n+#\n+\n+import os\n+import numpy as np\n+import pytest\n+from unittest.mock import MagicMock, patch\n+\n+\n+from SIR_SpectraLocation.SpectraTraceCheck import SpectraTraceCheck\n+\n+\n+class TestSpectraTraceCheck:\n+\n+\n+    @staticmethod\n+    def get_nisp_exp(grism_name='RGS000', tilt=0):\n+        nisp_exp = MagicMock()\n+        nisp_exp.getGrism = MagicMock(return_value=grism_name)\n+        header = MagicMock()\n+        nisp_exp.getMetadata = MagicMock(return_value=header)\n+        header.getAsInt = MagicMock(return_value=tilt)\n+        return nisp_exp\n+\n+\n+    def test_derive_cross_disp_profile1(self):        \n+        data = np.random.rand(10, 20)\n+        data[0] = np.nan\n+        p = SpectraTraceCheck._derive_cross_disp_profile(data)\n+        \n+        assert p.mask[0] == True\n+    \n+    \n+    @patch('SIR_SpectraLocation.SpectraTraceCheck.np.ma.sum')    \n+    def test_derive_cross_disp_profile2(self, mock_sum):\n+        mock_sum.return_value=np.ma.array([1., 2., 3., 4., np.nan], \n+                                          mask=[False, True, False, False, False])\n+        data = np.random.rand(10, 20)\n+        p = SpectraTraceCheck._derive_cross_disp_profile(data)\n+        assert np.alltrue(p.mask == [False, True, False, False, True])\n+\n+\n+    @patch('SIR_SpectraLocation.SpectraTraceCheck.np.ma.sum')    \n+    def test_derive_cross_disp_profile3(self, mock_sum):\n+        mock_sum.return_value=np.ma.array([1., np.nan, 3., 4., 5.0], \n+                                          mask=[False, True, False, False, False])\n+        data = np.random.rand(10, 20)\n+        p = SpectraTraceCheck._derive_cross_disp_profile(data)\n+        assert np.alltrue(p.mask == [False, True, False, False, False])\n+\n+        \n+    @patch('SIR_SpectraLocation.SpectraTraceCheck.logger')    \n+    def test_compute_profile1(self, mock_log):\n+        det_image = np.zeros((10, 20))\n+        stc = SpectraTraceCheck([])\n+        \n+        stc._half_bin_xsize = 3\n+        stc._half_bin_ysize = 2\n+        a, b = stc._compute_profile(det_image, [5., 1])\n+        assert a is None\n+        assert b is None\n+        assert mock_log.debug.call_args_list[0][0][0] == \"Y range out of image\"\n+    \n+    @patch('SIR_SpectraLocation.SpectraTraceCheck.logger')    \n+    def test_compute_profile2(self, mock_log):\n+        det_image = np.zeros((10, 20))\n+        stc = SpectraTraceCheck([])\n+        \n+        stc._half_bin_xsize = 3\n+        stc._half_bin_ysize = 2\n+        a, b = stc._compute_profile(det_image, [5., 10])\n+        assert a is None\n+        assert b is None\n+        assert mock_log.debug.call_args_list[0][0][0] == \"Y range out of image\"\n+        \n+\n+    @patch('SIR_SpectraLocation.SpectraTraceCheck.logger')    \n+    def test_compute_profile3(self, mock_log):\n+        det_image = np.zeros((10, 20))\n+        stc = SpectraTraceCheck([])\n+        \n+        stc._half_bin_xsize = 3\n+        stc._half_bin_ysize = 2\n+        a, b = stc._compute_profile(det_image, [1., 5])\n+        assert a is None\n+        assert b is None\n+        assert mock_log.debug.call_args_list[0][0][0] == \"X range out of image\"    \n+    \n+\n+    @patch('SIR_SpectraLocation.SpectraTraceCheck.logger')    \n+    def test_compute_profile4(self, mock_log):\n+        det_image = np.zeros((10, 20))\n+        stc = SpectraTraceCheck([])\n+        \n+        stc._half_bin_xsize = 3\n+        stc._half_bin_ysize = 2\n+        a, b = stc._compute_profile(det_image, [19., 5])\n+        assert a is None\n+        assert b is None\n+        assert mock_log.debug.call_args_list[0][0][0] == \"X range out of image\"    \n+        \n+\n+    @patch('SIR_SpectraLocation.SpectraTraceCheck.logger')    \n+    @patch('SIR_SpectraLocation.SpectraTraceCheck.SpectraTraceCheck._derive_cross_disp_profile')    \n+    def test_compute_profile5(self, mock_profile, mock_log):\n+        det_image = np.zeros((10, 20))\n+        stc = SpectraTraceCheck([])\n+        profile = np.ma.array([0,1,2,3,4,5,6,7,8], mask=[False]*9)\n+        mock_profile.return_value=profile\n+        \n+        stc._half_bin_xsize = 3\n+        stc._half_bin_ysize = 4\n+        x, y = stc._compute_profile(det_image, [10., 5.])\n+        assert np.allclose(x, np.arange(1, 10))\n+        assert np.allclose(y, profile)\n+        \n+    @patch('SIR_SpectraLocation.SpectraTraceCheck.logger')    \n+    @patch('SIR_SpectraLocation.SpectraTraceCheck.SpectraTraceCheck._derive_cross_disp_profile')    \n+    def test_compute_profile6(self, mock_profile, mock_log):\n+        det_image = np.zeros((10, 20))\n+        stc = SpectraTraceCheck([])\n+        profile = np.ma.array([0,1,2,3,4,5,6,7,8], mask=[False]*9)\n+        profile.mask[1] = True\n+        profile.mask[2] = True\n+        profile.mask[8] = True\n+        mock_profile.return_value=profile\n+        \n+        stc._half_bin_xsize = 3\n+        stc._half_bin_ysize = 4\n+        x, y = stc._compute_profile(det_image, [10., 5.])\n+        assert np.allclose(x, [1, 4, 5., 6., 7, 8])\n+        assert np.allclose(y, profile[~profile.mask])    \n+    \n+      \n+    @patch('SIR_SpectraLocation.SpectraTraceCheck.logger')    \n+    @patch('SIR_SpectraLocation.SpectraTraceCheck.SpectraTraceCheck._derive_cross_disp_profile')    \n+    def test_compute_profile7(self, mock_profile, mock_log):\n+        det_image = np.zeros((10, 20))\n+        stc = SpectraTraceCheck([])\n+        profile = np.ma.array([0,1,2,3,4,5,6,7,8], mask=[False]*9)\n+        profile.mask[1] = True\n+        profile.mask[2] = True\n+        \n+        profile.mask[4] = True\n+        profile.mask[5] = True\n+        profile.mask[8] = True\n+        \n+        mock_profile.return_value=profile\n+        \n+        stc._half_bin_xsize = 3\n+        stc._half_bin_ysize = 4\n+        a, b = stc._compute_profile(det_image, [10., 5.])\n+        assert a is None\n+        assert b is None\n+        assert mock_log.debug.call_args_list[0][0][0] == \"Profile too short\"           \n+        \n+        \n+    def test_fit_position1(self):\n+        profile = np.ma.array([0, 0, 1, 2, 4, 2, 1, 0, 0], mask=[False]*9)\n+        xdata = np.arange(4, 4+len(profile))\n+        \n+        xpos = SpectraTraceCheck._fit_position(xdata, profile)\n+        \n+        assert np.allclose(xpos, 8)\n+        \n+    def test_fit_position2(self):\n+        profile = np.ma.array([0, 0, 1, 2, 4, 2, 1, 0, 0], mask=[False]*9)\n+        profile.mask[4] = True\n+        xdata = np.arange(4, 4+len(profile))\n+        \n+        xpos = SpectraTraceCheck._fit_position(xdata, profile)\n+        \n+        assert np.allclose(xpos, 8)\n+\n+        \n+    def test_fit_position3(self):\n+        profile = np.ma.array([0, 0, 1, 2, 4, 2, 1, 0, 0], mask=[False]*9)\n+        profile.mask[5] = True\n+        xdata = np.arange(4, 4+len(profile))\n+        \n+        xpos = SpectraTraceCheck._fit_position(xdata, profile)\n+        \n+        assert xpos > 8\n+        \n+\n+    @patch('SIR_SpectraLocation.SpectraTraceCheck.logger')    \n+    def test_fit_position4(self, mock_log):\n+        \n+        model_init = SpectraTraceCheck._get_model(np.nan, 4, 0.5)\n+        \n+        profile = np.ma.array([0, 0, 1, 2, 4, 2, 1, 0, 0], mask=[False]*9)\n+        xdata = np.arange(4, 4+len(profile), dtype=np.float32)\n+        xdata[4] = np.nan\n+        \n+        \n+        xpos = SpectraTraceCheck._fit_position(xdata, profile)\n+        assert xpos is None\n+        assert mock_log.debug.call_args_list[0][0][0] == \"Fit failure\"           \n+        \n+        \n+    def test_compute_init1(self):\n+        profile = np.ma.array([0, 0, 1, 2, 4, 2, 1, 0, np.nan], mask=[False]*9)\n+        model = SpectraTraceCheck._compute_init(profile, 8)\n+        \n+        assert model is None\n+        \n\\ No newline at end of file\n",
                            "Merge branch 'mask_in_traces_dqc' into 'develop'",
                            "Marco Fumana",
                            "2023-07-20T10:43:39.000+00:00",
                            "fa8828063addc78ee0c8dc4f3e4323233c379bad"
                        ]
                    ],
                    "SIR_Catalogs/tests/python/CatalogInterface_test.py": [
                        [
                            "@@ -486,10 +486,10 @@ class TestCatalogInterface(object):\n \n \n         matches = catalog.match(data2['ID'], data2['RA'], data2['DEC'])\n-        print(matches)\n-        assert matches.shape == (4, 2)\n-        assert np.alltrue(matches[:,0] == [1, 2, 3, 4])\n-        assert np.alltrue(matches[:,1] == [10, 20, 30, 30])\n+        \n+        assert len(matches) == 4\n+        assert np.alltrue(matches['id1'] == [1, 2, 3, 4])\n+        assert np.alltrue(matches['id2'] == [10, 20, 30, 30])\n \n     def test_match2(self):\n         catalog = CatalogInterface()\n@@ -504,9 +504,10 @@ class TestCatalogInterface(object):\n \n         matches = catalog.match(data2['ID'], data2['RA'], data2['DEC'], max_sep=0.15*3600.)\n \n-        assert matches.shape == (3, 2)\n-        assert np.alltrue(matches[:,0] == [1, 2, 3])\n-        assert np.alltrue(matches[:,1] == [10, 20, 30])\n+        assert len(matches) == 3\n+        assert np.alltrue(matches['id1'] == [1, 2, 3])\n+        assert np.alltrue(matches['id2'] == [10, 20, 30])\n+        \n \n     def test_observations_list1(self):\n         catalog = CatalogInterface()\n",
                            "Merge branch 'match_with_distances' into 'develop'",
                            "Marco Fumana",
                            "2023-07-20T07:47:03.000+00:00",
                            "5a051d79ff8424be51bce4152394570c92614e2f"
                        ]
                    ],
                    "SIR_SpectraLocation/tests/python/SpectraLocationCore_test.py": [
                        [
                            "@@ -250,29 +250,30 @@ class TestSpectraLocationCore:\n         assert np.allclose(catalog.match.call_args_list[0][0][2], [56.78])\n         assert catalog.match.call_args_list[0][1]['max_sep'] is obj_sep\n \n-\n-    def test_match_catalog_and_target2(self):\n+    @patch('SIR_SpectraLocation.SpectraLocationCore.logger')\n+    def test_match_catalog_and_target2(self, mock_log):\n         catalog = MagicMock()\n-        catalog.match = MagicMock(return_value=[1, 2])\n+        catalog.match = MagicMock(return_value=Table({'id1':[1,2], 'id2':[3,4], 'd2d':[10.,1.0]}))\n \n         target_catalog = Table({'NAME': ['MARCO'], 'RA': [12.34], 'DEC': [56.78]})\n         obj_sep = MagicMock()\n \n-        with pytest.raises(Exception) as no_match:\n-            SpectraLocationCore._match_catalog_and_target(catalog, target_catalog, obj_sep)\n+        match = SpectraLocationCore._match_catalog_and_target(catalog, target_catalog, obj_sep)\n \n-        assert str(no_match.value) == \"Multiple matches not allowed\"\n+        assert mock_log.warning.call_args_list[0][0][0] == \"Multiple matches (2) found.\"\n         assert catalog.match.call_args_list[0][0][0] == [\"MARCO\"]\n         assert np.allclose(catalog.match.call_args_list[0][0][1], [12.34])\n         assert np.allclose(catalog.match.call_args_list[0][0][2], [56.78])\n         assert catalog.match.call_args_list[0][1]['max_sep'] is obj_sep\n+        \n+        #Check the smaller distance is selected\n+        assert match[1] == 4\n \n \n     def test_match_catalog_and_target3(self):\n \n         catalog = Table({'ID': [1,2, 3], 'RA':[10,20,30]})\n-        match = [np.zeros((2)),]\n-        match[0][0] = 2\n+        match = Table({'id1': [2,], 'id2': [2,], 'd2d': [1.0,]})\n         catalog.match = MagicMock(return_value=match)\n \n         target_catalog = Table({'NAME': ['MARCO'], 'RA': [12.34], 'DEC': [56.78]})\n",
                            "Merge branch 'match_with_distances' into 'develop'",
                            "Marco Fumana",
                            "2023-07-20T07:47:03.000+00:00",
                            "5a051d79ff8424be51bce4152394570c92614e2f"
                        ],
                        [
                            "@@ -42,6 +42,9 @@ from SIR_TiltComputation.TiltComputationCore import TiltComputationCore\n \n from SIR_SpectraLocation.AdjustPointing import AdjustPointing\n \n+from ElementsKernel import Auxiliary\n+\n+\n class TestSpectraLocationCore:\n \n     def test_init1(self):\n@@ -408,8 +411,7 @@ class TestSpectraLocationCore:\n \n         ini_file = core._get_ini_file(\"TiltComputationCore\", TiltComputationCore.DEFAULT_INI, None)\n \n-        path = os.path.expandvars(\"${THIS_PROJECT_ROOT}/InstallArea/${BINARY_TAG}/auxdir/\")\n-        assert ini_file == os.path.join(path, \"SIR_TiltComputationParams.ini\")\n+        assert ini_file == Auxiliary.getAuxiliaryPath(\"SIR_TiltComputationParams.ini\", raise_exception=False)\n \n     def test_get_ini_file4(self, tmpdir):\n         workdir = tmpdir\n@@ -425,5 +427,4 @@ class TestSpectraLocationCore:\n \n         ini_file = core._get_ini_file(\"TiltComputationCoreee\", TiltComputationCore.DEFAULT_INI, config_set)\n \n-        path = os.path.expandvars(\"${THIS_PROJECT_ROOT}/InstallArea/${BINARY_TAG}/auxdir/\")\n-        assert ini_file == os.path.join(path, \"SIR_TiltComputationParams.ini\")\n+        assert ini_file == Auxiliary.getAuxiliaryPath(\"SIR_TiltComputationParams.ini\", raise_exception=False)\n",
                            "Merge branch 'new_default' into 'develop'",
                            "Marco Fumana",
                            "2023-07-11T20:26:41.000+00:00",
                            "3b71827103e1d8d1ba156e5467d368ba9b7679c6"
                        ],
                        [
                            "@@ -42,6 +42,9 @@ from SIR_TiltComputation.TiltComputationCore import TiltComputationCore\n \n from SIR_SpectraLocation.AdjustPointing import AdjustPointing\n \n+from ElementsKernel import Auxiliary\n+\n+\n class TestSpectraLocationCore:\n \n     def test_init1(self):\n@@ -408,8 +411,7 @@ class TestSpectraLocationCore:\n \n         ini_file = core._get_ini_file(\"TiltComputationCore\", TiltComputationCore.DEFAULT_INI, None)\n \n-        path = os.path.expandvars(\"${THIS_PROJECT_ROOT}/InstallArea/${BINARY_TAG}/auxdir/\")\n-        assert ini_file == os.path.join(path, \"SIR_TiltComputationParams.ini\")\n+        assert ini_file == Auxiliary.getAuxiliaryPath(\"SIR_TiltComputationParams.ini\", raise_exception=False)\n \n     def test_get_ini_file4(self, tmpdir):\n         workdir = tmpdir\n@@ -425,5 +427,4 @@ class TestSpectraLocationCore:\n \n         ini_file = core._get_ini_file(\"TiltComputationCoreee\", TiltComputationCore.DEFAULT_INI, config_set)\n \n-        path = os.path.expandvars(\"${THIS_PROJECT_ROOT}/InstallArea/${BINARY_TAG}/auxdir/\")\n-        assert ini_file == os.path.join(path, \"SIR_TiltComputationParams.ini\")\n+        assert ini_file == Auxiliary.getAuxiliaryPath(\"SIR_TiltComputationParams.ini\", raise_exception=False)\n",
                            "Introduced Auxiliary.getAuxiliaryPath",
                            "Marco Fumana",
                            "2023-07-11T20:26:41.000+00:00",
                            "992bce75d7875a5bddd57c742c35c86c99c42c9e"
                        ]
                    ],
                    "SIR_InstrumentModels/python/SIR_InstrumentModels/DetectorModel.py": [
                        [
                            "@@ -179,13 +179,3 @@ class DetectorModel(CDetectorModel):\n \n         return det_list\n \n-\n-    @staticmethod\n-    def getDetectorIDRange():\n-        \"\"\"Returns the list of DET_ID string\n-        \"\"\"\n-        ids = []\n-        for det_num in DetectorModel.getDetectorRange():\n-            ids.append(DetectorModel.getDetectorID(det_num))\n-        return ids\n-\n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_PreProcessing/SIR_PreProcessing/MasterBackground.h": [
                        [
                            "@@ -59,7 +59,7 @@ public:\n   virtual void computeBackground(Euclid::Image::SurveyExposure<Euclid::Image::DetectorExposure<Euclid::Image::Image<float>,\n                                  Euclid::Image::Image<float>, Euclid::Image::Mask<uint32_t>>> &exposure,\n                                  bool const compute_mask,\n-                                 double const pad=0.0) = 0;\n+                                 double const pad=0.0, const bool fit=false) = 0;\n \n   /**\n    * @brief\n@@ -72,7 +72,7 @@ public:\n                                                           Euclid::Image::Image<float>,\n                                                           Euclid::Image::Mask<uint32_t>> &exposure,\n                                                           bool const compute_mask,\n-                                                          double const pad=0.0) = 0;\n+                                                          double const pad=0.0, const bool fit=false) = 0;\n   /**\n    * @brief\n    *     This method removes the master background of the Survey Exposure\n@@ -203,8 +203,7 @@ public:\n    *     Detector number for these histogram parameters.\n    *     If detector is NO_DET applies the parameters to all detectors.\n    */\n-  void setHistogramParameters(size_t const nbin, float const xmin, float const xmax,\n-                              Detector::Number detector = Detector::Number::NO_DET);\n+  void setHistogramParameters(size_t const nbin, float const xmin, float const xmax, std::string const &det_id);\n \n   /**\n    * @brief Use the Survey exposure to compute histogram parameters for each detector\n@@ -243,13 +242,13 @@ public:\n    *     New data values for the histogram\n    * @param variance\n    *     Variance on data (used only in case the random generator *random exists)\n-   * @param det_num\n-   *     The detector number\n+   * @param det_id\n+   *     The detector ID\n    * @param random\n    *     A default GSL random generator\n    */\n   void updateHistogram(const Euclid::EigenView::Array<float> &data, const Euclid::EigenView::Array<float> &variance,\\\n-                       Detector::Number det_num, gsl_rng *random);\n+                       std::string const &det_id, gsl_rng *random);\n \n   /**\n    * @brief\n@@ -271,7 +270,7 @@ public:\n   virtual void computeBackground(Euclid::Image::SurveyExposure<Euclid::Image::DetectorExposure<Euclid::Image::Image<float>,\\\n                                  Euclid::Image::Image<float>, Euclid::Image::Mask<uint32_t>>> &exposure,\n                                  bool const compute_mask,\n-                                 double const pad=0.0) override;\n+                                 double const pad=0.0, const bool fit=false) override;\n \n /**\n    * @brief\n@@ -287,48 +286,48 @@ public:\n                                                   Euclid::Image::Image<float>,\n                                                   Euclid::Image::Mask<uint32_t>> &exposure,\n                                  bool const compute_mask,\n-                                 double const pad=0.0) override;\n+                                 double const pad=0.0, const bool fit=false) override;\n \n   /**\n    * @brief\n    *     Get the background value for this detector\n-   * @param det_num\n-   *     Detector number\n+   * @param det_id\n+   *     Detector ID\n    * @return\n    *     The background value\n    */\n-  float getBackgroundValue(Detector::Number det_num) const;\n+  float getBackgroundValue(std::string const &det_id) const;\n \n   /**\n    * @brief\n    *     Check if the background value (for this detector) has been computed\n-   * @param det_num\n-   *     The detector number\n+   * @param det_id\n+   *     The detector ID\n    * @return\n    *     True if background value exists\n    */\n-  bool hasBackgroundValue(Detector::Number det_num) const;\n+  bool hasBackgroundValue(std::string const &det_id) const;\n \n   /**\n    * @brief\n    *     Get the background variance for this detector\n-   * @param det_num\n-   *     Detector number\n+   * @param det_id\n+   *     Detector ID\n    * @return\n    *     The background value\n    */\n-  float getBackgroundVariance(Detector::Number det_num) const;\n-  float getBackgroundError(Detector::Number det_num) const;\n+  float getBackgroundVariance(std::string const &det_id) const;\n+  float getBackgroundError(std::string const &det_id) const;\n \n   /**\n    * @brief\n    *     Check if the background variance (for this detector) has been computed\n-   * @param det_num\n-   *     The detector number\n+   * @param det_id\n+   *     The detector ID\n    * @return\n    *     True if background variance exists\n    */\n-  bool hasBackgroundVariance(Detector::Number det_num) const;\n+  bool hasBackgroundVariance(std::string const &det_id) const;\n \n   /**\n    * @brief\n@@ -353,12 +352,12 @@ public:\n \n   /**\n    * @brief Get the Histogram instance for this detector\n-   * @param detector\n-   *     Detector number\n+   * @param det_id\n+   *     Detector ID\n    * @return\n    *     The Histogram instance\n    */\n-  Histogram getHistogram(Detector::Number detector) const;\n+  Histogram getHistogram(std::string const &det_id) const;\n \n   /**\n    * @brief Set location mask with already existing one\n@@ -367,14 +366,14 @@ public:\n    */\n   void setLocationMask(LocationMask &mask);\n \n-  Array<bool> getLocationMaskData(Detector::Number const detector) const;\n+  Array<bool> getLocationMaskData(std::string const &det_id) const;\n \n-  Array<float> getBackgroundValues() const;\n-  Array<float> getBackgroundVariances() const;\n-  Array<float> getBackgroundErrors() const;\n+  std::map<std::string, float> getBackgroundValues() const;\n+  std::map<std::string, float> getBackgroundVariances() const;\n+  std::map<std::string, float> getBackgroundErrors() const;\n \n-  void setBackgroundValues(Array<float> const &values);\n-  void setBackgroundVariances(Array<float> const &values);\n+  void setBackgroundValue(float const value, const std::string &det_id);\n+  void setBackgroundVariance(float const value, const std::string &det_id);\n \n   void setRandomIters(size_t const random_iters);\n   void setMaskEngine(std::string const &mask_engine);\n@@ -385,20 +384,20 @@ protected:\n   LocationTablePtr m_loctable;\n \n   /* 0 Detector is not used */\n-  std::array<Histogram, Detector::Number::DET_44 + 1> m_histograms;\n-  std::array<LocationMask, Detector::Number::DET_44 + 1> m_masks;\n+  std::map<std::string, Histogram> m_histograms;\n+  std::map<std::string, LocationMask> m_masks;\n \n   LambdaRange m_wrange;\n   size_t m_random_iters;\n \n-  std::array<float, Detector::Number::DET_44 + 1> m_bk_values;\n-  std::array<float, Detector::Number::DET_44 + 1> m_bk_variances;\n+  std::map<std::string, float> m_bk_values;\n+  std::map<std::string, float> m_bk_variances;\n \n   void _computeLocationMask(Euclid::Image::DetectorExposure<Euclid::Image::Image<float>,\n                                                             Euclid::Image::Image<float>,\n                                                             Euclid::Image::Mask<uint32_t>> &exposure,\n                             double const pad=0.0);\n-  void _logRate(Detector::Number const det_num);\n+  void _logRate(std::string const &det_id);\n   void _adjustRange(Euclid::Image::DetectorExposure<Euclid::Image::Image<float>,\n                                                    Euclid::Image::Image<float>,\n                                                            Euclid::Image::Mask<uint32_t>> const &detector);\n@@ -429,18 +428,18 @@ public:\n \n   void computeBackground(Euclid::Image::SurveyExposure<Euclid::Image::DetectorExposure<Euclid::Image::Image<float>,\n                                              Euclid::Image::Image<float>, Euclid::Image::Mask<uint32_t>>> &exposure,\n-                                             bool const compute_mask, double const pad) override;\n+                                             bool const compute_mask, double const pad, const bool fit=false) override;\n \n   void computeBackground(Euclid::Image::DetectorExposure<Euclid::Image::Image<float>,\n                                                                       Euclid::Image::Image<float>,\n                                                                       Euclid::Image::Mask<uint32_t>> &detector,\n                                             bool const compute_mask,\n-                                            double const pad) override;\n+                                            double const pad, const bool fit=false) override;\n \n   ~MasterBackgroundHSM();\n \n private:\n-  double _getHSM(const Array<float>&, Detector::Number det_num);\n+  double _getHSM(const Array<float>&, std::string const &);\n   double _HSM(std::vector<float> &);\n \n \n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_PreProcessing/SIR_PreProcessing/SIR_PreProcessing.i": [
                        [
                            "@@ -29,5 +29,7 @@\n /* Create binding */\n %include \"SIR_PreProcessing/MasterBackground.h\"\n \n+%template(bk_values) std::map<std::string, float>;\n+\n \n \n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_PreProcessing/auxdir/SIR_PreProcessing.ini": [
                        [
                            "@@ -12,7 +12,7 @@ n_bin_ref = 200\n lo_method = DECONTAMINATION\n #If provided exclude object fainter than lower_mag\n lower_mag = 24.0\n-\n+fit_mode=True\n \n [[RGS]]\n bk_wstart = 11920.0\n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_PreProcessing/python/SIR_PreProcessing/BackgroundSubtractionCore.py": [
                        [
                            "@@ -212,11 +212,13 @@ class BackgroundSubtractionCore(ParametersParse):\n           The detector ID\n         \"\"\"\n         ms_background = self._bk_class()\n-        det_num = DetectorModel.getDetectorNumber(det_id)\n-        values = np.full((16, 2), np.nan, dtype=np.float32)\n-        values[det_num-1] = value\n-        ms_background.setBackgroundValues(values[:, 0])\n-        ms_background.setBackgroundVariances(values[:, 1])\n+        for _det_id in DetectorModel.getDetectorIDRange():\n+            ms_background.setBackgroundValue(float(np.nan), _det_id)\n+            ms_background.setBackgroundVariance(float(np.nan), _det_id)\n+        \n+        ms_background.setBackgroundValue(float(value[0]), det_id)\n+        ms_background.setBackgroundVariance(float(value[1]), det_id)\n+        \n         return ms_background\n \n \n@@ -244,7 +246,6 @@ class BackgroundSubtractionCore(ParametersParse):\n         bk_wstart, bk_wend = self.get_wave_range(loc_table)\n \n         ms_background.setLambdaRange(bk_wstart, bk_wend)\n-        det_num = DetectorModel.getDetectorNumber(det_id)\n \n         n_bin = self._params.as_int('n_bin')\n         bin_xmin = self._params.as_float('bin_xmin')\n@@ -253,7 +254,7 @@ class BackgroundSubtractionCore(ParametersParse):\n         while True:\n             # Histogram parameters\n             if n_bin > 0:\n-                ms_background.setHistogramParameters(n_bin, bin_xmin, bin_xmax, det_num)\n+                ms_background.setHistogramParameters(n_bin, bin_xmin, bin_xmax, det_id)\n                 compute_mask = True\n             else:\n                 logger.info(\"Auto computation of histogram bins\")\n@@ -269,7 +270,7 @@ class BackgroundSubtractionCore(ParametersParse):\n \n             # Check if values are not on the edges of the histogram\n             n_bin, bin_xmin, bin_xmax = \\\n-                BackgroundSubtractionCore.update_histogram_range(ms_background, det_num, n_bin, bin_xmin, bin_xmax)\n+                BackgroundSubtractionCore.update_histogram_range(ms_background, det_id, n_bin, bin_xmin, bin_xmax)\n             if n_bin is None:\n                 #Nothing to update\n                 break\n@@ -279,7 +280,7 @@ class BackgroundSubtractionCore(ParametersParse):\n         return ms_background\n \n     @staticmethod\n-    def update_histogram_range(ms_background, det_num, n_bin:int, bin_xmin:float, bin_xmax:float):\n+    def update_histogram_range(ms_background, det_id:str, n_bin:int, bin_xmin:float, bin_xmax:float):\n         \"\"\"Checks if histogram peak is to close to the edges of the histogram and in case updates\n         histogram bins and range\n \n@@ -297,7 +298,7 @@ class BackgroundSubtractionCore(ParametersParse):\n         bin_xmax: float\n           The upper limit of the histogram\n         \"\"\"\n-        value = ms_background.getBackgroundValue(det_num)\n+        value = ms_background.getBackgroundValue(det_id)\n         # Distance allow of histogram peak and edges\n         delta = 2*(bin_xmax - bin_xmin) / n_bin\n         if bin_xmin + delta < value < bin_xmax - delta:\n@@ -318,26 +319,25 @@ class BackgroundSubtractionCore(ParametersParse):\n \n         return n_bin, bin_xmin, bin_xmax\n \n-    def refine_value(self, frame, ms_background, det_id):\n+    def refine_value(self, frame, ms_background, det_id:str):\n         \"\"\"Refines the histogram peak\n         \"\"\"\n         logger.info(\"Refine background values\")\n-        det_num = DetectorModel.getDetectorNumber(det_id)\n-        if ms_background.hasBackgroundValue(det_num) == False:\n+        if ms_background.hasBackgroundValue(det_id) == False:\n             logger.info(f\"No value to refine for detector {det_id}\")\n             return\n \n         ms_background.setRandomIters(self._params.as_int('random_iter'))\n-        hist_center = ms_background.getBackgroundValue(det_num)\n+        hist_center = ms_background.getBackgroundValue(det_id)\n \n         _delta_ref = self._params.as_float('delta_ref')\n         logger.info(f\"Detector {det_id}: new range [{hist_center - _delta_ref}, \"\n                     f\"{hist_center + _delta_ref}]\")\n         ms_background.setHistogramParameters(self._params.as_int('n_bin_ref'),\n                                              hist_center - _delta_ref,\n-                                             hist_center + _delta_ref, det_num)\n+                                             hist_center + _delta_ref, det_id)\n         # Mask already computed\n-        ms_background.computeBackground(frame, False, self._params.as_float('pad'))\n+        ms_background.computeBackground(frame, False, self._params.as_float('pad'), self._params.as_bool('fit_mode'))\n \n     def save_mask(self, ms_background, det_id):\n         \"\"\"Saves the output mask into FITS file\n@@ -348,8 +348,7 @@ class BackgroundSubtractionCore(ParametersParse):\n         with fits.open(self._maskfile, mode='append') as output:\n             if len(output) == 0:\n                 output.append(fits.PrimaryHDU())\n-            det_num = DetectorModel.getDetectorNumber(det_id)\n-            mask = fits.ImageHDU(ms_background.getLocationMaskData(det_num).astype(np.uint8),\n+            mask = fits.ImageHDU(ms_background.getLocationMaskData(det_id).astype(np.uint8),\n                                  name=f'DET{det_id}.MASK')\n             output.append(mask)\n \n@@ -374,3 +373,8 @@ class BackgroundSubtractionCore(ParametersParse):\n \n         self.read_ini_sections(ini_file, \"BackgroundSubtractionCore\", gwa_name)\n         self._ini_file = ini_file\n+        \n+        #Just for backward compatibility. Remove in stable versions\n+        if 'fit_mode' not in self._params:\n+            logger.warning(\"No fit_mode in parameter file, set fit_mode=True\")\n+            self._params['fit_mode'] = True\n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_PreProcessing/python/SIR_PreProcessing/BackgroundSubtractionDQC.py": [
                        [
                            "@@ -51,27 +51,26 @@ class BackgroundSubtractionDQC(ParametersParse):\n \n     def update(self, nisp_exp, ms_background):\n \n-        for det_num in DetectorModel.getDetectorRange():\n-            if ms_background.hasBackgroundValue(det_num) == False:\n+        for det_id in DetectorModel.getDetectorIDRange():\n+            if ms_background.hasBackgroundValue(det_id) == False:\n                 continue\n \n-            det_id = DetectorModel.getDetectorID(det_num)\n             dq = {'VALUE': np.nan, 'ERROR': np.nan, 'NPIXELS': 0, 'FPIXELS': 0.0, 'DIST': np.nan,\n                   'RMEAN': np.nan, 'RMEDIAN': np.nan, 'RSTD': np.nan}\n             self._data_qualities[det_id] = dq\n \n-            dq['VALUE'] = ms_background.getBackgroundValue(det_num)\n-            if ms_background.hasBackgroundVariance(det_num):\n-                dq['ERROR'] = ms_background.getBackgroundError(det_num)\n+            dq['VALUE'] = ms_background.getBackgroundValue(det_id)\n+            if ms_background.hasBackgroundVariance(det_id):\n+                dq['ERROR'] = ms_background.getBackgroundError(det_id)\n \n-            h = ms_background.getHistogram(det_num)\n+            h = ms_background.getHistogram(det_id)\n             _min = h.getXMin()\n             _max = h.getXMax()\n             _delta = _max - _min\n             dq['DIST'] = min((dq['VALUE'] - _min) / _delta, (_max - dq['VALUE']) / _delta)\n \n             frame = nisp_exp.getDetector(det_id)\n-            mask = ms_background.getLocationMaskData(det_num)\n+            mask = ms_background.getLocationMaskData(det_id)\n             data = frame.getScience().getArray()[mask == False]\n \n             dq['NPIXELS'] = data.size\n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_PreProcessing/python/SIR_PreProcessing/BackgroundSubtractionMain.py": [
                        [
                            "@@ -176,9 +176,8 @@ def mainMethod(args):\n         loc_table = bk_subtraction.load_loc_table(filename, catalog_ids, args.config)\n         ms_background = bk_subtraction.invoke(det_id, loc_table=loc_table, value=values[det_id])\n         if args.dumpvalues:\n-            det_num = DetectorModel.getDetectorNumber(det_id)\n-            computed_values[det_id][0]= ms_background.getBackgroundValue(det_num)\n-            computed_values[det_id][1]= ms_background.getBackgroundVariance(det_num)\n+            computed_values[det_id][0]= ms_background.getBackgroundValue(det_id)\n+            computed_values[det_id][1]= ms_background.getBackgroundVariance(det_id)\n \n         dq.update(nisp_exp, ms_background)\n \n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_PreProcessing/src/lib/MasterBackground.cpp": [
                        [
                            "@@ -45,43 +45,43 @@ const std::string MasterBackgroundMode::NAME = \"MODE\";\n \n MasterBackgroundMode::MasterBackgroundMode():\n   m_loctable(nullptr),\n-  m_histograms(),\n-  m_masks(),\n   m_wrange(),\n-  m_random_iters(0),\n-  m_bk_values(),\n-  m_bk_variances()\n+  m_random_iters(0)\n   {\n-    m_bk_values.fill(std::numeric_limits<float>::quiet_NaN());\n-    m_bk_variances.fill(std::numeric_limits<float>::quiet_NaN());\n+    for(const std::string &det_id: DetectorModel::getDetectorIDRange()){\n+      m_histograms[det_id] = Histogram();\n+      m_masks[det_id] = LocationMask(det_id);\n+      m_bk_values[det_id] = std::numeric_limits<float>::quiet_NaN();\n+      m_bk_variances[det_id] = std::numeric_limits<float>::quiet_NaN();\n+    }\n   }\n \n \n MasterBackgroundMode::MasterBackgroundMode(LocationTablePtr const &loc_table):\n   m_loctable(loc_table),\n-  m_histograms(),\n-  m_masks(),\n   m_wrange(),\n-  m_random_iters(0),\n-  m_bk_values(),\n-  m_bk_variances()\n+  m_random_iters(0)\n   {\n-    m_bk_values.fill(std::numeric_limits<double>::quiet_NaN());\n-    m_bk_variances.fill(std::numeric_limits<double>::quiet_NaN());\n+    for(const std::string &det_id: DetectorModel::getDetectorIDRange()){\n+      m_histograms[det_id] = Histogram();\n+      m_masks[det_id] = LocationMask(det_id);\n+      m_bk_values[det_id] = std::numeric_limits<float>::quiet_NaN();\n+      m_bk_variances[det_id] = std::numeric_limits<float>::quiet_NaN();\n+    }\n   }\n \n \n MasterBackgroundMode::MasterBackgroundMode(LocationTablePtr const &loc_table, float const wstart, float const wend):\n   m_loctable(loc_table),\n-  m_histograms(),\n-  m_masks(),\n   m_wrange(wstart, wend),\n-  m_random_iters(0),\n-  m_bk_values(),\n-  m_bk_variances()\n+  m_random_iters(0)\n   {\n-    m_bk_values.fill(std::numeric_limits<double>::quiet_NaN());\n-    m_bk_variances.fill(std::numeric_limits<double>::quiet_NaN());\n+    for(const std::string &det_id: DetectorModel::getDetectorIDRange()){\n+      m_histograms[det_id] = Histogram();\n+      m_masks[det_id] = LocationMask(det_id);\n+      m_bk_values[det_id] = std::numeric_limits<float>::quiet_NaN();\n+      m_bk_variances[det_id] = std::numeric_limits<float>::quiet_NaN();\n+    }\n   }\n \n \n@@ -94,8 +94,8 @@ void MasterBackgroundMode::setRandomIters(size_t const random_iters){\n \n \n void MasterBackgroundMode::setMaskEngine(std::string const &mask_engine){\n-  for (Detector::Number det: DetectorModel::getDetectorRange()){\n-      m_masks[det].setEngine(mask_engine);\n+  for (const auto &det_id: DetectorModel::getDetectorIDRange()){\n+      m_masks[det_id].setEngine(mask_engine);\n     }\n }\n \n@@ -146,18 +146,14 @@ bool MasterBackgroundMode::hasLocationTable() const {\n \n \n void MasterBackgroundMode::setHistogramParameters(size_t const nbin, float const xmin, float const xmax,\n-                                                  Detector::Number det_num){\n-  if (DetectorModel::isValidDetector(det_num) == false){\n+                                                  std::string const &det_id){\n+\n+  if (m_histograms.count(det_id) == 0){\n     throw std::runtime_error(\"Invalid detector value\");\n   }\n-  if (DetectorModel::isOnDetector(det_num) == true){\n-    m_histograms[det_num].setParameters(nbin, xmin, xmax);\n-  }\n-  else {\n-    for (Detector::Number det: DetectorModel::getDetectorRange()){\n-      m_histograms[det].setParameters(nbin, xmin, xmax);\n-    }\n-  }\n+\n+  m_histograms[det_id].setParameters(nbin, xmin, xmax);\n+  \n }\n \n \n@@ -166,22 +162,22 @@ void MasterBackgroundMode::setHistogramParameters(Euclid::Image::DetectorExposur\n \n   Array<double> data = exposure.getScience().getArray().cast<double>();\n \n-  const Detector::Number det_num = DetectorModel::getDetectorNumber(exposure.getDetectorID());\n+  const std::string det_id = exposure.getDetectorID();\n   _computeLocationMask(exposure, pad);\n \n-  const Array<bool> &mask_data = m_masks[det_num].getMaskData();\n+  const Array<bool> &mask_data = m_masks[det_id].getMaskData();\n \n-  Array<double> valid_data(m_masks[det_num].getNValid(), 1);\n+  Array<double> valid_data(m_masks[det_id].getNValid(), 1);\n \n   int j = 0;\n   for (int i=0; i< mask_data.size(); ++i){\n-    if (m_masks[det_num].isValid(i)){\n+    if (m_masks[det_id].isValid(i)){\n       valid_data(j) = data(i);\n       j++;\n     }\n   }\n \n-  m_histograms[det_num].setParameters(valid_data);\n+  m_histograms[det_id].setParameters(valid_data);\n   //size_t new_size = (mask == LocationMask::valid).select(data, masked_value).minCoeff();\n }\n \n@@ -189,8 +185,8 @@ void MasterBackgroundMode::setHistogramParameters(Euclid::Image::DetectorExposur\n void MasterBackgroundMode::setHistogramParameters(Euclid::Image::SurveyExposure<Euclid::Image::DetectorExposure<\n \t\t\t\t\t\t  Euclid::Image::Image<float>,Euclid::Image::Image<float>,Euclid::Image::Mask<uint32_t>>> &exposure,\n                                                   double const pad){\n-  for (size_t det_num=0; det_num<Detector::Number::DET_44; ++det_num){\n-    setHistogramParameters(*exposure.getDetector(det_num), pad);\n+  for (const std::string &det_id: DetectorModel::getDetectorIDRange()){                              \n+    setHistogramParameters(*exposure.getDetector(det_id), pad);\n   }\n \n }\n@@ -203,8 +199,7 @@ void MasterBackgroundMode::_computeLocationMask(Euclid::Image::DetectorExposure<\n     throw std::runtime_error(\"Wavelength range not set yet\");\n   }\n \n-  /* Get detector number */\n-  const Detector::Number det_num = DetectorModel::getDetectorNumber(detector.getDetectorID());\n+  const std::string &det_id = detector.getDetectorID();\n \n   /* Get Image sizes assuming each image has the same size */\n   const Euclid::Image::Image<float> &science = detector.getScience();\n@@ -212,21 +207,21 @@ void MasterBackgroundMode::_computeLocationMask(Euclid::Image::DetectorExposure<\n   int xsize = science.getWidth();\n   int ysize = science.getHeight();\n \n-  m_masks[det_num].setDetector(det_num);\n-  m_masks[det_num].setSizes(xsize, ysize);\n+  m_masks[det_id].setDetectorID(det_id);\n+  m_masks[det_id].setSizes(xsize, ysize);\n \n   if (m_loctable != nullptr){\n-    m_masks[det_num].updateMask(m_loctable, m_wrange.getWavelengthStart(), m_wrange.getWavelengthEnd(), pad);\n+    m_masks[det_id].updateMask(m_loctable, m_wrange.getWavelengthStart(), m_wrange.getWavelengthEnd(), pad);\n   }\n \n-  m_masks[det_num].updateMask(detector);\n+  m_masks[det_id].updateMask(detector);\n \n   return;\n }\n \n \n-Array<bool> MasterBackgroundMode::getLocationMaskData(Detector::Number const detector) const{\n-  return m_masks[detector].getMaskData();\n+Array<bool> MasterBackgroundMode::getLocationMaskData(std::string const &det_id) const{\n+  return m_masks.at(det_id).getMaskData();\n }\n \n \n@@ -234,13 +229,12 @@ void MasterBackgroundMode::computeBackground(Euclid::Image::DetectorExposure<Euc\n                                                                       Euclid::Image::Image<float>,\n                                                                       Euclid::Image::Mask<uint32_t>> &detector,\n                                              bool const compute_mask,\n-                                             double const pad){\n+                                             double const pad, const bool fit){\n \n \n-  /* Get detector number */\n-  const Detector::Number det_num = DetectorModel::getDetectorNumber(detector.getDetectorID());\n+  const std::string &det_id = detector.getDetectorID();\n \n-  m_histograms[det_num].getBins();\n+  m_histograms[det_id].getBins();\n   if (compute_mask == true){\n     _computeLocationMask(detector, pad);\n   }\n@@ -249,6 +243,9 @@ void MasterBackgroundMode::computeBackground(Euclid::Image::DetectorExposure<Euc\n   const Array<float> &variance = detector.getVariance().getArray();\n \n   _adjustRange(detector);\n+  if (fit == true){\n+    logger.info(\"Mode is fitted\");\n+  }\n \n   if (m_random_iters > 0) {\n     const gsl_rng_type *T;\n@@ -264,36 +261,46 @@ void MasterBackgroundMode::computeBackground(Euclid::Image::DetectorExposure<Euc\n \n     for (size_t index=0; index < m_random_iters; ++index){\n       /* Clear previus computations */\n-      m_histograms[det_num].reset();\n-      updateHistogram(data, variance, det_num, r);\n-      values[index] = m_histograms[det_num].getMode();\n-      logger.debug(\"Detector %d (realization %d): backgroud value %g\", det_num, index+1, values[index]);\n+      m_histograms[det_id].reset();\n+      updateHistogram(data, variance, det_id, r);\n+      if (fit == false){\n+        values[index] = m_histograms[det_id].getMode();\n+      }\n+      else{\n+        values[index] = m_histograms[det_id].fitMode();\n+      }\n+      logger.debug(\"Detector %s (realization %d): backgroud value %g\", det_id, index+1, values[index]);\n     }\n     gsl_rng_free(r);\n-    if (m_histograms[det_num].isEmpty() == false){\n-      m_bk_values[det_num] = gsl_stats_mean(values, 1, m_random_iters);\n-      m_bk_variances[det_num] = gsl_stats_variance(values, 1, m_random_iters);\n+    if (m_histograms[det_id].isEmpty() == false){\n+      m_bk_values[det_id] = gsl_stats_mean(values, 1, m_random_iters);\n+      m_bk_variances[det_id] = gsl_stats_variance(values, 1, m_random_iters);\n     }\n     free(values);\n \n   }\n   else{\n     /* Clear previous computations */\n-    m_histograms[det_num].reset();\n-    updateHistogram(data, variance, det_num, nullptr);\n-    if (m_histograms[det_num].isEmpty() == false){\n-      m_bk_values[det_num] = m_histograms[det_num].getMode();\n+    m_histograms[det_id].reset();\n+    updateHistogram(data, variance, det_id, nullptr);\n+    if (m_histograms[det_id].isEmpty() == false){\n+      if (fit == false){\n+        m_bk_values[det_id] = m_histograms[det_id].getMode();\n+      }\n+      else{\n+        m_bk_values[det_id] = m_histograms[det_id].fitMode();\n+      }\n     }\n   }\n \n-  _logRate(det_num);\n+  _logRate(det_id);\n }\n \n \n void MasterBackgroundMode::_adjustRange(Euclid::Image::DetectorExposure<Euclid::Image::Image<float>,\n                                                                       Euclid::Image::Image<float>,\n                                                                       Euclid::Image::Mask<uint32_t>> const &detector){\n-  const Detector::Number det_num = DetectorModel::getDetectorNumber(detector.getDetectorID());\n+  const std::string &det_id = detector.getDetectorID();\n \n   const Array<float> &data = detector.getScience().getArray();\n   const Array<uint32_t> &mask = detector.getMask().getArray();\n@@ -317,18 +324,18 @@ void MasterBackgroundMode::_adjustRange(Euclid::Image::DetectorExposure<Euclid::\n     free(valid_data);\n   }\n \n-  const double xmin = m_histograms[det_num].getXMin();\n-  const double xmax = m_histograms[det_num].getXMax();\n-  const size_t nbins = m_histograms[det_num].getBins();\n+  const double xmin = m_histograms[det_id].getXMin();\n+  const double xmax = m_histograms[det_id].getXMax();\n+  const size_t nbins = m_histograms[det_id].getBins();\n   if (median<=xmin+(xmax-xmin)*0.1){\n-    logger.warn(DetectorModel::getDetectorName(det_num)+\": xmin histogram parameter too high. Adjust range\");\n-    m_histograms[det_num].setParameters(nbins, median-(xmax-xmin)/2., median+(xmax-xmin)/2.);  \n+    logger.warn(det_id +\": xmin histogram parameter too high. Adjust range\");\n+    m_histograms[det_id].setParameters(nbins, median-(xmax-xmin)/2., median+(xmax-xmin)/2.);  \n     return;\n   }\n   \n   if (median>=xmax-(xmax-xmin)*0.1){\n-    logger.warn(DetectorModel::getDetectorName(det_num)+\": xmax histogram parameter too low. Adjust range\");\n-    m_histograms[det_num].setParameters(nbins, median-(xmax-xmin)/2., median+(xmax-xmin)/2.);\n+    logger.warn(det_id+\": xmax histogram parameter too low. Adjust range\");\n+    m_histograms[det_id].setParameters(nbins, median-(xmax-xmin)/2., median+(xmax-xmin)/2.);\n     return;\n   }\n   \n@@ -336,53 +343,55 @@ void MasterBackgroundMode::_adjustRange(Euclid::Image::DetectorExposure<Euclid::\n }\n \n \n-void MasterBackgroundMode::_logRate(Detector::Number const det_num){\n+void MasterBackgroundMode::_logRate(std::string const &det_id){\n \n-  double rate = 100.0*m_masks[det_num].getNValid()/(m_masks[det_num].size());\n+  double rate = 100.0*m_masks.at(det_id).getNValid()/(m_masks.at(det_id).size());\n \n-  if (std::isnan(m_bk_values[det_num])){\n-    logger.warn(DetectorModel::getDetectorName(det_num)+\": no background computed\");\n+  if (std::isnan(m_bk_values.at(det_id))){\n+    logger.warn(det_id+\": no background computed\");\n     return;\n   }\n \n   if (m_random_iters >0){\n     logger.info(\"%s: background %5.2f+/-%5.2f computed on %5.2f%% pixels\", \n-                DetectorModel::getDetectorName(det_num).c_str(), m_bk_values[det_num],\n-                sqrt(m_bk_variances[det_num]/m_random_iters), rate);\n+                det_id.c_str(), m_bk_values[det_id],\n+                sqrt(m_bk_variances[det_id]/m_random_iters), rate);\n   }\n   else {\n     logger.info(\"%s: background %5.2f computed on %5.2f%% pixels\", \n-                DetectorModel::getDetectorName(det_num).c_str(), m_bk_values[det_num], rate);\n+                det_id.c_str(), m_bk_values[det_id], rate);\n   }\n \n }\n \n \n void MasterBackgroundMode::computeBackground(Euclid::Image::SurveyExposure<Euclid::Image::DetectorExposure<Euclid::Image::Image<float>,\n-               Euclid::Image::Image<float>, Euclid::Image::Mask<uint32_t>>> &exposure,bool const compute_mask, double const pad){\n+               Euclid::Image::Image<float>, Euclid::Image::Mask<uint32_t>>> &exposure,bool const compute_mask, double const pad,\n+               const bool fit){\n \n-  for (int det_num=Detector::Number::DET_11; det_num<=Detector::Number::DET_44; ++det_num){\n-    computeBackground(*exposure.getDetector(det_num - 1), compute_mask, pad);\n+  for(std::string const &det_id: DetectorModel::getDetectorIDRange()){\n+    computeBackground(*exposure.getDetector(det_id), compute_mask, pad, fit);\n   }\n }\n \n \n void MasterBackgroundMode::setLocationMask(LocationMask &mask){\n-  m_masks[mask.getDetectorNumber()] = mask;\n+  const std::string &det_id = mask.getDetectorID();\n+  m_masks[det_id] = mask;\n }\n \n \n void MasterBackgroundMode::updateHistogram(const Array<float> &data, const Array<float> &variance,\n-                                           Detector::Number det_num, gsl_rng *random){\n+                                           std::string const &det_id, gsl_rng *random){\n \n-  const LocationMask &mask = m_masks[det_num];\n+  const LocationMask &mask = m_masks[det_id];\n \n   if (random == nullptr){\n     for (int index=0; index<data.size(); ++index){\n       if (mask.isValid(index) == false){\n         continue;\n       }\n-      m_histograms[det_num].increment(data(index));\n+      m_histograms[det_id].increment(data(index));\n     }\n   }\n   else {\n@@ -391,62 +400,62 @@ void MasterBackgroundMode::updateHistogram(const Array<float> &data, const Array\n       if (mask.isValid(index) == false){\n         continue;\n       }\n-      m_histograms[det_num].increment(data(index)+gsl_ran_gaussian(random, std::sqrt(variance(index))));\n+      m_histograms[det_id].increment(data(index)+gsl_ran_gaussian(random, std::sqrt(variance(index))));\n     }\n \n   }\n \n-  if (m_histograms[det_num].isEmpty() == true){\n-    logger.warn(\"No data in bin range for detector %d\", det_num);\n+  if (m_histograms[det_id].isEmpty() == true){\n+    logger.warn(\"No data in bin range for detector \" + det_id);\n   }\n \n }\n \n \n-float MasterBackgroundMode::getBackgroundValue(Detector::Number det_num) const {\n-  if (hasBackgroundValue(det_num) == false){\n+float MasterBackgroundMode::getBackgroundValue(std::string const &det_id) const {\n+  if (hasBackgroundValue(det_id) == false){\n     throw std::runtime_error(\"Background value not computed yet!\");\n   }\n-  return m_bk_values[det_num];\n+  return m_bk_values.at(det_id);\n }\n \n \n-float MasterBackgroundMode::getBackgroundVariance(Detector::Number det_num) const {\n-  if (hasBackgroundVariance(det_num) == false){\n+float MasterBackgroundMode::getBackgroundVariance(std::string const &det_id) const {\n+  if (hasBackgroundVariance(det_id) == false){\n     throw std::runtime_error(\"Background variance not computed yet!\");\n   }\n-  return m_bk_variances[det_num];\n+  return m_bk_variances.at(det_id);\n }\n \n-float MasterBackgroundMode::getBackgroundError(Detector::Number det_num) const {\n-  if (hasBackgroundVariance(det_num) == false){\n+float MasterBackgroundMode::getBackgroundError(std::string const &det_id) const {\n+  if (hasBackgroundVariance(det_id) == false){\n     throw std::runtime_error(\"Background error not computed yet!\");\n   }\n-  return std::sqrt(m_bk_variances[det_num]/m_random_iters);\n+  return std::sqrt(m_bk_variances.at(det_id)/m_random_iters);\n }\n \n \n-bool MasterBackgroundMode::hasBackgroundVariance(Detector::Number det_num) const {\n-  return (not std::isnan(m_bk_variances[det_num]));\n+bool MasterBackgroundMode::hasBackgroundVariance(std::string const &det_id) const {\n+  return (not std::isnan(m_bk_variances.at(det_id)));\n }\n \n \n-bool MasterBackgroundMode::hasBackgroundValue(Detector::Number det_num) const {\n-  return (not std::isnan(m_bk_values[det_num]));\n+bool MasterBackgroundMode::hasBackgroundValue(std::string const &det_id) const {\n+  return (not std::isnan(m_bk_values.at(det_id)));\n }\n \n \n void MasterBackgroundMode::removeBackground(Euclid::Image::DetectorExposure<Euclid::Image::Image<float>,\n   Euclid::Image::Image<float>, Euclid::Image::Mask<uint32_t>> &detector) const {\n \n-  const Detector::Number det_num = DetectorModel::getDetectorNumber(detector.getDetectorID());\n+  const std::string &det_id = detector.getDetectorID();\n \n-  if (hasBackgroundValue(det_num) == false){\n-    logger.warn(\"Detector \"+detector.getDetectorID()+ \": no background subtracted\");\n+  if (hasBackgroundValue(det_id) == false){\n+    logger.warn(\"Detector \"+ det_id + \": no background subtracted\");\n     return;\n   }\n   \n-  const float bk_value = getBackgroundValue(det_num);\n+  const float bk_value = getBackgroundValue(det_id);\n   detector.getScience() -=bk_value;\n   \n   if (hasLambdaRange() == true){\n@@ -455,19 +464,20 @@ void MasterBackgroundMode::removeBackground(Euclid::Image::DetectorExposure<Eucl\n     detector.getMetadata().set(\"SIR BK WEND\", m_wrange.getWavelengthEnd(), \"Wavelength end in background estimation\");\n   }\n   \n-  if (m_histograms[det_num].hasParameters()){\n-    detector.getMetadata().set(\"SIR BK NBIN\", m_histograms[det_num].getBins(), \"histogram bin number\");\n-    detector.getMetadata().set(\"SIR BK XMIN\", m_histograms[det_num].getXMin(), \"histogram lower limit\");\n-    detector.getMetadata().set(\"SIR BK XMAX\", m_histograms[det_num].getXMax(), \"histogram upper limit\");\n+  const auto &histogram = m_histograms.at(det_id);\n+  if (histogram.hasParameters()){\n+    detector.getMetadata().set(\"SIR BK NBIN\", histogram.getBins(), \"histogram bin number\");\n+    detector.getMetadata().set(\"SIR BK XMIN\", histogram.getXMin(), \"histogram lower limit\");\n+    detector.getMetadata().set(\"SIR BK XMAX\", histogram.getXMax(), \"histogram upper limit\");\n   }\n \n   detector.getMetadata().set(\"SIR BK VAL\", bk_value, \"background value\");\n   \n-  if ((hasBackgroundValue(det_num) == true) && (hasBackgroundVariance(det_num) == true)){\n-    const float bk_variance = getBackgroundVariance(det_num);\n+  if ((hasBackgroundValue(det_id) == true) && (hasBackgroundVariance(det_id) == true)){\n+    const float bk_variance = getBackgroundVariance(det_id);\n     detector.getVariance() += bk_variance;\n     detector.getMetadata().set(\"SIR BK VAR\", bk_variance, \"variance on background value\");\n-    const float bk_error = getBackgroundError(det_num);\n+    const float bk_error = getBackgroundError(det_id);\n     detector.getMetadata().set(\"SIR BK ERR\", bk_error, \"error on background value\");\n   }\n   else{\n@@ -480,60 +490,49 @@ void MasterBackgroundMode::removeBackground(Euclid::Image::DetectorExposure<Eucl\n void MasterBackgroundMode::removeBackground(Euclid::Image::SurveyExposure<Euclid::Image::DetectorExposure<Euclid::Image::Image<float>,\n       Euclid::Image::Image<float>, Euclid::Image::Mask<uint32_t>>> &exposure) const {\n \n-  for (int det_num=Detector::Number::DET_11; det_num<=Detector::Number::DET_44; ++det_num){\n-    removeBackground(*exposure.getDetector(det_num - 1));\n+  for (const std::string &det_id: DetectorModel::getDetectorIDRange()){\n+    removeBackground(*exposure.getDetector(det_id));\n   }\n \n }\n \n \n-Histogram MasterBackgroundMode::getHistogram(Detector::Number det_num) const {\n-  return m_histograms[det_num];\n+Histogram MasterBackgroundMode::getHistogram(std::string const &det_id) const {\n+  return m_histograms.at(det_id);\n }\n \n \n \n-Array<float> MasterBackgroundMode::getBackgroundValues() const{\n-  Array<float> values = Array<float>::Zero(1, Detector::Number::DET_44);\n-  for(int i=1;i<=Detector::Number::DET_44;++i){\n-    values(i-1) = m_bk_values[i];\n-  }\n-  return values;\n+std::map<std::string, float> MasterBackgroundMode::getBackgroundValues() const{\n+  return m_bk_values;\n }\n \n \n-Array<float> MasterBackgroundMode::getBackgroundVariances() const{\n-  Array<float> values = Array<float>::Zero(1, Detector::Number::DET_44);\n-  for(int i=1;i<=Detector::Number::DET_44;++i){\n-    values(i-1) = m_bk_variances[i];\n-  }\n-  return values;\n+std::map<std::string, float> MasterBackgroundMode::getBackgroundVariances() const{\n+  return m_bk_variances;\n }\n \n-Array<float> MasterBackgroundMode::getBackgroundErrors() const{\n-  Array<float> values = Array<float>::Zero(1, Detector::Number::DET_44);\n+std::map<std::string, float> MasterBackgroundMode::getBackgroundErrors() const{\n+  std::map<std::string, float> errors;\n   float scale = 1.0;\n   if (m_random_iters>0){\n     scale/=m_random_iters;\n   }\n-  for(int i=1;i<=Detector::Number::DET_44;++i){\n-    values(i-1) = std::sqrt(scale*m_bk_variances[i]);\n+  \n+  for(const auto &[det_id, value]: m_bk_variances){\n+    errors[det_id] = std::sqrt(scale*value);\n   }\n-  return values;\n+  return errors;\n }\n \n \n-void MasterBackgroundMode::setBackgroundValues(Array<float> const &values) {\n-  for(int i=1;i<=Detector::Number::DET_44;++i){\n-    m_bk_values[i] = values(i-1);\n-  }\n+void MasterBackgroundMode::setBackgroundValue(float const value, const std::string &det_id) {\n+  m_bk_values[det_id] = value;\n }\n \n \n-void MasterBackgroundMode::setBackgroundVariances(Array<float> const &values) {\n-  for(int i=1;i<=Detector::Number::DET_44;++i){\n-     m_bk_variances[i] = values(i-1);\n-  }\n+void MasterBackgroundMode::setBackgroundVariance(float const value, const std::string &det_id) {\n+  m_bk_variances[det_id] = value;\n }\n \n \n@@ -578,9 +577,9 @@ double MasterBackgroundHSM::_HSM(std::vector<float> &data){\n }\n \n \n-double MasterBackgroundHSM::_getHSM(const Array<float> &data, Detector::Number det_num) {\n+double MasterBackgroundHSM::_getHSM(const Array<float> &data, std::string const &det_id) {\n \n-  const LocationMask &mask = m_masks[det_num];\n+  const LocationMask &mask = m_masks[det_id];\n   std::vector<float> mydata;\n   for (int index=0;index<data.size();++index) {\n      if (mask.isValid(index) == false) {\n@@ -596,28 +595,28 @@ double MasterBackgroundHSM::_getHSM(const Array<float> &data, Detector::Number d\n \n \n void MasterBackgroundHSM::computeBackground(Euclid::Image::SurveyExposure<Euclid::Image::DetectorExposure<Euclid::Image::Image<float>,\n-       Euclid::Image::Image<float>, Euclid::Image::Mask<uint32_t>>> &exposure, bool const compute_mask, double const pad){\n-  MasterBackgroundMode::computeBackground(exposure, compute_mask, pad);\n+       Euclid::Image::Image<float>, Euclid::Image::Mask<uint32_t>>> &exposure, bool const compute_mask, double const pad, const bool fit){\n+  MasterBackgroundMode::computeBackground(exposure, compute_mask, pad, fit);\n }\n \n \n void MasterBackgroundHSM::computeBackground(Euclid::Image::DetectorExposure<Euclid::Image::Image<float>,\n       Euclid::Image::Image<float>,Euclid::Image::Mask<uint32_t>> &detector,bool const compute_mask,\n-      double const pad){\n-/* Get detector number */\n-  const Detector::Number det_num = DetectorModel::getDetectorNumber(detector.getDetectorID());\n+      double const pad, const bool fit){\n+\n+  const std::string &det_id = detector.getDetectorID();\n \n-  m_histograms[det_num].getBins();\n+  m_histograms[det_id].getBins();\n   if (compute_mask == true){\n     _computeLocationMask(detector, pad);\n   }\n \n   const Array<float> &data = detector.getScience().getArray();\n \n-  m_histograms[det_num].reset();\n-  m_bk_values[det_num] = _getHSM(data,det_num);\n+  m_histograms[det_id].reset();\n+  m_bk_values[det_id] = _getHSM(data, det_id);\n \n-  _logRate(det_num);\n+  _logRate(det_id);\n }\n \n \n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_PreProcessing/tests/python/BackgroundSubtractionCore_test.py": [
                        [
                            "@@ -286,19 +286,19 @@ class TestBackgroundSubtractionCore:\n         bk.read_parameters_file()\n         bk.set_method()\n \n-        for det_num in DetectorModel.getDetectorRange():\n-            det_id = DetectorModel.getDetectorID(det_num)\n+        for det_id in DetectorModel.getDetectorIDRange():\n \n             value = np.random.rand(2)\n             background = bk.apply_value(det_id, value)\n             bk_values = background.getBackgroundValues()\n-            assert np.allclose(bk_values[det_num-1], value[0])\n-            assert len(bk_values[np.isnan(bk_values)]) == 15\n+            assert np.allclose(bk_values[det_id], value[0])\n+            values = np.array(list(bk_values.values()))\n+            assert len(values[np.isnan(values)]) == 15\n \n             bk_vars = background.getBackgroundVariances()\n-            assert np.allclose(bk_vars[det_num-1], value[1])\n-            assert len(bk_vars[np.isnan(bk_values)]) == 15\n-\n+            assert np.allclose(bk_vars[det_id], value[1])\n+            values = np.array(list(bk_vars.values()))\n+            assert len(values[np.isnan(values)]) == 15\n \n     def test_get_wave_range1(self):\n         bk = BackgroundSubtractionCore(None, None)\n@@ -357,24 +357,20 @@ class TestBackgroundSubtractionCore:\n \n     def test_update_histogram_range1(self):\n         ms_background = MasterBackgroundMode()\n-        values = np.full(16, np.nan, dtype=np.float32)\n-        values[2] = 7.2\n-        ms_background.setBackgroundValues(values)\n+        ms_background.setBackgroundValue(7.2, \"31\")\n \n         with pytest.raises(Exception):\n-            BackgroundSubtractionCore.update_histogram_range(ms_background, 1, 0, 0, 0)\n+            BackgroundSubtractionCore.update_histogram_range(ms_background, \"11\", 0, 0, 0)\n \n \n     def test_update_histogram_range2(self):\n         ms_background = MasterBackgroundMode()\n-        values = np.full(16, np.nan, dtype=np.float32)\n-        values[2] = 7.2\n-        ms_background.setBackgroundValues(values)\n+        ms_background.setBackgroundValue(7.2, \"31\")\n \n         nbin = 10\n         bin_xmin = 0\n         bin_xmax = 10\n-        a, b, c = BackgroundSubtractionCore.update_histogram_range(ms_background, 3, nbin, bin_xmin, bin_xmax)\n+        a, b, c = BackgroundSubtractionCore.update_histogram_range(ms_background, \"31\", nbin, bin_xmin, bin_xmax)\n \n         assert a is None\n         assert b is None\n@@ -387,11 +383,9 @@ class TestBackgroundSubtractionCore:\n         bin_xmax = 20\n \n         ms_background = MasterBackgroundMode()\n-        values = np.full(16, np.nan, dtype=np.float32)\n-        values[2] = 11.9\n-        ms_background.setBackgroundValues(values)\n+        ms_background.setBackgroundValue(11.9, \"31\")\n \n-        a, b, c = BackgroundSubtractionCore.update_histogram_range(ms_background, 3, nbin, bin_xmin, bin_xmax)\n+        a, b, c = BackgroundSubtractionCore.update_histogram_range(ms_background, \"31\", nbin, bin_xmin, bin_xmax)\n \n         assert a == 12\n         assert np.allclose(b, 7.5)\n@@ -404,11 +398,9 @@ class TestBackgroundSubtractionCore:\n         bin_xmax = 20\n \n         ms_background = MasterBackgroundMode()\n-        values = np.full(16, np.nan, dtype=np.float32)\n-        values[2] = 18.1\n-        ms_background.setBackgroundValues(values)\n+        ms_background.setBackgroundValue(18.1, \"31\")\n \n-        a, b, c = BackgroundSubtractionCore.update_histogram_range(ms_background, 3, nbin, bin_xmin, bin_xmax)\n+        a, b, c = BackgroundSubtractionCore.update_histogram_range(ms_background, \"31\", nbin, bin_xmin, bin_xmax)\n \n         assert a == 12\n         assert np.allclose(b, 10.0)\n@@ -418,9 +410,7 @@ class TestBackgroundSubtractionCore:\n         ms_background = MasterBackgroundMode()\n         ms_background.setRandomIters = MagicMock()\n \n-        values = np.full(16, np.nan, dtype=np.float32)\n-        values[2] = 20.0\n-        ms_background.setBackgroundValues(values)\n+        ms_background.setBackgroundValue(20.0, \"21\")\n \n         nisp_exp = TestBackgroundSubtractionCore.getNispExp()\n \n@@ -444,9 +434,7 @@ class TestBackgroundSubtractionCore:\n         ms_background.setHistogramParameters = MagicMock()\n         ms_background.computeBackground = MagicMock()\n \n-        values = np.full(16, np.nan, dtype=np.float32)\n-        values[2] = 20.0\n-        ms_background.setBackgroundValues(values)\n+        ms_background.setBackgroundValue(20.0, \"21\")\n \n         nisp_exp = TestBackgroundSubtractionCore.getNispExp()\n \n@@ -464,13 +452,13 @@ class TestBackgroundSubtractionCore:\n         #bk.set_mask_engine(\"ABC\", 5)\n \n         frame = MagicMock()\n-        bk.refine_value(frame, ms_background, '31')\n+        bk.refine_value(frame, ms_background, '21')\n \n         assert ms_background.setRandomIters.call_args_list[0][0][0] == 100\n         assert ms_background.setHistogramParameters.call_args_list[0][0][0] == 200\n         assert np.allclose(ms_background.setHistogramParameters.call_args_list[0][0][1],  20.0-100.0)\n         assert np.allclose(ms_background.setHistogramParameters.call_args_list[0][0][2],  20.0+100.0)\n-        assert ms_background.setHistogramParameters.call_args_list[0][0][3] == 3\n+        assert ms_background.setHistogramParameters.call_args_list[0][0][3] == \"21\"\n \n         assert ms_background.computeBackground.call_args_list[0][0][0] is frame\n         assert ms_background.computeBackground.call_args_list[0][0][1] is False\n@@ -509,7 +497,7 @@ class TestBackgroundSubtractionCore:\n \n         #Compare pipeline results with numpy\n         ms_background = bk.compute_value(frame, '11', loc_table=None)\n-        histo = ms_background.getHistogram(1)\n+        histo = ms_background.getHistogram(\"11\")\n         pipe_values = histo.getValues()\n \n         np_values , tmp = np.histogram(frame.getScience().getArray(), bins=21, range=(9.5, 30.5))\n@@ -517,9 +505,9 @@ class TestBackgroundSubtractionCore:\n         assert np.allclose(pipe_values, np_values)\n         assert np.allclose(ms_background.getWavelengthStart(), 10000.)\n         assert np.allclose(ms_background.getWavelengthEnd(), 19000.)\n-        assert ms_background.getBackgroundValue(1)>= center-2.\n-        assert ms_background.getBackgroundValue(1)<= center+2.\n-        assert (True in ms_background.getLocationMaskData(1)) is False\n+        assert ms_background.getBackgroundValue(\"11\")>= center-2.\n+        assert ms_background.getBackgroundValue(\"11\")<= center+2.\n+        assert (True in ms_background.getLocationMaskData(\"11\")) is False\n         assert ms_background.hasLocationTable() is False\n \n         assert mock_update.called is False\n@@ -529,8 +517,9 @@ class TestBackgroundSubtractionCore:\n         assert histo.getBins() == 21\n \n         for det_num in range(2, 17):\n-            assert ms_background.hasBackgroundValue(det_num) is False\n-            assert len(ms_background.getLocationMaskData(det_num)) == 0\n+            det_id = DetectorModel.getDetectorID(det_num)\n+            assert ms_background.hasBackgroundValue(det_id) is False\n+            assert len(ms_background.getLocationMaskData(det_id)) == 0\n \n     @patch('SIR_PreProcessing.BackgroundSubtractionCore.BackgroundSubtractionCore.update_histogram_range')\n     def test_compute_value2(self, mock_update, tmpdir):\n@@ -570,18 +559,18 @@ class TestBackgroundSubtractionCore:\n \n         #Compare pipeline results with numpy\n         ms_background = bk.compute_value(frame, '11', loc_table=None)\n-        histo = ms_background.getHistogram(1)\n+        histo = ms_background.getHistogram(\"11\")\n         pipe_values = histo.getValues()\n \n         assert pipe_values.sum() == 50*50-32\n \n         assert np.allclose(ms_background.getWavelengthStart(), 10000.)\n         assert np.allclose(ms_background.getWavelengthEnd(), 19000.)\n-        assert ms_background.getBackgroundValue(1)>= center-2.\n-        assert ms_background.getBackgroundValue(1)<= center+2.\n+        assert ms_background.getBackgroundValue(\"11\")>= center-2.\n+        assert ms_background.getBackgroundValue(\"11\")<= center+2.\n         mask = np.zeros((50, 50), dtype=bool)\n         mask[0][1:33] = True\n-        assert np.alltrue(ms_background.getLocationMaskData(1) == mask)\n+        assert np.alltrue(ms_background.getLocationMaskData(\"11\") == mask)\n         assert ms_background.hasLocationTable() is False\n \n         assert mock_update.called is False\n@@ -591,8 +580,9 @@ class TestBackgroundSubtractionCore:\n         assert histo.getBins() == 21\n \n         for det_num in range(2, 17):\n-            assert ms_background.hasBackgroundValue(det_num) is False\n-            assert len(ms_background.getLocationMaskData(det_num)) == 0\n+            det_id = DetectorModel.getDetectorID(det_num)\n+            assert ms_background.hasBackgroundValue(det_id) is False\n+            assert len(ms_background.getLocationMaskData(det_id)) == 0\n \n \n     def test_compute_value3(self, tmpdir):\n@@ -626,7 +616,7 @@ class TestBackgroundSubtractionCore:\n         bk.check_histogram_parameters()\n         #Compare pipeline results with numpy\n         ms_background = bk.compute_value(frame, '11', loc_table=None)\n-        histo = ms_background.getHistogram(1)\n+        histo = ms_background.getHistogram(\"11\")\n         pipe_values = histo.getValues()\n \n         np_values , tmp = np.histogram(frame.getScience().getArray(), bins=21, range=(9.5, 30.5))\n@@ -634,9 +624,9 @@ class TestBackgroundSubtractionCore:\n         assert np.allclose(pipe_values, np_values)\n         assert np.allclose(ms_background.getWavelengthStart(), 10000.)\n         assert np.allclose(ms_background.getWavelengthEnd(), 19000.)\n-        assert ms_background.getBackgroundValue(1)>= center-2.\n-        assert ms_background.getBackgroundValue(1)<= center+2.\n-        assert (True in ms_background.getLocationMaskData(1)) is False\n+        assert ms_background.getBackgroundValue(\"11\")>= center-2.\n+        assert ms_background.getBackgroundValue(\"11\")<= center+2.\n+        assert (True in ms_background.getLocationMaskData(\"11\")) is False\n         assert ms_background.hasLocationTable() is False\n \n         assert np.allclose(histo.getXMax(), 30.5)\n@@ -644,8 +634,9 @@ class TestBackgroundSubtractionCore:\n         assert histo.getBins() == 21\n \n         for det_num in range(2, 17):\n-            assert ms_background.hasBackgroundValue(det_num) is False\n-            assert len(ms_background.getLocationMaskData(det_num)) == 0\n+            det_id = DetectorModel.getDetectorID(det_num)\n+            assert ms_background.hasBackgroundValue(det_id) is False\n+            assert len(ms_background.getLocationMaskData(det_id)) == 0\n \n \n     def test_compute_value4(self, tmpdir):\n@@ -680,24 +671,25 @@ class TestBackgroundSubtractionCore:\n \n         #Compare pipeline results with numpy\n         ms_background = bk.compute_value(frame, '11', loc_table=None)\n-        histo = ms_background.getHistogram(1)\n+        histo = ms_background.getHistogram('11')\n         pipe_values = histo.getValues()\n \n         #Auto set\n         ms_background = bk.compute_value(frame, '11', loc_table=None)\n-        histo = ms_background.getHistogram(1)\n+        histo = ms_background.getHistogram('11')\n \n         assert np.allclose(ms_background.getWavelengthStart(), 10000.)\n         assert np.allclose(ms_background.getWavelengthEnd(), 19000.)\n \n         assert histo.hasParameters() is True\n-        assert (True in ms_background.getLocationMaskData(1)) is False\n+        assert (True in ms_background.getLocationMaskData(\"11\")) is False\n         assert ms_background.hasLocationTable() is False\n \n \n         for det_num in range(2, 17):\n-            assert ms_background.hasBackgroundValue(det_num) is False\n-            assert len(ms_background.getLocationMaskData(det_num)) == 0\n+            det_id = DetectorModel.getDetectorID(det_num)\n+            assert ms_background.hasBackgroundValue(det_id) is False\n+            assert len(ms_background.getLocationMaskData(det_id)) == 0\n \n \n     def test_compute_value5(self, tmpdir):\n@@ -733,14 +725,14 @@ class TestBackgroundSubtractionCore:\n \n         #Compare pipeline results with numpy\n         ms_background = bk.compute_value(frame, '11', loc_table=None)\n-        histo = ms_background.getHistogram(1)\n+        histo = ms_background.getHistogram('11')\n         pipe_values = histo.getValues()\n \n         assert np.allclose(ms_background.getWavelengthStart(), 10000.)\n         assert np.allclose(ms_background.getWavelengthEnd(), 19000.)\n-        assert ms_background.getBackgroundValue(1)>= center-2.\n-        assert ms_background.getBackgroundValue(1)<= center+2.\n-        assert (True in ms_background.getLocationMaskData(1)) is False\n+        assert ms_background.getBackgroundValue(\"11\")>= center-2.\n+        assert ms_background.getBackgroundValue(\"11\")<= center+2.\n+        assert (True in ms_background.getLocationMaskData(\"11\")) is False\n         assert ms_background.hasLocationTable() is False\n \n         assert np.allclose(histo.getXMax(), 25.5+11*0.25)\n@@ -748,8 +740,9 @@ class TestBackgroundSubtractionCore:\n         assert histo.getBins() == 14\n \n         for det_num in range(2, 17):\n-            assert ms_background.hasBackgroundValue(det_num) is False\n-            assert len(ms_background.getLocationMaskData(det_num)) == 0\n+            det_id = DetectorModel.getDetectorID(det_num)\n+            assert ms_background.hasBackgroundValue(det_id) is False\n+            assert len(ms_background.getLocationMaskData(det_id)) == 0\n \n \n     def test_get_mask_filename1(self):\n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_PreProcessing/tests/src/MasterBackground_test.cpp": [
                        [
                            "@@ -377,7 +377,7 @@ BOOST_AUTO_TEST_CASE(setLocationTable_test1)\n BOOST_AUTO_TEST_CASE(setHistogramParameters_test1){\n   MasterBackgroundMode master;\n \n-  BOOST_CHECK_THROW(master.setHistogramParameters(0, 1.0, 2.0, Detector::Number::DET_11), std::invalid_argument);\n+  BOOST_CHECK_THROW(master.setHistogramParameters(0, 1.0, 2.0, \"11\"), std::invalid_argument);\n \n }\n \n@@ -388,7 +388,7 @@ BOOST_AUTO_TEST_CASE(setHistogramParameters_test1){\n BOOST_AUTO_TEST_CASE(setHistogramParameters_test2){\n   MasterBackgroundMode master;\n \n-  BOOST_CHECK_THROW(master.setHistogramParameters(10, 2.0, 1.0, Detector::Number::DET_11), std::invalid_argument);\n+  BOOST_CHECK_THROW(master.setHistogramParameters(10, 2.0, 1.0, \"11\"), std::invalid_argument);\n \n }\n \n@@ -399,9 +399,9 @@ BOOST_AUTO_TEST_CASE(setHistogramParameters_test2){\n BOOST_AUTO_TEST_CASE(setHistogramParameters_test3){\n   MasterBackgroundMode master;\n \n-  master.setHistogramParameters(10, 1.0, 2.0, Detector::Number::DET_32);\n+  master.setHistogramParameters(10, 1.0, 2.0, \"32\");\n \n-  const Histogram &histogram = master.getHistogram(Detector::Number::DET_32);\n+  const Histogram &histogram = master.getHistogram(\"32\");\n \n   BOOST_CHECK(histogram.getBins() == 10);\n   BOOST_CHECK_CLOSE(histogram.getXMin(), 1.0, MASTERBACKGROUND_TOL);\n@@ -417,7 +417,7 @@ BOOST_AUTO_TEST_CASE(setHistogramParameters_test3){\n BOOST_AUTO_TEST_CASE(setHistogramParameters_test4){\n   MasterBackgroundMode master;\n \n-  BOOST_CHECK_THROW(master.setHistogramParameters(10, 1.0, 2.0, Detector::Number(-1)), std::runtime_error);\n+  BOOST_CHECK_THROW(master.setHistogramParameters(10, 1.0, 2.0, \"1234\"), std::runtime_error);\n }\n \n \n@@ -427,10 +427,10 @@ BOOST_AUTO_TEST_CASE(setHistogramParameters_test4){\n BOOST_AUTO_TEST_CASE(setHistogramParameters_test5){\n   MasterBackgroundMode master;\n \n-  master.setHistogramParameters(10, 1.0, 2.0);\n+  for (auto const &det_id: DetectorModel::getDetectorIDRange()) {\n+    master.setHistogramParameters(10, 1.0, 2.0, det_id);\n \n-  for (Detector::Number det_num: DetectorModel::getDetectorRange()) {\n-    const Histogram &histogram = master.getHistogram(det_num);\n+    const Histogram &histogram = master.getHistogram(det_id);\n \n     BOOST_CHECK(histogram.getBins() == 10);\n     BOOST_CHECK_CLOSE(histogram.getXMin(), 1.0, MASTERBACKGROUND_TOL);\n@@ -444,7 +444,7 @@ BOOST_AUTO_TEST_CASE(setHistogramParameters_test5){\n  */\n BOOST_AUTO_TEST_CASE(updateHistogram_test1)\n {\n-  LocationMask mask(Detector::Number::DET_33, 3,3);\n+  LocationMask mask(\"33\", 3,3);\n   Array<bool> maskdata = mask.getMaskData();\n   maskdata << 0, 0, 0, 0, 0, 0, 0, 0, 0;\n   Array<float> data(3,3);\n@@ -452,10 +452,10 @@ BOOST_AUTO_TEST_CASE(updateHistogram_test1)\n   Array<float> variance(3,3);\n \n   MasterBackgroundMode master;\n-  master.setHistogramParameters(5, -2.5, 2.5, Detector::Number::DET_33);\n+  master.setHistogramParameters(5, -2.5, 2.5, \"33\");\n   master.setLocationMask(mask);\n-  master.updateHistogram(data, variance, Detector::Number::DET_33, nullptr);\n-  const Array<double> &values = master.getHistogram(Detector::Number::DET_33).getValues();\n+  master.updateHistogram(data, variance, \"33\", nullptr);\n+  const Array<double> &values = master.getHistogram(\"33\").getValues();\n   Array<double> expected(1, 5);\n   expected << 1, 2, 3, 1, 2;\n \n@@ -468,7 +468,7 @@ BOOST_AUTO_TEST_CASE(updateHistogram_test1)\n  */\n BOOST_AUTO_TEST_CASE(computeHistogram_test2)\n {\n-  LocationMask mask(Detector::Number::DET_13, 3, 3);\n+  LocationMask mask(\"13\", 3, 3);\n   Array<bool> maskdata = mask.getMaskData();\n   maskdata << 1, 0, 0, 0, 0, 0, 0, 0, 0;\n   Array<float> data(3,3);\n@@ -476,10 +476,10 @@ BOOST_AUTO_TEST_CASE(computeHistogram_test2)\n   Array<float> variance(3,3);\n \n   MasterBackgroundMode master;\n-  master.setHistogramParameters(5, -2.5, 2.5, Detector::Number::DET_13);\n+  master.setHistogramParameters(5, -2.5, 2.5, \"13\");\n   master.setLocationMask(mask);\n-  master.updateHistogram(data, variance, Detector::Number::DET_13, nullptr);\n-  const Array<double> &values = master.getHistogram(Detector::Number::DET_13).getValues();\n+  master.updateHistogram(data, variance, \"13\", nullptr);\n+  const Array<double> &values = master.getHistogram(\"13\").getValues();\n   Array<double> expected(1, 5);\n   expected << 0, 2, 3, 1, 2;\n \n@@ -492,7 +492,7 @@ BOOST_AUTO_TEST_CASE(computeHistogram_test2)\n  */\n BOOST_AUTO_TEST_CASE(computeHistogram_test3)\n {\n-  LocationMask mask(Detector::Number::DET_12, 3, 3);\n+  LocationMask mask(\"12\", 3, 3);\n   Array<bool> maskdata = mask.getMaskData();\n   maskdata << 0, 1, 0, 0, 0, 0, 0, 0, 0;\n   Array<float> data(3,3);\n@@ -500,10 +500,10 @@ BOOST_AUTO_TEST_CASE(computeHistogram_test3)\n   Array<float> variance(3,3);\n \n   MasterBackgroundMode master;\n-  master.setHistogramParameters(5, -2.5, 2.5, Detector::Number::DET_12);\n+  master.setHistogramParameters(5, -2.5, 2.5, \"12\");\n   master.setLocationMask(mask);\n-  master.updateHistogram(data, variance, Detector::Number::DET_12, nullptr);\n-  const Array<double> &values = master.getHistogram(Detector::Number::DET_12).getValues();\n+  master.updateHistogram(data, variance, \"12\", nullptr);\n+  const Array<double> &values = master.getHistogram(\"12\").getValues();\n   Array<double> expected(1, 5);\n   expected << 1, 1, 3, 1, 2;\n \n@@ -517,7 +517,7 @@ BOOST_AUTO_TEST_CASE(computeHistogram_test3)\n BOOST_AUTO_TEST_CASE(getBackgroundValue_test1)\n {\n   MasterBackgroundMode master;\n-  BOOST_CHECK_THROW(master.getBackgroundValue(Detector::Number::DET_12), std::runtime_error);\n+  BOOST_CHECK_THROW(master.getBackgroundValue(\"12\"), std::runtime_error);\n }\n \n \n@@ -527,8 +527,8 @@ BOOST_AUTO_TEST_CASE(getBackgroundValue_test1)\n BOOST_AUTO_TEST_CASE(getBackgroundValue_test2)\n {\n   MasterBackgroundMode master;\n-  master.setHistogramParameters(5, -2.5, 2.5, Detector::Number::DET_12);\n-  BOOST_CHECK_THROW(master.getBackgroundValue(Detector::Number::DET_12), std::runtime_error);\n+  master.setHistogramParameters(5, -2.5, 2.5, \"12\");\n+  BOOST_CHECK_THROW(master.getBackgroundValue(\"12\"), std::runtime_error);\n }\n \n \n@@ -537,7 +537,7 @@ BOOST_AUTO_TEST_CASE(getBackgroundValue_test2)\n  */\n BOOST_AUTO_TEST_CASE(getBackgroundValue_test3)\n {\n-  LocationMask mask(Detector::Number::DET_12, 3, 3);\n+  LocationMask mask(\"12\", 3, 3);\n   Array<bool> maskdata = mask.getMaskData();\n   maskdata << 0, 0, 0, 0, 0, 0, 0, 0, 0;\n   Array<float> data(3,3);\n@@ -545,11 +545,11 @@ BOOST_AUTO_TEST_CASE(getBackgroundValue_test3)\n   Array<float> variance(3,3);\n \n   MasterBackgroundMode master;\n-  master.setHistogramParameters(5, -2.5, 2.5, Detector::Number::DET_12);\n+  master.setHistogramParameters(5, -2.5, 2.5, \"12\");\n   master.setLocationMask(mask);\n-  master.updateHistogram(data, variance, Detector::Number::DET_12, nullptr);\n+  master.updateHistogram(data, variance, \"12\", nullptr);\n \n-  BOOST_CHECK_THROW(master.getBackgroundValue(Detector::Number::DET_12), std::runtime_error);\n+  BOOST_CHECK_THROW(master.getBackgroundValue(\"12\"), std::runtime_error);\n }\n \n /**\n@@ -573,14 +573,14 @@ BOOST_AUTO_TEST_CASE(getBackgroundErrors_test)\n   MasterBackgroundMode master;\n   master.setRandomIters(10);\n   master.setMaskEngine(\"CORNERS\");\n-  for (int det_num=1; det_num<=16; ++det_num){\n-    master.setHistogramParameters(5, det_num-0.5, det_num+4.5, Detector::Number(det_num));\n+  for (const auto &det_id: DetectorModel::getDetectorIDRange()){\n+    auto det_num = DetectorModel::getDetectorNumber(det_id);\n+    master.setHistogramParameters(5, det_num-0.5, det_num+4.5, det_id);\n   }\n   master.computeBackground(exposure, true);\n \n-  Array<float> errors;\n-  errors = master.getBackgroundErrors();\n-  BOOST_CHECK_EQUAL(errors(0),0);\n+  auto errors = master.getBackgroundErrors();\n+  BOOST_CHECK_EQUAL(errors[\"11\"],0);\n }\n \n \n@@ -599,7 +599,7 @@ BOOST_AUTO_TEST_CASE(setHistogramParameters_test6)\n \n   MasterBackgroundMode master;\n   master.setHistogramParameters(exposure);\n-  const Histogram &histogram = master.getHistogram(Detector::Number::DET_41);\n+  const Histogram &histogram = master.getHistogram(\"41\");\n   BOOST_CHECK_EQUAL(histogram.getBins(),1);\n   BOOST_CHECK_EQUAL(histogram.getXMin(),-2);\n   BOOST_CHECK_EQUAL(histogram.getXMax(),2);\n@@ -620,10 +620,10 @@ BOOST_AUTO_TEST_CASE(computeHSM_test)\n   exposure.getMetadata().set(\"DET_ID\", \"41\");\n \n   MasterBackgroundHSM master;\n-  master.setHistogramParameters(5, -2.5, 2.5, Detector::Number::DET_41);\n+  master.setHistogramParameters(5, -2.5, 2.5, \"41\");\n   master.computeBackground(exposure, true,0.0);\n \n-  BOOST_CHECK_CLOSE(master.getBackgroundValue(Detector::Number::DET_41), -1.0, MASTERBACKGROUND_TOL);\n+  BOOST_CHECK_CLOSE(master.getBackgroundValue(\"41\"), -1.0, MASTERBACKGROUND_TOL);\n \n }\n \n@@ -641,11 +641,11 @@ BOOST_AUTO_TEST_CASE(compute_test1)\n   exposure.getMetadata().set(\"DET_ID\", \"41\");\n \n   MasterBackgroundMode master;\n-  master.setHistogramParameters(5, -2.5, 2.5, Detector::Number::DET_41);\n+  master.setHistogramParameters(5, -2.5, 2.5, \"41\");\n   master.setMaskEngine(\"CORNERS\");\n   master.computeBackground(exposure, true);\n \n-  BOOST_CHECK_CLOSE(master.getBackgroundValue(Detector::Number::DET_41), -1.0, MASTERBACKGROUND_TOL);\n+  BOOST_CHECK_CLOSE(master.getBackgroundValue(\"41\"), -1.0, MASTERBACKGROUND_TOL);\n }\n \n \n@@ -663,20 +663,20 @@ BOOST_AUTO_TEST_CASE(compute_test2)\n   exposure.getMetadata().set(\"DET_ID\", \"31\");\n \n   MasterBackgroundMode master;\n-  master.setHistogramParameters(5, -2.5, 2.5, Detector::Number::DET_31);\n+  master.setHistogramParameters(5, -2.5, 2.5, \"31\");\n   master.setMaskEngine(\"CORNERS\");\n   master.computeBackground(exposure, true);\n \n-  BOOST_CHECK_CLOSE(master.getBackgroundValue(Detector::Number::DET_31), 0.0, MASTERBACKGROUND_TOL);\n+  BOOST_CHECK_CLOSE(master.getBackgroundValue(\"31\"), 0.0, MASTERBACKGROUND_TOL);\n \n   exposure.getMask().getArray() << 0, 0, 0, 0, 1, 1, 0, 0, 0;\n \n   MasterBackgroundMode master2;\n   master2.setMaskEngine(\"CORNERS\");\n-  master2.setHistogramParameters(5, -2.5, 2.5, Detector::Number::DET_31);\n+  master2.setHistogramParameters(5, -2.5, 2.5, \"31\");\n   master2.computeBackground(exposure, true);\n \n-  BOOST_CHECK_CLOSE(master2.getBackgroundValue(Detector::Number::DET_31), -1.0, MASTERBACKGROUND_TOL);\n+  BOOST_CHECK_CLOSE(master2.getBackgroundValue(\"31\"), -1.0, MASTERBACKGROUND_TOL);\n }\n \n \n@@ -700,13 +700,15 @@ BOOST_AUTO_TEST_CASE(compute_test3)\n \n   MasterBackgroundMode master;\n   master.setMaskEngine(\"CORNERS\");\n-  for (int det_num=1; det_num<=16; ++det_num){\n-    master.setHistogramParameters(5, det_num-0.5, det_num+4.5, Detector::Number(det_num));\n+  for (const auto &det_id: DetectorModel::getDetectorIDRange()){\n+    auto det_num = DetectorModel::getDetectorNumber(det_id);\n+    master.setHistogramParameters(5, det_num-0.5, det_num+4.5, det_id);\n   }\n   master.computeBackground(exposure, true);\n \n-  for (int det_num=1; det_num<=16; ++det_num){\n-    BOOST_CHECK_CLOSE(master.getBackgroundValue(Detector::Number(det_num)), det_num + 3.0, MASTERBACKGROUND_TOL);\n+  for (const auto &det_id: DetectorModel::getDetectorIDRange()){\n+    auto det_num = DetectorModel::getDetectorNumber(det_id);\n+    BOOST_CHECK_CLOSE(master.getBackgroundValue(det_id), det_num + 3.0, MASTERBACKGROUND_TOL);\n   }\n \n }\n@@ -729,10 +731,10 @@ BOOST_AUTO_TEST_CASE(compute_test4)\n \n   MasterBackgroundMode master;\n   master.setMaskEngine(\"CORNERS\");\n-  master.setHistogramParameters(5, -2.5, 2.5, Detector::Number::DET_42);\n+  master.setHistogramParameters(5, -2.5, 2.5, \"42\");\n   master.computeBackground(exposure, true);\n \n-  BOOST_CHECK_CLOSE(master.getBackgroundValue(Detector::Number::DET_42), 1.0, MASTERBACKGROUND_TOL);\n+  BOOST_CHECK_CLOSE(master.getBackgroundValue(\"42\"), 1.0, MASTERBACKGROUND_TOL);\n \n   /* Check reset is performed */\n   exposure.getScience()*=0;\n@@ -741,7 +743,7 @@ BOOST_AUTO_TEST_CASE(compute_test4)\n \n   master.computeBackground(exposure, true);\n \n-  BOOST_CHECK_CLOSE(master.getBackgroundValue(Detector::Number::DET_42), 2.0, MASTERBACKGROUND_TOL);\n+  BOOST_CHECK_CLOSE(master.getBackgroundValue(\"42\"), 2.0, MASTERBACKGROUND_TOL);\n }\n \n \n@@ -765,13 +767,15 @@ BOOST_AUTO_TEST_CASE(compute_test5)\n \n   MasterBackgroundMode master;\n   master.setMaskEngine(\"CORNERS\");\n-  for (int det_num=1; det_num<=16; ++det_num){\n-    master.setHistogramParameters(5, det_num-0.5, det_num+4.5, Detector::Number(det_num));\n+  for (const auto &det_id: DetectorModel::getDetectorIDRange()){\n+    auto det_num = DetectorModel::getDetectorNumber(det_id);\n+    master.setHistogramParameters(5, det_num-0.5, det_num+4.5, det_id);\n   }\n   master.computeBackground(exposure, true);\n \n   for (int det_num=1; det_num<=16; ++det_num){\n-    BOOST_CHECK_CLOSE(master.getBackgroundValue(Detector::Number(det_num)), det_num+3.0, MASTERBACKGROUND_TOL);\n+    const std::string det_id = DetectorModel::getDetectorID((Detector::Number) det_num);\n+    BOOST_CHECK_CLOSE(master.getBackgroundValue(det_id), det_num+3.0, MASTERBACKGROUND_TOL);\n   }\n \n   /* Check reset is performed */\n@@ -785,7 +789,8 @@ BOOST_AUTO_TEST_CASE(compute_test5)\n   master.computeBackground(exposure, true);\n \n   for (int det_num=1; det_num<=16; ++det_num){\n-    BOOST_CHECK_CLOSE(master.getBackgroundValue(Detector::Number(det_num)), det_num, MASTERBACKGROUND_TOL);\n+    const std::string det_id = DetectorModel::getDetectorID((Detector::Number) det_num);\n+    BOOST_CHECK_CLOSE(master.getBackgroundValue(det_id), det_num, MASTERBACKGROUND_TOL);\n   }\n }\n \n@@ -812,7 +817,7 @@ BOOST_AUTO_TEST_CASE(compute_test6)\n   master.setMaskEngine(\"CORNERS\");\n   master.setRandomIters(iter);\n \n-  master.setHistogramParameters(5, 0.5, 5.5, Detector::Number::DET_42);\n+  master.setHistogramParameters(5, 0.5, 5.5, \"42\");\n   master.computeBackground(exposure, true);\n \n   /* Initialize the random generator */\n@@ -854,8 +859,8 @@ BOOST_AUTO_TEST_CASE(compute_test6)\n   }\n   expected_var /= (iter-1);\n \n-  BOOST_CHECK_CLOSE(master.getBackgroundValue(Detector::Number::DET_42), expected_value, MASTERBACKGROUND_TOL);\n-  BOOST_CHECK_CLOSE(master.getBackgroundVariance(Detector::Number::DET_42), expected_var, MASTERBACKGROUND_TOL);\n+  BOOST_CHECK_CLOSE(master.getBackgroundValue(\"42\"), expected_value, MASTERBACKGROUND_TOL);\n+  BOOST_CHECK_CLOSE(master.getBackgroundVariance(\"42\"), expected_var, MASTERBACKGROUND_TOL);\n \n }\n \n@@ -876,7 +881,7 @@ BOOST_AUTO_TEST_CASE(remove_test1)\n   master.setMaskEngine(\"CORNERS\");\n \n   master.setLambdaRange(1, 2);\n-  master.setHistogramParameters(5, -2.5, 2.5, Detector::Number::DET_34);\n+  master.setHistogramParameters(5, -2.5, 2.5, \"34\");\n   master.computeBackground(exposure, true);\n \n   master.removeBackground(exposure);\n@@ -909,8 +914,9 @@ BOOST_AUTO_TEST_CASE(remove_test2)\n \n   MasterBackgroundMode master;\n   master.setLambdaRange(1, 2);\n-  for (int det_num=1; det_num<=16; ++det_num){\n-    master.setHistogramParameters(5, det_num-0.5, det_num+4.5, Detector::Number(det_num));\n+  for (const auto &det_id: DetectorModel::getDetectorIDRange()){\n+    auto det_num = DetectorModel::getDetectorNumber(det_id);\n+    master.setHistogramParameters(5, det_num-0.5, det_num+4.5, det_id);\n   }\n   master.setMaskEngine(\"CORNERS\");\n   master.computeBackground(exposure, true);\n@@ -958,19 +964,19 @@ BOOST_AUTO_TEST_CASE(remove_test3)\n   master.setLambdaRange(1, 2);\n   master.setMaskEngine(\"CORNERS\");\n \n-  for (int det_num=1; det_num<=16; ++det_num){\n-    master.setHistogramParameters(5, det_num-0.5, det_num+4.5, Detector::Number(det_num));\n+  for (const auto &det_id: DetectorModel::getDetectorIDRange()){\n+    auto det_num = DetectorModel::getDetectorNumber(det_id);\n+    master.setHistogramParameters(5, det_num-0.5, det_num+4.5, det_id);\n   }\n   master.setRandomIters(10);\n   master.computeBackground(exposure, true);\n \n   master.removeBackground(exposure);\n \n-  for (Detector::Number det_num: DetectorModel::getDetectorRange()){\n-    const std::string det_id = DetectorModel::getDetectorID(det_num);\n-\n-    float bk_value = master.getBackgroundValue((Detector::Number) det_num);\n-    float bk_variance = master.getBackgroundVariance((Detector::Number) det_num);\n+  for (const auto &det_id: DetectorModel::getDetectorIDRange()){\n+    \n+    float bk_value = master.getBackgroundValue(det_id);\n+    float bk_variance = master.getBackgroundVariance(det_id);\n \n     const Array<float> &data = exposure.getDetector(det_id)->getScience().getArray();\n     Array<float> expected = original.getDetector(det_id)->getScience().getArray();\n@@ -993,13 +999,17 @@ BOOST_AUTO_TEST_CASE(setValues_test1)\n {\n   MasterBackgroundMode master;\n \n-  Array<float> values = 100*Array<float>::Random(1,16);\n-\n-  master.setBackgroundValues(values);\n-  Array<float> computed = master.getBackgroundValues();\n-\n-  checkCTEigenClose(computed, values, (float) MASTERBACKGROUND_TOL);\n+  std::map<std::string, float> values;\n+  for(const auto &det_id: DetectorModel::getDetectorIDRange()){\n+    values[det_id] = rand() % 100 +1.;\n+    master.setBackgroundValue(values[det_id], det_id);\n+  }\n+  \n+  auto computed = master.getBackgroundValues();\n \n+  for(auto const &[key, value]: values){\n+    BOOST_CHECK_CLOSE(computed[key], value, (float) MASTERBACKGROUND_TOL);\n+  }\n }\n \n \n@@ -1007,13 +1017,18 @@ BOOST_AUTO_TEST_CASE(setValues_test1)\n BOOST_AUTO_TEST_CASE(setVariances_test1)\n {\n   MasterBackgroundMode master;\n+  std::map<std::string, float> values;\n+  for(const auto &det_id: DetectorModel::getDetectorIDRange()){\n+    values[det_id] = rand() % 100 +1.;\n+    master.setBackgroundVariance(values[det_id], det_id);\n \n-  Array<float> values = 100*Array<float>::Random(1,16);\n-\n-  master.setBackgroundVariances(values);\n-  Array<float> computed = master.getBackgroundVariances();\n+  }\n+  \n+  auto computed = master.getBackgroundVariances();\n \n-  checkCTEigenClose(computed, values, (float) MASTERBACKGROUND_TOL);\n+  for(auto const &[key, value]: values){\n+    BOOST_CHECK_CLOSE(computed[key], value, (float) MASTERBACKGROUND_TOL);\n+  }\n \n }\n \n@@ -1029,12 +1044,11 @@ BOOST_AUTO_TEST_CASE(_adjustRange_test1)\n   exposure.getMetadata().set(\"DET_ID\", \"11\");\n \n   MasterBackgroundMode master;\n-  Detector::Number det_num = Detector::Number::DET_11;\n-  master.setHistogramParameters(5, -2.5, 2.5, Detector::Number::DET_11);\n+  master.setHistogramParameters(5, -2.5, 2.5, \"11\");\n   \n   master._adjustRange(exposure);\n \n-  Histogram histo = master.getHistogram(det_num);\n+  Histogram histo = master.getHistogram(\"11\");\n \n   /* Range does not change */\n   BOOST_CHECK_CLOSE(-2.5, histo.getXMin(), MASTERBACKGROUND_TOL);\n@@ -1054,12 +1068,11 @@ BOOST_AUTO_TEST_CASE(_adjustRange_test2)\n   exposure.getMetadata().set(\"DET_ID\", \"11\");\n \n   MasterBackgroundMode master;\n-  Detector::Number det_num = Detector::Number::DET_11;\n-  master.setHistogramParameters(5, -3.9, 1.1, Detector::Number::DET_11);\n+  master.setHistogramParameters(5, -3.9, 1.1, \"11\");\n   \n   master._adjustRange(exposure);\n \n-  Histogram histo = master.getHistogram(det_num);\n+  Histogram histo = master.getHistogram(\"11\");\n \n   /* Range changes */\n   BOOST_CHECK_CLOSE(-1.5, histo.getXMin(), MASTERBACKGROUND_TOL);\n@@ -1080,12 +1093,11 @@ BOOST_AUTO_TEST_CASE(_adjustRange_test3)\n   exposure.getMetadata().set(\"DET_ID\", \"11\");\n \n   MasterBackgroundMode master;\n-  Detector::Number det_num = Detector::Number::DET_11;\n-  master.setHistogramParameters(5, 0.9, 5.9, Detector::Number::DET_11);\n+  master.setHistogramParameters(5, 0.9, 5.9, \"11\");\n   \n   master._adjustRange(exposure);\n \n-  Histogram histo = master.getHistogram(det_num);\n+  Histogram histo = master.getHistogram(\"11\");\n \n   /* Range changes */\n   BOOST_CHECK_CLOSE(-1.5, histo.getXMin(), MASTERBACKGROUND_TOL);\n@@ -1106,12 +1118,11 @@ BOOST_AUTO_TEST_CASE(_adjustRange_test4)\n   exposure.getMetadata().set(\"DET_ID\", \"11\");\n \n   MasterBackgroundMode master;\n-  Detector::Number det_num = Detector::Number::DET_11;\n-  master.setHistogramParameters(5, -3.0, 2.0, Detector::Number::DET_11);\n+  master.setHistogramParameters(5, -3.0, 2.0, \"11\");\n   \n   master._adjustRange(exposure);\n \n-  Histogram histo = master.getHistogram(det_num);\n+  Histogram histo = master.getHistogram(\"11\");\n \n   /* Check mask properly used */\n   BOOST_CHECK_CLOSE(-0.5, histo.getXMin(), MASTERBACKGROUND_TOL);\n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_SpectraLocation/SIR_SpectraLocation/LocationMask.h": [
                        [
                            "@@ -46,21 +46,18 @@ public:\n   static const bool valid;\n   static const bool invalid;\n \n-  /**\n-   * @brief Default Constructor\n-  */\n   LocationMask();\n \n   /**\n    * @brief Default Constructor\n-   * @param detector\n+   * @param det_id\n    *     Detector number of this mask\n    * @param xsize\n    *     X mask size [pixels]\n    * @param ysize\n    *     Y mask size [pixels]\n    */\n-  LocationMask(Detector::Number const detector, int const xsize=0, int const ysize=0);\n+  LocationMask(std::string const &det_id, int const xsize=0, int const ysize=0);\n \n   /**\n    * @brief Set LocationMask detector sizes\n@@ -76,14 +73,14 @@ public:\n    * @return\n    *     The detector number\n    */\n-  Detector::Number getDetectorNumber() const;\n+  std::string getDetectorID() const;\n \n   /**\n    * @brief Set detector number for current mask\n    * @param detector\n    *     The detector number\n    */\n-  void setDetector(Detector::Number const detector);\n+  void setDetectorID(std::string const &det_id);\n \n   /**\n    * @brief Update mask with pixels covered by area\n@@ -178,7 +175,8 @@ public:\n \n private:\n   typedef std::shared_ptr<SpectrumAreaInterface> (*compute_area_ptr)(LocationSpectrum const &, const double, const double);\n-  Detector::Number m_detector;\n+  std::string m_det_id;\n+  Detector::Number m_det_num;\n   Array<bool> m_mask;\n   std::string m_engine_name;\n   compute_area_ptr m_engine;\n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_SpectraLocation/python/SIR_SpectraLocation/LocationMask.py": [
                        [
                            "@@ -31,8 +31,8 @@ import numpy as np\n \n class LocationMask(CLocationMask):\n     \"\"\"LocationSpectra mask\"\"\"\n-    def __init__(self, detector, xsize, ysize):\n-        CLocationMask.__init__(self, detector, xsize, ysize)\n+    def __init__(self, det_id, xsize, ysize):\n+        CLocationMask.__init__(self, det_id, xsize, ysize)\n \n \n     def writeFits(self, filename):\n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_SpectraLocation/src/lib/LocationMask.cpp": [
                        [
                            "@@ -41,8 +41,8 @@ const bool LocationMask::invalid = 1;\n \n \n LocationMask::LocationMask() :\n-\n-  m_detector(Detector::Number::NO_DET),\n+  m_det_id(\"\"),\n+  m_det_num(Detector::Number::NO_DET),\n   m_mask(Array<bool>::Zero(0, 0)),\n   m_engine_name(),\n   m_engine(nullptr) {\n@@ -50,15 +50,14 @@ LocationMask::LocationMask() :\n   }\n \n \n-LocationMask::LocationMask(const Detector::Number detector, const int xsize, const int ysize) :\n-  m_detector(detector),\n+LocationMask::LocationMask(const std::string &det_id, const int xsize, const int ysize) :\n   m_mask(Array<bool>::Zero(ysize, xsize)),\n   m_engine_name(),\n   m_engine(nullptr) {\n+    setDetectorID(det_id);\n     setEngine(SpectrumAreaCorners::NAME);\n   }\n \n-\n void LocationMask::setSizes(int const xsize, int const ysize){\n   m_mask = Array<bool>(ysize, xsize);\n   reset();\n@@ -70,19 +69,21 @@ bool LocationMask::isValid(int const index) const {\n }\n \n \n-Detector::Number LocationMask::getDetectorNumber() const{\n-  return m_detector;\n+std::string LocationMask::getDetectorID() const{\n+  return m_det_id;\n }\n \n \n-void LocationMask::setDetector(Detector::Number const detector){\n-  m_detector = detector;\n+void LocationMask::setDetectorID(std::string const &det_id){\n+  m_det_id = det_id;\n+  /* backward compatibility*/\n+  m_det_num = DetectorModel::getDetectorNumber(det_id);\n }\n \n \n void LocationMask::updateMask(SpectrumAreaInterface &area, const double pad){\n \n-  if (area.getDetectorNumber() != m_detector){\n+  if (area.getDetectorNumber() != m_det_num){\n     return;\n   }\n \n@@ -109,7 +110,7 @@ void LocationMask::updateMask(LocationSpectrumPtr const &spectrum, const double\n                               const double pad){\n \n   /* Check detector number */\n-  if (m_detector != spectrum->getDetectorNumber()){\n+  if (m_det_num != spectrum->getDetectorNumber()){\n     return;\n   }\n \n@@ -151,10 +152,7 @@ void LocationMask::updateMask(Euclid::Image::DetectorExposure<Euclid::Image::Ima\n                                                Euclid::Image::Image<float>,\n                                                Euclid::Image::Mask<uint32_t>>& detector){\n \n-    /* Get detector number */\n-    const Detector::Number detector_num =  DetectorModel::getDetectorNumber(detector.getDetectorID());\n-\n-    if (detector_num != m_detector){\n+    if (detector.getDetectorID() != m_det_id){\n       return;\n     }\n \n@@ -170,7 +168,7 @@ void LocationMask::updateMask(Euclid::Image::SurveyExposure<Euclid::Image::Detec\n                                                               Euclid::Image::Image<float>,\n                                                               Euclid::Image::Mask<uint32_t>>> & exposure){\n \n-  Euclid::Image::NispDetectorExposure::Ptr det_exposure = exposure.getDetector(m_detector-1);\n+  Euclid::Image::NispDetectorExposure::Ptr det_exposure = exposure.getDetector(m_det_id);\n   updateMask(*det_exposure);\n }\n \n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_SpectraLocation/tests/src/LocationMask_test.cpp": [
                        [
                            "@@ -48,16 +48,6 @@ using ::testing::Return;\n \n BOOST_AUTO_TEST_SUITE (LocationMask_test)\n \n-/**\n- * @brief Test: LocationMask(int const, int const)\n- */\n-BOOST_AUTO_TEST_CASE(default_constructor_test1)\n-{\n-  LocationMask mask;\n-\n-  BOOST_CHECK(mask.getDetectorNumber() == Detector::Number::NO_DET);\n-}\n-\n \n /**\n  * @brief Test: LocationMask(int const, int const)\n@@ -65,13 +55,13 @@ BOOST_AUTO_TEST_CASE(default_constructor_test1)\n BOOST_AUTO_TEST_CASE(default_constructor_test2)\n {\n \n-  LocationMask mask(Detector::Number::DET_33, 2,3);\n+  LocationMask mask(\"33\", 2,3);\n \n   const Array<bool> &detector_mask = mask.getMaskData();\n \n   BOOST_CHECK(detector_mask.rows() == 3);\n   BOOST_CHECK(detector_mask.cols() == 2);\n-  BOOST_CHECK(mask.getDetectorNumber() == Detector::Number::DET_33);\n+  BOOST_CHECK(mask.getDetectorID() == \"33\");\n }\n \n \n@@ -81,7 +71,7 @@ BOOST_AUTO_TEST_CASE(default_constructor_test2)\n BOOST_AUTO_TEST_CASE(setSizes_test)\n {\n \n-  LocationMask mask(Detector::Number::DET_11, 2,3);\n+  LocationMask mask(\"11\", 2,3);\n \n   const Array<bool> &detector = mask.getMaskData();\n   BOOST_CHECK(detector.rows() == 3);\n@@ -112,10 +102,10 @@ BOOST_AUTO_TEST_CASE(updateMask_test1)\n \n   EXPECT_CALL(area, getPixRectangle(_,_)).Times(1).WillOnce(Return(pixels));\n   EXPECT_CALL(area, setBorders(_,_,_,_)).Times(1).WillOnce(Return());\n-  EXPECT_CALL(area, getDetectorNumber()).Times(1).WillOnce(Return(Detector::Number::DET_11));\n+  EXPECT_CALL(area, getDetectorID()).Times(1).WillOnce(Return(\"11\"));\n \n   /* Check mask */\n-  LocationMask mask(Detector::Number::DET_11, 10, 10);\n+  LocationMask mask(\"11\", 10, 10);\n \n   mask.updateMask(area, 0.0, 0.0);\n \n@@ -149,10 +139,10 @@ BOOST_AUTO_TEST_CASE(updateMask_test2)\n \n   EXPECT_CALL(area, getPixRectangle(_,_)).Times(1).WillOnce(Return(pixels));\n   EXPECT_CALL(area, setBorders(_,_,_,_)).Times(1).WillOnce(Return());\n-  EXPECT_CALL(area, getDetectorNumber()).Times(1).WillOnce(Return(Detector::Number::DET_12));\n+  EXPECT_CALL(area, getDetectorID()).Times(1).WillOnce(Return(\"12\"));\n \n   /* Check mask */\n-  LocationMask mask(Detector::Number::DET_12, 10, 10);\n+  LocationMask mask(\"12\", 10, 10);\n \n   mask.updateMask(area, 0.0, 0.0);\n \n@@ -186,10 +176,10 @@ BOOST_AUTO_TEST_CASE(updateMask_test3)\n \n   EXPECT_CALL(area, getPixRectangle(_,_)).Times(1).WillOnce(Return(pixels));\n   EXPECT_CALL(area, setBorders(_,_,_,_)).Times(1).WillOnce(Return());\n-  EXPECT_CALL(area, getDetectorNumber()).Times(1).WillOnce(Return(Detector::Number::DET_11));\n+  EXPECT_CALL(area, getDetectorID()).Times(1).WillOnce(Return(\"11\"));\n \n   /* Update mask mask */\n-  LocationMask mask(Detector::Number::DET_11, 10, 10);\n+  LocationMask mask(\"11\", 10, 10);\n   mask.updateMask(area, 0.0, 0.0);\n \n   Array<bool> expected = Array<bool>::Zero(10,10);\n@@ -244,10 +234,10 @@ BOOST_AUTO_TEST_CASE(updateMask_test4)\n \n   EXPECT_CALL(area, getPixRectangle(_,_)).Times(1).WillOnce(Return(pixels));\n   EXPECT_CALL(area, setBorders(_,_,_,_)).Times(1).WillOnce(Return());\n-  EXPECT_CALL(area, getDetectorNumber()).Times(1).WillOnce(Return(Detector::Number::DET_11));\n+  EXPECT_CALL(area, getDetectorID()).Times(1).WillOnce(Return(\"11\"));\n \n   /* Update mask mask */\n-  LocationMask mask(Detector::Number::DET_11, 10, 10);\n+  LocationMask mask(\"11\", 10, 10);\n   mask.updateMask(area, 0.0, 0.0);\n \n   Array<bool> expected = Array<bool>::Zero(10,10);\n@@ -371,7 +361,7 @@ BOOST_AUTO_TEST_CASE(updateMask_test7)\n   }\n \n   /* Update LocationMask */\n-  LocationMask loc_mask(Detector::Number::DET_11, xsize, ysize);\n+  LocationMask loc_mask(\"11\", xsize, ysize);\n   loc_mask.updateMask(exposure);\n   loc_mask.updateMask(area);\n \n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_Utilities/CMakeLists.txt": [
                        [
                            "@@ -53,6 +53,11 @@ elements_add_unit_test(SIRPoly1D tests/src/SIRPoly1D_test.cpp\n                        INCLUDE_DIRS SIR_Utilities TestUtils\n                        LINK_LIBRARIES SIR_Utilities TYPE Boost)\n \n+elements_add_unit_test(AsymGaussian tests/src/AsymGaussian_test.cpp\n+                       EXECUTABLE AsymGaussian_test\n+                       INCLUDE_DIRS SIR_Utilities TestUtils\n+                       LINK_LIBRARIES SIR_Utilities TYPE Boost)                       \n+                       \n # Add the auxdir containing the SIR MDB complement file\n elements_install_aux_files()\n \n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_Utilities/SIR_Utilities/AsymGaussian.h": [
                        [
                            "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright (C) 2015-2020 Euclid Science Ground Segment\n+ *\n+ * This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General\n+ * Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option)\n+ * any later version.\n+ *\n+ * This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied\n+ * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n+ * details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to\n+ * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+/**\n+ * @file AsymGaussian.h\n+ *\n+ * Created on: Jul 06, 2023\n+ *\n+ * @author Marco Fumana\n+ */\n+\n+#ifndef ASYMGAUSSIAN_H\n+#define ASYMGAUSSIAN_H\n+\n+#include <gsl/gsl_multifit_nlinear.h>\n+#include \"EL_Array/Array.h\"\n+#include <memory>\n+\n+using namespace Euclid::EigenView;\n+\n+/**\n+ * @class AsymGaussian\n+ *\n+ * @brief\n+ *     This functions allow to fit an asymetric gaussian\n+ */\n+\n+class AsymGaussian {\n+public:\n+  AsymGaussian();\n+  AsymGaussian(const double A, const double mu, const double sigma, const double alpha);\n+\n+  Array<double> eval(Array<double> const &t);\n+  static AsymGaussian fit(Array<double> const &t, Array<double> const &y, Array<double> const &p);\n+  double getA() const;\n+  double getMu() const;\n+  double getSigma() const;\n+  double getAlpha() const;\n+  double getMode() const;\n+  double getMean() const;\n+\n+  double hasA() const;\n+  double hasMu() const;\n+  double hasSigma() const;\n+  double hasAlpha() const;\n+\n+  bool isValid() const;\n+  \n+private:\n+  double m_A;\n+  double m_mu;\n+  double m_sigma;\n+  double m_alpha;\n+\n+  static Array<double> _core_compute(double const *t, size_t n, double const *params);\n+  static Array<double> _core_fit(const double *t, const double *y, const size_t n, const double *p);\n+  static int _AsymGaussian_f(const gsl_vector *param, void *data, gsl_vector *f);\n+\n+};\n+\n+#endif\n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_Utilities/SIR_Utilities/Histogram.h": [
                        [
                            "@@ -108,8 +108,10 @@ public:\n   Array<double> getValues() const;\n \n   double getMode() const;\n+  double fitMode() const;\n \n   double getSum() const;\n+  double getSigma() const;\n \n   bool isEmpty() const;\n \n@@ -124,6 +126,7 @@ public:\n    */\n   size_t find(double const x) const;\n \n+  Array<double> getBinsRange() const;\n \n private:\n   std::shared_ptr<gsl_histogram> m_hdata;\n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_Utilities/SIR_Utilities/SIR_Utilities.i": [
                        [
                            "@@ -18,6 +18,7 @@\n #include \"SIR_Utilities/SIRPoly1D.h\"\n #include \"SIR_Utilities/SIRPoly2D.h\"\n #include \"SIR_Utilities/SIR_Mask.h\"\n+#include \"SIR_Utilities/AsymGaussian.h\"\n %}\n \n \n@@ -35,6 +36,7 @@\n \n %include \"SIR_Utilities/Histogram.h\"\n %include \"SIR_Utilities/SIR_Mask.h\"\n+%include \"SIR_Utilities/AsymGaussian.h\"\n \n namespace boost {namespace accumulators{}}\n \n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_Utilities/src/lib/AsymGaussian.cpp": [
                        [
                            "@@ -0,0 +1,246 @@\n+/*\n+ * Copyright (C) 2015-2020 Euclid Science Ground Segment\n+ *\n+ * This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General\n+ * Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option)\n+ * any later version.\n+ *\n+ * This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied\n+ * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n+ * details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to\n+ * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+/**\n+ * @file AsymGaussian.cpp\n+ *\n+ * Created on: Jul 11, 2023\n+ *\n+ * @author Marco Fumana\n+ */\n+\n+#include \"ElementsKernel/Logging.h\"\n+#include \"SIR_Utilities/AsymGaussian.h\"\n+#include <math.h>     \n+\n+using namespace Euclid::EigenView;\n+\n+static Elements::Logging logger = Elements::Logging::getLogger(\"AsymGaussian\");\n+\n+/* Data structure required by GSL */\n+struct data {\n+  const size_t n;\n+  const double *t;\n+  const double *y;\n+};\n+\n+int _getSign(const double value){\n+  if (signbit(value) == true){\n+    return -1;\n+  }\n+  return 1;\n+}\n+\n+\n+AsymGaussian::AsymGaussian():\n+  m_A(NAN),\n+  m_mu(NAN),\n+  m_sigma(NAN),\n+  m_alpha(NAN){}\n+\n+AsymGaussian::AsymGaussian(const double A, const double mu, const double sigma, const double alpha):\n+  m_A(A),\n+  m_mu(mu),\n+  m_sigma(sigma),\n+  m_alpha(alpha){}\n+\n+\n+double AsymGaussian::hasA() const{\n+  return std::isfinite(m_A);\n+}\n+\n+double AsymGaussian::hasMu() const{\n+  return std::isfinite(m_mu);\n+}\n+\n+double AsymGaussian::hasSigma() const{\n+  return std::isfinite(m_sigma);\n+}\n+\n+double AsymGaussian::hasAlpha() const{\n+  return std::isfinite(m_alpha);\n+}\n+\n+\n+double AsymGaussian::getA() const{\n+  if (hasA() == false){\n+    throw std::runtime_error(\"Invalid Amplitude\");\n+  }\n+  return m_A;\n+}\n+\n+double AsymGaussian::getMu() const{\n+  if (hasMu() == false){\n+    throw std::runtime_error(\"Invalid mu\");\n+  }\n+  return m_mu;\n+}\n+\n+double AsymGaussian::getSigma() const{\n+  if (hasSigma() == false){\n+    throw std::runtime_error(\"Invalid sigma\");\n+  }\n+  return m_sigma;\n+}\n+\n+double AsymGaussian::getAlpha() const{\n+  if (hasAlpha() == false){\n+    throw std::runtime_error(\"Invalid alpha skewness\");\n+  }\n+  return m_alpha;\n+}\n+\n+bool AsymGaussian::isValid() const{\n+  return hasA() && hasMu() && hasSigma() && hasAlpha();\n+}\n+\n+double AsymGaussian::getMode() const{\n+  const double d = m_alpha/sqrt(1.+m_alpha*m_alpha);\n+\n+  const double mu_z = sqrt(2./M_PI)*d;\n+  const double sigma_z = sqrt(1-mu_z*mu_z);\n+\n+  const double gamma1 = (4.-M_PI)*pow(d*sqrt(2./M_PI), 3)/(2.*pow(1.-2.*d*d/M_PI, 1.5));\n+  const double m0 = mu_z-gamma1*sigma_z/2.-0.5*_getSign(m_alpha)*exp(-2.*M_PI/abs(m_alpha));\n+  return m_mu+m_sigma*m0;\n+}\n+\n+double AsymGaussian::getMean() const{\n+  const double d = m_alpha/sqrt(1.+m_alpha*m_alpha);\n+  return m_mu+m_sigma*d*sqrt(2/M_PI);\n+}\n+\n+\n+/* Functions to use via Python */\n+Array<double> AsymGaussian::eval(Array<double> const &t) {\n+  const double *tp = t.data();\n+  const size_t n = (size_t) t.size();\n+  const double params[4] = {m_A, m_mu, m_sigma, m_alpha};\n+  return  _core_compute(tp, n, params);\n+}\n+\n+AsymGaussian AsymGaussian::fit(Array<double> const &t, Array<double> const &y, Array<double> const &p) {\n+\n+  const double *tp = t.data();\n+  const double *yp = y.data();\n+  const size_t n = (size_t) t.size();\n+\n+  Array<double> params;\n+  switch(p.size()){\n+    case 0:\n+      params = AsymGaussian::_core_fit(tp, yp, n, nullptr);\n+      break;\n+    case 4:{\n+      const double *pp = p.data();\n+      params = AsymGaussian::_core_fit(tp, yp, n, pp);\n+      break;\n+    }\n+    default:\n+      throw std::runtime_error(\"Invalid FG parameters size\");\n+  }\n+  \n+  if (params.size() == 0){\n+    return AsymGaussian();\n+  }\n+  return AsymGaussian(params(0), params(1), params(2), params(3));\n+}\n+\n+\n+Array<double> AsymGaussian::_core_compute(double const *t, size_t n, double const *params){\n+  Array<double> results = Array<double>::Zero(1, n);\n+\n+  double A = params[0];\n+  double mu = params[1];\n+  double sigma = params[2];\n+  double alpha  = params[3];\n+\n+  const double spread_den = 1./(2*sigma*sigma);\n+  const double skew_den = 1./(sigma*sqrt(2));\n+\n+  for(size_t i=0; i<n; ++i){\n+    double _x= t[i]-mu;\n+    results(i) = A*exp(-(_x*_x)*spread_den)*(1.+erf(alpha*_x*skew_den));\n+  }\n+  return results;\n+}\n+\n+\n+int AsymGaussian::_AsymGaussian_f(const gsl_vector *param, void *data, gsl_vector * f){\n+  size_t n = ((struct data *)data)->n;\n+  const double *t = ((struct data *)data)->t;\n+  const double *y = ((struct data *)data)->y;\n+\n+  const Array<double> &results = _core_compute(t, n, param->data);\n+  const double *resultsp = results.data();\n+\n+  for (size_t i = 0; i < n; ++i) {\n+    gsl_vector_set (f, i, resultsp[i] - y[i]);\n+  }\n+\n+  return GSL_SUCCESS;\n+}\n+\n+\n+Array<double> AsymGaussian::_core_fit(const double *t, const double *y, const size_t n, const double *x){\n+\n+  const gsl_multifit_nlinear_type *T = gsl_multifit_nlinear_trust;\n+  gsl_multifit_nlinear_workspace *work = nullptr;\n+  gsl_multifit_nlinear_fdf fdf;\n+  gsl_multifit_nlinear_parameters fdf_params = gsl_multifit_nlinear_default_parameters();\n+  const size_t p = 4;\n+  \n+  gsl_vector *xinit = gsl_vector_calloc(p);\n+  if (x != nullptr){\n+    for (size_t i = 0; i < p; ++i) {\n+      gsl_vector_set(xinit, i, x[i]);\n+    }\n+  }\n+\n+  /* define the function to be minimized */\n+  struct data params = { n, t, y };\n+  fdf.f = AsymGaussian::_AsymGaussian_f;\n+  fdf.df = nullptr;   /* set to NULL for finite-difference Jacobian */\n+  fdf.fvv = nullptr;     /* not using geodesic acceleration */\n+  fdf.n = n;\n+  fdf.p = p;\n+  fdf.params = &params;\n+\n+  work = gsl_multifit_nlinear_alloc (T, &fdf_params, n, p);\n+  gsl_multifit_nlinear_init(xinit, &fdf, work);\n+\n+  /* solve the system with a maximum of 100 iterations */\n+  int status, info;\n+  const double xtol = 1e-8;\n+  const double gtol = 1e-8;\n+  const double ftol = 0.0;\n+  status = gsl_multifit_nlinear_driver(100, xtol, gtol, ftol,\n+                                       nullptr, nullptr, &info, work);\n+\n+  gsl_vector_free (xinit);\n+  \n+  if (status){\n+    logger.warn(\"Invalid AsymGaussian fit: status=%d\", status);\n+    gsl_multifit_nlinear_free (work);\n+    return Array<double>(0);\n+  }\n+\n+  Array<double> results = Array<double>::Zero(1, p);\n+  for (size_t i = 0; i < p; ++i) {\n+    results(i) = gsl_vector_get(work->x, i);\n+  }\n+  \n+  gsl_multifit_nlinear_free (work);\n+  return results;\n+}\n\\ No newline at end of file\n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_Utilities/src/lib/Histogram.cpp": [
                        [
                            "@@ -25,6 +25,7 @@\n \n #include \"ElementsKernel/Logging.h\"\n #include \"SIR_Utilities/Histogram.h\"\n+#include \"SIR_Utilities/AsymGaussian.h\"\n \n #include <gsl/gsl_statistics.h>\n #include <cmath>\n@@ -152,6 +153,11 @@ double Histogram::getSum() const{\n   return gsl_histogram_sum(m_hdata.get());\n }\n \n+double Histogram::getSigma() const{\n+  return gsl_histogram_sigma(m_hdata.get());\n+}\n+\n+\n \n void Histogram::reset() {\n   gsl_histogram_reset(m_hdata.get());\n@@ -232,3 +238,42 @@ size_t Histogram::find(double const x) const {\n \n   return index;\n }\n+\n+\n+double Histogram::fitMode() const{\n+  if (isEmpty()){\n+    throw std::runtime_error(\"Histogram empty\");\n+  }\n+\n+  const Array<double> t = getBinsRange();\n+  const Array<double> y = getValues();\n+\n+  /* First guesses */\n+  Array<double> p(4);\n+  size_t index = gsl_histogram_max_bin(m_hdata.get());\n+  p(0) = y(index); //Amplitude\n+  p(1) = t(index); //mu\n+  p(2) = getSigma(); //sigma\n+  p(3) = 1.0; //Alpha\n+  \n+  AsymGaussian asym = AsymGaussian::fit(t, y, p);\n+  if (asym.isValid()){\n+    return asym.getMode();\n+  }\n+  logger.warn(\"Error fitting histogram mode\");\n+  return NAN;\n+\n+}\n+\n+\n+Array<double> Histogram::getBinsRange() const{\n+  int n = getBins();\n+\n+  Array<double> values(1, n);\n+  const double step = (getXMax() - getXMin())/getBins();\n+  values(0) = getXMin() + 0.5*step;\n+  for (int i=1; i< n; ++i){\n+    values(i) = values(i-1) + step;\n+  }\n+  return values;\n+}\n\\ No newline at end of file\n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_Utilities/tests/python/AsymGaussian_test.py": [
                        [
                            "@@ -0,0 +1,107 @@\n+#\n+# Copyright (C) 2015-2020 Euclid Science Ground Segment\n+#\n+# This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General\n+# Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option)\n+# any later version.\n+#\n+# This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied\n+# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n+# details.\n+#\n+# You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to\n+# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+#\n+\n+#\n+# File AsymGaussian_test.py\n+#\n+# Created on: Jul 12, 2023\n+#\n+# Author: Marco Fumana\n+#\n+\n+import numpy as np\n+from scipy.special import erf\n+from scipy.optimize import curve_fit\n+\n+import pytest\n+\n+from SIR_UtilitiesBinding import AsymGaussian\n+\n+\n+class TestAsymGaussian:\n+\n+    @staticmethod\n+    def pyAsymGaussian(x, A, mu, sigma, alpha):\n+        \"\"\"Defines an asymetric Gaussian https://en.wikipedia.org/wiki/Skew_normal_distribution\n+        \"\"\"\n+        spread = np.exp((-(x - mu) ** 2.0) / (2 * sigma ** 2.0))\n+        skew = 1 + erf((alpha * (x - mu)) / (sigma * np.sqrt(2)))\n+        return A * spread * skew\n+    \n+    @staticmethod\n+    def pyAsymGaussian_mode(mu, sigma, alpha):\n+        d = alpha/np.sqrt(1.+alpha**2)\n+        print(\"d\", d)\n+    \n+        mu_z = np.sqrt(2./np.pi)*d\n+        print(\"mu_z\", mu_z)\n+        sigma_z=np.sqrt(1-mu_z**2)\n+        print(\"sigma_z\", sigma_z)\n+    \n+        gamma1 = (4-np.pi)*(d*np.sqrt(2/np.pi))**3/(2.*(1-2*d**2/np.pi)**(3/2))\n+        print(\"gamma1\", gamma1)\n+        m0 = mu_z-gamma1*sigma_z/2.-0.5*np.sign(alpha)*np.exp(-2*np.pi/abs(alpha))\n+        print(\"m0\", m0)\n+        return mu+sigma*m0    \n+    \n+    \n+    @staticmethod    \n+    def pyAsymGaussian_mean(mu, sigma, alpha):\n+        d = alpha/np.sqrt(1.+alpha**2)\n+        return mu+sigma*d*np.sqrt(2/np.pi)    \n+    \n+    \n+    def test_eval(self):\n+        x=np.linspace(-2, 10, 1000, dtype=np.float64)\n+        p=[5, 1.2, 2., 10]\n+        asym = AsymGaussian(*p)\n+        y_cpp = asym.eval(x)\n+        y_py = TestAsymGaussian.pyAsymGaussian(x, *p)    \n+        \n+        assert np.allclose(y_cpp, y_py)\n+        \n+        \n+    def test_fit(self):\n+        x=np.linspace(-2, 10, 1000, dtype=np.float64)\n+        p=[5, 1.2, 2., 10]\n+        \n+        asym1 = AsymGaussian(*p)\n+        y = asym1.eval(x)\n+        y+=np.random.normal(np.sqrt(y))/10\n+\n+        p0=np.array([4, 1, 1.7, 8], dtype=np.float64)\n+        \n+        asym2 = AsymGaussian.fit(x, y, p0)\n+        p_cpp = np.array([asym2.getA(), asym2.getMu(), asym2.getSigma(), asym2.getAlpha()])\n+        p_py, _ = curve_fit(TestAsymGaussian.pyAsymGaussian, x, y, p0=p0)        \n+        \n+        assert np.allclose(p_cpp, p_py)\n+\n+\n+    def test_mode(self):\n+        p=[7, 1.2, 2., 11.2]\n+        \n+        asym = AsymGaussian(*p)\n+        \n+        assert np.allclose(TestAsymGaussian.pyAsymGaussian_mode(*p[1:]),\n+                           asym.getMode())\n+        \n+    def test_mean(self):\n+        p=[7, 1.2, 2., 11.2]\n+        \n+        asym = AsymGaussian(*p)\n+        \n+        assert np.allclose(TestAsymGaussian.pyAsymGaussian_mean(*p[1:]),\n+                           asym.getMean())    \n\\ No newline at end of file\n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_Utilities/tests/src/AsymGaussian_test.cpp": [
                        [
                            "@@ -0,0 +1,231 @@\n+/*\n+ * Copyright (C) 2015-2020 Euclid Science Ground Segment\n+ *\n+ * This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General\n+ * Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option)\n+ * any later version.\n+ *\n+ * This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied\n+ * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n+ * details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to\n+ * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+/**\n+ * @file AsymGaussian_test.cpp\n+ *\n+ * Created on: Jul 13, 2023\n+ *\n+ * @author Marco Fumana\n+ */\n+\n+\n+#define BOOST_TEST_MODULE AsymGaussian_test\n+#define ASYMGAUSS_TOL 1E-6\n+\n+#include \"SIR_Utilities/TestUtils.h\"\n+#include \"SIR_Utilities/AsymGaussian.h\"\n+\n+\n+using namespace Euclid::EigenView;\n+\n+BOOST_AUTO_TEST_SUITE (AsymGaussian_test)\n+\n+/**\n+ * @brief Test: AsymGaussian\n+ */\n+BOOST_AUTO_TEST_CASE(defaultConstructor_test1){\n+  AsymGaussian asym;\n+\n+  BOOST_CHECK(asym.hasA() == false);\n+  BOOST_CHECK(asym.hasMu() == false);\n+  BOOST_CHECK(asym.hasSigma() == false);\n+  BOOST_CHECK(asym.hasAlpha() == false);\n+  BOOST_CHECK(asym.isValid() == false);\n+}\n+\n+\n+/**\n+ * @brief Test: AsymGaussian(...)\n+ */\n+BOOST_AUTO_TEST_CASE(Constructor_test1){\n+  AsymGaussian asym(NAN, 1.0, -1.0, 0.0);\n+\n+  BOOST_CHECK(asym.hasA() == false);\n+  BOOST_CHECK(asym.hasMu() == true);\n+  BOOST_CHECK(asym.hasSigma() == true);\n+  BOOST_CHECK(asym.hasAlpha() == true);\n+  BOOST_CHECK(asym.isValid() == false);\n+}\n+\n+/**\n+ * @brief Test: AsymGaussian(...)\n+ */\n+BOOST_AUTO_TEST_CASE(Constructor_test2){\n+  AsymGaussian asym(1.0, NAN, -1.0, 0.0);\n+\n+  BOOST_CHECK(asym.hasA() == true);\n+  BOOST_CHECK(asym.hasMu() == false);\n+  BOOST_CHECK(asym.hasSigma() == true);\n+  BOOST_CHECK(asym.hasAlpha() == true);\n+  BOOST_CHECK(asym.isValid() == false);\n+}\n+\n+\n+/**\n+ * @brief Test: AsymGaussian(...)\n+ */\n+BOOST_AUTO_TEST_CASE(Constructor_test3){\n+  AsymGaussian asym(1.0, -1.0, NAN, 0.0);\n+\n+  BOOST_CHECK(asym.hasA() == true);\n+  BOOST_CHECK(asym.hasMu() == true);\n+  BOOST_CHECK(asym.hasSigma() == false);\n+  BOOST_CHECK(asym.hasAlpha() == true);\n+  BOOST_CHECK(asym.isValid() == false);\n+}\n+\n+\n+/**\n+ * @brief Test: AsymGaussian(...)\n+ */\n+BOOST_AUTO_TEST_CASE(Constructor_test4){\n+  AsymGaussian asym(1.0, -1.0, 0.0, NAN);\n+\n+  BOOST_CHECK(asym.hasA() == true);\n+  BOOST_CHECK(asym.hasMu() == true);\n+  BOOST_CHECK(asym.hasSigma() == true);\n+  BOOST_CHECK(asym.hasAlpha() == false);\n+  BOOST_CHECK(asym.isValid() == false);\n+}\n+\n+\n+/**\n+ * @brief Test: AsymGaussian(...)\n+ */\n+BOOST_AUTO_TEST_CASE(Constructor_test5){\n+  AsymGaussian asym(1.0, -1.0, 0.0, 2.0);\n+\n+  BOOST_CHECK(asym.hasA() == true);\n+  BOOST_CHECK(asym.hasMu() == true);\n+  BOOST_CHECK(asym.hasSigma() == true);\n+  BOOST_CHECK(asym.hasAlpha() == true);\n+  BOOST_CHECK(asym.isValid() == true);\n+}\n+\n+\n+/**\n+ * @brief Test: AsymGaussian(...)\n+ */\n+BOOST_AUTO_TEST_CASE(Constructor_test6){\n+  AsymGaussian asym(1.0, 2.0, 3.0, 4.0);\n+\n+  BOOST_CHECK_CLOSE(1.0, asym.getA(), ASYMGAUSS_TOL);\n+  BOOST_CHECK_CLOSE(2.0, asym.getMu(), ASYMGAUSS_TOL);\n+  BOOST_CHECK_CLOSE(3.0, asym.getSigma(), ASYMGAUSS_TOL);\n+  BOOST_CHECK_CLOSE(4.0, asym.getAlpha(), ASYMGAUSS_TOL);\n+\n+  BOOST_CHECK(asym.isValid() == true);\n+}\n+\n+\n+/**\n+ * @brief Test: operator=(...)\n+ */\n+BOOST_AUTO_TEST_CASE(Assignment_test6){\n+  AsymGaussian asym1(1.0, 2.0, 3.0, 4.0);\n+  \n+  AsymGaussian asym2 = asym1;\n+\n+  BOOST_CHECK_CLOSE(1.0, asym2.getA(), ASYMGAUSS_TOL);\n+  BOOST_CHECK_CLOSE(2.0, asym2.getMu(), ASYMGAUSS_TOL);\n+  BOOST_CHECK_CLOSE(3.0, asym2.getSigma(), ASYMGAUSS_TOL);\n+  BOOST_CHECK_CLOSE(4.0, asym2.getAlpha(), ASYMGAUSS_TOL);\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(fit_test1){\n+  \n+  /* check failure*/\n+  Array<double> t(11);\n+  t <<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10;\n+\n+  Array<double> y(11);\n+  y << -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1;\n+  \n+  Array<double> p(0);\n+  \n+  AsymGaussian asym = AsymGaussian::fit(t, y, p);\n+  BOOST_CHECK(asym.isValid() == false);\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(fit_test2){\n+  \n+  /* check failure with init */\n+  Array<double> t(11);\n+  t <<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10;\n+\n+  Array<double> y(11);\n+  y << -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1;\n+  \n+  Array<double> p(4);\n+  p << 0, 0, 0, 0;\n+\n+  AsymGaussian asym = AsymGaussian::fit(t, y, p);\n+  BOOST_CHECK(asym.isValid() == false);\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(fit_test3){\n+  \n+  /* check failure with init */\n+  Array<double> t(11);\n+  t <<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10;\n+\n+  Array<double> y(11);\n+  y << -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1;\n+  \n+  /* Check parameters sizes*/\n+  Array<double> p1(1);\n+  BOOST_CHECK_THROW(AsymGaussian::fit(t, y, p1), std::runtime_error);\n+  Array<double> p2(2);\n+  BOOST_CHECK_THROW(AsymGaussian::fit(t, y, p2), std::runtime_error);\n+  Array<double> p3(3);\n+  BOOST_CHECK_THROW(AsymGaussian::fit(t, y, p3), std::runtime_error);\n+  Array<double> p5(5);\n+  BOOST_CHECK_THROW(AsymGaussian::fit(t, y, p5), std::runtime_error);\n+  \n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(fit_test4){\n+  \n+  /* check failure with init */\n+  Array<double> t(1000);\n+  double step = 12/999.;\n+  t(0)=-2;\n+  for(int i=0;i<999;++i){\n+    t(i+1) = t(i)+step;\n+  }\n+  \n+  AsymGaussian asym = AsymGaussian(5, 1.2, 2., 10);\n+  Array<double> y = asym.eval(t);\n+  Array<double> p0(4);\n+  p0 << 4, 1, 1.7, 8;\n+  AsymGaussian asym2 = AsymGaussian::fit(t, y, p0);\n+  \n+  BOOST_CHECK_CLOSE(asym.getA(), asym2.getA(), ASYMGAUSS_TOL);\n+  BOOST_CHECK_CLOSE(asym.getMu(), asym2.getMu(), ASYMGAUSS_TOL);\n+  BOOST_CHECK_CLOSE(asym.getSigma(), asym2.getSigma(), ASYMGAUSS_TOL);\n+  BOOST_CHECK_CLOSE(asym.getAlpha(), asym2.getAlpha(), ASYMGAUSS_TOL);\n+  \n+}\n+\n+\n+BOOST_AUTO_TEST_SUITE_END ()\n+\n+#undef ASYMGAUSS_TOL\n+#undef BOOST_TEST_MODULE\n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_Utilities/tests/src/Histogram_test.cpp": [
                        [
                            "@@ -28,6 +28,7 @@\n \n #include \"SIR_Utilities/TestUtils.h\"\n #include \"SIR_Utilities/Histogram.h\"\n+#include <random>\n \n #define HISTOGRAM_TOL 1E-4\n \n@@ -485,8 +486,51 @@ BOOST_AUTO_TEST_CASE(isEmpty_test5){\n   BOOST_CHECK(h.isEmpty() == false);  \n }\n \n+BOOST_AUTO_TEST_CASE(getBinsRange_test1){\n+  Histogram h; \n+  h.setParameters(10, 0., 20.);\n \n+  const auto &values = h.getBinsRange();\n+  BOOST_CHECK(values.size() == 10);\n+  Array<double> expected(1, 10);\n+  expected << 1, 3, 5, 7, 9, 11, 13, 15, 17, 19;\n+  checkCTEigenClose(expected, values, HISTOGRAM_TOL);\n+\n+\n+}\n+\n+BOOST_AUTO_TEST_CASE(fitModel_test1){\n+  Histogram h; \n+  h.setParameters(10, 0., 20.);\n+  /* Check failure*/\n+  BOOST_CHECK_THROW(h.fitMode(), std::runtime_error);\n+}\n \n+BOOST_AUTO_TEST_CASE(fitModel_test2){\n+  /* Check mode is within statistic error */\n+  Histogram h; \n+  h.setParameters(100, 0., 20.);\n+\n+  const int nrolls=10000;\n+\n+  std::default_random_engine generator;\n+  generator.seed(14077789);\n+  double mean = 7.0;\n+  double std = 2.0;\n+  std::normal_distribution<double> distribution(mean, std);\n+\n+  for (int i=0; i<nrolls; ++i) {\n+    double number = distribution(generator);\n+    if ((number>=0.0)&&(number<20.0)){\n+      h.increment(number);\n+    }\n+  }\n+\n+  const double mode = h.fitMode();\n+  /* Check mode is within stats error */\n+  BOOST_CHECK(abs(mode -mean) <=2*std/sqrt(nrolls));\n+\n+}\n \n BOOST_AUTO_TEST_SUITE_END ()\n \n",
                            "Merge branch 'fit_mode_bkg' into 'develop'",
                            "Marco Fumana",
                            "2023-07-14T09:34:38.000+00:00",
                            "cc60ae66f580c6b4c3cd482e7e6720944903374d"
                        ]
                    ],
                    "SIR_CreateCuts/python/SIR_CreateCuts/CutoutCollection.py": [
                        [
                            "@@ -92,7 +92,7 @@ class Cutout:\n     \"\"\"\n     Represents a single cutout image.\n     \"\"\"\n-    __slots__ = ['_id', '_group', '_flux', '_wcs', '_pixels']\n+    __slots__ = ['_id', '_group', '_flux', '_wcs', '_pixels', '_use_gaussian_fit']\n \n     def __init__(self, object_id: int, cutout_group: h5py.Group):\n         \"\"\"\n@@ -117,6 +117,8 @@ class Cutout:\n \n         self._pixels = None\n \n+        self._use_gaussian_fit = False\n+\n     def _delayed_init(self):\n         \"\"\"\n         Performs delayed initialization\n@@ -149,11 +151,22 @@ class Cutout:\n         return self._wcs\n \n     @property\n-    def pixels(self):\n+    def pixels(self) -> 'numpy.ndarray':\n         \"\"\"The actual contents of the pixel array, as a NumPy ndarray.\"\"\"\n         self._delayed_init()\n         return self._pixels.array\n \n+    @property\n+    def use_gaussian_fit(self) -> bool:\n+        return self._use_gaussian_fit\n+\n+    @use_gaussian_fit.setter\n+    def use_gaussian_fit(self, use_gaussian: bool):\n+        if isinstance(use_gaussian, bool):\n+            self._use_gaussian_fit = use_gaussian\n+        else:\n+            raise ValueError('Expected a bool')\n+\n \n class CutoutCollection:\n     \"\"\"\n@@ -192,6 +205,8 @@ class CutoutCollection:\n \n         self._load_json(filename)\n \n+        self._use_gaussian_fit = False\n+\n     def __getitem__(self, object_id: int):\n         \"\"\"\n \n@@ -237,6 +252,19 @@ class CutoutCollection:\n     def free_memory(self):\n         self._reset()\n \n+    @property\n+    def use_gaussian_fit(self) -> bool:\n+        return self._use_gaussian_fit\n+\n+    @use_gaussian_fit.setter\n+    def use_gaussian_fit(self, use_gaussian: bool):\n+        if isinstance(use_gaussian, bool):\n+            self._use_gaussian_fit = use_gaussian\n+            self._cutout_index = None\n+            self._make_index_if_necessary()\n+        else:\n+            raise ValueError('Expected a bool')\n+\n     def _make_index_if_necessary(self):\n         \"\"\"\n         Indexes the cutouts by integer ID if the index has not already been created.\n@@ -254,7 +282,10 @@ class CutoutCollection:\n         for hdf5_file in self._hdf5_files:\n             for object_id, group in hdf5_file.items():\n                 oid = int(object_id)\n-                self._cutout_index[oid] = Cutout(oid, group)\n+                cutout = Cutout(oid, group)\n+                cutout.use_gaussian_fit = self._use_gaussian_fit\n+                self._cutout_index[oid] = cutout\n+\n \n     def _load_json(self, filename: str):\n         \"\"\"\n",
                            "Merge branch 'decontamination-with-new-tables' into 'develop'",
                            "Marco Fumana",
                            "2023-07-12T15:52:55.000+00:00",
                            "6ac38f0c2d5531e352ba378b25b5531fac1193dc"
                        ]
                    ],
                    "SIR_SpectraDecontamination/python/SIR_SpectraDecontamination/AstroObjectInfo.py": [
                        [
                            "@@ -48,13 +48,17 @@ class AstroObjectInfo(object):\n     STAR = 0\n     GALAXY = 1\n \n-    \"\"\"Zeroth orders fainter than this threshold, in both the J and H bands, will be ignored.\"\"\"\n+    \"\"\"Zeroth orders fainter than this threshold, in all bands, will be ignored.\"\"\"\n     ZEROTH_ORDER_THRESHOLD = 20\n \n+    \"\"\"Second orders fainter than this threshold, in all bands, will be ignored.\"\"\"\n+    SECOND_ORDER_THRESHOLD = 16\n+\n     \"\"\"The wavelengths used by all 1D model spectra\"\"\"\n     WAVELENGTHS = None\n \n-    __slots__ = ['_usable',\n+    __slots__ = ['_invalid_mag',\n+                 '_usable',\n                  '_id',\n                  '_mag',\n                  '_flux',\n@@ -94,6 +98,7 @@ class AstroObjectInfo(object):\n \n         metadata = location.getAstronomicalObject()\n \n+        self._invalid_mag = False\n         self._usable = False\n         self._id = None\n         self._mag = {'Y': None, 'J': None, 'H': None}\n@@ -113,7 +118,10 @@ class AstroObjectInfo(object):\n         has_magnitudes = metadata.hasMagnitude('Y') and metadata.hasMagnitude('H') and metadata.hasMagnitude('J')\n \n         if not has_magnitudes:\n-            # the object is not usable: we need to know the Y, J, and H magnitudes\n+            # the magnitude data is unavailable or incomplete: we need to know the Y, J, and H magnitudes\n+            self._invalid_mag = True\n+            # it is usable in the sense that its location will be masked out.\n+            self._usable = True\n             return\n         else:\n             mag_in_limit_band = metadata.getMagnitude(limit_band).getValue()\n@@ -121,19 +129,18 @@ class AstroObjectInfo(object):\n             bright_enough = mag_in_limit_band < limit_mag\n \n             if not bright_enough:\n-                # the object is not usable because it is too faint.\n+                # the object is not usable because it is too faint...or the magnitude is NaN.\n+                if mag_in_limit_band is None or np.isnan(mag_in_limit_band):\n+                    self._invalid_mag = True\n                 return\n             else:\n                 # Add metadata specific to the astronomical object:\n-\n                 self._load_metadata(metadata, phot_info)\n \n                 # the object is usable.\n-\n                 self._usable = True\n \n                 # fetch the specific cutout for this object, if it exists in the list of cutouts\n-\n                 if self._cutout is None and cutouts is not None:\n                     self._cutout = cutouts[self._id] if self._id in cutouts else None\n \n@@ -296,6 +303,19 @@ class AstroObjectInfo(object):\n         \"\"\"\n         return self._usable\n \n+    @property\n+    def invalid_mag(self) -> bool:\n+        \"\"\"\n+        Specifies whether or not all three broadband magnitudes are valid.\n+\n+        Returns\n+        -------\n+\n+        invalid: bool\n+            False if Y, J and H magnitudes are finite floating point values. True otherwise.\n+        \"\"\"\n+        return self._invalid_mag\n+\n     @property\n     def spectra(self) -> 'NestedDict':\n         return self._spectra_info\n@@ -407,9 +427,15 @@ class AstroObjectInfo(object):\n         order = spectrum_location.getOrder()\n         detector = spectrum_location.getDetectorNumber()\n \n-        if order == 0 and min(self.mag('H'), self.mag('J')) > self.__class__.ZEROTH_ORDER_THRESHOLD:\n-            # This zeroth order is too faint to be included\n-            return\n+        if not self._invalid_mag:\n+            min_mag = min(self.mag('H'), self.mag('J'), self.mag('Y'))\n+            if order == 0 and min_mag > self.__class__.ZEROTH_ORDER_THRESHOLD:\n+                # This zeroth order is too faint to be included\n+                return\n+\n+            if order == 2 and min_mag > self.__class__.SECOND_ORDER_THRESHOLD:\n+                # This second order is too faint to be included\n+                return\n \n         spec_info = SpectrumInfo(self, spectrum_location, grism_model, padding)\n \n@@ -430,6 +456,10 @@ class AstroObjectInfo(object):\n         self._mag['J'] = jmag = metadata.getMagnitude('J').getValue()\n         self._mag['Y'] = ymag = metadata.getMagnitude('Y').getValue()\n \n+        if None in (hmag, jmag, ymag) or np.isnan(hmag) or np.isnan(jmag) or np.isnan(ymag):\n+            self._invalid_mag = True\n+            return\n+\n         hmag_error = metadata.getMagnitude('H').getError()\n         jmag_error = metadata.getMagnitude('J').getError()\n         ymag_error = metadata.getMagnitude('Y').getError()\n",
                            "Merge branch 'decontamination-with-new-tables' into 'develop'",
                            "Marco Fumana",
                            "2023-07-12T15:52:55.000+00:00",
                            "6ac38f0c2d5531e352ba378b25b5531fac1193dc"
                        ]
                    ],
                    "SIR_SpectraDecontamination/python/SIR_SpectraDecontamination/ConvolutionKernel.py": [
                        [
                            "@@ -22,9 +22,12 @@\n #\n from typing import Union, Tuple\n from copy import deepcopy\n+import warnings\n \n import numpy as np\n import scipy.ndimage.interpolation as image_manip\n+from astropy.modeling import models, fitting\n+from astropy.utils.exceptions import AstropyUserWarning\n \n import SIR_SpectraDecontamination.Utils as Utils\n \n@@ -33,13 +36,18 @@ class ConvolutionKernel:\n     \"\"\"Creates the 2-dimensional kernel patches which are used when creating a 2D spectrum\"\"\"\n \n     \"\"\"\n-    The object PSF size (sigma) in units of pixels. We use this hard-coded value to specify the size of the Gaussian\n-    kernel that will be used when no cutout image is available for the object.\n+    The number of cutout pixels per spectroscopic pixel: spectroscopic_pixel_scale / cutout_pixel_scale\n     \"\"\"\n-    OBJECT_SIGMA_IN_PIXELS = 0.494\n+    SCALE_RATIO = 3\n+\n+    \"\"\"\n+    The typical object PSF size (sigma) in units of cutout pixels. We use this hard-coded value to specify the \n+    approximate size of a Gaussian kernel PSF corresponding to a point-source.\n+    \"\"\"\n+    OBJECT_SIGMA_IN_PIXELS = 0.46\n \n     \"\"\"The maximum pixel value of a 2-D Gaussian kernel with sigma = OBJECT_SIGMA_IN_PIXELS\"\"\"\n-    MAX_PIXEL_VALUE = Utils.max_peak(OBJECT_SIGMA_IN_PIXELS)\n+    MAX_PIXEL_VALUE = Utils.max_peak(SCALE_RATIO * OBJECT_SIGMA_IN_PIXELS)\n \n     def __init__(self, spectrum_info, exposure_direction):\n         \"\"\"\n@@ -69,6 +77,13 @@ class ConvolutionKernel:\n         self._wavelength = (spectrum_info.grism_model.MIN_WAV_INNER + spectrum_info.grism_model.MAX_WAV_INNER) / 2\n         self._prev_wavelength = self._wavelength\n         self._psf_model = spectrum_info.grism_model.PSF_MODEL\n+        if self._spectrum_info.astro_object_info.stamp is not None:\n+            self._use_gaussian_fit = self._spectrum_info.astro_object_info.stamp.use_gaussian_fit\n+        else:\n+            self._use_gaussian_fit = False\n+        self._semimajor = None\n+        self._semiminor = None\n+        self._theta = None\n         self._normed_stamp = self._get_normalized_stamp(spectrum_info)\n         self._using_cutout = self._normed_stamp is not None\n         self._kernel_size = None\n@@ -99,16 +114,36 @@ class ConvolutionKernel:\n     @property\n     def kernel_size(self) -> int:\n         \"\"\"The length of each edge of the kernel, in units of pixels.\"\"\"\n+        return self._kernel_size // self.SCALE_RATIO\n+\n+    @property\n+    def kernel_size_internal(self):\n+        \"\"\"The size of the internally-stored kernel; this can be >= kernel size in NISP-S pixel units.\"\"\"\n         return self._kernel_size\n \n     @property\n     def kernel(self):\n-        \"\"\"The kernel positioned at the current position.\"\"\"\n+        \"\"\"The kernel positioned at the current position; pixels are the same size as detector pixels.\"\"\"\n         if self._prev_position != self._position or self._kernel is None:\n             self._update_position()\n \n         return np.copy(self._kernel)\n \n+    @property\n+    def semimajor(self) -> float:\n+        \"\"\"The semi-major axis of the best-fitting 2D Gaussian.\"\"\"\n+        return self._semimajor\n+\n+    @property\n+    def semiminor(self) -> float:\n+        \"\"\"The semi-minor axis of the best-fitting 2D Gaussian.\"\"\"\n+        return self._semiminor\n+\n+    @property\n+    def theta(self) -> float:\n+        \"\"\"The angle between the semimajor axis and the +x axis, measured counterclockwise, in units of degrees.\"\"\"\n+        return self._theta\n+\n     @property\n     def region(self):\n         \"\"\"The region, within the spectral cutout, covered by the kernel image at the current location.\"\"\"\n@@ -131,7 +166,7 @@ class ConvolutionKernel:\n \n     @property\n     def const_kernel(self):\n-        \"\"\"The fixed, immutable 2D kernel patch.\"\"\"\n+        \"\"\"The fixed, immutable 2D kernel patch; potentially has smaller pixels than the detector.\"\"\"\n         return np.copy(self._const_kernel)\n \n     @property\n@@ -191,7 +226,7 @@ class ConvolutionKernel:\n         if self._position is None:\n             raise UserWarning(\"Set the position before requesting a kernel or region.\")\n \n-        half_kernel_size = 0.5 * self._kernel_size\n+        half_kernel_size = 0.5 * self._kernel_size / self.SCALE_RATIO\n \n         x_offset, y_offset, width, height = self._spectrum_info.bbox\n \n@@ -209,30 +244,36 @@ class ConvolutionKernel:\n         x_0 = round(spectrum_x_lambda - half_kernel_size)\n         y_0 = round(spectrum_y_lambda - half_kernel_size)\n \n-        # the coordinates of the new centroid, in the coordinate system of the kernel:\n+        # the coordinates of the new centroid, in the coordinate system of the kernel (at detector scale):\n \n         kernel_x_lambda = spectrum_x_lambda - x_0\n         kernel_y_lambda = spectrum_y_lambda - y_0\n \n-        # the vector by which the kernel needs to be shifted in order to move the centroid to the specified position:\n+        # the vector by which the kernel needs to be shifted in order to move the centroid to the specified position.\n+        # This vector is in pixel units of the cutout\n \n-        shift_x = kernel_x_lambda - self._center[0]\n-        shift_y = kernel_y_lambda - self._center[1]\n+        shift_x = self.SCALE_RATIO * kernel_x_lambda - self._center[0]\n+        shift_y = self.SCALE_RATIO * kernel_y_lambda - self._center[1]\n \n         kernel = self._get_wavelength_dependent_kernel()\n \n-        shifted_kernel = Utils.normalize_image_fast(Utils.shift(kernel, (shift_y, shift_x)))\n+        shifted_kernel = Utils.shift(kernel, (shift_y, shift_x))\n+\n+        # re-scale the pixels of the shifted_kernel to be consistent with the pixels of the spectrum:\n+\n+        shifted_kernel = Utils.normalize_image_fast(Utils.rebin3(shifted_kernel))\n+\n+        # crop out the region of the cutout that falls within the spectral box\n \n         left_s = max(0, x_0)\n         bottom_s = max(0, y_0)\n-        right_s = min(width, x_0 + self._kernel_size)\n-        top_s = min(height, y_0 + self._kernel_size)\n+        right_s = min(width, x_0 + self.kernel_size)\n+        top_s = min(height, y_0 + self.kernel_size)\n \n         left_k = left_s - x_0\n         right_k = right_s - x_0\n         bottom_k = bottom_s - y_0\n         top_k = top_s - y_0\n-\n         new_kernel = np.copy(shifted_kernel[bottom_k:top_k, left_k:right_k])\n \n         if new_kernel.size != 0 and new_kernel.shape == (top_s - bottom_s, right_s - left_s):\n@@ -258,7 +299,7 @@ class ConvolutionKernel:\n \n     def _make_gaussian_kernel(self):\n         \"\"\"Make a Gaussian kernel in a square stamp.\"\"\"\n-        kernel_size = int(self._spectrum_info.location_spectrum.getApertureSize() + 2)\n+        kernel_size = self.SCALE_RATIO * int(self._spectrum_info.location_spectrum.getApertureSize() + 2)\n \n         self._kernel_size = kernel_size\n \n@@ -269,9 +310,11 @@ class ConvolutionKernel:\n         for amp, sigma in self._psf_params(self._wavelength):\n             tmp_kernel = np.zeros((kernel_size, kernel_size), dtype=np.float32)\n \n+            native_sigma = self.SCALE_RATIO * sigma\n+\n             tmp_kernel = Utils.gauss_kernel(tmp_kernel,\n                                             (center, center),\n-                                            (sigma, sigma))\n+                                            (native_sigma, native_sigma))\n \n             kernel += amp * tmp_kernel\n \n@@ -290,7 +333,7 @@ class ConvolutionKernel:\n         \"\"\"\n         cutout = self._spectrum_info.astro_object_info.stamp\n \n-        cutout_direction = Utils.atan(cutout.wcs.CD1_2, cutout.wcs.CD1_1)\n+        cutout_direction = Utils.atan(cutout.wcs.CD2_1, cutout.wcs.CD2_2)\n \n         rotation_angle = self._exposure_direction - cutout_direction\n \n@@ -298,7 +341,17 @@ class ConvolutionKernel:\n \n         self._kernel_size = max(rotated_kernel.shape)\n \n-        return self._shift_kernel_to_center(rotated_kernel)\n+        if self._use_gaussian_fit:\n+            smoothed_kernel = self._make_gaussian_from_image(rotated_kernel)\n+\n+            if smoothed_kernel is None:\n+                smoothed_kernel = self._make_gaussian_kernel()\n+\n+            output = self._shift_kernel_to_center(smoothed_kernel)\n+        else:\n+            output = self._shift_kernel_to_center(rotated_kernel)\n+\n+        return output\n \n     def _get_wavelength_dependent_kernel(self):\n         \"\"\"Returns the wavelength-dependent PSF-convolved kernel for the current wavelength.\"\"\"\n@@ -341,7 +394,7 @@ class ConvolutionKernel:\n         if height >= self._kernel_size and width >= self._kernel_size:\n             # shift to the lower-left corner of kernel_image and copy region into kernel\n             shifted_image = Utils.shift(kernel_image, shift)\n-            kernel[:, :] = shifted_image[:self._kernel_size, :self.kernel_size]\n+            kernel[:, :] = shifted_image[:self._kernel_size, :self._kernel_size]\n         else:\n             # At least one dimension of the kernel_image is smaller than the kernel.\n             # Copy the rotated image into kernel then shift\n@@ -392,13 +445,53 @@ class ConvolutionKernel:\n             The original image after being convolved with a correction Gaussian, which\n             brings the stamp into agreement with the PSF at the specified wavelength.\n         \"\"\"\n-        correction_sigma = float(self._spectrum_info.grism_model.psf_correction_size(wavelength))\n-\n-        canvas = np.zeros((5, 5), dtype=np.float32)\n-        psf_correction = Utils.gauss_kernel(canvas, (2, 2), (correction_sigma, correction_sigma))\n+        correction_sigma = self.SCALE_RATIO * float(self._spectrum_info.grism_model.psf_correction_size(wavelength))\n+        canvas_size = 5 * self.SCALE_RATIO\n+        center = canvas_size // 2\n+        canvas = np.zeros((canvas_size, canvas_size), dtype=np.float32)\n+        psf_correction = Utils.gauss_kernel(canvas, (center, center), (correction_sigma, correction_sigma))\n \n         return Utils.convolve2d(stamp, psf_correction)\n \n+    def _make_gaussian_from_image(self, image: np.ndarray) -> Union[np.ndarray, None]:\n+        \"\"\"\n+        Makes a 2D Gaussian kernel from an input image.\n+\n+        Parameters\n+        ----------\n+\n+        image: np.ndarray\n+            The 2D Gaussian approximation to the content of the center of the input image.\n+        \"\"\"\n+        height, width = image.shape\n+        left = width // 4\n+        right = left + width // 2\n+        bottom = height // 4\n+        top = bottom + height // 2\n+        center_region = image[bottom: top, left: right]\n+\n+        best_fit = self._fit_gaussian2d(center_region, 1, 1)\n+\n+        if best_fit is None:\n+            return None\n+\n+        amp = best_fit.amplitude.value\n+        x_mean = best_fit.x_mean.value + left\n+        y_mean = best_fit.y_mean.value + bottom\n+        x_std = best_fit.x_stddev.value\n+        y_std = best_fit.y_stddev.value\n+        theta = best_fit.theta.value\n+        y, x = np.mgrid[:height, :width]\n+        self._semimajor = max(x_std, y_std)\n+        self._semiminor = min(x_std, y_std)\n+        theta_deg = np.rad2deg(theta)\n+        if x_std > y_std:\n+            self._theta = theta_deg\n+        else:\n+            self._theta = 90 + theta_deg\n+\n+        return best_fit.evaluate(x, y, amp, x_mean, y_mean, x_std, y_std, theta)\n+\n     @classmethod\n     def _get_normalized_stamp(cls, spectrum_info: 'SpectrumInfo') -> Union[np.ndarray, None]:\n         \"\"\"\n@@ -421,8 +514,11 @@ class ConvolutionKernel:\n         distribution is more peaked than a point-source, something is wrong with the cutout image).\n         \"\"\"\n         stamp = spectrum_info.astro_object_info.stamp\n+        y_mag = spectrum_info.astro_object_info.mag('Y')\n+        j_mag = spectrum_info.astro_object_info.mag('J')\n+        h_mag = spectrum_info.astro_object_info.mag('H')\n \n-        if stamp is None:\n+        if stamp is None or min(y_mag, j_mag, h_mag) < 16.0:\n             return None\n \n         normed_stamp = Utils.normalize_image(stamp.pixels)\n@@ -449,14 +545,14 @@ class ConvolutionKernel:\n \n         angle: float\n \n-        The direction angle of the +RA axis, with respect to the +x axis of the image. The angle is always\n+        The direction angle of the +DEC axis with respect to the +y axis. The angle is always\n         positive.\n         \"\"\"\n         metadata = nisp_exposure.getDetector(1).getMetadata()\n \n-        dy = metadata.get('CD1_2')\n+        dy = metadata.get('CD2_1')\n \n-        dx = metadata.get('CD1_1')\n+        dx = metadata.get('CD2_2')\n \n         return Utils.atan(dy, dx)\n \n@@ -507,7 +603,7 @@ class ConvolutionKernel:\n         bottom_sum = normed_stamp[-1, 1:-1].sum()\n         edge_max = max(edge_max, normed_stamp[-1, 1:-1].max())\n \n-        edge_max_too_large = edge_max > 0.08 * normed_stamp.max()\n+        edge_max_too_large = edge_max > 0.25 * normed_stamp.max()\n \n         edge_sum = left_sum + right_sum + top_sum + bottom_sum\n \n@@ -537,3 +633,48 @@ class ConvolutionKernel:\n         noise_allowance = 1.05\n \n         return normed_stamp.max() > noise_allowance * cls.MAX_PIXEL_VALUE\n+\n+    @staticmethod\n+    def _fit_gaussian2d(image: np.ndarray, semimajor: float, semiminor: float) -> Union[models.Gaussian2D, None]:\n+        \"\"\"\n+        Fits a 2D Gaussian profile to the pixels in the center of the provided image\n+\n+        Parameters\n+        ----------\n+\n+        image: np.ndarray\n+            A 2D NumPy array of floats, representing pixels in an image of an astronomical object.\n+\n+        semimajor: float\n+            An initial guess for the size of the semimajor axis of the elliptical 2D Gaussian.\n+\n+        semiminor: float\n+            An initial guess for the size of the semiminor axis of the elliptical 2D Gaussian.\n+\n+        Returns\n+        -------\n+\n+        parameters: models.Gaussian2D or None\n+            The Gaussian2D model that best fits the image. If the fit was not successful, returns None.\n+        \"\"\"\n+        fit_g = fitting.LevMarLSQFitter()\n+        y_dim, x_dim = image.shape\n+        x_center, y_center = Utils.gaussian_centroid(image)\n+        g_init = models.Gaussian2D(amplitude=image.max(),\n+                                   x_mean=x_center,\n+                                   y_mean=y_center,\n+                                   x_stddev=semiminor,\n+                                   y_stddev=semimajor)\n+        g_init.x_mean.fixed = True\n+        g_init.y_mean.fixed = True\n+        y, x = np.mgrid[:y_dim, :x_dim]\n+        with warnings.catch_warnings():\n+            warnings.filterwarnings('ignore', category=AstropyUserWarning)\n+            parameters = fit_g(g_init, x, y, image)\n+        max_size = max(x_dim, y_dim)\n+        failed_fit = fit_g.fit_info['nfev'] > 80 or fit_g.fit_info['ierr'] not in (1, 2, 3, 4)\n+        too_big = parameters.x_stddev.value > max_size or parameters.y_stddev.value > max_size\n+        too_small = parameters.x_stddev.value < 1 or parameters.y_stddev.value < 1\n+        bad_amplitude = parameters.amplitude.value < 1e-20 or parameters.amplitude.value > 1.0\n+        failed = failed_fit or too_big or bad_amplitude or too_small\n+        return None if failed else parameters\n",
                            "Merge branch 'decontamination-with-new-tables' into 'develop'",
                            "Marco Fumana",
                            "2023-07-12T15:52:55.000+00:00",
                            "6ac38f0c2d5531e352ba378b25b5531fac1193dc"
                        ]
                    ],
                    "SIR_SpectraDecontamination/python/SIR_SpectraDecontamination/DecontaminatedSpectraCollection.py": [
                        [
                            "@@ -45,6 +45,9 @@ from SIR_Utilities.DpdGeneric import DpdGeneric\n from ST_DM_FilenameProvider.FilenameProvider import FileNameProvider\n from SIR_InstrumentModels.DetectorModel import DetectorModel\n from SIR_InstrumentModels.GrismModel import GrismModel\n+from SIR_InstrumentModels.H5OpticalModel import H5OpticalModel\n+from SIR_InstrumentModels.H5GlobalCRVModel import H5GlobalCRVModel\n+from SIR_InstrumentModels.H5GlobalIDSModel import H5GlobalIDSModel\n \n from SIR_SpectraLocation.H5LocationTable import H5LocationTable\n from SIR_SpectraDecontamination.DecontaminatedSpectrum import DecontaminatedSpectrum\n@@ -232,6 +235,8 @@ class DecontaminatedSpectraCollection:\n \n         self._location_tables = None\n \n+        self._detector_models = dict()\n+\n         self._mdb = None\n \n         # The method my which the object was initialized with data\n@@ -306,6 +311,10 @@ class DecontaminatedSpectraCollection:\n     def mdb(self, mdb: 'Mdb'):\n         self._mdb = mdb\n \n+    @property\n+    def detector_models(self) -> dict:\n+        return self._detector_models\n+\n     def get_dithers(self):\n         \"\"\"\n         Lists the dithers present in this DecontaminatedSpectraCollection\n@@ -1056,6 +1065,10 @@ class DecontaminatedSpectraCollection:\n \n         detector = h5_file.attrs['Detector']\n \n+        opt = h5_file[H5OpticalModel.MODEL_LABEL]\n+\n+        self._detector_models[(dither, detector)] = H5OpticalModel.new_from_HDF5_group(opt).det_model\n+\n         if detector < 1 or detector > 16:\n             raise ValueError(f'The detector value, {detector}, is out of the expected range.')\n \n@@ -1255,6 +1268,15 @@ class DecontaminatedSpectraCollection:\n         h5_file.attrs['Detector'] = detector\n         h5_file.attrs[H5LocationTable.EXPTIME_LABEL] = self.get_exposure_time(dither)\n \n+        if self._location_tables is not None:\n+            loctab_filename = self._location_tables.info.get_hdf5_filename(dither, detector)\n+            loctab_file = h5py.File(loctab_filename, 'r')\n+            loctab_file.copy(H5GlobalCRVModel.MODEL_LABEL, h5_file)\n+            loctab_file.copy(H5GlobalIDSModel.MODEL_LABEL, h5_file)\n+            loctab_file.copy(H5OpticalModel.MODEL_LABEL, h5_file)\n+        else:\n+            self._logger.info(f\"Location tables were not provided; location information will not be saved.\")\n+\n         self._add_spectra_to_hdf5_file(h5_file, dither, detector)\n \n         self._add_models_to_hdf5_file(h5_file, dither, detector)\n@@ -1419,18 +1441,26 @@ class DecontaminatedSpectraCollection:\n                                       shuffle=True)\n \n         if spectrum.kernel is not None:\n-            spec_container.create_dataset('kernel', data=spectrum.kernel,\n-                                          compression=DecontaminatedSpectraCollection.COMPRESSION,\n-                                          compression_opts=DecontaminatedSpectraCollection.COMPRESS_LEVEL,\n-                                          shuffle=True)\n+            kernel = spec_container.create_dataset('kernel', data=spectrum.kernel,\n+                                                   compression=DecontaminatedSpectraCollection.COMPRESSION,\n+                                                   compression_opts=DecontaminatedSpectraCollection.COMPRESS_LEVEL,\n+                                                   shuffle=True)\n+            if None not in (spectrum.semimajor, spectrum.semiminor, spectrum.theta):\n+                kernel.attrs['semimajor'] = spectrum.semimajor\n+                kernel.attrs['semiminor'] = spectrum.semiminor\n+                kernel.attrs['theta'] = spectrum.theta\n \n         spec_container.create_dataset('contaminants', data=spectrum.contaminants)\n+        spec_container.create_dataset('boundary', data=spectrum.boundary)\n         location = spec_container.create_group(\"location\")\n         location.attrs['order'] = spectrum.location.getOrder()\n         location.attrs['wavelength_start'] = spectrum.location.getWavelengthStart()\n         location.attrs['wavelength_end'] = spectrum.location.getWavelengthEnd()\n         location.attrs['gwa_tilt'] = spectrum.location.getGWATilt()\n         location.attrs['extra_tilt'] = spectrum.location.getExtraTilt()\n+        x_pivot, y_pivot = spectrum.location.getPivot()\n+        location.attrs['x_pivot'] = x_pivot\n+        location.attrs['y_pivot'] = y_pivot\n         ref_position = location.create_dataset('ref_position', data=spectrum.location.getLambdaRefPosition())\n         ref_position.attrs['ref_wavelength'] = spectrum.location.getLambdaRefValue()\n \n",
                            "Merge branch 'decontamination-with-new-tables' into 'develop'",
                            "Marco Fumana",
                            "2023-07-12T15:52:55.000+00:00",
                            "6ac38f0c2d5531e352ba378b25b5531fac1193dc"
                        ]
                    ],
                    "SIR_SpectraDecontamination/python/SIR_SpectraDecontamination/Executor.py": [
                        [
                            "@@ -106,6 +106,7 @@ class Executor:\n         if args.cutouts != 'None' and not args.passthrough:\n             cutouts_json_filename = os.path.join(work_dir, args.cutouts)\n             self._cutouts = CutoutCollection(work_dir, cutouts_json_filename, logger)\n+            self._cutouts.use_gaussian_fit = args.gaussian_profile\n         else:\n             self._cutouts = None\n \n@@ -171,6 +172,7 @@ class Executor:\n                                       self._args.limit_band,\n                                       self._args.limit_mag,\n                                       self._args.zeroth_order_limit,\n+                                      self._args.second_order_limit,\n                                       self._args.padding)\n \n         decon_spectra = decon.run(det_str,\n@@ -236,6 +238,7 @@ class Executor:\n                                       self._args.limit_band,\n                                       self._args.limit_mag,\n                                       self._args.zeroth_order_limit,\n+                                      self._args.second_order_limit,\n                                       self._args.padding)\n \n         decon_spectra = decon.run_part(dither=int(dither),\n@@ -316,6 +319,7 @@ class Executor:\n                    '--limit_band', prog_args.limit_band,\n                    '--detectors', prog_args.detectors,\n                    '--zeroth_order_limit', str(prog_args.zeroth_order_limit),\n+                   '--second_order_limit', str(prog_args.second_order_limit),\n                    '--order', str(prog_args.order),\n                    '--max_spectra', str(prog_args.max_spectra),\n                    '--dec_spectra', prog_args.dec_spectra]\n",
                            "Merge branch 'decontamination-with-new-tables' into 'develop'",
                            "Marco Fumana",
                            "2023-07-12T15:52:55.000+00:00",
                            "6ac38f0c2d5531e352ba378b25b5531fac1193dc"
                        ],
                        [
                            "@@ -37,6 +37,7 @@ from SIR_SpectraDecontamination.LocationTableSetInfo import LocationTableSetInfo\n from SIR_SpectraDecontamination.SpectraDecontaminator import SpectraDecontaminator\n from SIR_SpectraDecontamination.DecontaminatedSpectraCollection import DecontaminatedSpectraCollection\n \n+from ElementsKernel import Auxiliary\n \n def concatenate(args: 'argparse.Namespace', dither: int, detector: int):\n     work_dir = args.workdir\n@@ -285,7 +286,7 @@ class Executor:\n \n         if sir_config is None or parameter_file is None:\n             default_filename = SpectraDecontaminator.DEFAULT_INI\n-            ini_file = os.path.join(\"${THIS_PROJECT_ROOT}/InstallArea/${BINARY_TAG}/auxdir/\", default_filename)\n+            ini_file = Auxiliary.getAuxiliaryPath(default_filename, raise_exception=False)\n             ini_file = os.path.expandvars(ini_file)\n             self._logger.info(f\"Using default parameter filename {ini_file}\")\n         else:\n",
                            "Merge branch 'new_default' into 'develop'",
                            "Marco Fumana",
                            "2023-07-11T20:26:41.000+00:00",
                            "3b71827103e1d8d1ba156e5467d368ba9b7679c6"
                        ],
                        [
                            "@@ -37,6 +37,7 @@ from SIR_SpectraDecontamination.LocationTableSetInfo import LocationTableSetInfo\n from SIR_SpectraDecontamination.SpectraDecontaminator import SpectraDecontaminator\n from SIR_SpectraDecontamination.DecontaminatedSpectraCollection import DecontaminatedSpectraCollection\n \n+from ElementsKernel import Auxiliary\n \n def concatenate(args: 'argparse.Namespace', dither: int, detector: int):\n     work_dir = args.workdir\n@@ -285,7 +286,7 @@ class Executor:\n \n         if sir_config is None or parameter_file is None:\n             default_filename = SpectraDecontaminator.DEFAULT_INI\n-            ini_file = os.path.join(\"${THIS_PROJECT_ROOT}/InstallArea/${BINARY_TAG}/auxdir/\", default_filename)\n+            ini_file = Auxiliary.getAuxiliaryPath(default_filename, raise_exception=False)\n             ini_file = os.path.expandvars(ini_file)\n             self._logger.info(f\"Using default parameter filename {ini_file}\")\n         else:\n",
                            "Introduced Auxiliary.getAuxiliaryPath",
                            "Marco Fumana",
                            "2023-07-11T20:26:41.000+00:00",
                            "992bce75d7875a5bddd57c742c35c86c99c42c9e"
                        ]
                    ],
                    "SIR_SpectraDecontamination/python/SIR_SpectraDecontamination/LocationTableSetInfo.py": [
                        [
                            "@@ -24,6 +24,7 @@\n import os\n import json\n from typing import List, Dict, Set\n+import warnings\n \n from ST_DataModelBindings.dpd.sir import locationtable_stub\n from SIR_SpectraLocation.H5LocationTable import H5LocationTable\n@@ -92,6 +93,8 @@ class LocationTableSetInfo:\n \n         self._data = NestedDict(list, 'dither', 'detector')\n \n+        self._filename_map = dict()\n+\n         for idx, table_name_xml in enumerate(xml_filenames):\n             self._selection.add(idx)\n             full_xml_filename = os.path.join(self._work_dir, table_name_xml)\n@@ -106,6 +109,8 @@ class LocationTableSetInfo:\n             table = H5LocationTable.load(full_path, only_metadata=True)\n             dither = table.getDither()\n             detector = table.getDetectorNumber()\n+            self._filename_map[(dither, detector)] = full_path\n+\n             if (dither, detector) in self._data:\n                 self._data[dither, detector].append(table)\n             else:\n@@ -142,6 +147,27 @@ class LocationTableSetInfo:\n             raise IndexError(f\"Invalid dither {dither} (The specified dither is not present.)\")\n         return list(self._data.get_subdict(dither).keys())\n \n+    def get_hdf5_filename(self, dither: int, detector: int) -> str:\n+        \"\"\"\n+        Gets the name of the HDF5 file associated with the specified dither and detector.\n+\n+         Parameters\n+        ----------\n+\n+        dither: int\n+            The dither sequence number of interest.\n+\n+        detector: int\n+            The detector number of interest\n+        \"\"\"\n+        if (dither, detector) in self._filename_map:\n+            filename = self._filename_map[(dither, detector)]\n+        else:\n+            warnings.warn(f'This set does not contain dither {dither}, detector {detector}.')\n+            filename = \"\"\n+\n+        return filename\n+\n     @property\n     def detector_map(self) -> Dict[int, List[int]]:\n         det_map = dict()\n",
                            "Merge branch 'decontamination-with-new-tables' into 'develop'",
                            "Marco Fumana",
                            "2023-07-12T15:52:55.000+00:00",
                            "6ac38f0c2d5531e352ba378b25b5531fac1193dc"
                        ],
                        [
                            "@@ -31,6 +31,7 @@ from SIR_SpectraLocation.LocationObject import LocationObjectFactory\n from SIR_Utilities.XmlReader import XmlReader\n \n from SIR_SpectraDecontamination.NestedDict import NestedDict\n+from ElementsKernel import Auxiliary\n \n \n class LocationTableSetInfo:\n@@ -203,8 +204,10 @@ class LocationTableSetInfo:\n \n         if sir_config is None or parameter_file is None:\n             default_filename = LocationObjectFactory.DEFAULT_INI\n-            ini_file = os.path.join(\"${THIS_PROJECT_ROOT}/InstallArea/${BINARY_TAG}/auxdir/\", default_filename)\n-            ini_file = os.path.expandvars(ini_file)\n+            ini_file = Auxiliary.getAuxiliaryPath(default_filename, raise_exception=False)\n+            if ini_file is None:\n+                raise FileNotFoundError(\"No parameter file\")\n+            \n             self._log(f\"Using default parameter filename {ini_file}\")\n         elif parameter_file is not None:\n             ini_file = os.path.join(self._work_dir, 'data', parameter_file)\n",
                            "Merge branch 'new_default' into 'develop'",
                            "Marco Fumana",
                            "2023-07-11T20:26:41.000+00:00",
                            "3b71827103e1d8d1ba156e5467d368ba9b7679c6"
                        ],
                        [
                            "@@ -31,6 +31,7 @@ from SIR_SpectraLocation.LocationObject import LocationObjectFactory\n from SIR_Utilities.XmlReader import XmlReader\n \n from SIR_SpectraDecontamination.NestedDict import NestedDict\n+from ElementsKernel import Auxiliary\n \n \n class LocationTableSetInfo:\n@@ -203,8 +204,10 @@ class LocationTableSetInfo:\n \n         if sir_config is None or parameter_file is None:\n             default_filename = LocationObjectFactory.DEFAULT_INI\n-            ini_file = os.path.join(\"${THIS_PROJECT_ROOT}/InstallArea/${BINARY_TAG}/auxdir/\", default_filename)\n-            ini_file = os.path.expandvars(ini_file)\n+            ini_file = Auxiliary.getAuxiliaryPath(default_filename, raise_exception=False)\n+            if ini_file is None:\n+                raise FileNotFoundError(\"No parameter file\")\n+            \n             self._log(f\"Using default parameter filename {ini_file}\")\n         elif parameter_file is not None:\n             ini_file = os.path.join(self._work_dir, 'data', parameter_file)\n",
                            "Introduced Auxiliary.getAuxiliaryPath",
                            "Marco Fumana",
                            "2023-07-11T20:26:41.000+00:00",
                            "992bce75d7875a5bddd57c742c35c86c99c42c9e"
                        ]
                    ],
                    "SIR_SpectraDecontamination/python/SIR_SpectraDecontamination/QualityStatistics.py": [
                        [
                            "@@ -243,19 +243,26 @@ class QualityStatistics:\n                 significance = residual / np.sqrt(variance)\n                 finite = np.isfinite(variance) & np.isfinite(residual) & np.isfinite(significance)\n                 mask = (spec.model.pixels > 0.0) & finite\n-                med_res = np.median(residual[mask])\n-                res_sig = np.median(significance[mask])\n-                med_noise = np.median(np.sqrt(variance[mask]))\n-                if not np.any(np.isnan([med_res, res_sig, med_noise])):\n-                    median_residual.append(med_res)\n-                    residual_significance.append(res_sig)\n-                    median_noise.append(med_noise)\n+                if mask.sum() > 0:\n+                    med_res = np.median(residual[mask])\n+                    res_sig = np.median(significance[mask])\n+                    med_noise = np.median(np.sqrt(variance[mask]))\n+                    if not np.any(np.isnan([med_res, res_sig, med_noise])):\n+                        median_residual.append(med_res)\n+                        residual_significance.append(res_sig)\n+                        median_noise.append(med_noise)\n \n         residual_significance = np.array(residual_significance)[~np.isnan(residual_significance)]\n \n         if len(residual_significance) == 0:\n             residual_significance = [-9e9]\n \n+        if len(median_noise) == 0:\n+            median_noise = [0.0]\n+\n+        median_residual = np.array(median_residual)\n+        median_noise = np.array(median_noise)\n+\n         dist_description = 'the distribution of median(science - model) / sigma.'\n \n         param = ppr_dict.genericKVParam()\n@@ -276,9 +283,6 @@ class QualityStatistics:\n         param.DoubleValue = np.median(median_noise)\n         product.Parameters.Parameter.append(param)\n \n-        median_residual = np.array(median_residual)\n-        median_noise = np.array(median_noise)\n-\n         within_sigma = np.fabs(median_residual) < median_noise\n         one_sigma_fraction = sum(within_sigma) / within_sigma.size\n \n",
                            "Merge branch 'decontamination-with-new-tables' into 'develop'",
                            "Marco Fumana",
                            "2023-07-12T15:52:55.000+00:00",
                            "6ac38f0c2d5531e352ba378b25b5531fac1193dc"
                        ]
                    ],
                    "SIR_SpectraDecontamination/python/SIR_SpectraDecontamination/SpectraDecontaminationMain.py": [
                        [
                            "@@ -95,6 +95,9 @@ def defineSpecificProgramOptions():\n     parser.add_argument('--zeroth_order_limit', type=float, dest='zeroth_order_limit', default=20.0,\n                         help='The magnitude threshold below which zeroth order contaminants will be flagged.')\n \n+    parser.add_argument('--second_order_limit', type=float, dest='second_order_limit', default=16.0,\n+                        help='The magnitude threshold below which second order contaminants will be flagged.')\n+\n     parser.add_argument('--detectors', dest='detectors', required=False, default='*',\n                         help='Instructs the program to run using only on the specified detector(s)'\n                              '(defaults to all detectors \\'*\\', if none are specified).')\n@@ -105,6 +108,9 @@ def defineSpecificProgramOptions():\n     parser.add_argument('--overwrite', dest='overwrite', action='store_true',\n                         help='Overwrite the output decontaminated collection file.')\n \n+    parser.add_argument('--gaussian_profile', dest='gaussian_profile', action='store_true',\n+                        help='Fit 2D Gaussian to cutouts, rather than using the cutouts as they are provided.')\n+\n     parser.add_argument('--order', type=int, dest='order', default=1,\n                         help='Order name to decontaminate')\n \n",
                            "Merge branch 'decontamination-with-new-tables' into 'develop'",
                            "Marco Fumana",
                            "2023-07-12T15:52:55.000+00:00",
                            "6ac38f0c2d5531e352ba378b25b5531fac1193dc"
                        ]
                    ],
                    "SIR_SpectraDecontamination/python/SIR_SpectraDecontamination/SpectrumInfo.py": [
                        [
                            "@@ -34,11 +34,12 @@ from SIR_SpectraDecontamination.ConvolutionKernel import ConvolutionKernel\n \n class SpectrumInfo(object):\n     \"\"\"\n-    Stores information about an individual spectral order on a specific detector.\n+    Stores information about an instance of a 2D spectral order on a specific detector.\n \n-    This class expands upon the information stored in the LocationSpectrum class by explicitly storing the bounding box\n-    of the spectrum within the detector in pixel coordinates, the 2-D model spectrum of the object, and the dispersion\n-    solution and inverse dispersion as functions (callable objects) that can operate on arrays of values.\n+    This class handles all information regarding a single 2D spectral segment. For example,\n+    all information about the first-order spectrum of object A in detector 3 of dither 2 could\n+    be stored in this class. Several SpectrumInfo objects can be associated with a single\n+    star or galaxy. So, multiple SpectrumInfo objects can share a single AstroObjectInfo object.\n     \"\"\"\n \n     __slots__ = ['_object_id',\n@@ -50,6 +51,9 @@ class SpectrumInfo(object):\n                  '_spectral_cutout',\n                  '_convolution_kernel',\n                  '_const_kernel',\n+                 '_semimajor',\n+                 '_semiminor',\n+                 '_theta',\n                  '_wav_min',\n                  '_wav_max',\n                  '_bbox',\n@@ -106,6 +110,11 @@ class SpectrumInfo(object):\n         # contains a representative sample of the 2D kernel, even after the convolution kernel has been deleted.\n         self._const_kernel = None\n \n+        # if a 2D Gaussian has been fit to the convolution kernel. The fitting parameters are stored here.\n+        self._semimajor = None\n+        self._semiminor = None\n+        self._theta = None\n+\n         wav_min, wav_max = grism_model.full_wavelength_range\n \n         # the minimum and maximum wavelengths passing through the grism\n@@ -258,6 +267,9 @@ class SpectrumInfo(object):\n             exposure_direction = ConvolutionKernel.compute_nisp_exposure_direction(self.grism_model.nisp_exposure)\n             self._convolution_kernel = ConvolutionKernel(self, exposure_direction)\n             self._const_kernel = np.copy(self._convolution_kernel.const_kernel)\n+            self._semimajor = np.copy(self._convolution_kernel.semimajor)\n+            self._semiminor = np.copy(self._convolution_kernel.semiminor)\n+            self._theta = np.copy(self._convolution_kernel.theta)\n \n         return self._convolution_kernel\n \n@@ -265,6 +277,18 @@ class SpectrumInfo(object):\n     def const_kernel(self) -> np.ndarray:\n         return self._const_kernel\n \n+    @property\n+    def semimajor(self) -> float:\n+        return self._semimajor\n+\n+    @property\n+    def semiminor(self) -> float:\n+        return self._semiminor\n+\n+    @property\n+    def theta(self) -> float:\n+        return self._theta\n+\n     @property\n     def spectrum_cutout(self) -> np.ndarray:\n         \"\"\"\n@@ -349,13 +373,31 @@ class SpectrumInfo(object):\n         \"\"\"Creates a `SpectrumCutout` object.\"\"\"\n         self._spectral_cutout = SpectrumCutout(self)\n \n+    def _get_wavelength_limits(self) -> Tuple[float]:\n+        \"\"\"Determines the wavelength limits (min, max) for the current spectral order.\"\"\"\n+        wav_min, wav_max = self._grism_model.full_wavelength_range\n+\n+        if self.order == 0:\n+            # increase the range for zeroth-orders so that the bounding box covers the full length\n+            wavelength_span = math.fabs(wav_max - wav_min)\n+            x0, y0 = self._loc_spec.computePosition(wav_min, 0).getPosition()\n+            x1, y1 = self._loc_spec.computePosition(wav_max, 0).getPosition()\n+            pixel_length = math.hypot(x1 - x0, y1 - y0)\n+            wav_per_pixel = wavelength_span / pixel_length\n+            target_length = 5 + self._loc_spec.getApertureSize()\n+            width_increase = target_length - pixel_length\n+            pad = 0.5 * width_increase * wav_per_pixel\n+            wav_min = wav_min - pad\n+            wav_max = wav_max + pad\n+\n+        return wav_min, wav_max\n+\n     def _compute_boundary(self) -> np.ndarray:\n         \"\"\"\n         Computes the coordinates of points along the boundary of the spectrum.\n         \"\"\"\n-        wav_min, wav_max = self._grism_model.full_wavelength_range\n+        wav_min, wav_max = self._get_wavelength_limits()\n         central_wav = 0.5 * (wav_min + wav_max)\n-\n         max_row = self._loc_spec.getApertureSize() - 1\n         x0, y0 = self._loc_spec.computePosition(wav_min, 0).getPosition()\n         x1, y1 = self._loc_spec.computePosition(central_wav, 0).getPosition()\n",
                            "Merge branch 'decontamination-with-new-tables' into 'develop'",
                            "Marco Fumana",
                            "2023-07-12T15:52:55.000+00:00",
                            "6ac38f0c2d5531e352ba378b25b5531fac1193dc"
                        ]
                    ],
                    "SIR_SpectraDecontamination/python/SIR_SpectraDecontamination/SpectrumMeasurer.py": [
                        [
                            "@@ -37,7 +37,7 @@ class SpectrumMeasurer(object):\n     \"\"\"\n \n     # the nominal width of a wavelength bin in units of Angstroms\n-    WAVELENGTH_BIN_SIZE = 1400\n+    WAVELENGTH_BIN_SIZE = 1500\n \n     def __init__(self, spectrum_modeller):\n         \"\"\"\n@@ -134,8 +134,8 @@ class SpectrumMeasurer(object):\n \n         bin_wavelengths, bin_fluxes, bin_uncertainties = np.concatenate(binned_fluxes, axis=1)\n \n-        # If there are fewer than 2 bins available, use the continuum from the J and H band fluxes\n-        if len(bin_wavelengths) < 2 or np.any(bin_wavelengths <= 0):\n+        # If there are fewer than 3 bins available, use the continuum from the photometry\n+        if len(bin_wavelengths) < 3 or np.any(bin_wavelengths <= 0):\n             object_info.interp_mask = True\n             continuum = object_info.continuum\n         else:\n@@ -153,6 +153,7 @@ class SpectrumMeasurer(object):\n                 # the continuum is based on the binned fluxes.\n                 object_info.interp_mask = False\n \n+        #plt.errorbar(bin_wavelengths, bin_fluxes, yerr=bin_uncertainties, capsize=3, linestyle=\"None\", marker='o', markersize=1, fillstyle='none', label='measured')\n         # subtract continuum from each spectrum, so that the LineModeller can model the lines.\n         for spec in measured_spectra:\n             wavs, fluxes, uncertainties = spec\n@@ -261,7 +262,7 @@ class SpectrumMeasurer(object):\n                 beta = spec_sum / model_sum\n                 correction.append(min(beta, 500.0))\n                 residual = usable_spec_pixels - beta * usable_model_pixels\n-                var = np.sum(np.square(residual)) / (beta * beta * np.sum(usable_model_pixels) ** 2)\n+                var = np.sum(np.square(residual)) / (model_sum * model_sum)\n                 variance.append(var)\n             else:\n                 correction.append(1.0)\n@@ -351,7 +352,7 @@ class SpectrumMeasurer(object):\n             # just compute a single (wavelength, flux, dflux) triplet when the spectral segment is short\n             bin_wavelengths = np.array([Utils.effective_wavelength(wavelengths, fluxes * weights)], dtype=np.float32)\n             bin_fluxes = np.array([Utils.weighted_mean(fluxes, weights, wavelengths)], dtype=np.float32)\n-            weighted_sample_std = Utils.weighted_std(fluxes, weights, wavelengths) / np.sqrt(np.sum(weights))\n+            weighted_sample_std = Utils.weighted_std(fluxes, weights, wavelengths)\n             bin_dflux = np.array([weighted_sample_std], dtype=np.float32)\n         else:\n             n_bins = math.ceil(wavelength_extent / cls.WAVELENGTH_BIN_SIZE)\n@@ -367,7 +368,7 @@ class SpectrumMeasurer(object):\n                 weights_i = weights[lower_bound: lower_bound + c]\n                 bin_wavelengths[i] = Utils.effective_wavelength(wavelengths_i, fluxes_i * weights_i)\n                 bin_fluxes[i] = Utils.weighted_mean(fluxes_i, weights_i, wavelengths_i)\n-                bin_dflux[i] = Utils.weighted_std(fluxes_i, weights_i, wavelengths_i) / np.sqrt(np.sum(weights_i))\n+                bin_dflux[i] = Utils.weighted_std(fluxes_i, weights_i, wavelengths_i)\n                 lower_bound += c\n \n         mask = (bin_wavelengths < max_wav) & (bin_wavelengths > min_wav)\n",
                            "Merge branch 'decontamination-with-new-tables' into 'develop'",
                            "Marco Fumana",
                            "2023-07-12T15:52:55.000+00:00",
                            "6ac38f0c2d5531e352ba378b25b5531fac1193dc"
                        ]
                    ],
                    "SIR_SpectraDecontamination/python/SIR_SpectraDecontamination/SpectrumModeller.py": [
                        [
                            "@@ -29,6 +29,10 @@ from scipy.optimize import curve_fit\n from SIR_SpectraDecontamination.SpectrumMeasurer import SpectrumMeasurer\n import SIR_SpectraDecontamination.Utils as Utils\n \n+#FIXME TEMPORARY\n+#import matplotlib.pylab as plt\n+#plt.ioff()\n+\n \n class SpectrumModeller(object):\n     \"\"\"\n@@ -92,21 +96,15 @@ class SpectrumModeller(object):\n         # Get information about the relevant filters, which will be used for validating the 1D model spectra as\n         # well as for creating 1D model spectra, when the 2-D spectral information is inadequate.\n \n-        if min_wav > 10000:\n-            # this must be the red grism:\n-            lower_band = 'J'\n-            upper_band = 'H'\n-        else:\n-            # min_wav <= 10000, so this must be the blue grism\n-            lower_band = 'Y'\n-            upper_band = 'J'\n-\n-        self._lower_band = lower_band\n-        self._upper_band = upper_band\n-        self._lower_effective = photo_info.effective_wavelength(lower_band)\n-        self._upper_effective = photo_info.effective_wavelength(upper_band)\n-        self._lower_transmission_wavs, self._lower_transmission = photo_info.filter_transmission(lower_band)\n-        self._upper_transmission_wavs, self._upper_transmission = photo_info.filter_transmission(upper_band)\n+        self._lower_band = 'Y'\n+        self._central_band = 'J'\n+        self._upper_band = 'H'\n+        self._lower_effective = photo_info.effective_wavelength(self._lower_band)\n+        self._central_effective = photo_info.effective_wavelength(self._central_band)\n+        self._upper_effective = photo_info.effective_wavelength(self._upper_band)\n+        self._lower_transmission_wavs, self._lower_transmission = photo_info.filter_transmission(self._lower_band)\n+        self._central_transmission_wavs, self._central_transmission = photo_info.filter_transmission(self._central_band)\n+        self._upper_transmission_wavs, self._upper_transmission = photo_info.filter_transmission(self._upper_band)\n \n     @property\n     def lambdas(self):\n@@ -195,8 +193,7 @@ class SpectrumModeller(object):\n         object_info = spectrum.astro_object_info\n \n         if object_info.continuum is None:\n-            object_info.continuum = self._continuum_from_band_fluxes(object_info.flux(self._lower_band),\n-                                                                     object_info.flux(self._upper_band))\n+            object_info.continuum = self._continuum_from_band_fluxes(object_info)\n             spectrum.make_2d_model(self.lambdas)\n \n         if spectrum.model_spec is None:\n@@ -249,12 +246,26 @@ class SpectrumModeller(object):\n \n             lines = self._eval_lines(line_modeller, object_info)\n \n+            #plt.plot(self.lambdas, continuum + lines, label='measured model')\n+            #plt.plot(self.lambdas, object_info.continuum, label='broadband model')\n+            #lam = [self._lower_effective, self._central_effective, self._upper_effective]\n+            #flx = [object_info.flux(self._lower_band), object_info.flux(self._central_band),\n+            #       object_info.flux(self._upper_band)]\n+            #plt.scatter(lam, flx, label='photometry')\n+            #plt.title(f\"{object_info.object_id} J = {object_info.mag('J'):.2f}\")\n+            #plt.ylim(0, 1.9 * object_info.continuum.max())\n+            #plt.legend()\n+\n             if self._is_model_spectrum_consistent(self.lambdas, continuum + lines, object_info):\n                 # The spectrum was measured and looks reasonable, but the photometry may have been used for the\n                 # continuum. So, the interpolation mask may still be True, if the interp_mask has been set:\n                 interpolation_mask = object_info.interp_mask\n+                #plt.savefig(f'{object_info.object_id}-successful-model.png')\n+                #plt.close()\n             else:\n                 # Could not construct a spectral model consistent with the broadband photometry.\n+                #plt.savefig(f'{object_info.object_id}-rejected-model.png')\n+                #plt.close()\n                 continuum = object_info.continuum\n                 line_modeller = None\n                 interpolation_mask = True\n@@ -265,7 +276,7 @@ class SpectrumModeller(object):\n \n         return continuum, line_modeller, interpolation_mask\n \n-    def _is_model_spectrum_consistent(self, wavelengths, fluxes, object_info, end_slope_limit=1e-19):\n+    def _is_model_spectrum_consistent(self, wavelengths, fluxes, object_info, end_slope_limit=1e-18):\n         \"\"\"\n         Checks whether or not the spectrum, defined by `wavs` and `fluxes`, is consistent with the broadband\n         fluxes in the catalog.\n@@ -294,54 +305,81 @@ class SpectrumModeller(object):\n             flux values in the photometric catalog and the end-point slopes are within the bound specified by\n             `end_slope_limit`.\n         \"\"\"\n-        nominal_lower_flux = object_info.flux(self._lower_band)\n-        nominal_upper_flux = object_info.flux(self._upper_band)\n+        min_wav = self._lambdas[0]\n+        max_wav = self._lambdas[-1]\n+\n+        if self._lower_effective < min_wav:\n+            # The red grism\n+            left_band = self._central_band\n+            right_band = self._upper_band\n+            left_transmission_wavs = self._central_transmission_wavs\n+            left_transmission = self._central_transmission\n+            right_transmission_wavs = self._upper_transmission_wavs\n+            right_transmission = self._upper_transmission\n+        elif self._upper_effective > max_wav:\n+            # the blue grism\n+            left_band = self._lower_band\n+            right_band = self._central_band\n+            left_transmission_wavs = self._lower_transmission_wavs\n+            left_transmission = self._lower_transmission\n+            right_transmission_wavs = self._central_transmission_wavs\n+            right_transmission = self._central_transmission\n+        else:\n+            raise ValueError(\"Grism wavelengths and photometric band wavelengths are incompatible.\")\n \n-        lower_flux_uncertainty = object_info.dflux(self._lower_band)\n-        upper_flux_uncertainty = object_info.dflux(self._upper_band)\n+        nominal_left_flux = object_info.flux(left_band)\n+        nominal_right_flux = object_info.flux(right_band)\n \n-        lower_consistent = self._flux_is_consistent(wavelengths, fluxes, nominal_lower_flux, lower_flux_uncertainty,\n-                                                    self._lower_transmission_wavs,\n-                                                    self._lower_transmission)\n+        left_flux_uncertainty = object_info.dflux(left_band)\n+        right_flux_uncertainty = object_info.dflux(right_band)\n \n-        upper_consistent = self._flux_is_consistent(wavelengths, fluxes, nominal_upper_flux, upper_flux_uncertainty,\n-                                                    self._upper_transmission_wavs,\n-                                                    self._upper_transmission)\n+        left_consistent = self._flux_is_consistent(wavelengths, fluxes, nominal_left_flux, left_flux_uncertainty,\n+                                                   left_transmission_wavs,\n+                                                   left_transmission)\n+\n+        right_consistent = self._flux_is_consistent(wavelengths, fluxes, nominal_right_flux, right_flux_uncertainty,\n+                                                    right_transmission_wavs,\n+                                                    right_transmission)\n \n         # verify that the slopes of the left and right side of the spectrum are reasonable:\n         slopes = np.diff(fluxes) / np.diff(wavelengths)\n \n-        slopes_reasonable = slopes[0] > -end_slope_limit and slopes[-1] < end_slope_limit\n+        slopes_reasonable = np.fabs(slopes[0]) < end_slope_limit and np.fabs(slopes[-1]) < end_slope_limit\n \n-        return lower_consistent and upper_consistent and slopes_reasonable\n+        return left_consistent and right_consistent and slopes_reasonable\n \n     @staticmethod\n     def _flux_is_consistent(wavelengths, fluxes, nominal_flux, flux_uncertainty, transmission_wavs, transmission):\n \n         model_flux = Utils.convolve_filter(wavelengths, fluxes, transmission_wavs, transmission)\n \n-        model_squared_flux = Utils.convolve_filter(wavelengths, np.square(fluxes), transmission_wavs, transmission)\n+        # FIXME temporary:\n+\n+        integrand = Utils.interp_multiply(transmission_wavs, transmission, wavelengths, fluxes)\n+\n+        effective_wavelength = Utils.effective_wavelength(transmission_wavs, integrand)\n+\n+        #plt.scatter(effective_wavelength, model_flux, c='r', marker='x')\n+\n+        # end temp\n \n-        variance = min(np.fabs(model_squared_flux - model_flux ** 2), (0.1 * model_flux) ** 2)\n+        variance = (0.1 * model_flux) ** 2\n \n-        flux_uncertainty = min(flux_uncertainty, np.fabs(0.1 * nominal_flux))\n+        flux_uncertainty = min(3 * flux_uncertainty, np.fabs(0.1 * nominal_flux))\n \n         sigma = np.sqrt(variance + flux_uncertainty ** 2)\n \n         return np.fabs(nominal_flux - model_flux) < sigma\n \n-    def _continuum_from_band_fluxes(self, lower_flux: float, upper_flux: float) -> 'np.ndarray':\n+    def _continuum_from_band_fluxes(self, object_info) -> 'np.ndarray':\n         \"\"\"\n         Creates a model of the continuum flux, based solely upon the object magnitudes.\n \n         Parameters\n         ----------\n \n-        lower_flux: float\n-            The lower-band flux of the object (Y if using the blue grism; J if using the red grism).\n-\n-        upper_flux: float\n-            The upper-band flux of the object (J if using the blue grism; H if using the red grism).\n+        object_info: AstroObjectInfo\n+            The AstroObjectInfo object associated with the spectrum.\n \n         Returns\n         -------\n@@ -349,11 +387,23 @@ class SpectrumModeller(object):\n         continuum_flux: 1-D NumPy array of floats\n             The continuum flux densities corresponding to the wavelengths stored in self.lambdas.\n         \"\"\"\n-        phot_wavelengths = np.array([self._lower_effective, self._upper_effective])\n+        lower_wavelengths = np.array([self._lower_effective, self._central_effective])\n+\n+        lower_phot_fluxes = np.array([object_info.flux(self._lower_band), object_info.flux(self._central_band)])\n+\n+        lower_continuum = self.power_law_interp(lower_wavelengths, lower_phot_fluxes, self.lambdas)\n+\n+        upper_wavelengths = np.array([self._central_effective, self._upper_effective])\n+\n+        upper_phot_fluxes = np.array([object_info.flux(self._central_band), object_info.flux(self._upper_band)])\n+\n+        upper_continuum = self.power_law_interp(upper_wavelengths, upper_phot_fluxes, self.lambdas)\n+\n+        lower_mask = self.lambdas < self._central_effective\n \n-        phot_fluxes = np.array([lower_flux, upper_flux])\n+        upper_mask = self.lambdas >= self._central_effective\n \n-        return self.power_law_interp(phot_wavelengths, phot_fluxes, self.lambdas)\n+        return lower_mask * lower_continuum + upper_mask * upper_continuum\n \n     @staticmethod\n     def power_law_interp(known_wavelengths: np.ndarray,\n",
                            "Merge branch 'decontamination-with-new-tables' into 'develop'",
                            "Marco Fumana",
                            "2023-07-12T15:52:55.000+00:00",
                            "6ac38f0c2d5531e352ba378b25b5531fac1193dc"
                        ]
                    ],
                    "SIR_SpectraDecontamination/python/SIR_SpectraDecontamination/Utils.py": [
                        [
                            "@@ -205,6 +205,12 @@ def weighted_mean(quantity, weights, wavelengths):\n \n     The weighted mean of the quantity.\n     \"\"\"\n+    if np.all(weights <= 0.0):\n+        return np.nan\n+\n+    if len(quantity) < 2:\n+        return quantity[0]\n+\n     return trapz(quantity * weights, wavelengths) / trapz(weights, wavelengths)\n \n \n@@ -230,8 +236,18 @@ def weighted_std(quantity, weights, wavelengths):\n \n     The weighted standard deviation of the quantity.\n     \"\"\"\n-    return np.sqrt(weighted_mean(np.square(quantity), weights, wavelengths)\n-                   - weighted_mean(quantity, weights, wavelengths)**2)\n+    mean_square = weighted_mean(np.square(quantity), weights, wavelengths)\n+    squared_mean = weighted_mean(quantity, weights, wavelengths)**2\n+\n+    if np.any(np.isnan([mean_square, squared_mean])):\n+        return np.nan\n+\n+    var = mean_square - squared_mean\n+\n+    if var < 0:\n+        return np.nan\n+\n+    return np.sqrt(var)\n \n \n def effective_wavelength(wavs, weights):\n@@ -461,6 +477,54 @@ def gauss_kernel(canvas, center, sigma):\n     return canvas\n \n \n+@jit(nopython=True)\n+def rebin3(image: np.ndarray) -> np.ndarray:\n+    \"\"\"\n+    Reduces the resolution of an image by a factor of 3.\n+\n+    Each pixel in the output image is the sum of 3 x 3 pixels\n+    in the input image.\n+\n+    Parameters\n+    ----------\n+\n+    image: np.ndarray\n+        The input image\n+\n+    Returns\n+    -------\n+\n+    rebinned: np.ndarray\n+        An image in which each pixel is the sum of 3 x 3 pixels in\n+        the input image\n+    \"\"\"\n+    y_dim, x_dim = image.shape\n+\n+    y_output = y_dim // 3\n+    x_output = x_dim // 3\n+\n+    output = np.zeros((y_output, x_output), dtype=np.float32)\n+\n+    for j in range(y_output):\n+        for i in range(x_output):\n+            i_input = 3 * i\n+            j_input = 3 * j\n+            v = image[j_input, i_input]\n+            v += image[j_input, i_input + 1]\n+            v += image[j_input, i_input + 2]\n+\n+            v += image[j_input + 1, i_input]\n+            v += image[j_input + 1, i_input + 1]\n+            v += image[j_input + 1, i_input + 2]\n+\n+            v += image[j_input + 2, i_input]\n+            v += image[j_input + 2, i_input + 1]\n+            v += image[j_input + 2, i_input + 2]\n+            output[j, i] = v\n+\n+    return output\n+\n+\n @jit\n def bilinear_shift(image: np.ndarray, shift_vector: Tuple[float, float]) -> np.ndarray:\n     \"\"\"\n@@ -1122,4 +1186,107 @@ def compute_wavelengths(location, bbox):\n         x_pos, y_pos = location.computePosition(wav, row).getPosition() - np.array((left, bottom))\n         samples[i, :] = x_pos, y_pos, wav\n \n-    return interpolate_2d_grid(width, height, samples)\n\\ No newline at end of file\n+    return interpolate_2d_grid(width, height, samples)\n+\n+\n+@jit(nopython=True)\n+def is_left(p0: tuple, p1: tuple, p2: tuple) -> float:\n+    \"\"\"\n+    Determines whether point2 (p2) is to the left of the line defined by p0 and p1.\n+\n+    Parameters\n+    ----------\n+\n+    p0: tuple\n+        (x0, y0) coordinates of point 0.\n+\n+    p1: tuple\n+        (x1, y1) coordinates of point 1.\n+\n+    p2: tuple\n+        (x1, y1) coordinates of point 2.\n+\n+    Returns\n+    -------\n+\n+    left: float\n+        left > 0 if p2 is to the left of the line, p0 - p1.\n+        left == 0 if the three points are co-linear\n+        left < 0 if p2 is to the right of the line, p0 - p1.\n+    \"\"\"\n+    return (p1[0] - p0[0]) * (p2[1] - p0[1]) - (p2[0] - p0[0]) * (p1[1] - p0[1])\n+\n+\n+@jit(nopython=True)\n+def contains(loop, p):\n+    \"\"\"\n+    Determines whether a point is contained within a polygon.\n+\n+    Uses Dan Sunday's optimized winding number algorithm (https://en.wikipedia.org/wiki/Point_in_polygon)\n+    to test if the point, p, is located inside of the polygon defined by the vertices listed in loop.\n+\n+    Parameters\n+    ----------\n+\n+    loop: no.ndarray\n+        An array of points defining the vertices of a polygon, in order [(x0, y0), (x1, y1), ...]\n+\n+    p: tuple\n+        The coordinates of a point (x, y)\n+\n+    Returns\n+    -------\n+\n+    contains: bool\n+        True if the point, p, is within the loop (polygon); False otherwise.\n+    \"\"\"\n+    n = len(loop)\n+    winding_number = 0\n+\n+    for i in range(-1, n - 1):\n+        if loop[i, 1] <= p[1]:\n+            if loop[i + 1, 1] > p[1]:\n+                if is_left((loop[i, 0], loop[i, 1]), (loop[i + 1, 0], loop[i + 1, 1]), (p[0], p[1])) > 0:\n+                    winding_number += 1\n+        else:\n+            if loop[i + 1, 1] <= p[1]:\n+                if is_left((loop[i, 0], loop[i, 1]), (loop[i + 1, 0], loop[i + 1, 1]), (p[0], p[1])) < 0:\n+                    winding_number -= 1\n+    return winding_number != 0\n+\n+\n+@jit(nopython=True)\n+def rasterize(canvas, offset, loop):\n+    \"\"\"\n+    Creates a raster image of a polygon on a Boolean canvas.\n+\n+    Note that the center of the pixel must be contained within the polygon in order to be marked as True.\n+    If pixels which partially overlap the polygon should be marked as True as well, then consider expanding\n+    the polygon.\n+\n+    Parameters\n+    ----------\n+\n+    canvas: np.ndarray\n+        A 2D boolean NumPy array which will contain the rasterized polygon.\n+\n+    offset: tuple:\n+        The (x, y) offset from the lower-left corner of the canvas to the origin of the coordinate system.\n+\n+    loop: no.ndarray\n+        An array of points defining the vertices of a polygon, in order [(x0, y0), (x1, y1), ...]\n+\n+    Returns\n+    -------\n+\n+    canvas: np.ndarray\n+        The canvas with the rasterized polygon, with True inside of the polygon; False outside.\n+    \"\"\"\n+    xoff, yoff = offset\n+    height, width = canvas.shape\n+    for j in range(height):\n+        jp = yoff + j\n+        for i in range(width):\n+            ip = xoff + i\n+            canvas[j, i] = contains(loop, (ip, jp))\n+    return canvas\n\\ No newline at end of file\n",
                            "Merge branch 'decontamination-with-new-tables' into 'develop'",
                            "Marco Fumana",
                            "2023-07-12T15:52:55.000+00:00",
                            "6ac38f0c2d5531e352ba378b25b5531fac1193dc"
                        ]
                    ],
                    "SIR_SpectraDecontamination/tests/python/AstroObjectInfo_test.py": [
                        [
                            "@@ -316,14 +316,46 @@ def test_is_usable(input_args):\n \n     assert not info.is_usable\n \n+\n+def test_invalid_mag(input_args):\n+    location, cutouts, phot_info, limit_band, limit_mag = input_args\n+\n+    info = AstroObjectInfo(location, cutouts, phot_info, limit_band, 2)\n+\n+    assert not info.invalid_mag\n+\n     astro_object_info = location.getAstronomicalObject()\n-    astro_object_info._mag = {'J': 23.3}\n+    astro_object_info._mag = {'J': Value(23.3)}\n \n-    # the object no longer has an H magnitude, so it is not usable\n+    # the object no longer has an H magnitude or Y magnitude, so it has invalid magnitudes\n \n     info = AstroObjectInfo(location, cutouts, phot_info, limit_band, 100)\n \n-    assert not info.is_usable\n+    assert info.invalid_mag\n+\n+    astro_object_info._mag = {'Y': Value(22.2), 'J': Value(23.3), 'H': Value(13.0)}\n+\n+    info = AstroObjectInfo(location, cutouts, phot_info, limit_band, 100)\n+\n+    assert not info.invalid_mag\n+\n+    astro_object_info._mag = {'Y': Value(22.0), 'J': Value(23.3), 'H': Value(None)}\n+\n+    info = AstroObjectInfo(location, cutouts, phot_info, limit_band, 100)\n+\n+    assert info.invalid_mag\n+\n+    astro_object_info._mag = {'Y': Value(22.0), 'J': Value(np.nan), 'H': Value(23.0)}\n+\n+    info = AstroObjectInfo(location, cutouts, phot_info, limit_band, 100)\n+\n+    assert info.invalid_mag\n+\n+    astro_object_info._mag = {'Y': Value(np.nan), 'J': Value(22.0), 'H': Value(23.0)}\n+\n+    info = AstroObjectInfo(location, cutouts, phot_info, limit_band, 100)\n+\n+    assert info.invalid_mag\n \n \n def test_continuum(input_args, line_modeller):\n",
                            "Merge branch 'decontamination-with-new-tables' into 'develop'",
                            "Marco Fumana",
                            "2023-07-12T15:52:55.000+00:00",
                            "6ac38f0c2d5531e352ba378b25b5531fac1193dc"
                        ]
                    ],
                    "SIR_SpectraDecontamination/tests/python/ConvolutionKernel_test.py": [
                        [
                            "@@ -26,7 +26,7 @@ class DetectorStub:\n         pass\n \n     def getMetadata(self):\n-        return {'CD1_2': 7.53814787008755e-05, 'CD1_1': -3.48198661193708e-05}\n+        return {'CD2_2': 7.53814787008755e-05, 'CD2_1': -3.48198661193708e-05}\n \n \n class NispSurveyExposureStub:\n@@ -58,8 +58,8 @@ class DetectorGrismStub:\n \n class WcsStub:\n     def __init__(self):\n-        self.CD1_1 = 8.3333333333329997e-05\n-        self.CD1_2 = 0.0\n+        self.CD2_1 = 8.3333333333329997e-05\n+        self.CD2_2 = 0.0\n \n \n class CutoutStub:\n@@ -70,12 +70,16 @@ class CutoutStub:\n         self.pixels = flux * Utils.gauss_kernel(kernel,\n                                          center=(shape[0] // 2 - 1.5, shape[1] // 2 + 2.33),\n                                          sigma=(2.24, 1.04))\n+        self.use_gaussian_fit = False\n \n \n class AstroObjectInfoStub:\n     def __init__(self, cutout_flux: float, cutout_shape: tuple):\n         self.stamp = CutoutStub(flux=cutout_flux, shape=cutout_shape)\n \n+    def mag(self, mag):\n+        return 21.5\n+\n \n class SpectrumInfoStub:\n     def __init__(self, horizontal: bool, cutout_flux: float=1.0, cutout_shape: tuple=(16, 16)):\n@@ -133,7 +137,7 @@ def test_compute_nisp_exposure_direction():\n \n     direction = ConvolutionKernel.compute_nisp_exposure_direction(nisp_exposure)\n \n-    assert np.isclose(direction, 114.79294250293202)\n+    assert np.isclose(direction, 335.207057497068)\n \n \n def test_kernel_size():\n@@ -143,7 +147,7 @@ def test_kernel_size():\n \n     kernel.move_to(500.4, 750.3)\n \n-    assert kernel.kernel_size == 21\n+    assert kernel.kernel_size == 7  # 21 / 3 because each pixel-width in the kernel is 3 pixels in the cutout.\n \n \n def test_kernel_is_ndarray():\n@@ -169,7 +173,7 @@ def test_kernel_shape_is_correct():\n \n     kern.move_to(500.4, 750.3)\n \n-    assert kern.kernel.shape == (19, 21)\n+    assert kern.kernel.shape == (7, 7)\n \n \n def test_kernel_is_normalized_properly():\n@@ -215,7 +219,7 @@ def test_kernel_is_shifted_properly():\n \n     actual_center_h = Utils.gaussian_centroid(kern.kernel)\n \n-    nominal_center_h = (10.4, 8.3)\n+    nominal_center_h = (3.06, 2.97)\n \n     assert np.all(np.isclose(actual_center_h, nominal_center_h, atol=0.02))\n \n@@ -227,7 +231,7 @@ def test_kernel_is_shifted_properly():\n \n     actual_center_v = Utils.gaussian_centroid(kern_v.kernel)\n \n-    nominal_center_v = (8.4, 10.3)\n+    nominal_center_v = (3.06, 2.97)\n \n     assert np.all(np.isclose(actual_center_v, nominal_center_v, atol=0.02))\n \n@@ -239,15 +243,15 @@ def test_kernel_is_rotated_properly():\n \n     kern.move_to(500.4, 750.3)\n \n-    nominal_center_h = (10.4, 8.3)\n+    nominal_center_h = (3.0, 3.0)\n \n-    canvas = np.zeros((21, 21), dtype=np.float32)\n+    canvas = np.zeros((7, 7), dtype=np.float32)\n \n     angle = 114.79294250293202\n \n-    expected_image = gaussian(canvas, sigma=(2.24, 1.04), center=nominal_center_h, theta=angle)\n+    expected_image = gaussian(canvas, sigma=(0.7467, 0.3467), center=nominal_center_h, theta=angle)\n \n-    assert np.sum(np.square(kern.kernel - expected_image[0:19, :])) < 2e-4\n+    assert np.sum(np.square(kern.kernel - expected_image)) < 0.021\n \n \n def test_kernel_is_gaussian_when_cutout_is_none():\n@@ -270,7 +274,7 @@ def test_kernel_is_gaussian_when_cutout_is_none():\n     chi2 = np.sum(np.square(gaussian - kern_none.kernel))\n \n     # agreement shouldn't be perfect because the actual model isn't a single Gaussian\n-    assert chi2 < 0.05\n+    assert chi2 < 0.06\n \n \n def test_kernel_is_gaussian_when_cutout_is_blank():\n@@ -291,7 +295,7 @@ def test_kernel_is_gaussian_when_cutout_is_blank():\n     chi2 = np.sum(np.square(gaussian - kern_blank.kernel))\n \n     # agreement shouldn't be perfect because the actual model isn't a single Gaussian\n-    assert chi2 < 0.05\n+    assert chi2 < 0.06\n \n \n def test_kernel_is_gaussian_when_cutout_is_peaked():\n@@ -315,7 +319,7 @@ def test_kernel_is_gaussian_when_cutout_is_peaked():\n     chi2 = np.sum(np.square(gaussian - kern_spike.kernel))\n \n     # agreement shouldn't be perfect because the actual model isn't a single Gaussian\n-    assert chi2 < 0.05\n+    assert chi2 < 0.06\n \n \n def test_kernel_is_gaussian_when_cutout_is_on_edge():\n@@ -342,7 +346,7 @@ def test_kernel_is_gaussian_when_cutout_is_on_edge():\n     chi2 = np.sum(np.square(gaussian - kern.kernel))\n \n     # agreement shouldn't be perfect because the actual model isn't a single Gaussian\n-    assert chi2 < 0.05\n+    assert chi2 < 0.06\n \n \n def test_kernel_is_gaussian_when_cutout_is_too_small():\n@@ -370,6 +374,38 @@ def test_kernel_is_gaussian_when_cutout_is_too_small():\n     chi2 = np.sum(np.square(gaussian - kern.kernel))\n \n     # agreement shouldn't be perfect because the actual model isn't a single Gaussian\n-    assert chi2 < 0.05\n+    assert chi2 < 0.06\n+\n+\n+def test_gaussian_fit():\n+    spec_info = SpectrumInfoStub(horizontal=True, cutout_flux=1.0)\n+\n+    spec_info.astro_object_info.stamp.use_gaussian_fit = True\n+\n+    kernel = np.zeros((21, 21), dtype=np.float32)\n+    semimajor = 3.24\n+    semiminor = 2.65\n+    spec_info.astro_object_info.stamp.pixels = Utils.gauss_kernel(kernel, center=(10, 10), sigma=(semimajor, semiminor))\n+\n+    kern = ConvolutionKernel(spec_info, 23.5)\n+\n+    assert np.fabs(kern.semimajor - semimajor) / semimajor < 0.025\n+\n+    assert np.fabs(kern.semiminor - semiminor) / semiminor < 0.025\n+\n+    kernel = np.zeros((27, 27), dtype=np.float32)\n+    semimajor = 5.65\n+    semiminor = 3.71\n+    spec_info.astro_object_info.stamp.pixels = Utils.gauss_kernel(kernel, center=(13, 13), sigma=(semimajor, semiminor))\n+\n+    kern = ConvolutionKernel(spec_info, 0)\n+\n+    assert np.fabs(kern.semimajor - semimajor) / semimajor < 0.025\n+\n+    assert np.fabs(kern.semiminor - semiminor) / semiminor < 0.025\n+\n+\n+\n+\n \n \n",
                            "Merge branch 'decontamination-with-new-tables' into 'develop'",
                            "Marco Fumana",
                            "2023-07-12T15:52:55.000+00:00",
                            "6ac38f0c2d5531e352ba378b25b5531fac1193dc"
                        ]
                    ],
                    "SIR_SpectraDecontamination/tests/python/DecontaminatedSpectraCollection_test.py": [
                        [
                            "@@ -70,6 +70,10 @@ class SpectrumInfoStub:\n         self.one_dim_wavelengths = np.arange(12000.0, 19000.0)\n         self.one_dim_spectrum = np.ones_like(self.one_dim_wavelengths)\n         self.const_kernel = np.ones((13, 13), np.float32)\n+        self.semimajor = 4\n+        self.semiminor = 2.5\n+        self.theta = 33\n+        self.boundary = np.array([(1, 1), (100, 5), (100, 10), (1, 6)])\n \n     def get_offset(self):\n         return 10, 20\n",
                            "Merge branch 'decontamination-with-new-tables' into 'develop'",
                            "Marco Fumana",
                            "2023-07-12T15:52:55.000+00:00",
                            "6ac38f0c2d5531e352ba378b25b5531fac1193dc"
                        ]
                    ],
                    "SIR_SpectraDecontamination/tests/python/DecontaminatedSpectrum_test.py": [
                        [
                            "@@ -84,16 +84,27 @@ def basic_inputs(monkeypatches):\n     cutout.spec_info.const_kernel = np.ones((5, 5), np.float32)\n     cutout.spec_info.astro_object_info.mag = MagicMock(return_value=18.3)\n     cutout.spec_info.astro_object_info.flux = MagicMock(return_value=1.2e-15)\n+    cutout.spec_info.semimajor = 4.5\n+    cutout.spec_info.semiminor = 3.2\n+    cutout.spec_info.theta = 23.5\n+    cutout.spec_info.boundary = np.array([(101, 201), (200, 202), (200, 207), (101, 206)])\n \n     h5group = MagicMock()\n \n     def items(self, key):\n+        class Kern(np.ndarray):\n+            pass\n+        kernel = Kern(shape=(5, 5))\n+        kernel[:] = np.ones((5,5))[:]\n+        kernel.attrs = {'semimajor': 4.5, 'semiminor': 3.2, 'theta': 23.5}\n+\n         arrays = {'science': np.ones(shape, dtype=np.float32),\n                   'variance': 0.1 * np.ones(shape, dtype=np.float32),\n                   'mask': np.zeros(shape, dtype=np.uint32),\n-                  'kernel': np.ones((5, 5), np.float32),\n+                  'kernel': kernel,\n                   'contaminants': np.array([(2345, 1),], dtype=[('id', np.int64), ('order', np.uint8)]),\n-                  'location': MagicMock()}\n+                  'location': MagicMock(),\n+                  'boundary': np.array([(101, 201), (200, 202), (200, 207), (101, 206)])}\n         return arrays[key]\n \n     h5group.__getitem__ = items\n@@ -288,3 +299,99 @@ def test_location(basic_inputs):\n     assert decon_spec.location.setLambdaRefPosition.called\n     assert decon_spec.location.setGWATilt.called\n     assert decon_spec.location.setExtraTilt.called\n+\n+\n+def test_gaussian_parameters(basic_inputs):\n+    collection, spec_cutout, h5group = basic_inputs\n+\n+    # from cutout:\n+\n+    decon_spec = DecontaminatedSpectrum(collection, spec_cutout)\n+\n+    assert decon_spec.semimajor == 4.5\n+    assert decon_spec.semiminor == 3.2\n+    assert decon_spec.theta == 23.5\n+\n+    # from H5:\n+\n+    decon_spec = DecontaminatedSpectrum(collection, h5group=h5group)\n+\n+    assert decon_spec.semimajor == 4.5\n+    assert decon_spec.semiminor == 3.2\n+    assert decon_spec.theta == 23.5\n+\n+\n+def test_boundary(basic_inputs):\n+    collection, spec_cutout, h5group = basic_inputs\n+\n+    # from cutout:\n+\n+    decon_spec = DecontaminatedSpectrum(collection, spec_cutout)\n+\n+    assert np.all(np.equal(decon_spec.boundary, spec_cutout.spec_info.boundary))\n+\n+    # from H5:\n+\n+    decon_spec = DecontaminatedSpectrum(collection, h5group=h5group)\n+\n+    assert np.all(np.equal(decon_spec.boundary, h5group['boundary']))\n+\n+\n+def test_polygon(basic_inputs):\n+    collection, spec_cutout, h5group = basic_inputs\n+\n+    # from cutout:\n+\n+    decon_spec = DecontaminatedSpectrum(collection, spec_cutout)\n+\n+    assert hasattr(decon_spec.polygon, 'area')\n+    assert np.isclose(decon_spec.polygon.area, 495.0)\n+    assert hasattr(decon_spec.polygon, 'length')\n+    assert np.isclose(decon_spec.polygon.length, 208.01010075)\n+    assert hasattr(decon_spec.polygon, 'boundary')\n+    assert hasattr(decon_spec.polygon, 'contains')\n+\n+    from_cutout = decon_spec.polygon\n+\n+    # from H5:\n+\n+    decon_spec = DecontaminatedSpectrum(collection, h5group=h5group)\n+\n+    assert hasattr(decon_spec.polygon, 'area')\n+    assert np.isclose(decon_spec.polygon.area, 495.0)\n+    assert hasattr(decon_spec.polygon, 'length')\n+    assert np.isclose(decon_spec.polygon.length, 208.01010075)\n+    assert hasattr(decon_spec.polygon, 'boundary')\n+    assert hasattr(decon_spec.polygon, 'contains')\n+\n+    assert from_cutout.covers(decon_spec.polygon)\n+\n+\n+def test_rasterize_polygon(basic_inputs):\n+    collection, spec_cutout, h5group = basic_inputs\n+\n+    # from cutout:\n+\n+    decon_spec = DecontaminatedSpectrum(collection, spec_cutout)\n+\n+    mask = decon_spec.rasterize_polygon(decon_spec.polygon)\n+\n+    assert mask.shape == decon_spec.science.shape\n+    assert mask.sum() == 371\n+    assert mask[1, 1]\n+    assert mask[3, 100]\n+    assert not mask[3, 101]\n+\n+    # from H5:\n+\n+    decon_spec = DecontaminatedSpectrum(collection, h5group=h5group)\n+\n+    mask = decon_spec.rasterize_polygon(decon_spec.polygon)\n+\n+    assert mask.shape == decon_spec.science.shape\n+    assert mask.sum() == 371\n+    assert mask[1, 1]\n+    assert mask[3, 100]\n+    assert not mask[3, 101]\n+\n+\n",
                            "Merge branch 'decontamination-with-new-tables' into 'develop'",
                            "Marco Fumana",
                            "2023-07-12T15:52:55.000+00:00",
                            "6ac38f0c2d5531e352ba378b25b5531fac1193dc"
                        ]
                    ],
                    "SIR_SpectraLocation/python/SIR_SpectraLocation/LocationObject.py": [
                        [
                            "@@ -295,13 +295,29 @@ class LocationObjectFactory(ParametersParse):\n         sizes: float, float\n           The major and minor sizes\n         \"\"\"\n-        h_mag = ao.getMagnitude('J').getValue()\n+        # If any of the magnitudes are missing, None, or NaN, set j_mag to 0.1 so that the spectrum will be treated\n+        # a very large spectrum. Since we don't know its actual brightness, it is best to assume it is extremely bright\n+        # and large so that it can be masked out.\n+        if ao.hasMagnitude('Y') and ao.hasMagnitude('J') and ao.hasMagnitude('H'):\n+            y_mag = ao.getMagnitude('Y').getValue()\n+            j_mag = ao.getMagnitude('J').getValue()\n+            h_mag = ao.getMagnitude('H').getValue()\n+            mags = (y_mag, j_mag, h_mag)\n+            if np.any(np.isnan(np.array(mags))) or None in mags:\n+                j_mag = 0.1\n+        else:\n+            j_mag = 0.1\n \n         limits = np.array(self._params['bounds'], dtype=float)\n         diameters = np.array(self._params['sizes'], dtype=float)\n         galaxy_scale_factor = self._params.as_float('galaxy_scale_factor')\n \n-        idx = int(np.argwhere((h_mag > limits) & (h_mag <= np.roll(limits, -1))))\n+        array_index = np.argwhere((j_mag > limits) & (j_mag <= np.roll(limits, -1)))\n+\n+        if len(array_index) > 0:\n+            idx = int(array_index)\n+        else:\n+            idx = 0\n \n         # the sizes in the _params are given as diameters, but this method returns radii\n         radius = 0.5 * diameters[idx]\n",
                            "Merge branch 'decontamination-with-new-tables' into 'develop'",
                            "Marco Fumana",
                            "2023-07-12T15:52:55.000+00:00",
                            "6ac38f0c2d5531e352ba378b25b5531fac1193dc"
                        ]
                    ],
                    "SIR_SpectraDecontamination/tests/python/LocationTableSetInfo_test.py": [
                        [
                            "@@ -181,10 +181,11 @@ def test_location_factory_params(argument_fixture):\n \n     assert os.path.basename(info.location_factory_params) == 'location.ini'\n \n-    info = LocationTableSetInfo(workdir, filename)\n-\n-    assert os.path.basename(info.location_factory_params) == 'default_location.ini'\n+    with pytest.raises(FileNotFoundError) as no_ini:\n+        LocationTableSetInfo(workdir, filename)\n \n+    assert \"No parameter file\" == str(no_ini.value)\n+    \n     module.LocationObjectFactory.DEFAULT_INI = 'SIR_LocationObjectParams.ini'\n \n     info = LocationTableSetInfo(workdir, filename)\n",
                            "Merge branch 'new_default' into 'develop'",
                            "Marco Fumana",
                            "2023-07-11T20:26:41.000+00:00",
                            "3b71827103e1d8d1ba156e5467d368ba9b7679c6"
                        ]
                    ],
                    "SIR_Utilities/python/SIR_Utilities/ParametersParse.py": [
                        [
                            "@@ -29,6 +29,7 @@ from SIR_Utilities.XmlReader import XmlReader\n from SIR_UtilitiesBinding import EUC_SIR_MASK_DICT\n \n import ElementsKernel.Logging as log\n+from ElementsKernel import Auxiliary\n \n logger = log.getLogger('ParametersParse')\n \n@@ -47,12 +48,11 @@ class ParametersParse:\n \n         if config_set is None or par_file is None:\n             logger.warning(f\"Reading default parameter file {default_file}\")\n-            par_file = os.path.join(\"${THIS_PROJECT_ROOT}/InstallArea/${BINARY_TAG}/auxdir/\", default_file)\n-            ini_file = os.path.expandvars(par_file)\n+            ini_file = Auxiliary.getAuxiliaryPath(default_file, raise_exception=False)\n         else:\n             ini_file = os.path.join(self._workdir, 'data', par_file)\n \n-        if os.path.isfile(ini_file) is False:\n+        if ini_file is None or os.path.isfile(ini_file) is False:\n             raise FileExistsError(f\"No ini file {ini_file}\")\n \n         return ini_file\n",
                            "Merge branch 'new_default' into 'develop'",
                            "Marco Fumana",
                            "2023-07-11T20:26:41.000+00:00",
                            "3b71827103e1d8d1ba156e5467d368ba9b7679c6"
                        ]
                    ],
                    "SIR_Utilities/tests/python/ParametersParse_test.py": [
                        [
                            "@@ -29,6 +29,7 @@ import pytest\n from unittest.mock import MagicMock, patch\n \n from SIR_Utilities.ParametersParse import ParametersParse\n+from ElementsKernel import Auxiliary\n \n \n class TestParametersParse:\n@@ -178,25 +179,25 @@ class TestParametersParse:\n         with pytest.raises(Exception) as no_ini:\n             parser._get_ini_file(\"xml_section\", \"default_file\")\n \n-        ini_file = os.path.expandvars(\"${THIS_PROJECT_ROOT}/InstallArea/${BINARY_TAG}/auxdir/default_file\")\n+        #ini_file = Auxiliary.getAuxiliaryPath(\"default_file\", raise_exception=False)\n \n         assert no_ini.type is FileExistsError\n-        assert no_ini.value.args[0] == f\"No ini file {ini_file}\"\n+        assert no_ini.value.args[0] == f\"No ini file None\"\n \n-    @patch('SIR_Utilities.ParametersParse.os.path.expandvars')\n+    @patch('SIR_Utilities.ParametersParse.Auxiliary.getAuxiliaryPath')\n     def test_get_ini_file2(self, mock_expand, tmpdir):\n \n         parser = ParametersParse(tmpdir)\n \n-\n         with tempfile.NamedTemporaryFile() as fp:\n             filename = str(fp.name)\n             mock_expand.return_value = filename\n             ini_file = parser._get_ini_file(\"xml_section\", \"default_file\")\n \n         assert ini_file == filename\n-        assert mock_expand.call_args_list[0][0][0] == \"${THIS_PROJECT_ROOT}/InstallArea/${BINARY_TAG}/auxdir/default_file\"\n-\n+        assert mock_expand.call_args_list[0][0][0] == \"default_file\"\n+        assert mock_expand.call_args_list[0][1][\"raise_exception\"] is False\n+        \n \n     @patch('SIR_Utilities.ParametersParse.XmlReader')\n     def test_get_ini_file3(self, mock_xml, tmpdir):\n@@ -219,7 +220,7 @@ class TestParametersParse:\n         assert XML.get_config_file.call_args_list[0][1][\"sub_module\"] == \"config-file\"\n \n \n-    @patch('SIR_Utilities.ParametersParse.os.path.expandvars')\n+    @patch('SIR_Utilities.ParametersParse.Auxiliary.getAuxiliaryPath')\n     @patch('SIR_Utilities.ParametersParse.XmlReader')\n     def test_get_ini_file4(self, mock_xml, mock_expand, tmpdir):\n \n",
                            "Merge branch 'new_default' into 'develop'",
                            "Marco Fumana",
                            "2023-07-11T20:26:41.000+00:00",
                            "3b71827103e1d8d1ba156e5467d368ba9b7679c6"
                        ]
                    ],
                    ".jenkinsFile": [
                        [
                            "@@ -1,3 +1,3 @@\n #!groovy\n-@Library('integration-library@release-9') _\n-pipelineElements(artifactId:\"SIR_Pipeline\", component:'eden.3.0')\n+@Library(value='integration-library@release-10') _\n+pipelineElements(name:\"SIR_Pipeline\", component:'eden.3.1')\n\\ No newline at end of file\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "Makefile": [
                        [
                            "@@ -44,170 +44,18 @@\n #\n ################################################################################\n \n-# settings\n-CMAKE := cmake\n-CTEST := ctest\n-NINJA := $(shell which ninja-build 2> /dev/null)\n-ifeq ($(NINJA),)\n-  NINJA := $(shell which ninja 2> /dev/null)\n-endif\n-\n-# Looking for the Custom make library\n-\n-CUSTOM_MAKE_LIB := Custom.mk\n-\n-ifneq ($(wildcard $(CURDIR)/make/$(CUSTOM_MAKE_LIB)),)\n-  CUSTOM_MAKE_LIB_FILE := $(CURDIR)/make/$(CUSTOM_MAKE_LIB)\n-else\n-  ifneq ($(CMAKE_PREFIX_PATH),)\n-    PREFIX_LIST := $(subst :, ,$(CMAKE_PREFIX_PATH))\n-    CUSTOM_MAKE_LIB_LIST := $(foreach dir,$(PREFIX_LIST),$(wildcard $(dir)/share/Elements/make/$(CUSTOM_MAKE_LIB) $(dir)/../make/$(CUSTOM_MAKE_LIB)))\n-  endif\n-  CUSTOM_MAKE_LIB_LIST += /usr/share/Elements/make/$(CUSTOM_MAKE_LIB)\n-  CUSTOM_MAKE_LIB_FILE := $(firstword $(CUSTOM_MAKE_LIB_LIST))\n-endif\n-\n-# Looking for the ToolChain\n-\n-TOOLCHAIN_NAME := ElementsToolChain.cmake\n+ELEMENTS_MAKE_LIB := Elements.mk\n \n-ifneq ($(wildcard $(CURDIR)/cmake/$(TOOLCHAIN_NAME)),)\n-  TOOLCHAIN_FILE := $(CURDIR)/cmake/$(TOOLCHAIN_NAME)\n+ifneq ($(wildcard $(CURDIR)/make/$(ELEMENTS_MAKE_LIB)),)\n+  ELEMENTS_MAKE_LIB_FILE := $(CURDIR)/make/$(ELEMENTS_MAKE_LIB)\n else\n   ifneq ($(CMAKE_PREFIX_PATH),)\n     PREFIX_LIST := $(subst :, ,$(CMAKE_PREFIX_PATH))\n-    TOOLCHAIN_LIST := $(foreach dir,$(PREFIX_LIST),$(wildcard $(dir)/lib*/cmake/ElementsProject/$(TOOLCHAIN_NAME) $(dir)/$(TOOLCHAIN_NAME)))\n-    TOOLCHAIN_FILE := $(firstword $(TOOLCHAIN_LIST))\n-  endif\n-endif\n-\n-override ALL_CMAKEFLAGS := -Wno-dev --no-warn-unused-cli\n-\n-ifneq ($(TOOLCHAIN_FILE),)\n-  # A toolchain has been found. Lets use it.\n-  override ALL_CMAKEFLAGS += -DCMAKE_TOOLCHAIN_FILE=$(TOOLCHAIN_FILE)\n-endif\n-\n-\n-BUILD_PREFIX_NAME := build\n-\n-override ALL_CMAKEFLAGS += -DUSE_LOCAL_INSTALLAREA=ON -DBUILD_PREFIX_NAME:STRING=$(BUILD_PREFIX_NAME)\n-override ALL_CMAKEFLAGS += -DUSE_VERSIONED_LIBRARIES=OFF\n-\n-ifndef BINARY_TAG\n-  ifdef CMAKECONFIG\n-    BINARY_TAG := ${CMAKECONFIG}\n-  else\n-    ifdef CMTCONFIG\n-      BINARY_TAG := ${CMTCONFIG}\n-    endif\n-  endif\n-endif\n-\n-ifdef BINARY_TAG\n-  BUILD_SUBDIR := $(BUILD_PREFIX_NAME).$(BINARY_TAG)\n-else\n-  BUILD_SUBDIR := $(BUILD_PREFIX_NAME)\n-endif\n-BUILDDIR := $(CURDIR)/$(BUILD_SUBDIR)\n-\n-# build tool\n-\n-ifneq ($(USE_NINJA),)\n-  # enable Ninja\n-  override ALL_CMAKEFLAGS += -GNinja\n-  BUILD_CONF_FILE := build.ninja\n-  BUILDFLAGS := $(NINJAFLAGS)\n-  ifneq ($(VERBOSE),)\n-    BUILDFLAGS := -v $(BUILDFLAGS)\n+    ELEMENTS_MAKE_LIB_LIST := $(foreach dir,$(PREFIX_LIST),$(wildcard $(dir)/share/Elements/make/$(ELEMENTS_MAKE_LIB) $(dir)/../make/$(ELEMENTS_MAKE_LIB)))\n   endif\n-else\n-  BUILD_CONF_FILE := Makefile\n+  ELEMENTS_MAKE_LIB_LIST += /usr/share/Elements/make/$(ELEMENTS_MAKE_LIB)\n+  ELEMENTS_MAKE_LIB_FILE := $(firstword $(ELEMENTS_MAKE_LIB_LIST))\n endif\n-BUILD_CMD := $(CMAKE) --build $(BUILD_SUBDIR) --target\n-\n-\n-# Use environment variable for extra flags\n-\n-# Replace the \":\" from eclipse variable list to spaces  \n-ifneq ($(EXPAND_FLAGS),)\n-  CMAKEFLAGS := $(subst :-, -,$(CMAKEFLAGS))\n-endif\n-\n-ifneq ($(CMAKEFLAGS),)\n-  override ALL_CMAKEFLAGS += $(CMAKEFLAGS)\n-endif\n-\n-# default target\n-all:\n-\n-# deep clean\n-purge:\n-\t$(RM) -r $(BUILDDIR) $(CURDIR)/InstallArea/$(BINARY_TAG)\n-\tfind $(CURDIR) \"(\" -name \"InstallArea\" -prune -o -name \"*.pyc\" -o -name \"*.pyo\" \")\" -a -type f -exec $(RM) -v \\{} \\;\n-\tfind $(CURDIR) -depth -type d -name \"__pycache__\" -exec $(RM) -rv \\{} \\;\n-\n-# Remove all the possible directories and the whole InstallArea as well\n-mrproper:\n-\t$(RM) -r $(CURDIR)/build $(CURDIR)/build.* $(CURDIR)/InstallArea\n-\tfind $(CURDIR) \"(\" -name \"*.pyc\" -o -name \"*.pyo\" \")\" -a -type f -exec $(RM) -v \\{} \\;\n-\tfind $(CURDIR) -depth -type d -name \"__pycache__\" -exec $(RM) -rv \\{} \\;\n-\n-# delegate any target to the build directory (except 'purge')\n-ifneq ($(MAKECMDGOALS),purge)\n-ifneq ($(MAKECMDGOALS),mrproper)\n-%: $(BUILDDIR)/$(BUILD_CONF_FILE) FORCE\n-\t+$(BUILD_CMD) $* -- $(BUILDFLAGS)\n-endif\n-endif\n-\n-# aliases\n-.PHONY: configure tests FORCE\n-ifneq ($(wildcard $(BUILDDIR)/$(BUILD_CONF_FILE)),)\n-configure: rebuild_cache\n-else\n-configure: $(BUILDDIR)/$(BUILD_CONF_FILE)\n-endif\n-\t@ # do not delegate further\n-\n-\n-# This wrapping around the test target is used to ensure the generation of\n-# the XML output from ctest.\n-test: $(BUILDDIR)/$(BUILD_CONF_FILE)\n-\t$(RM) -r $(BUILDDIR)/Testing $(BUILDDIR)/html\n-\t-cd $(BUILDDIR) && $(CTEST) -T test $(ARGS)\n-\t+$(BUILD_CMD) JUnitSummary\n-\n-\n-# This target ensures that the \"all\" target is called before\n-# running the tests (unlike the \"test\" default target of CMake)\n-tests: all\n-\t$(RM) -r $(BUILDDIR)/Testing $(BUILDDIR)/html\n-\t-cd $(BUILDDIR) && $(CTEST) -T test $(ARGS)\n-\t+$(BUILD_CMD) JUnitSummary\n-\n-ifeq ($(VERBOSE),)\n-# less verbose install\n-# (emulate the default CMake install target)\n-install: all\n-\tcd $(BUILDDIR) && $(CMAKE) -P cmake_install.cmake | grep -v \"^-- Up-to-date:\"\n-endif\n-\n-# import the library to look for a custom Makefile\n--include $(CUSTOM_MAKE_LIB_FILE)\n-\n-# ensure that the target are always passed to the CMake Makefile\n-FORCE: ;\n-\n-# Makefiles are used as implicit targets in make, but we should not consider\n-# them for delegation.\n-$(MAKEFILE_LIST): ;\n-\n-\n-# trigger CMake configuration\n-$(BUILDDIR)/$(BUILD_CONF_FILE): | $(BUILDDIR)\n-\tcd $(BUILDDIR) && $(CMAKE) $(ALL_CMAKEFLAGS) $(CURDIR)\n-\n-$(BUILDDIR):\n-\tmkdir -p $(BUILDDIR)\n \n+$(info Using the $(ELEMENTS_MAKE_LIB_FILE) make library)\n+include $(ELEMENTS_MAKE_LIB_FILE)\n\\ No newline at end of file\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "Readme.md": [
                        [
                            "@@ -0,0 +1,4 @@\n+# SIR Pipelines\n+\n+This version of the SIR pipeline (>4.0) works on EDEN-3.1\n+\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_Catalogs/SIR_Catalogs/Magnitude.h": [
                        [
                            "@@ -26,6 +26,7 @@\n #ifndef MAGNITUDE_H\n #define MAGNITUDE_H\n \n+#include <memory>\n /**\n  * @class Magnitude\n  *\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_CreateCuts/CMakeLists.txt": [
                        [
                            "@@ -41,10 +41,10 @@ elements_add_unit_test(SingleCut_test tests/src/SingleCut_test.cpp\n                        LINK_LIBRARIES ElementsKernel EL_Image SIR_CreateCuts Cfitsio ST_DataModelBindings \n                        TYPE Boost)\n \n-elements_add_unit_test(Utils_test tests/src/Utils_test.cpp\n-                       EXECUTABLE SIR_CreateCuts_Utils_test\n-                       LINK_LIBRARIES ElementsKernel EL_Image SIR_CreateCuts Cfitsio ST_DataModelBindings\n-                       TYPE Boost)\n+#elements_add_unit_test(Utils_test tests/src/Utils_test.cpp\n+#                       EXECUTABLE SIR_CreateCuts_Utils_test\n+#                       LINK_LIBRARIES ElementsKernel EL_Image SIR_CreateCuts Cfitsio ST_DataModelBindings\n+#                       TYPE Boost)\n \n #=======================================================================================================\n elements_install_conf_files()\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_CreateCuts/SIR_CreateCuts/Utils.h": [
                        [
                            "@@ -41,10 +41,10 @@\n #include <boost/property_tree/json_parser.hpp>\n \n #include \"ElementsKernel/ProgramHeaders.h\"\n-#include \"ST_DataModelBindings/dictionary/sys/euc-test-sys.h\"\n-#include \"ST_DataModelBindings/dpd/mer/euc-test-mer-BksMosaic.h\"\n-#include \"ST_DataModelBindings/dpd/mer/euc-test-mer-SegmentationMap.h\"\n-#include \"ST_DataModelBindings/dpd/mer/euc-test-mer-FinalCatalog.h\"\n+#include \"ST_DataModelBindings/dictionary/sys/euc-sys.h\"\n+#include \"ST_DataModelBindings/dpd/mer/euc-mer-BksMosaic.h\"\n+#include \"ST_DataModelBindings/dpd/mer/euc-mer-SegmentationMap.h\"\n+#include \"ST_DataModelBindings/dpd/mer/euc-mer-FinalCatalog.h\"\n #include \"EL_Image/Image.h\"\n #include \"EL_Image/PropertyList.h\"\n #include \"EL_Image/TFits.h\"\n@@ -217,7 +217,7 @@ std::vector<std::string> getList(std::string mer_cat) {\n     return list;\n }\n \n-/** \n+/**\n * @brief get correct segmentation map\n * @param segmap_list to be checked\n * @param tileIndex to be pair\n@@ -232,12 +232,12 @@ std::string getSegmap(std::vector<std::string> segmap_list, std::string workdir,\n     int mytile_int = static_cast<int>(mytile);\n     if (mytile_int == tileIndex) {\n       myfile = segmap_list[i];\n-    } \n+    }\n   }\n   return myfile;\n }\n \n-/** \n+/**\n * @brief get correct mosaic map\n * @param mosaic_list to be checked\n * @param tileIndex to be pair\n@@ -252,7 +252,7 @@ std::string getMosaic(std::vector<std::string> mosaic_list, std::string workdir,\n     int mytile_int = static_cast<int>(mytile);\n     if (mytile_int == tileIndex) {\n       myfile = mosaic_list[i];\n-    } \n+    }\n   }\n   return myfile;\n }\n@@ -324,7 +324,7 @@ std::vector<std::string> getSegmapList(std::string workdir, std::string segmap_l\n * @param ymin correction for y-WCS\n * @return update WCS info\n */\n-WcsInfo updateWCS(Wcs::Ptr inpWCS, PropertyList& metadata, \n+WcsInfo updateWCS(Wcs::Ptr inpWCS, PropertyList& metadata,\n                      int x_min, int y_min, WcsInfo& outWCS){\n \n   Eigen::Matrix2d cd(2,2);\n@@ -452,7 +452,7 @@ std::string exec(Elements::Logging& logger, const char* cmd) {\n     std::string result;\n     std::shared_ptr<FILE> pipe(popen(cmd, \"r\"), pclose);\n \n-    if (!pipe) { \n+    if (!pipe) {\n       logger.error() << \"# popen() failed! #\"; }\n \n     while (!feof(pipe.get())) {\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_CreateCuts/src/program/SIR_CreateCutOuts.cpp": [
                        [
                            "@@ -39,10 +39,10 @@\n #include <boost/algorithm/string.hpp>\n \n #include \"ElementsKernel/ProgramHeaders.h\"\n-#include \"ST_DataModelBindings/dictionary/sys/euc-test-sys.h\"\n-#include \"ST_DataModelBindings/dpd/mer/euc-test-mer-BksMosaic.h\"\n-#include \"ST_DataModelBindings/dpd/mer/euc-test-mer-SegmentationMap.h\"\n-#include \"ST_DataModelBindings/dpd/mer/euc-test-mer-FinalCatalog.h\"\n+#include \"ST_DataModelBindings/dictionary/sys/euc-sys.h\"\n+#include \"ST_DataModelBindings/dpd/mer/euc-mer-BksMosaic.h\"\n+#include \"ST_DataModelBindings/dpd/mer/euc-mer-SegmentationMap.h\"\n+#include \"ST_DataModelBindings/dpd/mer/euc-mer-FinalCatalog.h\"\n #include \"EL_Image/Wcs.h\"\n #include \"EL_Image/Image.h\"\n #include \"EL_Image/PropertyList.h\"\n@@ -147,7 +147,7 @@ public:\n             std::string cutout_file = mercat_xml->Data().CutoutsCatalogStorage()->DataContainer().FileName();\n             auto tileIndex = mercat_xml->Data().TileIndex();\n             int tileNumber = static_cast<int>(tileIndex);\n-            \n+\n             std::string mer_segmap_ok;\n             mer_segmap_ok = Decon::getSegmap(mer_segmap_files,work_dir,tileNumber);\n             if (mer_segmap_ok.empty()){\n@@ -160,7 +160,7 @@ public:\n             if (mer_mosaic_ok.empty()) {\n                 logger.info(\"Correct Mosaic map not found. Skip this catalog\");\n                 continue;\n-            }            \n+            }\n \n             // get the Segmentation map\n             auto segmap_xml = dpd::mer::segmentationmap::DpdMerSegmentationMap(work_dir + mer_segmap_ok,\n@@ -173,13 +173,13 @@ public:\n                               xml_schema::flags::dont_validate);\n             std::string imageFile = mosaic_xml->Data().DataStorage().DataContainer().FileName();\n             auto mosaicTileIndex = mosaic_xml->Data().TileIndex();\n-            logger.info(\"Imagemap = \"+imageFile+\" Segmap = \"+segmap_file+\" Cat = \"+mercatfile); \n+            logger.info(\"Imagemap = \"+imageFile+\" Segmap = \"+segmap_file+\" Cat = \"+mercatfile);\n             logger.info(\"Tile index: cat = \"+std::to_string(tileNumber)+\" segmap = \"+std::to_string(segMapTileIndex)+\" mosaic = \"+std::to_string(mosaicTileIndex));\n \n             // read and rebin  mosaic and segmap images\n             PropertyList metadata;\n             PropertyList pl_segmap;\n-            Image<int64_t> segmap = Decon::get_segmap(logger, work_dir, segmap_file, pl_segmap); \n+            Image<int64_t> segmap = Decon::get_segmap(logger, work_dir, segmap_file, pl_segmap);\n             Image<double> image = Decon::get_mosaic(logger, work_dir, imageFile, metadata);\n \n             //logger.info(\"done reading mosaic and segmap\");\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_CreateCuts/tests/data/catalog1.xml": [
                        [
                            "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<dpd-mer-finalcatalog:DpdMerFinalCatalog xmlns:dpd-mer-finalcatalog=\"http://euclid.esa.org/schema/dpd/mer/finalcatalog\" xmlns:sys=\"http://euclid.esa.org/schema/sys\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:pro-mer=\"http://euclid.esa.org/schema/pro/mer\" xmlns:bas-cat=\"http://euclid.esa.org/schema/bas/cat\" xmlns:bas-cot=\"http://euclid.esa.org/schema/bas/cot\" xmlns:bas-imp-stc=\"http://euclid.esa.org/schema/bas/imp/stc\" xmlns:bas-dtd=\"http://euclid.esa.org/schema/bas/dtd\" xmlns:bas-utd=\"http://euclid.esa.org/schema/bas/utd\" xmlns:ins=\"http://euclid.esa.org/schema/ins\" xmlns:bas-imp-eso=\"http://euclid.esa.org/schema/bas/imp/eso\" xmlns:bas-fit=\"http://euclid.esa.org/schema/bas/fit\" xmlns:sys-dss=\"http://euclid.esa.org/schema/sys/dss\" xmlns:bas-dqc=\"http://euclid.esa.org/schema/bas/dqc\" xmlns:bas-dqc-mer=\"http://euclid.esa.org/schema/bas/dqc/mer\" xmlns:bas-ppr=\"http://euclid.esa.org/schema/bas/ppr\">\n+<dpd-mer-finalcatalog:DpdMerFinalCatalog xmlns:dpd-mer-finalcatalog=\"http://ecdm.euclid-ec.org/schema/dpd/mer/finalcatalog\" xmlns:sys=\"http://euclid.esa.org/schema/sys\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:pro-mer=\"http://euclid.esa.org/schema/pro/mer\" xmlns:bas-cat=\"http://euclid.esa.org/schema/bas/cat\" xmlns:bas-cot=\"http://euclid.esa.org/schema/bas/cot\" xmlns:bas-imp-stc=\"http://euclid.esa.org/schema/bas/imp/stc\" xmlns:bas-dtd=\"http://euclid.esa.org/schema/bas/dtd\" xmlns:bas-utd=\"http://euclid.esa.org/schema/bas/utd\" xmlns:ins=\"http://euclid.esa.org/schema/ins\" xmlns:bas-imp-eso=\"http://euclid.esa.org/schema/bas/imp/eso\" xmlns:bas-fit=\"http://euclid.esa.org/schema/bas/fit\" xmlns:sys-dss=\"http://euclid.esa.org/schema/sys/dss\" xmlns:bas-dqc=\"http://euclid.esa.org/schema/bas/dqc\" xmlns:bas-dqc-mer=\"http://euclid.esa.org/schema/bas/dqc/mer\" xmlns:bas-ppr=\"http://euclid.esa.org/schema/bas/ppr\">\n  <Header>\n   <ProductId>EUC_MER_SDCFRPROD_RELEASE_SC8_TILE306737_SC8_DEEP_V0_20210803T141326-final_catalog-0</ProductId>\n   <ProductType>DpdMerFinalCatalog</ProductType>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_CreateCuts/tests/data/catalog2.xml": [
                        [
                            "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<dpd-mer-finalcatalog:DpdMerFinalCatalog xmlns:dpd-mer-finalcatalog=\"http://euclid.esa.org/schema/dpd/mer/finalcatalog\" xmlns:sys=\"http://euclid.esa.org/schema/sys\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:pro-mer=\"http://euclid.esa.org/schema/pro/mer\" xmlns:bas-cat=\"http://euclid.esa.org/schema/bas/cat\" xmlns:bas-cot=\"http://euclid.esa.org/schema/bas/cot\" xmlns:bas-imp-stc=\"http://euclid.esa.org/schema/bas/imp/stc\" xmlns:bas-dtd=\"http://euclid.esa.org/schema/bas/dtd\" xmlns:bas-utd=\"http://euclid.esa.org/schema/bas/utd\" xmlns:ins=\"http://euclid.esa.org/schema/ins\" xmlns:bas-imp-eso=\"http://euclid.esa.org/schema/bas/imp/eso\" xmlns:bas-fit=\"http://euclid.esa.org/schema/bas/fit\" xmlns:sys-dss=\"http://euclid.esa.org/schema/sys/dss\" xmlns:bas-dqc=\"http://euclid.esa.org/schema/bas/dqc\" xmlns:bas-dqc-mer=\"http://euclid.esa.org/schema/bas/dqc/mer\" xmlns:bas-ppr=\"http://euclid.esa.org/schema/bas/ppr\">\n+<dpd-mer-finalcatalog:DpdMerFinalCatalog xmlns:dpd-mer-finalcatalog=\"http://ecdm.euclid-ec.org/schema/dpd/mer/finalcatalog\" xmlns:sys=\"http://euclid.esa.org/schema/sys\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:pro-mer=\"http://euclid.esa.org/schema/pro/mer\" xmlns:bas-cat=\"http://euclid.esa.org/schema/bas/cat\" xmlns:bas-cot=\"http://euclid.esa.org/schema/bas/cot\" xmlns:bas-imp-stc=\"http://euclid.esa.org/schema/bas/imp/stc\" xmlns:bas-dtd=\"http://euclid.esa.org/schema/bas/dtd\" xmlns:bas-utd=\"http://euclid.esa.org/schema/bas/utd\" xmlns:ins=\"http://euclid.esa.org/schema/ins\" xmlns:bas-imp-eso=\"http://euclid.esa.org/schema/bas/imp/eso\" xmlns:bas-fit=\"http://euclid.esa.org/schema/bas/fit\" xmlns:sys-dss=\"http://euclid.esa.org/schema/sys/dss\" xmlns:bas-dqc=\"http://euclid.esa.org/schema/bas/dqc\" xmlns:bas-dqc-mer=\"http://euclid.esa.org/schema/bas/dqc/mer\" xmlns:bas-ppr=\"http://euclid.esa.org/schema/bas/ppr\">\n  <Header>\n   <ProductId>EUC_MER_SDCFRPROD_RELEASE_SC8_TILE306737_SC8_DEEP_V0_20210803T141326-final_catalog-0</ProductId>\n   <ProductType>DpdMerFinalCatalog</ProductType>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_CreateCuts/tests/data/mosaic1.xml": [
                        [
                            "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<dpd-mer-bksmosaic:DpdMerBksMosaic xmlns:dpd-mer-bksmosaic=\"http://euclid.esa.org/schema/dpd/mer/bksmosaic\" xmlns:sys=\"http://euclid.esa.org/schema/sys\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:pro-mer=\"http://euclid.esa.org/schema/pro/mer\" xmlns:bas-img=\"http://euclid.esa.org/schema/bas/img\" xmlns:bas-imp-eso=\"http://euclid.esa.org/schema/bas/imp/eso\" xmlns:bas-dtd=\"http://euclid.esa.org/schema/bas/dtd\" xmlns:bas-imp-fits=\"http://euclid.esa.org/schema/bas/imp/fits\" xmlns:ins=\"http://euclid.esa.org/schema/ins\" xmlns:bas-cot=\"http://euclid.esa.org/schema/bas/cot\" xmlns:bas-imp=\"http://euclid.esa.org/schema/bas/imp\" xmlns:bas-imp-stc=\"http://euclid.esa.org/schema/bas/imp/stc\" xmlns:bas-utd=\"http://euclid.esa.org/schema/bas/utd\" xmlns:bas-fit=\"http://euclid.esa.org/schema/bas/fit\" xmlns:sys-dss=\"http://euclid.esa.org/schema/sys/dss\" xmlns:bas-dqc=\"http://euclid.esa.org/schema/bas/dqc\" xmlns:bas-ppr=\"http://euclid.esa.org/schema/bas/ppr\" xmlns:bas-dqc-mer=\"http://euclid.esa.org/schema/bas/dqc/mer\">\n+<dpd-mer-bksmosaic:DpdMerBksMosaic xmlns:dpd-mer-bksmosaic=\"http://ecdm.euclid-ec.org/schema/dpd/mer/bksmosaic\" xmlns:sys=\"http://euclid.esa.org/schema/sys\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:pro-mer=\"http://euclid.esa.org/schema/pro/mer\" xmlns:bas-img=\"http://euclid.esa.org/schema/bas/img\" xmlns:bas-imp-eso=\"http://euclid.esa.org/schema/bas/imp/eso\" xmlns:bas-dtd=\"http://euclid.esa.org/schema/bas/dtd\" xmlns:bas-imp-fits=\"http://euclid.esa.org/schema/bas/imp/fits\" xmlns:ins=\"http://euclid.esa.org/schema/ins\" xmlns:bas-cot=\"http://euclid.esa.org/schema/bas/cot\" xmlns:bas-imp=\"http://euclid.esa.org/schema/bas/imp\" xmlns:bas-imp-stc=\"http://euclid.esa.org/schema/bas/imp/stc\" xmlns:bas-utd=\"http://euclid.esa.org/schema/bas/utd\" xmlns:bas-fit=\"http://euclid.esa.org/schema/bas/fit\" xmlns:sys-dss=\"http://euclid.esa.org/schema/sys/dss\" xmlns:bas-dqc=\"http://euclid.esa.org/schema/bas/dqc\" xmlns:bas-ppr=\"http://euclid.esa.org/schema/bas/ppr\" xmlns:bas-dqc-mer=\"http://euclid.esa.org/schema/bas/dqc/mer\">\n  <Header>\n   <ProductId>EUC_MER_SDCFRPROD_RELEASE_SC8_TILE306737_SC8_DEEP_V0_20210803T141326-all_mosaics-2</ProductId>\n   <ProductType>DpdMerBksMosaic</ProductType>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_CreateCuts/tests/data/mosaic2.xml": [
                        [
                            "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<dpd-mer-bksmosaic:DpdMerBksMosaic xmlns:dpd-mer-bksmosaic=\"http://euclid.esa.org/schema/dpd/mer/bksmosaic\" xmlns:sys=\"http://euclid.esa.org/schema/sys\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:pro-mer=\"http://euclid.esa.org/schema/pro/mer\" xmlns:bas-img=\"http://euclid.esa.org/schema/bas/img\" xmlns:bas-imp-eso=\"http://euclid.esa.org/schema/bas/imp/eso\" xmlns:bas-dtd=\"http://euclid.esa.org/schema/bas/dtd\" xmlns:bas-imp-fits=\"http://euclid.esa.org/schema/bas/imp/fits\" xmlns:ins=\"http://euclid.esa.org/schema/ins\" xmlns:bas-cot=\"http://euclid.esa.org/schema/bas/cot\" xmlns:bas-imp=\"http://euclid.esa.org/schema/bas/imp\" xmlns:bas-imp-stc=\"http://euclid.esa.org/schema/bas/imp/stc\" xmlns:bas-utd=\"http://euclid.esa.org/schema/bas/utd\" xmlns:bas-fit=\"http://euclid.esa.org/schema/bas/fit\" xmlns:sys-dss=\"http://euclid.esa.org/schema/sys/dss\" xmlns:bas-dqc=\"http://euclid.esa.org/schema/bas/dqc\" xmlns:bas-ppr=\"http://euclid.esa.org/schema/bas/ppr\" xmlns:bas-dqc-mer=\"http://euclid.esa.org/schema/bas/dqc/mer\">\n+<dpd-mer-bksmosaic:DpdMerBksMosaic xmlns:dpd-mer-bksmosaic=\"http://ecdm.euclid-ec.org/schema/dpd/mer/bksmosaic\" xmlns:sys=\"http://euclid.esa.org/schema/sys\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:pro-mer=\"http://euclid.esa.org/schema/pro/mer\" xmlns:bas-img=\"http://euclid.esa.org/schema/bas/img\" xmlns:bas-imp-eso=\"http://euclid.esa.org/schema/bas/imp/eso\" xmlns:bas-dtd=\"http://euclid.esa.org/schema/bas/dtd\" xmlns:bas-imp-fits=\"http://euclid.esa.org/schema/bas/imp/fits\" xmlns:ins=\"http://euclid.esa.org/schema/ins\" xmlns:bas-cot=\"http://euclid.esa.org/schema/bas/cot\" xmlns:bas-imp=\"http://euclid.esa.org/schema/bas/imp\" xmlns:bas-imp-stc=\"http://euclid.esa.org/schema/bas/imp/stc\" xmlns:bas-utd=\"http://euclid.esa.org/schema/bas/utd\" xmlns:bas-fit=\"http://euclid.esa.org/schema/bas/fit\" xmlns:sys-dss=\"http://euclid.esa.org/schema/sys/dss\" xmlns:bas-dqc=\"http://euclid.esa.org/schema/bas/dqc\" xmlns:bas-ppr=\"http://euclid.esa.org/schema/bas/ppr\" xmlns:bas-dqc-mer=\"http://euclid.esa.org/schema/bas/dqc/mer\">\n  <Header>\n   <ProductId>EUC_MER_SDCFRPROD_RELEASE_SC8_TILE306737_SC8_DEEP_V0_20210803T141326-all_mosaics-2</ProductId>\n   <ProductType>DpdMerBksMosaic</ProductType>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_CreateCuts/tests/data/segmap.xml": [
                        [
                            "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<dpd-mer-segmentationmap:DpdMerSegmentationMap xmlns:dpd-mer-segmentationmap=\"http://euclid.esa.org/schema/dpd/mer/segmentationmap\" xmlns:sys=\"http://euclid.esa.org/schema/sys\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:pro-mer=\"http://euclid.esa.org/schema/pro/mer\" xmlns:bas-img=\"http://euclid.esa.org/schema/bas/img\" xmlns:bas-imp-eso=\"http://euclid.esa.org/schema/bas/imp/eso\" xmlns:bas-dtd=\"http://euclid.esa.org/schema/bas/dtd\" xmlns:bas-imp-fits=\"http://euclid.esa.org/schema/bas/imp/fits\" xmlns:ins=\"http://euclid.esa.org/schema/ins\" xmlns:bas-cot=\"http://euclid.esa.org/schema/bas/cot\" xmlns:bas-imp=\"http://euclid.esa.org/schema/bas/imp\" xmlns:bas-imp-stc=\"http://euclid.esa.org/schema/bas/imp/stc\" xmlns:bas-utd=\"http://euclid.esa.org/schema/bas/utd\" xmlns:bas-fit=\"http://euclid.esa.org/schema/bas/fit\" xmlns:sys-dss=\"http://euclid.esa.org/schema/sys/dss\" xmlns:bas-dqc=\"http://euclid.esa.org/schema/bas/dqc\" xmlns:bas-dqc-mer=\"http://euclid.esa.org/schema/bas/dqc/mer\" xmlns:bas-ppr=\"http://euclid.esa.org/schema/bas/ppr\">\n+<dpd-mer-segmentationmap:DpdMerSegmentationMap xmlns:dpd-mer-segmentationmap=\"http://ecdm.euclid-ec.org/schema/dpd/mer/segmentationmap\" xmlns:sys=\"http://euclid.esa.org/schema/sys\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:pro-mer=\"http://euclid.esa.org/schema/pro/mer\" xmlns:bas-img=\"http://euclid.esa.org/schema/bas/img\" xmlns:bas-imp-eso=\"http://euclid.esa.org/schema/bas/imp/eso\" xmlns:bas-dtd=\"http://euclid.esa.org/schema/bas/dtd\" xmlns:bas-imp-fits=\"http://euclid.esa.org/schema/bas/imp/fits\" xmlns:ins=\"http://euclid.esa.org/schema/ins\" xmlns:bas-cot=\"http://euclid.esa.org/schema/bas/cot\" xmlns:bas-imp=\"http://euclid.esa.org/schema/bas/imp\" xmlns:bas-imp-stc=\"http://euclid.esa.org/schema/bas/imp/stc\" xmlns:bas-utd=\"http://euclid.esa.org/schema/bas/utd\" xmlns:bas-fit=\"http://euclid.esa.org/schema/bas/fit\" xmlns:sys-dss=\"http://euclid.esa.org/schema/sys/dss\" xmlns:bas-dqc=\"http://euclid.esa.org/schema/bas/dqc\" xmlns:bas-dqc-mer=\"http://euclid.esa.org/schema/bas/dqc/mer\" xmlns:bas-ppr=\"http://euclid.esa.org/schema/bas/ppr\">\n  <Header>\n   <ProductId>EUC_MER_SDCFRPROD_RELEASE_SC8_TILE306737_SC8_DEEP_V0_20210803T141326-final_segmentation_map-0</ProductId>\n   <ProductType>DpdMerSegmentationMap</ProductType>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_CreateCuts/tests/data/segmap1.xml": [
                        [
                            "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<dpd-mer-segmentationmap:DpdMerSegmentationMap xmlns:dpd-mer-segmentationmap=\"http://euclid.esa.org/schema/dpd/mer/segmentationmap\" xmlns:sys=\"http://euclid.esa.org/schema/sys\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:pro-mer=\"http://euclid.esa.org/schema/pro/mer\" xmlns:bas-img=\"http://euclid.esa.org/schema/bas/img\" xmlns:bas-imp-eso=\"http://euclid.esa.org/schema/bas/imp/eso\" xmlns:bas-dtd=\"http://euclid.esa.org/schema/bas/dtd\" xmlns:bas-imp-fits=\"http://euclid.esa.org/schema/bas/imp/fits\" xmlns:ins=\"http://euclid.esa.org/schema/ins\" xmlns:bas-cot=\"http://euclid.esa.org/schema/bas/cot\" xmlns:bas-imp=\"http://euclid.esa.org/schema/bas/imp\" xmlns:bas-imp-stc=\"http://euclid.esa.org/schema/bas/imp/stc\" xmlns:bas-utd=\"http://euclid.esa.org/schema/bas/utd\" xmlns:bas-fit=\"http://euclid.esa.org/schema/bas/fit\" xmlns:sys-dss=\"http://euclid.esa.org/schema/sys/dss\" xmlns:bas-dqc=\"http://euclid.esa.org/schema/bas/dqc\" xmlns:bas-dqc-mer=\"http://euclid.esa.org/schema/bas/dqc/mer\" xmlns:bas-ppr=\"http://euclid.esa.org/schema/bas/ppr\">\n+<dpd-mer-segmentationmap:DpdMerSegmentationMap xmlns:dpd-mer-segmentationmap=\"http://ecdm.euclid-ec.org/schema/dpd/mer/segmentationmap\" xmlns:sys=\"http://euclid.esa.org/schema/sys\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:pro-mer=\"http://euclid.esa.org/schema/pro/mer\" xmlns:bas-img=\"http://euclid.esa.org/schema/bas/img\" xmlns:bas-imp-eso=\"http://euclid.esa.org/schema/bas/imp/eso\" xmlns:bas-dtd=\"http://euclid.esa.org/schema/bas/dtd\" xmlns:bas-imp-fits=\"http://euclid.esa.org/schema/bas/imp/fits\" xmlns:ins=\"http://euclid.esa.org/schema/ins\" xmlns:bas-cot=\"http://euclid.esa.org/schema/bas/cot\" xmlns:bas-imp=\"http://euclid.esa.org/schema/bas/imp\" xmlns:bas-imp-stc=\"http://euclid.esa.org/schema/bas/imp/stc\" xmlns:bas-utd=\"http://euclid.esa.org/schema/bas/utd\" xmlns:bas-fit=\"http://euclid.esa.org/schema/bas/fit\" xmlns:sys-dss=\"http://euclid.esa.org/schema/sys/dss\" xmlns:bas-dqc=\"http://euclid.esa.org/schema/bas/dqc\" xmlns:bas-dqc-mer=\"http://euclid.esa.org/schema/bas/dqc/mer\" xmlns:bas-ppr=\"http://euclid.esa.org/schema/bas/ppr\">\n  <Header>\n   <ProductId>EUC_MER_SDCFRPROD_RELEASE_SC8_TILE306737_SC8_DEEP_V0_20210803T141326-final_segmentation_map-0</ProductId>\n   <ProductType>DpdMerSegmentationMap</ProductType>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_CreateCuts/tests/data/segmap2.xml": [
                        [
                            "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<dpd-mer-segmentationmap:DpdMerSegmentationMap xmlns:dpd-mer-segmentationmap=\"http://euclid.esa.org/schema/dpd/mer/segmentationmap\" xmlns:sys=\"http://euclid.esa.org/schema/sys\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:pro-mer=\"http://euclid.esa.org/schema/pro/mer\" xmlns:bas-img=\"http://euclid.esa.org/schema/bas/img\" xmlns:bas-imp-eso=\"http://euclid.esa.org/schema/bas/imp/eso\" xmlns:bas-dtd=\"http://euclid.esa.org/schema/bas/dtd\" xmlns:bas-imp-fits=\"http://euclid.esa.org/schema/bas/imp/fits\" xmlns:ins=\"http://euclid.esa.org/schema/ins\" xmlns:bas-cot=\"http://euclid.esa.org/schema/bas/cot\" xmlns:bas-imp=\"http://euclid.esa.org/schema/bas/imp\" xmlns:bas-imp-stc=\"http://euclid.esa.org/schema/bas/imp/stc\" xmlns:bas-utd=\"http://euclid.esa.org/schema/bas/utd\" xmlns:bas-fit=\"http://euclid.esa.org/schema/bas/fit\" xmlns:sys-dss=\"http://euclid.esa.org/schema/sys/dss\" xmlns:bas-dqc=\"http://euclid.esa.org/schema/bas/dqc\" xmlns:bas-dqc-mer=\"http://euclid.esa.org/schema/bas/dqc/mer\" xmlns:bas-ppr=\"http://euclid.esa.org/schema/bas/ppr\">\n+<dpd-mer-segmentationmap:DpdMerSegmentationMap xmlns:dpd-mer-segmentationmap=\"http://ecdm.euclid-ec.org/schema/dpd/mer/segmentationmap\" xmlns:sys=\"http://euclid.esa.org/schema/sys\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:pro-mer=\"http://euclid.esa.org/schema/pro/mer\" xmlns:bas-img=\"http://euclid.esa.org/schema/bas/img\" xmlns:bas-imp-eso=\"http://euclid.esa.org/schema/bas/imp/eso\" xmlns:bas-dtd=\"http://euclid.esa.org/schema/bas/dtd\" xmlns:bas-imp-fits=\"http://euclid.esa.org/schema/bas/imp/fits\" xmlns:ins=\"http://euclid.esa.org/schema/ins\" xmlns:bas-cot=\"http://euclid.esa.org/schema/bas/cot\" xmlns:bas-imp=\"http://euclid.esa.org/schema/bas/imp\" xmlns:bas-imp-stc=\"http://euclid.esa.org/schema/bas/imp/stc\" xmlns:bas-utd=\"http://euclid.esa.org/schema/bas/utd\" xmlns:bas-fit=\"http://euclid.esa.org/schema/bas/fit\" xmlns:sys-dss=\"http://euclid.esa.org/schema/sys/dss\" xmlns:bas-dqc=\"http://euclid.esa.org/schema/bas/dqc\" xmlns:bas-dqc-mer=\"http://euclid.esa.org/schema/bas/dqc/mer\" xmlns:bas-ppr=\"http://euclid.esa.org/schema/bas/ppr\">\n  <Header>\n   <ProductId>EUC_MER_SDCFRPROD_RELEASE_SC8_TILE306737_SC8_DEEP_V0_20210803T141326-final_segmentation_map-0</ProductId>\n   <ProductType>DpdMerSegmentationMap</ProductType>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_CreateCuts/tests/src/Utils_test.cpp": [
                        [
                            "@@ -43,10 +43,10 @@ using namespace Decon;\n \n //-----------------------------------------------------------------------------\n \n-BOOST_AUTO_TEST_SUITE (Utils_test)\n+//BOOST_AUTO_TEST_SUITE (Utils_test)\n \n //-----------------------------------------------------------------------------\n-\n+/*\n BOOST_AUTO_TEST_CASE( test_getList ) {\n   \n   // Create logger\n@@ -206,7 +206,7 @@ BOOST_AUTO_TEST_CASE( test_updateWCS ) {\n \n }\n //-------------------------------------------------------------------------------------------------\n+*/\n \n-\n-BOOST_AUTO_TEST_SUITE_END ()\n+//BOOST_AUTO_TEST_SUITE_END ()\n \n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_FluxCalibration/tests/python/FPA_Geometry_test.py": [
                        [
                            "@@ -23,7 +23,7 @@ Created on: 07/20/20\n Author: user\n \"\"\"\n \n-import py.test\n+import pytest\n import numpy as np\n import unittest\n from SIR_FluxCalibration.FPA_Geometry import idetseq2xy,idetseq2string, idetxy2seq\n@@ -57,12 +57,12 @@ class FPA_GeometryTestCase(unittest.TestCase):\n \n     def test_idetxy2seq(self):\n         \"\"\" test idetxy2seq \"\"\"\n-  \n+\n         ix=3\n         iy=2\n         det = idetxy2seq(ix,iy)\n-        \n-        self.assertEqual(det,10,'Error converting to sequence')         \n+\n+        self.assertEqual(det,10,'Error converting to sequence')\n \n     def test_detectorRotated(self):\n         \"\"\" test detectorRotated \"\"\"\n@@ -81,7 +81,7 @@ class FPA_GeometryTestCase(unittest.TestCase):\n         x,y = det2pixel(idet,xpix,ypix)\n \n         self.assertAlmostEqual(x,1536,5)\n-        self.assertAlmostEqual(y,1536,5)     \n+        self.assertAlmostEqual(y,1536,5)\n \n     def test_pixel2det(self):\n         \"\"\" test pixel2det \"\"\"\n@@ -92,7 +92,7 @@ class FPA_GeometryTestCase(unittest.TestCase):\n         ix,iy = pixel2det(idet,x,y)\n \n         self.assertAlmostEqual(ix,0.5,5)\n-        self.assertAlmostEqual(iy,0.5,5)       \n+        self.assertAlmostEqual(iy,0.5,5)\n \n     def test_det2focalplane(self):\n         \"\"\" test det2focalplane \"\"\"\n@@ -108,7 +108,7 @@ class FPA_GeometryTestCase(unittest.TestCase):\n \n     def test_focalplane2det(self):\n         \"\"\" test focalplane2det \"\"\"\n-       \n+\n         idet = 10\n         x = 0.372569716\n         y = -0.14374088\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_FluxCalibration/tests/python/FluxCalibratedSpectraDq_test.py": [
                        [
                            "@@ -23,7 +23,7 @@ Created on: 12/14/21\n Author: D.Maino\n \"\"\"\n \n-import py.test\n+import pytest\n import numpy as np\n import unittest\n from unittest.mock import MagicMock\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_FluxCalibration/tests/python/FluxUtils_test.py": [
                        [
                            "@@ -23,7 +23,7 @@ Created on: 08/13/20\n Author: shemmati\n \"\"\"\n \n-import py.test\n+import pytest\n import warnings\n from SIR_FluxCalibration.Utils import *\n import unittest\n@@ -38,7 +38,7 @@ class FluxUtilsTestCase(unittest.TestCase):\n     def setUp(self):\n         \"\"\" setup the class \"\"\"\n         unittest.TestCase.setUp(self)\n-        \n+\n     def test_coordGapsX(self):\n         \"\"\" test coordGaspX \"\"\"\n         out = coordGapsX(n=1)\n@@ -78,7 +78,7 @@ class FluxUtilsTestCase(unittest.TestCase):\n         sigma = 1.\n         out = gaussian(x,mu,sigma)\n         self.assertAlmostEqual(out,1./np.sqrt(2.*np.pi)/sigma,'Error in gaussian')\n-                \n+\n \n if __name__ == '__main__':\n     unittest.main()\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_InstrumentModels/python/SIR_InstrumentModels/Global2DModel.py": [
                        [
                            "@@ -23,6 +23,8 @@\n #\n \n import os\n+from datetime import datetime\n+\n import numpy as np\n \n import ElementsKernel.Logging as log\n@@ -91,26 +93,40 @@ class Global2DModel(CGlobal2DModel):\n         else:\n             #xml_file is XML stream\n             _model.xml = cls.parse_xml(xml_file)\n-        _model._set_grism(order, gwa_tilt)\n+        _model._set_grism(order)\n         return _model\n \n \n-    def _set_grism(self, order, gwa_tilt):\n+    def _get_xml_grism_section(self):\n+        \"\"\"Returns the XML section related to the given GWA position and tilt\n+        \"\"\"\n         grism_name = self.getGWAPosition()\n+        gwa_tilt = self.getGWATilt()\n \n         models = getattr(self.xml.Data, grism_name, [])\n         for model in models:\n             if model.GWATilt == gwa_tilt:\n-                break\n-        else:\n-            raise AttributeError(f\"No model from {grism_name} and GWA tilt {gwa_tilt}\")\n+                return model\n+\n+        raise AttributeError(f\"No model from {grism_name} and GWA tilt {gwa_tilt}\")\n \n+\n+    def _get_xml_order_section(self, order:int):\n+        \"\"\"Returns the XML section related to the given spectrum order\n+        \"\"\"\n+        model = self._get_xml_grism_section()\n         for spectral_order in model.SpectralOrder:\n             if spectral_order.Order == order:\n-                break\n-        else:\n-            raise AttributeError(f\"No spectral order {order} from {grism_name} and GWA tilt {gwa_tilt}\")\n+                return spectral_order\n+\n+        grism_name = self.getGWAPosition()\n+        gwa_tilt = self.getGWATilt()\n+        raise AttributeError(f\"No spectral order {order} from {grism_name} and GWA tilt {gwa_tilt}\")\n+\n \n+    def _set_grism(self, order):\n+\n+        spectral_order = self._get_xml_order_section(order)\n         self.xml_order = spectral_order\n \n         deg = spectral_order.LocalModelDeg\n@@ -132,7 +148,7 @@ class Global2DModel(CGlobal2DModel):\n         self.setXRange(*spectral_order.GlobalRanges.DoubleRow1)\n         self.setYRange(*spectral_order.GlobalRanges.DoubleRow2)\n \n-        ref_lambda = models = getattr(spectral_order, 'ReferenceLambda', None)\n+        ref_lambda = getattr(spectral_order, 'ReferenceLambda', None)\n         if ref_lambda is not None:\n             self.set1DRange(*spectral_order.LocalRanges, ref_lambda)\n         else:\n@@ -181,6 +197,9 @@ class Global2DModel(CGlobal2DModel):\n             model = sir_stub.specificDegreeMatrix(Degree=degree, Matrix=matrix)\n             self.xml_order.Model.append(model)\n \n+        model = self._get_xml_grism_section()\n+        model.Date = datetime.utcnow().isoformat(sep='T', timespec='microseconds')+'Z'\n+\n         return\n \n \n@@ -209,7 +228,7 @@ class Global2DModel(CGlobal2DModel):\n             models.pop(0)\n \n \n-    def keep_xml_grism_tilt(self, grism_name:str, gwa_tilt:int):\n+    def _keep_xml_grism_tilt(self, grism_name:str, gwa_tilt:int):\n         \"\"\"Clean XML leaving only model related to the input grism and tilt\n         \"\"\"\n         for grism in GrismModel.getPositionNameList():\n@@ -225,7 +244,7 @@ class Global2DModel(CGlobal2DModel):\n         \"\"\"\n         grism_name = self.getGWAPosition()\n         gwa_tilt = self.getGWATilt()\n-        self.keep_xml_grism_tilt(grism_name, gwa_tilt)\n+        self._keep_xml_grism_tilt(grism_name, gwa_tilt)\n \n \n     def remove_xml_parameters(self):\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_InstrumentModels/tests/data/EUC_SIR_CRVMODEL_PVRH2.xml": [
                        [
                            "@@ -1,30 +1,24 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<cr:DpdSirCrvModel xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n- xmlns:dqc=\"http://euclid.esa.org/schema/bas/dqc\"\n- xmlns:ppr=\"http://euclid.esa.org/schema/bas/ppr\"\n- xmlns:sir=\"http://euclid.esa.org/schema/pro/sir\"\n- xmlns:cr=\"http://euclid.esa.org/schema/dpd/sir/crvmodel\"\n- xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n- xsi:schemaLocation=\"http://euclid.esa.org/schema/dpd/sir/crvmodel\">\n-\n-<!-- CRV model calibrated using NIS_SC8_79171_PN data -->\n-\n-    <Header>\n-        <ProductId>0.1.2</ProductId>\n-        <ProductType>DpdSirCrvModel</ProductType>\n-        <SoftwareName>SIR_Calibration</SoftwareName>\n-        <SoftwareRelease>1.0</SoftwareRelease>\n-        <ProdSDC>SDC-IT</ProdSDC>\n-        <DataSetRelease>SPECTROSCOPIC DISTORTIONS</DataSetRelease>\n-        <Purpose>DATA_RELEASE</Purpose>\n-        <PlanId>UNKNOWN</PlanId>\n-        <PPOId>UNKNOWN</PPOId>\n-        <PipelineDefinitionId>UNKNOWN</PipelineDefinitionId>\n-        <PpoStatus>UNKNOWN</PpoStatus>\n-        <ManualValidationStatus>VALID</ManualValidationStatus>\n-        <Curator>Marco Fumana</Curator>\n-        <CreationDate>2020-12-03T14:07:00.0</CreationDate>\n-    </Header>\n+<dpd-sir-crvmodel:DpdSirCrvModel xmlns:dpd-sir-crvmodel=\"http://ecdm.euclid-ec.org/schema/dpd/sir/crvmodel\">\n+ <Header>\n+  <ProductId>EUC_SIR_CRVMODEL_PVRH2_DM9.1-TIPS_004</ProductId>\n+  <ProductType>DpdSirCrvModel</ProductType>\n+  <SoftwareName>SIR</SoftwareName>\n+  <SoftwareRelease>soft</SoftwareRelease>\n+  <ProdSDC>SDC-IT</ProdSDC>\n+  <DataSetRelease>TIPS_004</DataSetRelease>\n+  <Purpose>UNKNOWN</Purpose>\n+  <PlanId>UNKNOWN</PlanId>\n+  <PPOId>UNKNOWN</PPOId>\n+  <PipelineDefinitionId>UNKNOWN</PipelineDefinitionId>\n+  <PpoStatus>HAPPY</PpoStatus>\n+  <ManualValidationStatus>UNKNOWN</ManualValidationStatus>\n+  <ExpirationDate>1970-01-01T00:00:00.001000Z</ExpirationDate>\n+  <ToBePublished>0</ToBePublished>\n+  <Published>0</Published>\n+  <Curator>SIR_PF</Curator>\n+  <CreationDate>2022-06-30T14:27:54.801606Z</CreationDate>\n+ </Header>\n     <!-- Model with Extra Tilt from RA,DEC to stars absorpions -->\n     <Data>\n         <ValidityRange>\n@@ -33,6 +27,7 @@\n         </ValidityRange>\n         <CalibrationID>UNKNOWN</CalibrationID>\n         <RGS000>\n+   <Date>2022-06-30T14:27:54.801641Z</Date>\n             <GWATilt>0</GWATilt>\n             <ExtraTilt>0.0</ExtraTilt>\n             <SpectralOrder>\n@@ -132,6 +127,7 @@\n             </SpectralOrder>\n         </RGS000>\n         <RGS000>\n+   <Date>2022-06-30T14:27:54.801641Z</Date>\n             <GWATilt>-4</GWATilt>\n             <ExtraTilt>0.0</ExtraTilt>\n             <SpectralOrder>\n@@ -231,6 +227,7 @@\n             </SpectralOrder>\n         </RGS000>\n         <RGS180>\n+   <Date>2022-06-30T14:27:54.801641Z</Date>\n             <GWATilt>0</GWATilt>\n             <ExtraTilt>0.0</ExtraTilt>\n             <SpectralOrder>\n@@ -330,6 +327,7 @@\n             </SpectralOrder>\n         </RGS180>\n         <RGS180>\n+   <Date>2022-06-30T14:27:54.801641Z</Date>\n             <GWATilt>4</GWATilt>\n             <ExtraTilt>0.0</ExtraTilt>\n             <SpectralOrder>\n@@ -429,6 +427,7 @@\n             </SpectralOrder>\n         </RGS180>\n \t\t<BGS000>\n+   <Date>2022-06-30T14:27:54.801641Z</Date>\n             <GWATilt>0</GWATilt>\n             <ExtraTilt>0.0</ExtraTilt>\n             <SpectralOrder>\n@@ -517,25 +516,4 @@\n             </SpectralOrder>\n         </BGS000>\n     </Data>\n-    <Parameters>\n-        <Parameter>\n-            <Key>OPT model</Key>\n-            <Description>Optical model used to calibrate the current model</Description>\n-            <Files filestatus=\"PROPOSED\">\n-                <FileName>EUC_SIR_OPTMODEL_ASTRODIST-SC8_GSIR_2020-09-11T15.24.00Z_01.xml</FileName>\n-            </Files>\n-        </Parameter>\n-        <Parameter>\n-            <Key>IDS model</Key>\n-            <Description>Inverse dispersion solution used to calibrate the current model</Description>\n-            <Files filestatus=\"PROPOSED\">\n-                <FileName>EUC_SIR_IDSMODEL_SPECDIST-SC8_2020-12-03T14.07.00Z_01.xml</FileName>\n-            </Files>\n-        </Parameter>\n-        <Parameter>\n-            <Key>DataSetRelease</Key>\n-            <Description>Data release of the PN simulazion used to calibrate the current model</Description>\n-            <StringValue>SC8_GSIR_NIS_PN_R1</StringValue>\n-        </Parameter>\n-    </Parameters>\n-</cr:DpdSirCrvModel>\n+</dpd-sir-crvmodel:DpdSirCrvModel>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_InstrumentModels/tests/data/EUC_SIR_IDSMODEL_PVRH2.xml": [
                        [
                            "@@ -1,30 +1,24 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<id:DpdSirIdsModel xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n- xmlns:dqc=\"http://euclid.esa.org/schema/bas/dqc\"\n- xmlns:ppr=\"http://euclid.esa.org/schema/bas/ppr\"\n- xmlns:sir=\"http://euclid.esa.org/schema/pro/sir\"\n- xmlns:id=\"http://euclid.esa.org/schema/dpd/sir/idsmodel\"\n- xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n- xsi:schemaLocation=\"http://euclid.esa.org/schema/dpd/sir/idsmodel\">\n-\n-<!-- IDS model calibrated using NIS_SC8_79171_PN data -->\n-\n-    <Header>\n-        <ProductId>0.0.1</ProductId>\n-        <ProductType>DpdSirIdsModel</ProductType>\n-        <SoftwareName>SIR_Calibration</SoftwareName>\n-        <SoftwareRelease>1.0</SoftwareRelease>\n-        <ProdSDC>SDC-IT</ProdSDC>\n-        <DataSetRelease>NO SPECTROSCOPIC DISTORTIONS</DataSetRelease>\n-        <Purpose>DATA_RELEASE</Purpose>\n-        <PlanId>UNKNOWN</PlanId>\n-        <PPOId>UNKNOWN</PPOId>\n-        <PipelineDefinitionId>UNKNOWN</PipelineDefinitionId>\n-        <PpoStatus>UNKNOWN</PpoStatus>\n-        <ManualValidationStatus>VALID</ManualValidationStatus>\n-        <Curator>Marco Fumana</Curator>\n-        <CreationDate>2020-09-14T17:00:00.0</CreationDate>\n-    </Header>\n+<dpd-sir-idsmodel:DpdSirIdsModel xmlns:dpd-sir-idsmodel=\"http://ecdm.euclid-ec.org/schema/dpd/sir/idsmodel\">\n+ <Header>\n+  <ProductId>EUC_SIR_IDSMODEL_PVRH2_START</ProductId>\n+  <ProductType>DpdSirIdsModel</ProductType>\n+  <SoftwareName>SIR</SoftwareName>\n+  <SoftwareRelease>soft</SoftwareRelease>\n+  <ProdSDC>SDC-IT</ProdSDC>\n+  <DataSetRelease>PVRH2_FG_ALL</DataSetRelease>\n+  <Purpose>UNKNOWN</Purpose>\n+  <PlanId>UNKNOWN</PlanId>\n+  <PPOId>UNKNOWN</PPOId>\n+  <PipelineDefinitionId>UNKNOWN</PipelineDefinitionId>\n+  <PpoStatus>UNKNOWN</PpoStatus>\n+  <ManualValidationStatus>UNKNOWN</ManualValidationStatus>\n+  <ExpirationDate>1970-01-01T00:00:00.001000Z</ExpirationDate>\n+  <ToBePublished>0</ToBePublished>\n+  <Published>0</Published>\n+  <Curator>SIR_PF</Curator>\n+  <CreationDate>2023-06-20T00:00:00.00001Z</CreationDate>\n+ </Header>\n     <!-- Model with Extra Tilt from RA,DEC to stars absorpions -->\n     <Data>\n         <ValidityRange>\n@@ -33,6 +27,7 @@\n         </ValidityRange>\n         <CalibrationID>UNKNOWN</CalibrationID>\n         <RGS000>\n+   <Date>2023-06-20T00:00:00.00001Z</Date>\n             <GWATilt>0</GWATilt>\n             <ExtraTilt>0</ExtraTilt>\n             <SpectralOrder>\n@@ -106,6 +101,7 @@\n             </SpectralOrder>\n         </RGS000>\n         <RGS000>\n+   <Date>2023-06-20T00:00:00.00001Z</Date>\n             <GWATilt>-4</GWATilt>\n             <ExtraTilt>0</ExtraTilt>\n             <SpectralOrder>\n@@ -179,6 +175,7 @@\n             </SpectralOrder>\n         </RGS000>\n \t\t<RGS180>\n+   <Date>2023-06-20T00:00:00.00001Z</Date>\n             <GWATilt>0</GWATilt>\n             <ExtraTilt>0</ExtraTilt>\n             <SpectralOrder>\n@@ -252,6 +249,7 @@\n             </SpectralOrder>\n         </RGS180>\n         <RGS180>\n+   <Date>2023-06-20T00:00:00.00001Z</Date>\n             <GWATilt>4</GWATilt>\n             <ExtraTilt>0</ExtraTilt>\n             <SpectralOrder>\n@@ -326,6 +324,7 @@\n         </RGS180>\n \n         <BGS000>\n+   <Date>2023-06-20T00:00:00.00001Z</Date>\n             <GWATilt>0</GWATilt>\n             <ExtraTilt>0</ExtraTilt>\n             <SpectralOrder>\n@@ -403,4 +402,4 @@\n \n \n     </Data>\n-</id:DpdSirIdsModel>\n+</dpd-sir-idsmodel:DpdSirIdsModel>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_InstrumentModels/tests/data/EUC_SIR_OPTMODEL_PVRH2.xml": [
                        [
                            "@@ -0,0 +1,225 @@\n+<?xml version='1.0' encoding='utf-8'?>\n+<opt:DpdSirOptModel xmlns:opt=\"http://ecdm.euclid-ec.org/schema/dpd/sir/optmodel\">\n+  <Header>\n+    <ProductId>9ba96b8e-91bf-4bdb-8eb9-0f7123a80f1a</ProductId>\n+    <ProductType>DpdSirOptModel</ProductType>\n+    <SoftwareName>SIR</SoftwareName>\n+    <SoftwareRelease>soft</SoftwareRelease>\n+    <ProdSDC>SDC-IT</ProdSDC>\n+    <DataSetRelease>RELEASE</DataSetRelease>\n+    <Purpose>UNKNOWN</Purpose>\n+    <PlanId>UNKNOWN</PlanId>\n+    <PPOId>UNKNOWN</PPOId>\n+    <PipelineDefinitionId>UNKNOWN</PipelineDefinitionId>\n+    <PpoStatus>HAPPY</PpoStatus>\n+    <ManualValidationStatus>VALID</ManualValidationStatus>\n+    <ExpirationDate>1970-01-01T00:00:00.001Z</ExpirationDate>\n+    <ToBePublished>0</ToBePublished>\n+    <Published>0</Published>\n+    <Curator>SIR_PF</Curator>\n+    <CreationDate>2023-06-22T11:04:49.992482Z</CreationDate>\n+  </Header>\n+  <Data><ValidityRange><TimestampStart>2023-06-22T11:04:49.992516Z</TimestampStart><TimestampEnd>2023-06-22T11:04:49.992516Z</TimestampEnd></ValidityRange><CalibrationID>2023-06-22T11:04:49.992</CalibrationID><RGS000>\n+\t\t\t<Date>2023-06-15T00:00:00.00001Z</Date>\n+\t\t\t<GWATilt>0</GWATilt>\n+\t\t\t<ExtraTilt>0.0</ExtraTilt>\n+\t\t\t<Reference>\n+\t\t\t\t<Order>1</Order>\n+\t\t\t\t<OptXModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>-0.8470317006241187 -0.0007329752524380762 -9.238767537219907e-06 2.4568757781585708e-08 6.094367368238319e-10 0.9976934027231233 3.302144893203493e-05 2.6095995965131057e-07 7.100148803427352e-10 1.1878003556573832e-11 -1.4599657444284452e-05 -8.444903571620753e-09 9.442627405164854e-10 -4.874182480137609e-12 -9.799228657889054e-14 1.754338469501429e-07 2.504719820435828e-10 7.242358503730087e-12 -9.344765442525969e-14 -1.4546621366992477e-15 1.4173331121605516e-09 1.2875824470799182e-12 -1.0611168275377174e-13 6.005943269191422e-16 7.031376732255902e-18</Data>\n+\t\t\t\t</OptXModel>\n+\t\t\t\t<OptYModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>0.00963169292243463 0.994644215969226 9.886044817097665e-06 2.842725932016803e-07 -1.1295500923928862e-10 -0.0005252101744662712 8.905691450593719e-06 4.131890982899921e-08 -4.816805588990279e-11 -7.539709695542535e-12 -2.3705676324286306e-05 3.232716025595945e-07 -1.4642220416608957e-09 -3.410190955261269e-12 1.68516944418138e-13 8.177001731087757e-08 -5.971617580940646e-11 -1.1342675496892702e-11 -3.357478313414594e-14 2.0047581228784677e-15 -2.0907280802456726e-10 3.6162554429258524e-13 1.6577804234089905e-13 5.542109844897646e-16 -1.9570759852808713e-17</Data>\n+\t\t\t\t</OptYModel>\n+\t\t\t\t<ReferenceLambda>12525.567</ReferenceLambda>\n+\t\t\t</Reference>\n+\t\t\t<Pivot>\n+\t\t\t\t<OptXModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>2.3173222205529997 -0.0003398919077648374 -4.225026574914423e-06 5.1378247846330354e-09 4.7802068939136e-11 0.9975733161055025 3.5932344269269363e-05 2.7816914649989326e-07 -2.370429412560693e-10 6.482281216970022e-12 -6.788205949696292e-07 9.486710662732069e-09 -3.292842328185997e-11 -5.812290205973421e-12 8.257612488524931e-15 2.3100842073252726e-07 -1.652673030494536e-10 7.05071533924318e-12 3.514805843186839e-14 -1.3944661960013128e-15 -4.9407266566056236e-11 -2.0766155670364184e-12 -1.1765658751944054e-14 1.0794296377845018e-15 1.6914051427341032e-18</Data>\n+\t\t\t\t</OptXModel>\n+\t\t\t\t<OptYModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>0.0014223788802794068 0.9946211106412338 8.980798885438934e-06 2.994932054196998e-07 -4.448253056004898e-11 -0.0005210960736689065 2.5816012466589947e-06 2.3810662078829563e-08 2.4469278522297543e-10 -5.958275742309934e-12 -2.5281631027431525e-05 3.033551359084199e-07 7.13937830265823e-11 3.831702887825348e-12 -1.507649379130023e-14 7.709378605650915e-08 2.0164084172060325e-10 -5.570620070590232e-12 -3.695151221333004e-14 1.3166555281481226e-15 4.79960034615327e-11 8.216146712183104e-13 -5.8926168797278584e-15 -5.144986564209288e-16 2.110618356826238e-18</Data>\n+\t\t\t\t</OptYModel>\n+\t\t\t</Pivot>\n+\t\t\t<Displacements>\n+\t\t\t\t<Order>0</Order>\n+\t\t\t\t<OptXModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>-13.667970870002819 -0.0003886536874327263 -4.5043093837546005e-06 3.9282950476353514e-09 7.756925826313225e-11 -0.0023581253254973122 3.759749380816054e-05 2.98305413397805e-07 2.4998303491194867e-11 2.2837358380459482e-12 5.125926890947596e-06 5.977248742402436e-08 4.1701291094450825e-10 -4.702218950310862e-12 -6.533948091732527e-14 2.1886664706542944e-07 -1.5722732911591782e-10 3.187594802752584e-12 -2.0996239320728997e-14 -5.54304177110522e-16 -5.124544719240929e-10 -9.019639381360807e-12 -7.713540761348868e-14 1.0536112146672963e-15 1.3305778012751487e-17</Data>\n+\t\t\t\t</OptXModel>\n+\t\t\t\t<OptYModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>0.03784159994794076 -0.005388875238745051 1.2496073204431151e-05 3.2030554362589236e-07 -5.455407086307218e-10 -0.001059008551253764 8.642048180830056e-06 1.1372746712585768e-07 -2.5031651518227775e-09 -1.7037776289144675e-11 -2.1616635037150335e-05 2.5354650756415404e-07 -6.6077855711491e-09 7.894299526849199e-12 9.262990604559996e-13 1.6491622566271933e-07 -8.435137531367016e-10 -2.224261280190263e-11 4.1364315358994734e-13 4.3998181933064664e-15 -2.840849119094364e-10 9.7673608636787e-12 6.972026874739189e-13 -9.312460691206538e-16 -1.1557435624164767e-16</Data>\n+\t\t\t\t</OptYModel>\n+\t\t\t\t<ReferenceLambda>18660.0</ReferenceLambda>\n+\t\t\t</Displacements>\n+\t\t</RGS000>\n+\t<RGS000>\n+\t\t\t<Date>2023-06-15T00:00:00.00001Z</Date>\n+\t\t\t<GWATilt>-4</GWATilt>\n+\t\t\t<ExtraTilt>0.0</ExtraTilt>\n+\t\t\t<Reference>\n+\t\t\t\t<Order>1</Order>\n+\t\t\t\t<OptXModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>-0.8398486096086064 -0.0008483671169176618 -9.202706654862566e-06 4.862526318304734e-08 7.672527165780385e-10 0.9976633325634465 3.433675232248533e-05 2.8231001504193516e-07 5.613035214389167e-10 9.40630689017e-12 -1.5076241699151649e-05 1.1028542900890613e-07 2.9004092996430477e-09 -2.990959111879824e-11 -5.786095820396881e-13 1.799120279234228e-07 1.2425355047139592e-10 6.3189050863185896e-12 -6.892336122202009e-14 -1.4774491763328875e-15 1.5147960628133017e-09 -1.731239804761605e-11 -4.572123623785688e-13 4.567728587170968e-15 8.911896992895671e-17</Data>\n+\t\t\t\t</OptXModel>\n+\t\t\t\t<OptYModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>0.2258701252487415 0.9947696906473417 1.2393160907212333e-05 2.6869487712337587e-07 -4.230551136244845e-10 -0.00044430283060629613 1.0087606116565453e-05 -2.1580001597008e-08 -3.3963211896228696e-10 9.957267978640113e-13 -2.104685801565618e-05 1.9037743802308632e-07 -3.373152362748062e-09 2.163133193548971e-11 4.3562274424124823e-13 7.338115386567248e-08 -2.456717592204977e-10 -3.3121671850109154e-13 -1.5213507070400496e-15 9.416643431558542e-17 -4.0965047137308337e-10 1.907184573043922e-11 3.375200672256263e-13 -3.315088605861438e-15 -4.552649980838057e-17</Data>\n+\t\t\t\t</OptYModel>\n+\t\t\t\t<ReferenceLambda>12525.567</ReferenceLambda>\n+\t\t\t</Reference>\n+\t\t\t<Pivot>\n+\t\t\t\t<OptXModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>2.3173222205529997 -0.0003398919077648374 -4.225026574914423e-06 5.1378247846330354e-09 4.7802068939136e-11 0.9975733161055025 3.5932344269269363e-05 2.7816914649989326e-07 -2.370429412560693e-10 6.482281216970022e-12 -6.788205949696292e-07 9.486710662732069e-09 -3.292842328185997e-11 -5.812290205973421e-12 8.257612488524931e-15 2.3100842073252726e-07 -1.652673030494536e-10 7.05071533924318e-12 3.514805843186839e-14 -1.3944661960013128e-15 -4.9407266566056236e-11 -2.0766155670364184e-12 -1.1765658751944054e-14 1.0794296377845018e-15 1.6914051427341032e-18</Data>\n+\t\t\t\t</OptXModel>\n+\t\t\t\t<OptYModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>0.0014223788802794068 0.9946211106412338 8.980798885438934e-06 2.994932054196998e-07 -4.448253056004898e-11 -0.0005210960736689065 2.5816012466589947e-06 2.3810662078829563e-08 2.4469278522297543e-10 -5.958275742309934e-12 -2.5281631027431525e-05 3.033551359084199e-07 7.13937830265823e-11 3.831702887825348e-12 -1.507649379130023e-14 7.709378605650915e-08 2.0164084172060325e-10 -5.570620070590232e-12 -3.695151221333004e-14 1.3166555281481226e-15 4.79960034615327e-11 8.216146712183104e-13 -5.8926168797278584e-15 -5.144986564209288e-16 2.110618356826238e-18</Data>\n+\t\t\t\t</OptYModel>\n+\t\t\t</Pivot>\n+\t\t\t<Displacements>\n+\t\t\t\t<Order>0</Order>\n+\t\t\t\t<OptXModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>-13.6278590462286 -0.00037755562167134105 -4.888499980749657e-06 8.211686864598313e-10 1.4089506004968348e-10 -0.002396677201545322 3.903525308184198e-05 3.0417920124165747e-07 -3.458606619717764e-10 3.3655189545384785e-12 4.602974933751874e-06 5.2386225303325065e-08 1.619532313687727e-09 1.6145641324975638e-13 -2.4362520038628315e-13 2.291998833461277e-07 -5.253534926130107e-10 1.4367940682692785e-12 6.093336785142371e-14 -9.255917943506647e-16 -3.977745468971609e-10 -6.316781979887156e-12 -3.117678504326748e-13 -4.214463876117327e-16 4.44352782963149e-17</Data>\n+\t\t\t\t</OptXModel>\n+\t\t\t\t<OptYModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>1.1512788076633975 -0.005235087605953811 3.7358229499398296e-06 2.842646774881408e-07 1.1280590703575469e-09 -0.0013143852442322672 1.0367957604029207e-05 8.574389266696482e-08 -1.830615836196215e-09 -2.474218941427423e-12 -3.002825453591131e-05 3.0035859240467957e-07 6.386199651394061e-09 -1.1725725671711191e-11 -1.3488826837914154e-12 2.608270422847978e-07 -1.623249756693309e-09 -2.8003157486410622e-11 2.592891294761123e-13 -1.8929161913643877e-17 6.242171222796425e-10 -1.4738767938759792e-12 -1.164700405270979e-12 2.6969880623530206e-15 2.39551560017085e-16</Data>\n+\t\t\t\t</OptYModel>\n+\t\t\t\t<ReferenceLambda>18660.0</ReferenceLambda>\n+\t\t\t</Displacements>\n+\t\t</RGS000>\n+\t<RGS180>\n+\t\t\t<Date>2023-06-15T00:00:00.00001Z</Date>\n+\t\t\t<GWATilt>0</GWATilt>\n+\t\t\t<ExtraTilt>0.0</ExtraTilt>\n+\t\t\t<Reference>\n+\t\t\t\t<Order>1</Order>\n+\t\t\t\t<OptXModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>5.482785808313656 4.020531898774526e-05 -1.1694541281501392e-06 -1.0615572732007517e-08 -2.0301346940781732e-10 0.9976597108045524 3.5261044898235534e-05 3.3391896494297845e-07 -3.251793942376139e-10 -8.655772459301568e-12 1.0039224557421584e-05 7.185142657221976e-09 1.5575021411200034e-10 2.6002776734004417e-13 -7.862652282377046e-14 2.432645754803379e-07 1.3101036845912644e-10 2.8338624225573817e-12 -1.0755531421582515e-14 3.0055951830405593e-16 -1.1222529453876364e-09 9.218493666343224e-13 4.2584559765731276e-14 -6.102876445066191e-16 3.241363514993214e-18</Data>\n+\t\t\t\t</OptXModel>\n+\t\t\t\t<OptYModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>-0.007433304439629862 0.9944933178443099 7.6089469426018994e-06 3.2032899847482176e-07 9.251200522704315e-11 -0.0005463456287996601 -1.1192906077233788e-06 8.025580743697264e-10 3.785364193480034e-10 -2.0424699882333213e-12 -2.6843256559860298e-05 3.752279377071974e-07 1.954821606944905e-09 -7.664768582666038e-12 -2.035445815355653e-13 7.812653031890371e-08 -1.0744444143766402e-10 -3.1126566794938064e-12 1.0468110388112754e-14 6.781031668235813e-16 3.919538059091364e-10 -1.2574043864838349e-11 -2.8985852188545304e-13 1.6777340075666684e-15 3.232311561611292e-17</Data>\n+\t\t\t\t</OptYModel>\n+\t\t\t\t<ReferenceLambda>12525.567</ReferenceLambda>\n+\t\t\t</Reference>\n+\t\t\t<Pivot>\n+\t\t\t\t<OptXModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>2.3197035799684946 -0.00032067956086308247 -4.444628334655722e-06 1.545740015206163e-09 -3.9515534960843283e-11 0.9975406063235216 3.358241832691292e-05 2.9368921382031836e-07 3.10988048168717e-10 3.4366190967622275e-12 -2.8926690072458676e-06 1.2813834028650153e-08 6.794466361734444e-10 -5.708594768727767e-12 -5.395926199884152e-14 2.36816278220536e-07 2.438096078662139e-10 5.106878452482752e-12 -6.426910540716008e-14 -1.071366638089545e-15 2.7899541763060755e-10 -3.8688053215001436e-12 -1.3936874822307844e-13 1.3566500051484633e-15 1.9076651787095077e-17</Data>\n+\t\t\t\t</OptXModel>\n+\t\t\t\t<OptYModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>-0.0009409685133148216 0.9945948758441099 8.904094947607619e-06 3.0455200369123656e-07 1.1771646573831676e-10 -0.0004855803092535249 4.777653707078051e-06 7.979043776315932e-09 -2.566973199652793e-10 -2.7784227720495895e-12 -2.3130284449663805e-05 3.057280311677727e-07 -3.9896783467239583e-10 2.387146412467174e-12 -3.373078770250673e-14 7.026240878218071e-08 -1.6356314210465656e-10 -1.876601838702715e-12 4.260811896306432e-14 5.297627822342502e-16 -2.6455849895359264e-10 1.270848442695804e-12 7.547679899486021e-14 -3.502871084849328e-16 1.097820740804639e-18</Data>\n+\t\t\t\t</OptYModel>\n+\t\t\t</Pivot>\n+\t\t\t<Displacements>\n+\t\t\t\t<Order>0</Order>\n+\t\t\t\t<OptXModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>18.306035471121845 -0.0002842444211081104 -4.6233779305984845e-06 1.2434629288533157e-08 1.5094708327398107e-10 -0.0024678998668525996 3.868862696094984e-05 3.513174272242449e-07 -7.136215985022794e-10 -1.32903227672991e-11 -1.2356413945997151e-05 1.589142392392548e-08 -7.623398807353983e-10 -1.465406643267546e-11 2.4559258715984767e-13 2.4347875806809224e-07 -2.856770979642958e-10 9.232014607962256e-15 1.0954772621894209e-13 8.924665885655376e-16 1.800225920951252e-09 -1.7378064202446603e-11 9.963722321720261e-14 5.342490886338392e-15 -3.762102481856773e-17</Data>\n+\t\t\t\t</OptXModel>\n+\t\t\t\t<OptYModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>-0.00349991384069546 -0.005624907097572848 -5.964358998015938e-07 3.7629874441491787e-07 9.837442631953999e-10 -0.0004123969777967894 6.428645690920468e-06 2.3153047300249036e-07 -2.529649086735705e-10 -2.0622114724822768e-11 -2.800912685118445e-05 3.778985376669792e-07 6.880696409740665e-09 -2.6741081053075097e-11 -7.062499814969705e-13 6.344206714321336e-08 -6.927395568724662e-10 -2.5054905119727396e-11 1.3186149450210358e-13 9.56823694483129e-16 2.3994092339264164e-10 -6.414372038794084e-12 -6.110395804085739e-13 2.3025504902049865e-15 4.787581301402141e-17</Data>\n+\t\t\t\t</OptYModel>\n+\t\t\t\t<ReferenceLambda>18660.0</ReferenceLambda>\n+\t\t\t</Displacements>\n+\t\t</RGS180>\n+\t<RGS180>\n+\t\t\t<Date>2023-06-15T00:00:00.00001Z</Date>\n+\t\t\t<GWATilt>4</GWATilt>\n+\t\t\t<ExtraTilt>0.0</ExtraTilt>\n+\t\t\t<Reference>\n+\t\t\t\t<Order>1</Order>\n+\t\t\t\t<OptXModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>5.477785928475267 5.9299936857405526e-05 -1.4529223775846427e-06 -1.1020767566909628e-08 -2.6738236343656666e-10 0.997656221513566 3.608631500260708e-05 3.386531837683091e-07 -5.010884410224052e-10 -8.32314291531252e-12 8.63164124955269e-06 1.2526153838202829e-08 5.480828019040698e-10 -4.26533804141679e-12 -1.1570518164514107e-13 2.468737427515331e-07 -4.671225606083882e-11 2.8827698376432417e-12 5.059261578759823e-14 -1.6010064289315394e-16 -8.673684999699804e-10 -5.942768973219171e-13 -5.0830684400795865e-14 2.557034128380746e-16 1.422869969875066e-17</Data>\n+\t\t\t\t</OptXModel>\n+\t\t\t\t<OptYModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>0.211720000423067 0.9945850101921909 8.814983526864739e-06 3.0502467085638934e-07 -3.1915853281257934e-12 -0.0005868388285923487 -3.6009424939423745e-08 3.6971859379258764e-08 1.4314362666663803e-10 -4.880362157129859e-12 -2.5030516395981612e-05 3.3852562682951664e-07 1.4796965001957588e-09 -1.3909136428788638e-12 -1.97419532817013e-13 8.524421020095847e-08 -1.1158080046922212e-10 -7.72174989190594e-12 1.2423176100987987e-14 1.0230120756924586e-15 1.5779554477660532e-10 -7.58911647844769e-12 -2.1676071900170988e-13 9.286281374281334e-16 2.780904159358568e-17</Data>\n+\t\t\t\t</OptYModel>\n+\t\t\t\t<ReferenceLambda>12525.567</ReferenceLambda>\n+\t\t\t</Reference>\n+\t\t\t<Pivot>\n+\t\t\t\t<OptXModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>2.3197035799684946 -0.00032067956086308247 -4.444628334655722e-06 1.545740015206163e-09 -3.9515534960843283e-11 0.9975406063235216 3.358241832691292e-05 2.9368921382031836e-07 3.10988048168717e-10 3.4366190967622275e-12 -2.8926690072458676e-06 1.2813834028650153e-08 6.794466361734444e-10 -5.708594768727767e-12 -5.395926199884152e-14 2.36816278220536e-07 2.438096078662139e-10 5.106878452482752e-12 -6.426910540716008e-14 -1.071366638089545e-15 2.7899541763060755e-10 -3.8688053215001436e-12 -1.3936874822307844e-13 1.3566500051484633e-15 1.9076651787095077e-17</Data>\n+\t\t\t\t</OptXModel>\n+\t\t\t\t<OptYModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>-0.0009409685133148216 0.9945948758441099 8.904094947607619e-06 3.0455200369123656e-07 1.1771646573831676e-10 -0.0004855803092535249 4.777653707078051e-06 7.979043776315932e-09 -2.566973199652793e-10 -2.7784227720495895e-12 -2.3130284449663805e-05 3.057280311677727e-07 -3.9896783467239583e-10 2.387146412467174e-12 -3.373078770250673e-14 7.026240878218071e-08 -1.6356314210465656e-10 -1.876601838702715e-12 4.260811896306432e-14 5.297627822342502e-16 -2.6455849895359264e-10 1.270848442695804e-12 7.547679899486021e-14 -3.502871084849328e-16 1.097820740804639e-18</Data>\n+\t\t\t\t</OptYModel>\n+\t\t\t</Pivot>\n+\t\t\t<Displacements>\n+\t\t\t\t<Order>0</Order>\n+\t\t\t\t<OptXModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>18.26790971970682 -0.00026457004776499204 -3.249631262093795e-06 -7.808273218744155e-09 -3.7256274068752374e-11 -0.0024690945548686873 3.767781588587577e-05 1.2354569982648142e-07 -4.313238119753068e-10 3.040804276569149e-11 -3.982976785017855e-06 1.307826967318237e-07 -2.7765475682455806e-09 -3.57655621584848e-11 6.520863993359079e-13 1.9404097456245404e-07 -1.2339977810873183e-09 5.7481660181412024e-11 3.2623837053062754e-13 -1.0782046255914243e-14 2.1605022306217635e-10 -3.4484720441714606e-11 7.127213628777253e-13 8.634912403453452e-15 -1.559827361199075e-16</Data>\n+\t\t\t\t</OptXModel>\n+\t\t\t\t<OptYModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>1.0943628645544579 -0.005614646534315736 8.66538790553608e-06 3.9119471421823534e-07 3.2313521301075746e-10 -0.00021473428791442695 1.4643164691444769e-05 2.2511065159342248e-07 -1.8344856101151812e-09 -2.1508771465256673e-11 -2.320962943173846e-05 3.887930897476262e-07 2.909186785133919e-09 -4.808828325590452e-11 -3.8460222613544753e-13 3.436387648068952e-08 -2.806795374300276e-09 -4.3769790251639376e-11 6.465280263841186e-13 2.8799408868590216e-15 -1.2870010412957742e-11 -1.6171485146326556e-11 -2.829575213982241e-13 7.41761404486103e-15 1.2336401824276294e-17</Data>\n+\t\t\t\t</OptYModel>\n+\t\t\t\t<ReferenceLambda>18660.0</ReferenceLambda>\n+\t\t\t</Displacements>\n+\t\t</RGS180>\n+\t<BGS000>\n+\t\t\t<Date>2023-06-15T00:00:00.00001Z</Date>\n+\t\t\t<GWATilt>0</GWATilt>\n+\t\t\t<ExtraTilt>0.0</ExtraTilt>\n+\t\t\t<Reference>\n+\t\t\t\t<Order>1</Order>\n+\t\t\t\t<OptXModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>4.356052583980533 -0.0003309054196855774 -3.8315508336386905e-06 2.247238597331178e-09 -5.311190483718288e-11 0.9975888625695571 3.4530417599538265e-05 3.034000801025793e-07 6.651975794568336e-11 1.7361301775532463e-12 -2.108055085236754e-06 2.0219068015021665e-11 -1.6572485022615988e-10 -1.1274102028906712e-12 5.959191829433238e-14 2.308154968969599e-07 7.055402156319356e-11 2.4962820361594802e-12 -1.1470342409046672e-14 -5.093144978076068e-16 1.0779931425764462e-10 -9.405138125926921e-14 2.20174469780185e-14 1.0253242983944557e-16 -8.438246447086558e-18</Data>\n+\t\t\t\t</OptXModel>\n+\t\t\t\t<OptYModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>-0.002088105774483007 0.994578166079031 7.940492449720096e-06 3.084947688236202e-07 1.0896644476365534e-10 -0.0005386418036213022 4.182491615205837e-06 1.0190180725393754e-08 -2.6808107937285236e-12 -2.6156872451613583e-12 -2.5363037757036417e-05 3.2290052918370273e-07 8.665513574035722e-10 -2.948355664175122e-12 -1.0760394545114915e-13 7.862169126118964e-08 -4.9942125109565646e-11 -2.7965710968894074e-12 7.366214590466387e-15 6.152579451782471e-16 8.56556040219417e-11 -1.9649726129906196e-12 -8.059666610475776e-14 4.880860509613236e-16 1.055930054245581e-17</Data>\n+\t\t\t\t</OptYModel>\n+\t\t\t\t<ReferenceLambda>12525.567</ReferenceLambda>\n+\t\t\t</Reference>\n+\t\t\t<Pivot>\n+\t\t\t\t<OptXModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>2.317931925982356 -0.0003754785657363504 -4.922196839734702e-06 4.446254629226664e-09 1.6483176684158285e-10 0.9975859601688833 3.585921846679127e-05 2.7351769986415397e-07 -2.482616730442905e-10 6.025049957276848e-12 -6.829711784147111e-07 3.265107366483573e-08 1.776038951924671e-10 -1.8514017417325707e-12 -9.629090622242042e-14 2.2699613101151811e-07 -1.9559260692545692e-10 9.906166629692422e-12 5.037128447694148e-14 -1.6248924540894406e-15 -5.810365899482522e-11 -5.212241928798945e-12 -1.680925459081542e-14 2.7794412035709286e-16 1.6867322636580128e-17</Data>\n+\t\t\t\t</OptXModel>\n+\t\t\t\t<OptYModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>0.0007711138415893316 0.9946564774942717 9.586678524957804e-06 3.0032097870134834e-07 -1.391489712937126e-10 -0.0005354935669952057 2.50620427021727e-06 3.2925187371229264e-08 3.2590385415762386e-10 -6.353919940649969e-12 -2.5322309800234442e-05 2.7966183903313445e-07 1.8490377569963434e-11 1.0319262523896415e-12 4.913294673416927e-14 8.128843826369762e-08 2.4492876372539417e-10 -8.395562622470422e-12 -6.317678657379511e-14 1.5052538066857294e-15 6.687125059269081e-11 3.988820189994929e-12 -2.1407637593822654e-14 7.364927415386469e-17 -7.35692911199737e-18</Data>\n+\t\t\t\t</OptYModel>\n+\t\t\t</Pivot>\n+\t\t\t<Displacements>\n+\t\t\t\t<Order>0</Order>\n+\t\t\t\t<OptXModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>-13.045867299149739 -0.0005679580620729355 -5.0970207186710225e-06 2.4308740638068276e-07 -2.497097592204252e-09 -0.0022039763658122493 6.571910208217017e-06 1.0258045795401982e-06 3.3958655038949896e-09 -1.1194967506795561e-10 -3.0789764134224574e-07 8.401558739427732e-07 -1.4664397516760505e-08 -2.378818520155915e-10 4.026178270216263e-12 2.1707933571851577e-07 4.914444429795178e-09 -1.5723389942172733e-10 -4.561313987433309e-13 2.2780575701507825e-14 -2.2094870311646143e-11 -1.3571783715516115e-10 2.9898930031498173e-12 3.153276691154292e-14 -6.575985043810297e-16</Data>\n+\t\t\t\t</OptXModel>\n+\t\t\t\t<OptYModel>\n+\t\t\t\t\t<Shape>5 5</Shape>\n+\t\t\t\t\t<Data>0.042463913935677625 -0.005762915938495626 -3.385515479891774e-05 1.8505068921884315e-06 -1.2883029213394147e-08 -0.0010889100444343067 -8.378970911582539e-05 2.3875981056196377e-06 1.8525095839282962e-08 -4.860937343223177e-10 -3.5456730440408815e-05 1.8294072404705637e-06 -1.531418922958753e-08 -8.818940721829232e-10 1.1491614239613305e-11 4.775143662930517e-07 5.350124535971966e-09 -4.451830841647326e-10 -1.1169961728541679e-12 7.732557356398826e-14 -2.5846425107357975e-09 -1.2240845790874618e-10 3.916286428473146e-12 7.808854654431339e-14 -1.4525751821568208e-15</Data>\n+\t\t\t\t</OptYModel>\n+\t\t\t\t<ReferenceLambda>13380.0</ReferenceLambda>\n+\t\t\t</Displacements>\n+\t\t</BGS000>\n+\t</Data>\n+  <Parameters><Parameter>\n+\t\t\t<Key>BGS000_0_0th_order_number</Key>\n+\t\t\t<Description>BGS000_0: number of 0th orders features used for optical model calibration</Description>\n+\t\t\t<IntValue>10968</IntValue>\n+\t\t\t<Unit>Number</Unit>\n+\t\t</Parameter>\n+\t\t</Parameters>\n+</opt:DpdSirOptModel>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_InstrumentModels/tests/data/EUC_SIR_OPTMODEL_REAL-DM9-PV_2022-03-29.xml": [
                        [
                            "@@ -1,381 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<op:DpdSirOptModel xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n- xmlns:dqc=\"http://euclid.esa.org/schema/bas/dqc\"\n- xmlns:ppr=\"http://euclid.esa.org/schema/bas/ppr\"\n- xmlns:sir=\"http://euclid.esa.org/schema/pro/sir\"\n- xmlns:op=\"http://euclid.esa.org/schema/dpd/sir/optmodel\"\n- xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n- xsi:schemaLocation=\"http://euclid.esa.org/schema/dpd/sir/optmodel\">\n-    <Header>\n-        <ProductId>0.1.1</ProductId>\n-        <ProductType>DpdSirOptModel</ProductType>\n-        <SoftwareName>SIR_Calibration</SoftwareName>\n-        <SoftwareRelease>1.0</SoftwareRelease>\n-        <ProdSDC>SDC-IT</ProdSDC>\n-        <DataSetRelease>ASTROMETRIC DISTORTIONS</DataSetRelease>\n-        <Purpose>DATA_RELEASE</Purpose>\n-        <PlanId>UNKNOWN</PlanId>\n-        <PPOId>UNKNOWN</PPOId>\n-        <PipelineDefinitionId>UNKNOWN</PipelineDefinitionId>\n-        <PpoStatus>UNKNOWN</PpoStatus>\n-        <ManualValidationStatus>VALID</ManualValidationStatus>\n-        <Curator>Marco Fumana</Curator>\n-        <CreationDate>2020-09-11T15:00:00.0</CreationDate>\n-    </Header>\n-    <!-- Model with Extra Tilt from RA,DEC to stars absorpions and pivot point -->\n-    <Data>\n-        <ValidityRange>\n-            <TimestampStart>2006-05-04T18:13:51.0</TimestampStart>\n-            <TimestampEnd>2006-05-04T18:13:51.0</TimestampEnd>\n-        </ValidityRange>\n-        <CalibrationID>UNKNOWN</CalibrationID>\n-        <RGS000>\n-            <GWATilt>0</GWATilt>\n-            <ExtraTilt>0.0</ExtraTilt>\n-            <Reference>\n-                <Order>1</Order>\n-\t\t        <OptXModel>\n-\t\t            <Shape>4 4</Shape>\n-\t\t            <Data>\n--5.5144625e+00  6.8031537e-04  2.4817200e-06 -1.5140813e-09\n- 9.9660999e-01  2.6973554e-05  3.8031794e-07  1.4455779e-09\n--8.2392235e-06 -1.1600882e-07  8.1092794e-10  2.5281437e-11\n- 3.4614919e-07  2.5925431e-09 -2.2685187e-11 -6.7000051e-13\n-\t\t            </Data>\n-\t\t        </OptXModel>\n-\t\t        <OptYModel>\n-\t\t            <Shape>4 4</Shape>\n-\t\t            <Data>\n- 5.1305220e-03  9.9461854e-01  8.8242377e-06  3.0217643e-07\n--1.2409734e-04 -8.2895131e-06  1.1467819e-08 -2.4229507e-11\n--2.5494790e-05  3.1059361e-07  2.2494007e-11  1.1483869e-12\n- 1.1189400e-08  2.0179414e-12 -3.0830893e-12 -6.7654216e-17\n-\t\t            </Data>\n-\t\t        </OptYModel>\n-                <ReferenceLambda>12525.567</ReferenceLambda>\n-            </Reference>\n-            <Pivot>\n-\t\t        <OptXModel>\n-\t\t            <Shape>4 4</Shape>\n-\t\t            <Data>\n- 3.10027735e+00  8.17752199e-03 -8.07976257e-06 -1.63473006e-06\n- 4.16060244e-03 -3.97735337e-04  7.39763784e-07  8.55017796e-08\n- 8.65158736e-05 -6.73540966e-06  1.48523217e-08  1.18717566e-09\n--1.83622929e-06  1.57873374e-07 -2.40188029e-10 -3.11846857e-11\n-\t\t            </Data>\n-\t\t        </OptXModel>\n-\t\t        <OptYModel>\n-\t\t            <Shape>4 4</Shape>\n-\t\t            <Data>\n--9.93377933e-01  8.21183754e-02 -1.33001841e-04 -1.52373329e-05\n- 3.11574245e-02 -4.08183270e-03  1.21884443e-05  8.90169603e-07\n- 7.35423089e-04 -7.11665810e-05  1.51782298e-07  1.24735302e-08\n--1.60614712e-05  1.63518684e-06 -3.91333210e-09 -3.27270080e-10\n-\t\t            </Data>\n-\t\t        </OptYModel>\n-            </Pivot>\n-            <Displacements>\n-\t\t        <Order>0</Order>\n-\t\t\t\t    <OptXModel>\n-\t\t\t\t        <Shape>4 4</Shape>\n-\t\t\t\t        <Data>\n--1.28763657e+01 -3.31424351e-04  5.67030293e-06  6.51625953e-09\n- 1.08245295e-04  5.76583261e-06  5.90757736e-08 -1.70221170e-10\n- 1.34542461e-05  1.53939126e-07 -1.89942284e-09 -4.77172746e-11\n- 1.26707960e-07 -1.33226763e-10 -2.22587504e-11 -2.44475447e-13\n-\t\t\t\t        </Data>\n-\t\t\t\t    </OptXModel>\n-\t\t\t\t    <OptYModel>\n-\t\t\t\t        <Shape>4 4</Shape>\n-\t\t\t\t        <Data>\n--8.9227697e-03  1.9118405e-04  7.1111702e-07 -2.1659638e-08\n--1.5753729e-04  8.4964968e-06  3.0497507e-08 -9.4442310e-10\n- 6.5612778e-07  1.4705195e-09 -1.2908838e-10  9.1793890e-13\n- 2.6116076e-08 -9.4324437e-10 -8.3964918e-12  2.6590831e-13\n-\t\t\t\t        </Data>\n-\t\t\t\t    </OptYModel>\n-\t\t\t\t    <ReferenceLambda>18660.0</ReferenceLambda>\n-            </Displacements>\n-        </RGS000>\n-        <RGS000>\n-            <GWATilt>-4</GWATilt>\n-            <ExtraTilt>0.0</ExtraTilt>\n-\t\t\t<Reference>\n-\t\t        <Order>1</Order>\n-\t\t        <OptXModel>\n-\t\t            <Shape>5 5</Shape>\n-\t\t            <Data>\n--5.5376835e+00  1.5496463e-03  2.9692193e-05 -1.8089031e-07  -3.1446632e-09\n- 9.9728090e-01  3.0476542e-05  2.6247289e-07  6.2588157e-11  -2.9638514e-11\n- 2.4584879e-05 -4.5711931e-07 -2.0267777e-08  7.4507511e-11   1.8949425e-12\n- 2.0609514e-07  1.4278712e-09  2.3764990e-11 -3.3232792e-13   1.7211709e-15\n--4.1856936e-09  5.0618176e-11  2.3208518e-12 -3.1523178e-15  -8.6946238e-17\n-\t\t            </Data>\n-\t\t        </OptXModel>\n-\t\t        <OptYModel>\n-\t\t            <Shape>5 5</Shape>\n-\t\t            <Data>\n- 2.30904579e-01  9.94530916e-01  6.25243410e-06  3.13193596e-07   3.46517481e-10\n--1.48992985e-04 -8.70926306e-06 -1.69711711e-09  3.65787400e-11   4.58078020e-12\n--2.69168522e-05  3.50904884e-07  2.03317541e-09 -4.35562697e-12  -2.10109707e-13\n- 1.40989869e-08  5.95719030e-11 -9.14379683e-13  1.02140518e-14  -3.42607887e-16\n- 2.22444285e-10 -3.92752497e-12 -1.70474745e-13 -1.01915004e-16  5.59719372e-18\n-\t\t            </Data>\n-\t\t        </OptYModel>\n-\t\t        <ReferenceLambda>12525.567</ReferenceLambda>\n-\t\t\t</Reference>\n-\t\t\t<Pivot>\n-\t\t        <OptXModel>\n-\t\t            <Shape>5 5</Shape>\n-\t\t            <Data>\n- 3.26122560e+00 -2.65766404e-03 -6.29479528e-05  4.72028896e-07   8.33197934e-09\n--9.72004789e-04 -1.09670327e-04  2.01660415e-06  2.16725227e-08  -3.05249428e-10\n--6.03587116e-05  3.91323899e-06  2.72899741e-08 -7.89218604e-10  -7.90576404e-13\n- 2.72957266e-07  3.98711328e-08 -9.24661123e-10 -7.12357052e-12   1.56056311e-13\n- 8.35457419e-09 -9.16628478e-10  5.98725701e-12  1.67469156e-13  -1.75877333e-15\n-\t\t            </Data>\n-\t\t        </OptXModel>\n-\t\t        <OptYModel>\n-\t\t            <Shape>5 5</Shape>\n-\t\t            <Data>\n- 7.43942911e-01 -4.53372066e-02 -7.40742233e-04  1.00457962e-05   9.22644290e-08\n--2.38279564e-02 -3.95348155e-03  8.38910232e-05  7.68116388e-07  -1.44315138e-08\n--9.98332746e-04  1.18661774e-04 -4.42572531e-07 -2.46842184e-08   1.29052022e-10\n- 9.66589204e-06  1.47866512e-06 -3.77020667e-08 -2.64993245e-10   6.44369330e-12\n- 8.51777436e-08 -3.13280525e-08  3.99675118e-10  6.01119926e-12  -7.83961399e-14\n-\t\t            </Data>\n-\t\t        </OptYModel>\n-            </Pivot>\n-            <Displacements>\n-\t\t        <Order>0</Order>\n-\t\t        <OptXModel>\n-\t\t            <Shape>5 5</Shape>\n-\t\t            <Data>\n--1.27998123e+01 -1.09679624e-03 -2.31858576e-05  1.63132427e-07   2.94801339e-09\n--4.63359058e-04  1.49718835e-05  3.04702553e-07 -2.21886864e-09   5.16831022e-12\n--1.53412111e-05  7.56845111e-08  1.36280960e-08 -6.29096775e-12  -1.19435017e-12\n- 2.09532118e-07 -4.86684826e-09 -6.11724005e-11  1.07373832e-12  -2.50754278e-15\n- 3.35626282e-09  2.43112197e-11 -1.65545355e-12 -1.09021949e-14   3.91159815e-17\n-\t\t            </Data>\n-\t\t        </OptXModel>\n-\t\t        <OptYModel>\n-\t\t            <Shape>5 5</Shape>\n-\t\t            <Data>\n- 8.8843787e-01  2.4064980e-04  2.9302610e-06 -2.4017140e-08  -4.6150461e-10\n- 1.0028947e-05  5.4059783e-06 -8.7493390e-09 -1.8366997e-10  -3.7939651e-12\n- 1.3150420e-06 -6.4666210e-08 -2.9480134e-09  1.0641099e-11   4.7297062e-13\n--8.3289251e-09 -1.1182344e-10 -2.9591884e-12  4.1826785e-14   1.5550170e-15\n--2.0288837e-10  1.0007051e-11  3.9170056e-13 -8.1722416e-16  -6.6894003e-17\n-\t\t            </Data>\n-\t\t        </OptYModel>\n-\t\t        <ReferenceLambda>18660.0</ReferenceLambda>\n-            </Displacements>\n-        </RGS000>\n-        <RGS180>\n-            <GWATilt>0</GWATilt>\n-            <ExtraTilt>0.0</ExtraTilt>\n-\t\t\t<Reference>\n-\t\t        <Order>1</Order>\n-\t\t        <OptXModel>\n-\t\t            <Shape>4 4</Shape>\n-\t\t            <Data>\n- 8.8205427e-01 -8.1132166e-05 -5.3584063e-07 -8.7779881e-09\n- 9.9702120e-01  3.7321690e-05  4.8170722e-07  2.9016789e-10\n- 4.2801184e-06  8.5104148e-08  1.0649575e-09 -3.7055248e-11\n- 3.1405193e-07  1.0062742e-09 -2.8308370e-11 -5.4628871e-13\n-\t\t            </Data>\n-\t\t        </OptXModel>\n-\t\t        <OptYModel>\n-\t\t            <Shape>4 4</Shape>\n-\t\t            <Data>\n--2.3702979e-03  9.9458468e-01  8.7751523e-06  3.0145929e-07\n--1.4755689e-04  8.4261410e-07 -5.5373448e-09 -1.2924062e-10\n--2.5176181e-05  3.0955835e-07 -6.2835959e-11  9.7510888e-13\n--8.0347036e-09 -3.0034641e-11  2.5027758e-12  2.8494568e-14\n-\t\t            </Data>\n-\t\t        </OptYModel>\n-\t\t        <ReferenceLambda>12525.567</ReferenceLambda>\n-\t\t\t</Reference>\n-\t\t\t<Pivot>\n-\t\t        <OptXModel>\n-\t\t            <Shape>4 4</Shape>\n-\t\t            <Data>\n--3.18690394e+00  3.27529490e-04  7.87926080e-08  3.23762274e-08\n- 1.84936558e-04  1.74575163e-05 -2.44800520e-07 -5.44583954e-09\n--1.35574524e-06 -7.46621553e-08 -1.70764809e-09  1.51450137e-11\n--9.10170797e-08 -4.54109525e-09  4.98007745e-11  1.31813754e-12\n-\t\t            </Data>\n-\t\t        </OptXModel>\n-\t\t        <OptYModel>\n-\t\t            <Shape>4 4</Shape>\n-\t\t            <Data>\n--3.12543898e-01  5.22133237e-03  1.66328473e-04 -1.03219771e-06\n--5.05862097e-03  8.16262753e-05 -2.58980992e-07 -4.32113454e-08\n- 1.33208637e-04 -5.32618964e-06 -2.97808939e-08  1.62674814e-09\n- 1.41460063e-06 -4.96514099e-08 -1.19217947e-10  1.93667226e-11\n-\t\t            </Data>\n-\t\t        </OptYModel>\n-            </Pivot>\n-\t\t\t<Displacements>\n-\t\t\t\t<Order>0</Order>\n-\t\t        <OptXModel>\n-\t\t            <Shape>4 4</Shape>\n-\t\t            <Data>\n- 1.2871453e+01  2.3852102e-04  2.8147624e-06  4.1499106e-08\n- 1.2395531e-04  2.4473702e-06 -1.7096409e-07 -1.4750583e-09\n--7.1807299e-06 -9.1220500e-08 -6.2849281e-10  4.1206039e-11\n--1.8472747e-08 -1.5528485e-09  2.9584335e-11  6.6288294e-13\n-\t\t            </Data>\n-\t\t        </OptXModel>\n-\t\t        <OptYModel>\n-\t\t            <Shape>4 4</Shape>\n-\t\t            <Data>\n- 2.5076433e-03  1.4584660e-04 -7.7705003e-08 -7.9498559e-09\n--1.1413891e-05 -4.7973208e-06  1.2314959e-08  9.1156103e-11\n--2.0368695e-07  1.8115370e-09  6.9404420e-11  9.6914870e-13\n- 1.4161780e-08  8.1496233e-12 -3.4929705e-12 -2.3499299e-14\n-\t\t            </Data>\n-\t\t        </OptYModel>\n-\t\t        <ReferenceLambda>18660.0</ReferenceLambda>\n-\t\t\t</Displacements>\n-        </RGS180>\n-        <RGS180>\n-            <GWATilt>4</GWATilt>\n-            <ExtraTilt>0.0</ExtraTilt>\n-\t\t\t<Reference>\n-\t\t        <Order>1</Order>\n-\t\t        <OptXModel>\n-\t\t            <Shape>4 4</Shape>\n-\t\t            <Data>\n- 8.53327036e-01  2.67866999e-04  1.09914690e-05 -7.14226189e-08\n- 9.96637344e-01  4.53809043e-05  4.60273441e-07 -3.55123575e-09\n- 1.27773965e-05 -2.71058525e-07 -7.99047939e-10  7.13953341e-11\n- 4.09321729e-07 -2.72973466e-09 -3.25357519e-11  9.34578803e-13\n-\t\t            </Data>\n-\t\t        </OptXModel>\n-\t\t        <OptYModel>\n-\t\t            <Shape>4 4</Shape>\n-\t\t            <Data>\n- 2.1925008e-01  9.9457669e-01  9.1204420e-06  2.9617149e-07\n--1.7452240e-04 -1.3795216e-07  1.0644726e-08  1.3073986e-10\n--2.4835346e-05  3.0052615e-07  1.7621460e-11  4.2241766e-12\n- 1.6880222e-09  1.6366641e-10 -1.2043699e-12 -1.5043522e-14\n-\t\t            </Data>\n-\t\t        </OptYModel>\n-\t\t        <ReferenceLambda>12525.567</ReferenceLambda>\n-\t\t\t</Reference>\n-\t\t\t<Pivot>\n-\t\t        <OptXModel>\n-\t\t            <Shape>4 4</Shape>\n-\t\t            <Data>\n--3.15539463e+00  1.20912861e-05 -1.17652842e-05  9.50163794e-08\n- 4.61314059e-04  1.38599768e-05 -2.04845749e-07 -3.15894338e-09\n--1.17768122e-05  2.37599415e-07  5.52681825e-10 -7.88273276e-11\n--1.80040148e-07 -1.75962484e-09  5.23634341e-11  1.84595843e-13\n-\t\t            </Data>\n-\t\t        </OptXModel>\n-\t\t        <OptYModel>\n-\t\t            <Shape>4 4</Shape>\n-\t\t            <Data>\n--5.74019822e-01  4.98299754e-03  1.71981239e-04 -9.74252140e-07\n--3.52661690e-03  7.29294170e-05 -5.35239400e-07 -3.10759637e-08\n- 1.71834432e-04 -3.60765580e-06 -4.06106212e-08  1.08323470e-09\n- 1.23601167e-06 -4.01695330e-08  5.54845596e-11  1.59199675e-11\n-\t\t            </Data>\n-\t\t        </OptYModel>\n-            </Pivot>\n-\t\t\t<Displacements>\n-\t\t        <Order>0</Order>\n-\t\t        <OptXModel>\n-\t\t            <Shape>4 4</Shape>\n-\t\t            <Data>\n- 1.2847987e+01  1.3309717e-04 -5.0450908e-06  3.7468908e-08\n- 4.2775250e-04 -6.2625622e-06 -1.2647172e-07  1.4257893e-09\n--1.3237706e-05  2.0187645e-07  9.3821928e-10 -4.0428438e-11\n--7.4345053e-08  2.0246347e-09  2.1463581e-11 -5.5165594e-13\n-\t\t            </Data>\n-\t\t        </OptXModel>\n-\t\t        <OptYModel>\n-\t\t            <Shape>4 4</Shape>\n-\t\t            <Data>\n- 9.01340067e-01  1.51088112e-04 -6.13951443e-07 -2.25833219e-09\n- 5.72267527e-05 -3.50462869e-06 -1.15787628e-08 -2.95953484e-10\n--1.07099731e-06  6.96795155e-09  1.03188014e-10 -9.56158763e-13\n--3.08774517e-09 -2.77397660e-10  1.56723939e-12  5.72094455e-14\n-\t\t            </Data>\n-\t\t        </OptYModel>\n-\t\t        <ReferenceLambda>18660.0</ReferenceLambda>\n-\t\t\t</Displacements>\n-        </RGS180>\n-        <BGS000>\n-            <GWATilt>0</GWATilt>\n-            <ExtraTilt>0.0</ExtraTilt>\n-\t\t\t<Reference>\n-\t\t        <Order>1</Order>\n-\t\t        <OptXModel>\n-\t\t            <Shape>4 4</Shape>\n-\t\t            <Data>\n--2.8302628e-01  5.1050726e-04  7.1380382e-06 -2.5509507e-08\n- 9.9711859e-01  3.1195799e-05  2.5540592e-07  5.7487703e-10\n- 4.7035646e-06 -4.0722398e-08 -1.0503298e-09  5.4317661e-12\n- 2.6190452e-07  5.4772720e-10  1.6292353e-11 -4.1685839e-14\n-\t\t            </Data>\n-\t\t        </OptXModel>\n-\t\t        <OptYModel>\n-\t\t            <Shape>4 4</Shape>\n-\t\t            <Data> \n- 1.20270252e-03  9.94606674e-01  8.75129990e-06  3.01989076e-07\n--1.37699768e-04 -3.51233757e-06  2.90063440e-09 -1.06759046e-10\n--2.53868420e-05  3.11521944e-07 -9.39870404e-12  1.06359366e-12\n- 1.69723080e-09 -7.19708737e-11 -1.72833969e-13  2.57294186e-14\n-\t\t            </Data>\n-\t\t        </OptYModel>\n-\t\t        <ReferenceLambda>12525.567</ReferenceLambda>\n-\t\t\t</Reference>\n-\t\t\t<Pivot>\n-\t\t        <OptXModel>\n-\t\t            <Shape>4 4</Shape>\n-\t\t            <Data>\n-                        0.0  0.0  0.0  0.0\n-                        0.0  0.0  0.0  0.0\n-                        0.0  0.0  0.0  0.0\n-                        0.0  0.0  0.0  0.0\n-\t\t            </Data>\n-\t\t        </OptXModel>\n-\t\t        <OptYModel>\n-\t\t            <Shape>4 4</Shape>\n-\t\t            <Data>\n-                        0.0  0.0  0.0  0.0\n-                        0.0  0.0  0.0  0.0\n-                        0.0  0.0  0.0  0.0\n-                        0.0  0.0  0.0  0.0\n-\t\t            </Data>\n-\t\t        </OptYModel>\n-            </Pivot>\n-\t\t\t<Displacements>\n-\t\t\t\t<Order>0</Order>\n-\t\t        <OptXModel>\n-\t\t            <Shape>4 4</Shape>\n-\t\t            <Data>\n--1.7462584e+01 -1.7142296e-04 -3.3929773e-06  2.5541794e-08\n--2.2843294e-04  3.7868158e-06  4.7868895e-08 -5.8546590e-10\n--2.6549678e-06  2.9907369e-08  1.3412058e-09 -6.4947492e-12\n- 4.0915040e-08 -3.3836756e-10 -1.9328317e-11  5.8570336e-14\n-\t\t            </Data>\n-\t\t        </OptXModel>\n-\t\t        <OptYModel>\n-\t\t            <Shape>4 4</Shape>\n-\t\t            <Data>\n--2.1477677e-03 -1.2404184e-05  5.1401378e-07  2.7135683e-11\n- 6.6645475e-06  1.6336492e-06 -1.0241216e-08 -7.6600132e-12\n- 1.4034164e-07  3.3427352e-08 -5.8754640e-10 -2.2133922e-13\n--2.2703170e-09 -6.0090116e-10  8.6031295e-12 -1.5843074e-14\n-\t\t            </Data>\n-\t\t        </OptYModel>\n-\t\t        <ReferenceLambda>13380.0</ReferenceLambda>\n-\t\t\t</Displacements>\n-        </BGS000>\n-\n-\n-    </Data>\n-</op:DpdSirOptModel>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_InstrumentModels/tests/data/crv_mm.xml": [
                        [
                            "@@ -1,11 +1,10 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<dpd-sir-crvmodel:DpdSirCrvModel xmlns:dpd-sir-crvmodel=\"http://euclid.esa.org/schema/dpd/sir/crvmodel\" xmlns:sys=\"http://euclid.esa.org/schema/sys\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:pro-sir=\"http://euclid.esa.org/schema/pro/sir\" xmlns:ins=\"http://euclid.esa.org/schema/ins\" xmlns:bas-dtd=\"http://euclid.esa.org/schema/bas/dtd\" xmlns:bas-dqc=\"http://euclid.esa.org/schema/bas/dqc\" xmlns:bas-ppr=\"http://euclid.esa.org/schema/bas/ppr\">\n+<dpd-sir-crvmodel:DpdSirCrvModel xmlns:dpd-sir-crvmodel=\"http://ecdm.euclid-ec.org/schema/dpd/sir/crvmodel\">\n  <Header>\n-  <ProductId>EUC_SIR_CRVMODEL_DM9-xSPE-TIPS_004</ProductId>\n+  <ProductId>EUC_SIR_CRVMODEL_PVRH2_DM9.1-TIPS_004</ProductId>\n   <ProductType>DpdSirCrvModel</ProductType>\n   <SoftwareName>SIR</SoftwareName>\n   <SoftwareRelease>soft</SoftwareRelease>\n-  <EuclidPipelineSoftwareRelease>rela</EuclidPipelineSoftwareRelease>\n   <ProdSDC>SDC-IT</ProdSDC>\n   <DataSetRelease>TIPS_004</DataSetRelease>\n   <Purpose>UNKNOWN</Purpose>\n@@ -13,7 +12,7 @@\n   <PPOId>UNKNOWN</PPOId>\n   <PipelineDefinitionId>UNKNOWN</PipelineDefinitionId>\n   <PpoStatus>HAPPY</PpoStatus>\n-  <ManualValidationStatus>VALID</ManualValidationStatus>\n+  <ManualValidationStatus>UNKNOWN</ManualValidationStatus>\n   <ExpirationDate>1970-01-01T00:00:00.001000Z</ExpirationDate>\n   <ToBePublished>0</ToBePublished>\n   <Published>0</Published>\n@@ -27,6 +26,7 @@\n   </ValidityRange>\n   <CalibrationID>2022-06-30T14:27:54.801</CalibrationID>\n   <RGS000>\n+   <Date>2022-06-30T14:27:54.801641Z</Date>\n    <GWATilt>0</GWATilt>\n    <ExtraTilt>0.0</ExtraTilt>\n    <SpectralOrder>\n@@ -91,6 +91,7 @@\n    </SpectralOrder>\n   </RGS000>\n   <RGS000>\n+   <Date>2022-06-30T14:27:54.801641Z</Date>\n    <GWATilt>-4</GWATilt>\n    <ExtraTilt>0.0</ExtraTilt>\n    <SpectralOrder>\n@@ -155,6 +156,7 @@\n    </SpectralOrder>\n   </RGS000>\n   <RGS180>\n+   <Date>2022-06-30T14:27:54.801641Z</Date>\n    <GWATilt>4</GWATilt>\n    <ExtraTilt>0.0</ExtraTilt>\n    <SpectralOrder>\n@@ -219,6 +221,7 @@\n    </SpectralOrder>\n   </RGS180>\n   <RGS180>\n+   <Date>2022-06-30T14:27:54.801641Z</Date>\n    <GWATilt>0</GWATilt>\n    <ExtraTilt>0.0</ExtraTilt>\n    <SpectralOrder>\n@@ -283,6 +286,7 @@\n    </SpectralOrder>\n   </RGS180>\n   <BGS000>\n+   <Date>2022-06-30T14:27:54.801641Z</Date>\n    <GWATilt>0</GWATilt>\n    <ExtraTilt>0.0</ExtraTilt>\n    <SpectralOrder>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_InstrumentModels/tests/data/ids_mm.xml": [
                        [
                            "@@ -1,13 +1,12 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<dpd-sir-idsmodel:DpdSirIdsModel xmlns:dpd-sir-idsmodel=\"http://euclid.esa.org/schema/dpd/sir/idsmodel\" xmlns:sys=\"http://euclid.esa.org/schema/sys\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:pro-sir=\"http://euclid.esa.org/schema/pro/sir\" xmlns:ins=\"http://euclid.esa.org/schema/ins\" xmlns:bas-dtd=\"http://euclid.esa.org/schema/bas/dtd\" xmlns:bas-dqc=\"http://euclid.esa.org/schema/bas/dqc\" xmlns:bas-ppr=\"http://euclid.esa.org/schema/bas/ppr\">\n+<dpd-sir-idsmodel:DpdSirIdsModel xmlns:dpd-sir-idsmodel=\"http://ecdm.euclid-ec.org/schema/dpd/sir/idsmodel\">\n  <Header>\n-  <ProductId>EUC_SIR_IDSMODEL_DM9-xSPE-TIPS_004</ProductId>\n+  <ProductId>EUC_SIR_IDSMODEL_PVRH2_START</ProductId>\n   <ProductType>DpdSirIdsModel</ProductType>\n   <SoftwareName>SIR</SoftwareName>\n   <SoftwareRelease>soft</SoftwareRelease>\n-  <EuclidPipelineSoftwareRelease>rela</EuclidPipelineSoftwareRelease>\n   <ProdSDC>SDC-IT</ProdSDC>\n-  <DataSetRelease>TIPS_004</DataSetRelease>\n+  <DataSetRelease>PVRH2_FG_ALL</DataSetRelease>\n   <Purpose>UNKNOWN</Purpose>\n   <PlanId>UNKNOWN</PlanId>\n   <PPOId>UNKNOWN</PPOId>\n@@ -27,6 +26,7 @@\n   </ValidityRange>\n   <CalibrationID>2022-06-30T18:41:22.517</CalibrationID>\n   <RGS000>\n+   <Date>2023-06-20T00:00:00.00001Z</Date>\n    <GWATilt>0</GWATilt>\n    <ExtraTilt>0.0</ExtraTilt>\n    <SpectralOrder>\n@@ -84,6 +84,7 @@\n    </SpectralOrder>\n   </RGS000>\n   <RGS000>\n+   <Date>2023-06-20T00:00:00.00001Z</Date>\n    <GWATilt>-4</GWATilt>\n    <ExtraTilt>0.0</ExtraTilt>\n    <SpectralOrder>\n@@ -141,6 +142,7 @@\n    </SpectralOrder>\n   </RGS000>\n   <RGS180>\n+   <Date>2023-06-20T00:00:00.00001Z</Date>\n    <GWATilt>4</GWATilt>\n    <ExtraTilt>0.0</ExtraTilt>\n    <SpectralOrder>\n@@ -198,6 +200,7 @@\n    </SpectralOrder>\n   </RGS180>\n   <RGS180>\n+   <Date>2023-06-20T00:00:00.00001Z</Date>\n    <GWATilt>0</GWATilt>\n    <ExtraTilt>0.0</ExtraTilt>\n    <SpectralOrder>\n@@ -255,6 +258,7 @@\n    </SpectralOrder>\n   </RGS180>\n   <BGS000>\n+   <Date>2023-06-20T00:00:00.00001Z</Date>\n    <GWATilt>0</GWATilt>\n    <ExtraTilt>0.0</ExtraTilt>\n    <SpectralOrder>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_InstrumentModels/tests/data/opt_mm.xml": [
                        [
                            "@@ -1,25 +1,24 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<dpd-sir-optmodel:DpdSirOptModel xmlns:dpd-sir-optmodel=\"http://euclid.esa.org/schema/dpd/sir/optmodel\" xmlns:sys=\"http://euclid.esa.org/schema/sys\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:pro-sir=\"http://euclid.esa.org/schema/pro/sir\" xmlns:ins=\"http://euclid.esa.org/schema/ins\" xmlns:bas-dtd=\"http://euclid.esa.org/schema/bas/dtd\" xmlns:bas-dqc=\"http://euclid.esa.org/schema/bas/dqc\" xmlns:bas-ppr=\"http://euclid.esa.org/schema/bas/ppr\">\n- <Header>\n-  <ProductId>EUC_SIR_OPTMODEL_DM9_xSPE-TIPS_004</ProductId>\n-  <ProductType>DpdSirOptModel</ProductType>\n-  <SoftwareName>SIR</SoftwareName>\n-  <SoftwareRelease>soft</SoftwareRelease>\n-  <EuclidPipelineSoftwareRelease>rela</EuclidPipelineSoftwareRelease>\n-  <ProdSDC>SDC-IT</ProdSDC>\n-  <DataSetRelease>TIPS_004</DataSetRelease>\n-  <Purpose>UNKNOWN</Purpose>\n-  <PlanId>UNKNOWN</PlanId>\n-  <PPOId>UNKNOWN</PPOId>\n-  <PipelineDefinitionId>UNKNOWN</PipelineDefinitionId>\n-  <PpoStatus>HAPPY</PpoStatus>\n-  <ManualValidationStatus>VALID</ManualValidationStatus>\n-  <ExpirationDate>1970-01-01T00:00:00.001000Z</ExpirationDate>\n-  <ToBePublished>0</ToBePublished>\n-  <Published>0</Published>\n-  <Curator>SIR_PF</Curator>\n-  <CreationDate>2022-06-23T15:19:21.009539Z</CreationDate>\n- </Header>\n+<?xml version='1.0' encoding='utf-8'?>\n+<opt:DpdSirOptModel xmlns:opt=\"http://ecdm.euclid-ec.org/schema/dpd/sir/optmodel\">\n+  <Header>\n+    <ProductId>9ba96b8e-91bf-4bdb-8eb9-0f7123a80f1a</ProductId>\n+    <ProductType>DpdSirOptModel</ProductType>\n+    <SoftwareName>SIR</SoftwareName>\n+    <SoftwareRelease>soft</SoftwareRelease>\n+    <ProdSDC>SDC-IT</ProdSDC>\n+    <DataSetRelease>RELEASE</DataSetRelease>\n+    <Purpose>UNKNOWN</Purpose>\n+    <PlanId>UNKNOWN</PlanId>\n+    <PPOId>UNKNOWN</PPOId>\n+    <PipelineDefinitionId>UNKNOWN</PipelineDefinitionId>\n+    <PpoStatus>HAPPY</PpoStatus>\n+    <ManualValidationStatus>VALID</ManualValidationStatus>\n+    <ExpirationDate>1970-01-01T00:00:00.001Z</ExpirationDate>\n+    <ToBePublished>0</ToBePublished>\n+    <Published>0</Published>\n+    <Curator>SIR_PF</Curator>\n+    <CreationDate>2023-06-22T11:04:49.992482Z</CreationDate>\n+  </Header>\n  <Data>\n   <ValidityRange>\n    <TimestampStart>2022-06-23T15:19:21.009620Z</TimestampStart>\n@@ -27,6 +26,7 @@\n   </ValidityRange>\n   <CalibrationID>2022-06-23T15:19:21.009</CalibrationID>\n   <RGS000>\n+\t\t\t<Date>2023-06-15T00:00:00.00001Z</Date>\n    <GWATilt>0</GWATilt>\n    <ExtraTilt>0.0</ExtraTilt>\n    <Reference>\n@@ -65,6 +65,7 @@\n    </Displacements>\n   </RGS000>\n   <RGS000>\n+\t\t\t<Date>2023-06-15T00:00:00.00001Z</Date>\n    <GWATilt>-4</GWATilt>\n    <ExtraTilt>0.0</ExtraTilt>\n    <Reference>\n@@ -103,6 +104,7 @@\n    </Displacements>\n   </RGS000>\n   <RGS180>\n+\t\t\t<Date>2023-06-15T00:00:00.00001Z</Date>\n    <GWATilt>4</GWATilt>\n    <ExtraTilt>0.0</ExtraTilt>\n    <Reference>\n@@ -141,6 +143,7 @@\n    </Displacements>\n   </RGS180>\n   <RGS180>\n+\t\t\t<Date>2023-06-15T00:00:00.00001Z</Date>\n    <GWATilt>0</GWATilt>\n    <ExtraTilt>0.0</ExtraTilt>\n    <Reference>\n@@ -179,6 +182,7 @@\n    </Displacements>\n   </RGS180>\n   <BGS000>\n+\t\t\t<Date>2023-06-15T00:00:00.00001Z</Date>\n    <GWATilt>0</GWATilt>\n    <ExtraTilt>0.0</ExtraTilt>\n    <Reference>\n@@ -217,4 +221,4 @@\n    </Displacements>\n   </BGS000>\n  </Data>\n-</dpd-sir-optmodel:DpdSirOptModel>\n+</opt:DpdSirOptModel>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_InstrumentModels/tests/python/GlobalCRVModel_test.py": [
                        [
                            "@@ -37,7 +37,7 @@ from OpticalModel_test import MockMDB\n \n def get_xml_file():\n     return os.path.join(os.environ[\"SIR_PIPELINE_PROJECT_ROOT\"],\n-                        \"SIR_InstrumentModels/tests/data/EUC_SIR_CRVMODEL_REAL-DM9-PV_2022-03-29.xml\")\n+                        \"SIR_InstrumentModels/tests/data/EUC_SIR_CRVMODEL_PVRH2.xml\")\n \n \n def test_load1():\n@@ -224,16 +224,16 @@ def test_xml_grism_tilt(tmpdir):\n     assert len(crv.xml.Data.RGS270) == 0\n     assert len(crv.xml.Data.BGS000) == 1\n \n-    crv.keep_xml_grism_tilt('RGS000', -4)\n+    crv._keep_xml_grism_tilt(\"RGS180\", 4)\n \n     tmpfile = os.path.join(tmpdir, \"newmodel.xml\")\n     crv.update(tmpfile, overwrite=True)\n \n-    det_model = DetectorModel(\"RGS000\", mdb)\n-    crv2 = GlobalCRVModel.load(tmpfile, det_model, order=1, gwa_tilt=-4)\n+    det_model = DetectorModel(\"RGS180\", mdb)\n+    crv2 = GlobalCRVModel.load(tmpfile, det_model, order=1, gwa_tilt=4)\n \n-    assert len(crv.xml.Data.RGS180) == 0\n-    assert len(crv.xml.Data.RGS000) == 1\n+    assert len(crv.xml.Data.RGS180) == 1\n+    assert len(crv.xml.Data.RGS000) == 0\n     assert len(crv.xml.Data.RGS270) == 0\n     assert len(crv.xml.Data.BGS000) == 0\n \n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_InstrumentModels/tests/python/GlobalIDSModel_test.py": [
                        [
                            "@@ -37,7 +37,7 @@ from OpticalModel_test import MockMDB\n \n def get_xml_file():\n     return os.path.join(os.environ[\"SIR_PIPELINE_PROJECT_ROOT\"],\n-                 \"SIR_InstrumentModels/tests/data/EUC_SIR_IDSMODEL_REAL-DM9-PV_2022-03-29.xml\")\n+                 \"SIR_InstrumentModels/tests/data/EUC_SIR_IDSMODEL_PVRH2.xml\")\n \n \n def test_load1():\n@@ -224,16 +224,16 @@ def test_xml_grism_tilt(tmpdir):\n     assert len(ids.xml.Data.RGS270) == 0\n     assert len(ids.xml.Data.BGS000) == 1\n \n-    ids.keep_xml_grism_tilt('RGS000', -4)\n+    ids._keep_xml_grism_tilt(\"RGS180\", 4)\n \n     tmpfile = os.path.join(tmpdir, \"newmodel.xml\")\n     ids.update(tmpfile, overwrite=True)\n \n-    det_model = DetectorModel(\"RGS000\", mdb)\n-    ids2 = GlobalIDSModel.load(tmpfile, det_model, order=1, gwa_tilt=-4)\n+    det_model = DetectorModel(\"RGS180\", mdb)\n+    ids2 = GlobalIDSModel.load(tmpfile, det_model, order=1, gwa_tilt=4)\n \n-    assert len(ids.xml.Data.RGS180) == 0\n-    assert len(ids.xml.Data.RGS000) == 1\n+    assert len(ids.xml.Data.RGS180) == 1\n+    assert len(ids.xml.Data.RGS000) == 0\n     assert len(ids.xml.Data.RGS270) == 0\n     assert len(ids.xml.Data.BGS000) == 0\n \n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_InstrumentModels/tests/python/H5GlobalCRVModel_test.py": [
                        [
                            "@@ -36,7 +36,7 @@ from DetectorModel_test import MockMDB\n \n def get_xml_file():\n     return os.path.join(os.environ[\"SIR_PIPELINE_PROJECT_ROOT\"],\n-                 \"SIR_InstrumentModels/tests/data/EUC_SIR_CRVMODEL_REAL-DM9-PV_2022-03-29.xml\")\n+                 \"SIR_InstrumentModels/tests/data/EUC_SIR_CRVMODEL_PVRH2.xml\")\n \n \n \n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_InstrumentModels/tests/python/H5GlobalIDSModel_test.py": [
                        [
                            "@@ -36,7 +36,7 @@ from DetectorModel_test import MockMDB\n \n def get_xml_file():\n     return os.path.join(os.environ[\"SIR_PIPELINE_PROJECT_ROOT\"],\n-                 \"SIR_InstrumentModels/tests/data/EUC_SIR_IDSMODEL_REAL-DM9-PV_2022-03-29.xml\")\n+                 \"SIR_InstrumentModels/tests/data/EUC_SIR_IDSMODEL_PVRH2.xml\")\n \n \n \n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_InstrumentModels/tests/python/H5OpticalModel_test.py": [
                        [
                            "@@ -37,7 +37,7 @@ from DetectorModel_test import MockMDB\n \n def get_xml_file():\n     return os.path.join(os.environ[\"SIR_PIPELINE_PROJECT_ROOT\"],\n-                 \"SIR_InstrumentModels/tests/data/EUC_SIR_OPTMODEL_REAL-DM9-PV_2022-03-29.xml\")\n+                 \"SIR_InstrumentModels/tests/data/EUC_SIR_OPTMODEL_PVRH2.xml\")\n \n \n def test_save1(tmpdir):\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_SpectraExtraction/SIR_SpectraExtraction/SpectrumMask.h": [
                        [
                            "@@ -26,6 +26,7 @@\n #define SPECTRUMMASK_H\n \n #include <map>\n+#include <string>\n \n typedef unsigned char spec_mask_type;\n \n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_SpectraExtraction/tests/data/spectra.xml": [
                        [
                            "@@ -1,25 +1,42 @@\n-<?xml version=\"1.0\" ?>\n-<ns1:DpdSirExtractedSpectraCollection xmlns:ns1=\"http://euclid.esa.org/schema/dpd/sir/extractedspectracollection\">\n-\t<Header>\n-\t\t<ProductId>UNKNOWN</ProductId>\n-\t\t<ProductType>DpdSirExtractedSpectraCollection</ProductType>\n-\t\t<SoftwareName>SIR_Pipeline</SoftwareName>\n-\t\t<SoftwareRelease>0.15</SoftwareRelease>\n-\t\t<EuclidPipelineSoftwareRelease>0.0</EuclidPipelineSoftwareRelease>\n-\t\t<ProdSDC>SDC-IT</ProdSDC>\n-\t\t<DataSetRelease>UNKNOWN</DataSetRelease>\n-\t\t<Purpose>UNKNOWN</Purpose>\n-\t\t<PlanId>UNKNOWN</PlanId>\n-\t\t<PPOId>UNKNOWN</PPOId>\n-\t\t<PipelineDefinitionId>UNKNOWN</PipelineDefinitionId>\n-\t\t<PpoStatus>NA</PpoStatus>\n-\t\t<ManualValidationStatus>UNKNOWN</ManualValidationStatus>\n-\t\t<ExpirationDate>2022-05-05T11:51:57.2Z</ExpirationDate>\n-\t\t<ToBePublished>0</ToBePublished>\n-\t\t<Published>0</Published>\n-\t\t<Curator>Marco Fumana</Curator>\n-\t\t<CreationDate>2022-05-05T11:51:57.21405</CreationDate>\n-\t</Header>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<ex:DpdSirExtractedSpectraCollection xmlns:utd=\"http://ecdm.euclid-ec.org/schema/bas/utd\"\n+ xmlns:cot=\"http://ecdm.euclid-ec.org/schema/bas/cot\"\n+ xmlns:dtd=\"http://ecdm.euclid-ec.org/schema/bas/dtd\"\n+ xmlns:stc=\"http://ecdm.euclid-ec.org/schema/bas/imp/stc\"\n+ xmlns:eso=\"http://ecdm.euclid-ec.org/schema/bas/imp/eso\"\n+ xmlns:fits=\"http://ecdm.euclid-ec.org/schema/bas/imp/fits\"\n+ xmlns:ppr=\"http://ecdm.euclid-ec.org/schema/bas/ppr\"\n+ xmlns:ins=\"http://ecdm.euclid-ec.org/schema/ins\"\n+ xmlns:sys=\"http://ecdm.euclid-ec.org/schema/sys\"\n+ xmlns:fit=\"http://ecdm.euclid-ec.org/schema/bas/fit\"\n+ xmlns:dss=\"http://ecdm.euclid-ec.org/schema/sys/dss\"\n+ xmlns:le1=\"http://ecdm.euclid-ec.org/schema/pro/le1\"\n+ xmlns:img=\"http://ecdm.euclid-ec.org/schema/bas/img\"\n+ xmlns:le1nisp=\"http://ecdm.euclid-ec.org/schema/pro/le1/nisp\"\n+ xmlns:cat=\"http://ecdm.euclid-ec.org/schema/bas/cat\"\n+ xmlns:dqc=\"http://ecdm.euclid-ec.org/schema/bas/dqc\"\n+ xmlns:nir=\"http://ecdm.euclid-ec.org/schema/pro/nir\"\n+ xmlns:sir=\"http://ecdm.euclid-ec.org/schema/pro/sir\"\n+ xmlns:imp=\"http://ecdm.euclid-ec.org/schema/bas/imp\"\n+ xmlns:ex=\"http://ecdm.euclid-ec.org/schema/dpd/sir/extractedspectracollection\"\n+ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+ xsi:schemaLocation=\"http://ecdm.euclid-ec.org/schema/dpd/sir/extractedspectracollection file:/cassandra/fumana/Euclid/ST_DataModel/ST_DM_Schema/auxdir/ST_DM_Schema/dpd/sir/euc-sir-ExtractedSpectraCollection.xsd\">\n+    <Header>\n+        <ProductId>ProductId0</ProductId>\n+        <ProductType>DpdDqcDynamicFlags</ProductType>\n+        <SoftwareName>SoftwareName0</SoftwareName>\n+        <SoftwareRelease>SoftwareRel</SoftwareRelease>\n+        <ProdSDC>ProdSDC0</ProdSDC>\n+        <DataSetRelease>DataSetRelease0</DataSetRelease>\n+        <Purpose>DATA_RELEASE</Purpose>\n+        <PlanId>PlanId0</PlanId>\n+        <PPOId>PPOId0</PPOId>\n+        <PipelineDefinitionId>PipelineDefinitionId0</PipelineDefinitionId>\n+        <PpoStatus>PpoStatus0</PpoStatus>\n+        <ManualValidationStatus>VALID</ManualValidationStatus>\n+        <Curator>Curator0</Curator>\n+        <CreationDate>2006-05-04T18:13:51.0</CreationDate>\n+    </Header>\n \t<Data>\n \t\t<GrismWheelPos>RGS000</GrismWheelPos>\n \t\t<GrismWheelTilt>0</GrismWheelTilt>\n@@ -224,4 +241,4 @@\n \t\t\t<Unit>AB magnitudes</Unit>\n \t\t</Parameter>\n \t</Parameters>\n-</ns1:DpdSirExtractedSpectraCollection>\n+</ex:DpdSirExtractedSpectraCollection>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_SpectraLocation/tests/data/DpdSirConfig.xml": [
                        [
                            "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<dpd-sir-configurationset:DpdSirConfigurationSet xmlns:dpd-sir-configurationset=\"http://euclid.esa.org/schema/dpd/sir/configurationset\" xmlns:sys=\"http://euclid.esa.org/schema/sys\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:pro-sir=\"http://euclid.esa.org/schema/pro/sir\" xmlns:sys-dss=\"http://euclid.esa.org/schema/sys/dss\" xmlns:bas-dqc=\"http://euclid.esa.org/schema/bas/dqc\" xmlns:bas-ppr=\"http://euclid.esa.org/schema/bas/ppr\">\n+<dpd-sir-configurationset:DpdSirConfigurationSet xmlns:dpd-sir-configurationset=\"http://ecdm.euclid-ec.org/schema/dpd/sir/configurationset\">\n  <Header>\n   <ProductId>EUC_SIR_Configuration_PV</ProductId>\n   <ProductType>DpdSirConfigurationSet</ProductType>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_SpectraLocation/tests/data/EUC_SIR_W-LOCTAB_52929-1.h5": [
                        [
                            "Binary files a/SIR_SpectraLocation/tests/data/EUC_SIR_W-LOCTAB_52929-1.h5 and b/SIR_SpectraLocation/tests/data/EUC_SIR_W-LOCTAB_52929-1.h5 differ\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_SpectraLocation/tests/data/loc_table.xml": [
                        [
                            "@@ -1,27 +1,26 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<lo:DpdSirLocationTable xmlns:cot=\"http://euclid.esa.org/schema/bas/cot\"\n- xmlns:dtd=\"http://euclid.esa.org/schema/bas/dtd\"\n- xmlns:stc=\"http://euclid.esa.org/schema/bas/imp/stc\"\n- xmlns:eso=\"http://euclid.esa.org/schema/bas/imp/eso\"\n- xmlns:fits=\"http://euclid.esa.org/schema/bas/imp/fits\"\n- xmlns:ppr=\"http://euclid.esa.org/schema/bas/ppr\"\n- xmlns:ins=\"http://euclid.esa.org/schema/ins\"\n- xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n- xmlns:le1=\"http://euclid.esa.org/schema/pro/le1\"\n- xmlns:le1nisp=\"http://euclid.esa.org/schema/pro/le1/nisp\"\n- xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n- xmlns:cat=\"http://euclid.esa.org/schema/bas/cat\"\n- xmlns:dqc=\"http://euclid.esa.org/schema/bas/dqc\"\n- xmlns:img=\"http://euclid.esa.org/schema/bas/img\"\n- xmlns:utd=\"http://euclid.esa.org/schema/bas/utd\"\n- xmlns:fit=\"http://euclid.esa.org/schema/bas/fit\"\n- xmlns:ana=\"http://euclid.esa.org/schema/bas/ana\"\n- xmlns:imp=\"http://euclid.esa.org/schema/bas/imp\"\n- xmlns:nir=\"http://euclid.esa.org/schema/pro/nir\"\n- xmlns:sir=\"http://euclid.esa.org/schema/pro/sir\"\n- xmlns:lo=\"http://euclid.esa.org/schema/dpd/sir/locationtable\"\n+<lo:DpdSirLocationTable xmlns:cot=\"http://ecdm.euclid-ec.org/schema/bas/cot\"\n+ xmlns:eso=\"http://ecdm.euclid-ec.org/schema/bas/imp/eso\"\n+ xmlns:sys=\"http://ecdm.euclid-ec.org/schema/sys\"\n+ xmlns:fit=\"http://ecdm.euclid-ec.org/schema/bas/fit\"\n+ xmlns:ins=\"http://ecdm.euclid-ec.org/schema/ins\"\n+ xmlns:dtd=\"http://ecdm.euclid-ec.org/schema/bas/dtd\"\n+ xmlns:utd=\"http://ecdm.euclid-ec.org/schema/bas/utd\"\n+ xmlns:img=\"http://ecdm.euclid-ec.org/schema/bas/img\"\n+ xmlns:stc=\"http://ecdm.euclid-ec.org/schema/bas/imp/stc\"\n+ xmlns:nir=\"http://ecdm.euclid-ec.org/schema/pro/nir\"\n+ xmlns:le1=\"http://ecdm.euclid-ec.org/schema/pro/le1\"\n+ xmlns:dss=\"http://ecdm.euclid-ec.org/schema/sys/dss\"\n+ xmlns:ppr=\"http://ecdm.euclid-ec.org/schema/bas/ppr\"\n+ xmlns:cat=\"http://ecdm.euclid-ec.org/schema/bas/cat\"\n+ xmlns:le1nisp=\"http://ecdm.euclid-ec.org/schema/pro/le1/nisp\"\n+ xmlns:sir=\"http://ecdm.euclid-ec.org/schema/pro/sir\"\n+ xmlns:dqc=\"http://ecdm.euclid-ec.org/schema/bas/dqc\"\n+ xmlns:imp=\"http://ecdm.euclid-ec.org/schema/bas/imp\"\n+ xmlns:impfits=\"http://ecdm.euclid-ec.org/schema/bas/imp/fits\"\n+ xmlns:lo=\"http://ecdm.euclid-ec.org/schema/dpd/sir/locationtable\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n- xsi:schemaLocation=\"http://euclid.esa.org/schema/dpd/sir/locationtable file:/cassandra/fumana/Euclid/ST_DataModel/ST_DM_Schema/auxdir/ST_DM_Schema/dpd/sir/euc-test-sir-LocationTable.xsd\">\n+ xsi:schemaLocation=\"http://ecdm.euclid-ec.org/schema/dpd/sir/locationtable file:/cassandra/fumana/Euclid/ST_DataModel/ST_DM_Schema/auxdir/ST_DM_Schema/dpd/sir/euc-sir-LocationTable.xsd\">\n     <Header>\n         <ProductId>ProductId0</ProductId>\n         <ProductType>DpdSirLocationTable</ProductType>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_Utilities/python/SIR_Utilities/DpdGeneric.py": [
                        [
                            "@@ -346,7 +346,9 @@ class DpdGeneric(object):\n \n         for point in final_points:\n             vertex = stc_stub.vertexType()\n-            vertex.Position = pyxb.BIND(C1=point[0], C2=point[1])\n+\n+            vertex = pyxb.BIND(C1=point[0], C2=point[1])\n+            #vertex.Position = pyxb.BIND(C1=point[0], C2=point[1])\n             poly.append(vertex)\n \n         img_sp_foot = cot_stub.spatialFootprint()\n@@ -373,12 +375,13 @@ class DpdGeneric(object):\n \n         for point in vertices:\n             vertex = stc_stub.vertexType()\n-            vertex.Position = pyxb.BIND(C1=point[0], C2=point[1])\n+\n+            #vertex.Position = pyxb.BIND(C1=point[0], C2=point[1])\n+            vertex = pyxb.BIND(C1=point[0], C2=point[1])\n             poly.append(vertex)\n \n         img_sp_foot = cot_stub.spatialFootprint()\n         img_sp_foot.Polygon = poly\n-\n         return img_sp_foot\n \n \n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_Utilities/python/SIR_Utilities/DpdScienceFrame.py": [
                        [
                            "@@ -167,13 +167,13 @@ class DpdScienceFrame(DpdGeneric):\n         dpd.Data.DataStorage = DpdScienceFrame._create_fits_storage(binding_class=sir_stub.scienceFrameFitsFile,\n                                                                     file_name=os.path.basename(sf_filename))\n \n-        dpd.Data.QualityParams = sir_stub.scienceFrameDqc()\n-        dpd.Data.QualityParams.BadPixelNumber = 0  # FILL WITH PROPER VALUE!!\n-        dpd.Data.QualityParams.BadPixelNumber.flagged = False\n-        dpd.Data.QualityParams.SaturatedPixelNumber = 0  # FILL WITH PROPER VALUE!!\n-        dpd.Data.QualityParams.SaturatedPixelNumber.flagged = False\n-        dpd.Data.QualityParams.PersistenceAffectedPixelNumber = 0  # FILL WITH PROPER VALUE!!\n-        dpd.Data.QualityParams.PersistenceAffectedPixelNumber.flagged = False\n+#        dpd.Data.QualityParams = sir_stub.scienceFrameDqc()\n+#        dpd.Data.QualityParams.BadPixelNumber = 0  # FILL WITH PROPER VALUE!!\n+#        dpd.Data.QualityParams.BadPixelNumber.flagged = False\n+#        dpd.Data.QualityParams.SaturatedPixelNumber = 0  # FILL WITH PROPER VALUE!!\n+#        dpd.Data.QualityParams.SaturatedPixelNumber.flagged = False\n+#        dpd.Data.QualityParams.PersistenceAffectedPixelNumber = 0  # FILL WITH PROPER VALUE!!\n+#        dpd.Data.QualityParams.PersistenceAffectedPixelNumber.flagged = False\n \n         # PATCH TO BYPASS MISSING EXPTIME IN SIMULATED FRAMES\n         header = se.getMetadata()\n@@ -190,6 +190,7 @@ class DpdScienceFrame(DpdGeneric):\n         se.writeFits(sf_filename)\n \n         # Write XML\n+        print(dpd)\n         logger.info(\"Writing XML file %s\" % sf_xml_filename)\n         with open(sf_xml_filename, 'w') as ott:\n             ott.write(dpd.toDOM().toprettyxml())\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_Utilities/tests/data/sci_frame.xml": [
                        [
                            "@@ -1,42 +1,21 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<sc:DpdSirScienceFrame xmlns:cot=\"http://euclid.esa.org/schema/bas/cot\"\n- xmlns:eso=\"http://euclid.esa.org/schema/bas/imp/eso\"\n- xmlns:sys=\"http://euclid.esa.org/schema/sys\"\n- xmlns:fit=\"http://euclid.esa.org/schema/bas/fit\"\n- xmlns:ins=\"http://euclid.esa.org/schema/ins\"\n- xmlns:dss=\"http://euclid.esa.org/schema/sys/dss\"\n- xmlns:imp=\"http://euclid.esa.org/schema/bas/imp\"\n- xmlns:utd=\"http://euclid.esa.org/schema/bas/utd\"\n- xmlns:dtd=\"http://euclid.esa.org/schema/bas/dtd\"\n- xmlns:stc=\"http://euclid.esa.org/schema/bas/imp/stc\"\n- xmlns:nir=\"http://euclid.esa.org/schema/pro/nir\"\n- xmlns:le1=\"http://euclid.esa.org/schema/pro/le1\"\n- xmlns:img=\"http://euclid.esa.org/schema/bas/img\"\n- xmlns:ppr=\"http://euclid.esa.org/schema/bas/ppr\"\n- xmlns:dqc=\"http://euclid.esa.org/schema/bas/dqc\"\n- xmlns:cat=\"http://euclid.esa.org/schema/bas/cat\"\n- xmlns:le1nisp=\"http://euclid.esa.org/schema/pro/le1/nisp\"\n- xmlns:sir=\"http://euclid.esa.org/schema/pro/sir\"\n- xmlns:impfits=\"http://euclid.esa.org/schema/bas/imp/fits\"\n- xmlns:ana=\"http://euclid.esa.org/schema/bas/ana\"\n- xmlns:sc=\"http://euclid.esa.org/schema/dpd/sir/scienceframe\"\n- xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n- xsi:schemaLocation=\"http://euclid.esa.org/schema/dpd/sir/scienceframe file:/cassandra/fumana/Euclid/ST_DataModel/ST_DM_Schema/auxdir/ST_DM_Schema/dpd/sir/euc-test-sir-ScienceFrame.xsd\">\n+<sc:DpdSirScienceFrame xmlns:sc=\"http://ecdm.euclid-ec.org/schema/dpd/sir/scienceframe\">\n     <Header>\n         <ProductId>ProductId0</ProductId>\n-        <ProductType>DpdDqcDynamicFlags</ProductType>\n-        <SoftwareName>SoftwareName0</SoftwareName>\n-        <SoftwareRelease>SoftwareRel</SoftwareRelease>\n-        <ProdSDC>ProdSDC0</ProdSDC>\n-        <DataSetRelease>DataSetRelease0</DataSetRelease>\n-        <Purpose>DATA_RELEASE</Purpose>\n-        <PlanId>PlanId0</PlanId>\n-        <PPOId>PPOId0</PPOId>\n-        <PipelineDefinitionId>PipelineDefinitionId0</PipelineDefinitionId>\n-        <PpoStatus>PpoStatus0</PpoStatus>\n-        <ManualValidationStatus>VALID</ManualValidationStatus>\n-        <Curator>Curator0</Curator>\n-        <CreationDate>2006-05-04T18:13:51.0</CreationDate>\n+        <ProductType>DpdSirScienceFrame</ProductType>\n+        <SoftwareName>SIR_Pipeline</SoftwareName>\n+        <SoftwareRelease>4.0</SoftwareRelease>\n+        <EuclidPipelineSoftwareRelease>0.0</EuclidPipelineSoftwareRelease>\n+        <ProdSDC>SDC-IT</ProdSDC>\n+        <DataSetRelease>UNKNOWN</DataSetRelease>\n+        <Purpose>UNKNOWN</Purpose>\n+        <PlanId>UNKNOWN</PlanId>\n+        <PPOId>UNKNOWN</PPOId>\n+        <PipelineDefinitionId>UNKNOWN</PipelineDefinitionId>\n+        <PpoStatus>NA</PpoStatus>\n+        <ManualValidationStatus>UNKNOWN</ManualValidationStatus>\n+        <Curator>SIR</Curator>\n+        <CreationDate>2023-06-26T16:34:22.963957</CreationDate>\n     </Header>\n     <Data>\n         <ImgType>\n@@ -58,16 +37,12 @@\n         <ImgSpatialFootprint>\n             <Polygon>\n                 <Vertex>\n-                    <Position>\n-                        <C1>0</C1>\n-                        <C2>0</C2>\n-                    </Position>\n+                    <C1>0</C1>\n+                    <C2>0</C2>\n                 </Vertex>\n                 <Vertex>\n-                    <Position>\n-                        <C1>0</C1>\n-                        <C2>0</C2>\n-                    </Position>\n+                    <C1>0</C1>\n+                    <C2>0</C2>\n                 </Vertex>\n             </Polygon>\n         </ImgSpatialFootprint>\n@@ -162,10 +137,5 @@\n                 <FileName>../data/test.fits</FileName>\n             </DataContainer>\n         </DataStorage>\n-        <QualityParams>\n-            <BadPixelNumber flagged=\"false\">0</BadPixelNumber>\n-            <SaturatedPixelNumber flagged=\"false\">0</SaturatedPixelNumber>\n-            <PersistenceAffectedPixelNumber flagged=\"false\">0</PersistenceAffectedPixelNumber>\n-        </QualityParams>\n     </Data>\n </sc:DpdSirScienceFrame>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_Utilities/tests/data/sirconfig.xml": [
                        [
                            "@@ -1,19 +1,23 @@\n-<?xml version=\"1.0\" ?><ns0:DpdSirConfigurationSet xmlns:ns0=\"http://euclid.esa.org/schema/dpd/sir/configurationset\">\n+<co:DpdSirConfigurationSet xmlns:co=\"http://ecdm.euclid-ec.org/schema/dpd/sir/configurationset\" xmlns:sys=\"http://euclid.esa.org/schema/sys\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:pro-sir=\"http://euclid.esa.org/schema/pro/sir\" xmlns:sys-dss=\"http://euclid.esa.org/schema/sys/dss\" xmlns:bas-dqc=\"http://euclid.esa.org/schema/bas/dqc\" xmlns:bas-ppr=\"http://euclid.esa.org/schema/bas/ppr\">\n  <Header>\n-  <ProductId>EUC_SIR_CONFIGURATION_SC8_V2.6_02</ProductId>\n+  <ProductId>EUC_SIR_Configuration_exampl</ProductId>\n   <ProductType>DpdSirConfigurationSet</ProductType>\n-  <SoftwareName>NA</SoftwareName>\n+  <SoftwareName>SIR_Team</SoftwareName>\n   <SoftwareRelease>0.0</SoftwareRelease>\n+  <EuclidPipelineSoftwareRelease>0.0</EuclidPipelineSoftwareRelease>\n   <ProdSDC>SDC-IT</ProdSDC>\n-  <DataSetRelease>1.0</DataSetRelease>\n+  <DataSetRelease>example</DataSetRelease>\n   <Purpose>PRODUCTION</Purpose>\n   <PlanId>NA</PlanId>\n   <PPOId>NA</PPOId>\n   <PipelineDefinitionId>NA</PipelineDefinitionId>\n-  <PpoStatus>UNKNOWN</PpoStatus>\n-  <ManualValidationStatus>UNKNOWN</ManualValidationStatus>\n+  <PpoStatus>NA</PpoStatus>\n+  <ManualValidationStatus>VALID</ManualValidationStatus>\n+  <ExpirationDate>2027-06-17T12:50:16.259000Z</ExpirationDate>\n+  <ToBePublished>0</ToBePublished>\n+  <Published>0</Published>\n   <Curator>OU-SIR</Curator>\n-  <CreationDate>2021-04-21T09:00:00.259000Z</CreationDate>\n+  <CreationDate>2023-01-05T09:00:00.259000Z</CreationDate>\n  </Header>\n  <Data>\n   <ConfigurationFile>\n@@ -31,4 +35,4 @@\n    </Files>\n   </Parameter>\n  </Parameters>\n-</ns0:DpdSirConfigurationSet>\n+</co:DpdSirConfigurationSet>\n",
                            "Merge branch 'DM92' into 'develop'",
                            "Marco Fumana",
                            "2023-06-30T06:30:00.000+00:00",
                            "87af2b076ac518dd0e1ae343e6eec667339020af"
                        ]
                    ],
                    "SIR_InstrumentModels/tests/src/DetectorModel_test.cpp": [
                        [
                            "@@ -890,6 +890,59 @@ BOOST_AUTO_TEST_CASE(getFOVPosition_test2)\n   }\n }\n \n+BOOST_AUTO_TEST_CASE(getFOVPositions_test1)\n+{\n+  int pixels = 2040;\n+\n+  DetectorModel det = DetectorModel(\"RGS000\", pixels, pixels, 0.3);\n+\n+  std::string filename(std::getenv(\"SIR_PIPELINE_PROJECT_ROOT\"));\n+  filename+=\"/SIR_InstrumentModels/tests/data/ideal_fov.fits\";\n+  det.setWCS(filename);\n+\n+  int det_number=0;\n+\n+  Array<double> pix_pos = Array<double>::Zero(1,2);\n+\n+  for(int row=0; row<4; row++) {\n+    for(int col=0; col<4; col++) {\n+      det_number += 1;\n+      Detector::Number det_enum = static_cast<Detector::Number>(det_number);\n+      std::string det_id = det.getDetectorID(det_enum);\n+\n+      /* Test detector bottom-left corners */\n+      pix_pos(0) = 0;\n+      pix_pos(1) = 0;\n+      MmPosition coords = det.getFOVPosition(0, 0, det_enum);\n+      auto coords2 = det.getFOVPositions(pix_pos, det_id);\n+      BOOST_CHECK_CLOSE(coords[0], coords2(0), TOLL);\n+      BOOST_CHECK_CLOSE(coords[1], coords2(1), TOLL);\n+\n+      /* Test detector bottom-right corners */\n+      pix_pos(0) = pixels-1.;\n+      coords = det.getFOVPosition(pixels-1., 0., det_enum);\n+      coords2 = det.getFOVPositions(pix_pos, det_id);      \n+      BOOST_CHECK_CLOSE(coords[0], coords2(0), TOLL);\n+      BOOST_CHECK_CLOSE(coords[1], coords2(1), TOLL);\n+\n+      /* Test detector up-right corners */\n+      pix_pos(1) = pixels-1.;\n+      coords = det.getFOVPosition(pixels-1, pixels-1, det_enum);\n+      coords2 = det.getFOVPositions(pix_pos, det_id);      \n+      BOOST_CHECK_CLOSE(coords[0], coords2(0), TOLL);\n+      BOOST_CHECK_CLOSE(coords[1], coords2(1), TOLL);\n+\n+      /* Test detector up-left corners */\n+      pix_pos(0) = 0;\n+      coords = det.getFOVPosition(0, pixels-1, det_enum);\n+      coords2 = det.getFOVPositions(pix_pos, det_id);      \n+      BOOST_CHECK_CLOSE(coords[0], coords2(0), TOLL);\n+      BOOST_CHECK_CLOSE(coords[1], coords2(1), TOLL);\n+\n+    }\n+  }\n+}\n+\n \n BOOST_AUTO_TEST_CASE(getValue_test1)\n {\n",
                            "Merge branch 'bug_ref_lambda_mm_position' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-06-16T14:36:21.000+00:00",
                            "d02039c6cd56c3408bab2c55f9e03c7587c8634f"
                        ]
                    ],
                    "SIR_SpectraLocation/SIR_SpectraLocation/LocationSpectrum.h": [
                        [
                            "@@ -92,6 +92,7 @@ public:\n    *\n    */\n   virtual void setLambdaRefPosition(Array<double> const &lambda_ref_pos, const bool deepCopy=false) = 0;\n+  virtual void setFOVLambdaRefPosition(Array<double> const &mm_position, const bool deepCopy=false) = 0;\n \n   /**\n    * @brief\n@@ -283,6 +284,7 @@ public:\n    *\n    */\n   virtual void setLambdaRefPosition(Array<double> const &lambda_ref_pos, const bool deepCopy=false) override;\n+  virtual void setFOVLambdaRefPosition(Array<double> const &mm_position, const bool deepCopy=false) override;\n \n   /**\n    * @brief\n",
                            "Merge branch 'bug_ref_lambda_mm_position' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-06-16T14:36:21.000+00:00",
                            "d02039c6cd56c3408bab2c55f9e03c7587c8634f"
                        ]
                    ],
                    "SIR_SpectraLocation/src/lib/LocationSpectrum.cpp": [
                        [
                            "@@ -175,6 +175,25 @@ void LocationSpectrum::setLambdaRefPosition(Array<double> const &position, const\n }\n \n \n+void LocationSpectrum::setFOVLambdaRefPosition(Array<double> const &mm_position, const bool deepCopy) {\n+  if (!m_det_model){\n+    throw std::runtime_error(\"Detector Model not yet defined\");\n+  }\n+\n+  if (mm_position.cols() != 2){\n+    throw std::runtime_error(\"Invalid input position sizes\");\n+  }\n+\n+  if (deepCopy == true){\n+    m_lambda_ref_mm = mm_position.copy();\n+  }\n+  else{\n+    m_lambda_ref_mm = mm_position;\n+  }\n+  m_lambda_ref_pos = m_det_model->getPixels(mm_position, getDetectorID());\n+}\n+\n+\n ChebLocalModelPtr LocationSpectrum::getIDSModel() const {\n   if (!m_ids_model){\n     throw std::runtime_error(\"Undefined inverse dispersion model coefficients\");\n",
                            "Merge branch 'bug_ref_lambda_mm_position' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-06-16T14:36:21.000+00:00",
                            "d02039c6cd56c3408bab2c55f9e03c7587c8634f"
                        ]
                    ],
                    "SIR_SpectraLocation/tests/python/LocationSpectrum_test.py": [
                        [
                            "@@ -144,3 +144,64 @@ class TestLocationSpectrum:\n \n             local = loc_spectrum.getCRVModel()\n             assert np.allclose(local.evaluate(-1, 0), local.evaluate(1, 0))\n+\n+\n+\n+    def test_setFOVLambdaRefPosition(self):\n+        \"\"\"Test spectrum curvature exists with a crv model flat and a NO perfect detector layout\n+        \"\"\"\n+        csv_file = os.path.join(os.environ[\"SIR_PIPELINE_PROJECT_ROOT\"],\n+                                'SIR_InstrumentModels/tests/data/NISPDetectorSlots_2.1.csv')\n+        crv_xml = os.path.join(os.environ[\"SIR_PIPELINE_PROJECT_ROOT\"],\n+                               'SIR_InstrumentModels/tests/data/crv_mm.xml')\n+        ids_xml = os.path.join(os.environ[\"SIR_PIPELINE_PROJECT_ROOT\"],\n+                               'SIR_InstrumentModels/tests/data/ids_mm.xml')\n+\n+        wcs_table = Table.read(csv_file, format='csv', header_start=1, data_start=2)\n+        tmpfile = DetectorModel.create_wcs_fits_file(\"RGS000\", wcs_table)\n+\n+        det_model = CDetectorModel(\"RGS000\", 2040, 2040, 0.3)\n+        det_model.setWCS(tmpfile.name)\n+\n+\n+        crv_model = GlobalCRVModel.load(crv_xml, det_model, 1, 0)\n+        ids_model = GlobalIDSModel.load(ids_xml, det_model, 1, 0)\n+\n+\n+        for det_id in DetectorModel.getDetectorIDRange():\n+\n+            slit_pix = np.array([1000., 1000.])\n+            slit_mm = det_model.getFOVPosition(slit_pix, det_id)\n+            grism_pos = GrismModel.getPositionNumber(\"RGS000\")\n+\n+            loc_spectrum1 = LocationSpectrum(1, grism_pos)\n+            loc_spectrum1.setDetector(det_id)\n+            loc_spectrum1.setDither(0)\n+            loc_spectrum1.setFieldID(1)\n+            loc_spectrum1.setPointingID(2)\n+            loc_spectrum1.setIDSModel(ids_model.getLocalModel(slit_mm))\n+            loc_spectrum1.setCRVModel(crv_model.getLocalModel(slit_mm))\n+            loc_spectrum1.setDetectorModel(det_model)\n+            loc_spectrum1.setLambdaRefValue(15200.)\n+            loc_spectrum1.setLambdaRefPosition(slit_pix)\n+            loc_spectrum1.setPivot(slit_mm[0], slit_mm[1])\n+\n+            loc_spectrum2 = LocationSpectrum(1, grism_pos)\n+            loc_spectrum2.setDetector(det_id)\n+            loc_spectrum2.setDither(0)\n+            loc_spectrum2.setFieldID(1)\n+            loc_spectrum2.setPointingID(2)\n+            loc_spectrum2.setIDSModel(ids_model.getLocalModel(slit_mm))\n+            loc_spectrum2.setCRVModel(crv_model.getLocalModel(slit_mm))\n+            loc_spectrum2.setDetectorModel(det_model)\n+            loc_spectrum2.setLambdaRefValue(15200.)\n+            loc_spectrum2.setFOVLambdaRefPosition(np.array([slit_mm[0], slit_mm[1]]))\n+            loc_spectrum2.setPivot(slit_mm[0], slit_mm[1])\n+\n+            for l in np.linspace(11000., 19000., 10):\n+                a = loc_spectrum1.computePosition(l, 0)\n+                b = loc_spectrum2.computePosition(l, 0)\n+                assert np.allclose(a[0], b[0])\n+                assert np.allclose(a[1], b[1])\n+                assert np.allclose(a.getDetectorNumber(), b.getDetectorNumber())\n+\n",
                            "Merge branch 'bug_ref_lambda_mm_position' into 'develop'",
                            "Daniele Tavagnacco",
                            "2023-06-16T14:36:21.000+00:00",
                            "d02039c6cd56c3408bab2c55f9e03c7587c8634f"
                        ]
                    ]
                },
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": [
                    {
                        "name": "3.2.0",
                        "created_at": "2023-04-11T14:35:17.000+00:00",
                        "author_name": "Marco Fumana"
                    },
                    {
                        "name": "4.0.0",
                        "created_at": "2023-08-11T15:30:03.000+02:00",
                        "author_name": "Tava"
                    }
                ]
            },
            "PF-SIR/SIR_CrRejectionSingleFrame": {
                "start date": "2023-06-09 09:00",
                "end date": "2023-08-16 15:00",
                "start tag": "-",
                "end tag": "-",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            }
        },
        "PF-VIS": {
            "PF-VIS/VIS_DiffractionSpikesFocus": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/vis_instrument_tools": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_DQReport": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "OU-VIS/VIS_PTC": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_ImageLib": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/vis_autoarray": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_Common": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_CTI_Pipeline": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_AutoFit": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_LargeFlatCalibration": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/vis_illumcalibration": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/vis_darkcorrection": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/vis_darkcalibration": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_IAL_Pipelines": {
                "start date": "2023-08-08T14:57:49",
                "end date": "2023-08-14T16:13:23",
                "start tag": "13.0.10",
                "end tag": "13.0.12",
                "count_files_modified": "43",
                "modifications_by_file": {
                    "doc/release_note/VIS_Software_Release_Note.md": [
                        [
                            "@@ -1,9 +1,9 @@\n |         |**Document Identification**                                                                          |\n |---------|-----------------------------------------------------------------------------------------------------|\n |Title|Euclid SGS VIS PF Software Release Note |\n-|PF Release| 13.0.6 |\n-|Date:|02/08/2023|\n-|Doc. Issue| 13.0.6 |\n+|PF Release| 13.0.12 |\n+|Date:|14/08/2023|\n+|Doc. Issue| 13.0.12 |\n |Reference:|EUCL-IAP-TN-8-019|\n |Custodian:|C. Grenet|\n \n@@ -20,6 +20,7 @@\n     * [4.1 Functional changes in this release](#changes)\n     * [4.2 Issues fixed](#fixed_issues)\n 5. [Patch releases](#patches)\n+   * [5.1 Patch 13.0.12](#patch13.0.12)\n 6. [Known issues](#known_issues)\n \n # 1. Purpose and Scope <a name=\"purpose_and_scope\"></a>\n@@ -55,8 +56,8 @@ The PF User Manual [RD5] describes the principal software parts of the system, i\n | Envt  | Version  |\n |------|------|\n | EDEN | `3.1` |\n-| Data Model | `9.0.2` |\n-| PF IAL Pipelines conf. | [13.0.6](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_IAL_Pipelines/-/tree/13.0.6) |\n+| Data Model | `9.2.0` |\n+| PF IAL Pipelines conf. | [13.0.12](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_IAL_Pipelines/-/tree/13.0.12) |\n \n \n ## 3.2 PF software products configuration <a name=\"products\"></a>\n@@ -64,10 +65,10 @@ The PF User Manual [RD5] describes the principal software parts of the system, i\n \n | Gitlab project    | Gitlab tag | SonarQube analysis\n | ----------- | ----------- | ----------- |\n-| [VIS_Tasks](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks) | [13.0.6](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks/-/tags/13.0.6)|[release-13.0](https://codeen-app.euclid-ec.org/sonar/dashboard?branch=release-13.0&id=VIS_Tasks)|\n-| [VIS_PyLibrary](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_PyLibrary) | [3.20.2](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_PyLibrary/-/tags/3.20.2) |[release-3.20](https://codeen-app.euclid-ec.org/sonar/dashboard?branch=release-3.20&id=VIS_PyLibrary)|\n+| [VIS_Tasks](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks) | [13.0.12](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks/-/tags/13.0.12)|[release-13.0](https://codeen-app.euclid-ec.org/sonar/dashboard?branch=release-13.0&id=VIS_Tasks)|\n+| [VIS_PyLibrary](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_PyLibrary) | [3.20.2](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_PyLibrary/-/tags/3.20.2) |[release-3.20](https://codeen-app.euclid-ec.org/sonar/dashboard?branch=release-2.20&id=VIS_PyLibrary)|\n | [VIS_ImageTools](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_ImageTools) | [3.16.0](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_ImageTools/-/tags/3.16.0) | [release-3.16](https://codeen-app.euclid-ec.org/sonar/dashboard?branch=release-3.16&id=VIS_ImageTools)|\n- | [VIS_CTI](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_CTI) | [5.8.1](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_CTI/-/tags/5.8.1) |[release-5.8](https://codeen-app.euclid-ec.org/sonar/dashboard?branch=release-5.8&id=VIS_CTI)|\n+ | [VIS_CTI](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_CTI) | [5.9.0](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_CTI/-/tags/5.9.0) |[release-5.9](https://codeen-app.euclid-ec.org/sonar/dashboard?branch=release-5.9&id=VIS_CTI)|\n  | [VIS_Instrument_Tools](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Instrument_Tools) | [0.7.0](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Instrument_Tools/-/tags/0.7.0) | [release-0.7](https://codeen-app.euclid-ec.org/sonar/dashboard?branch=release-0.7&id=VIS_Instrument_Tools) |\n  | [VIS_DiffractionSpikesFocus](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_DiffractionSpikesFocus) | [1.1.0](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_DiffractionSpikesFocus/-/tags/1.1.0) | [release-1.1](https://codeen-app.euclid-ec.org/sonar/dashboard?branch=release-1.1&id=VIS_DiffractionSpikesFocus) |\n \n@@ -112,6 +113,35 @@ Processing of science exposures has been splitted in two pipelines: VIS_ProcessF\n | [#20089](https://euclid.roe.ac.uk/issues/20089)| VIS_LargeFlatCalibration_Pipeline: psf_model and starmask_model inputs are mandatory|\n \n \n+# 5. Patch releases <a name=\"patches\"></a>\n+\n+# 5.1 Patch 13.0.12 <a name=\"patch13.0.12\"></a>\n+\n+Solved issues:\n+\n+| Issue | Title |\n+| -----------   | ----------- |\n+| [#20505](https://euclid.roe.ac.uk/issues/20505) | CalblockId not copied in VIS output products\n+| [#23096](https://euclid.roe.ac.uk/issues/23096) | FITS files are trucated when ZipOutputs = True\n+| [#23101](https://euclid.roe.ac.uk/issues/23101) | Large-scale Flat model CCDs may be showing an indexing error\n+| [#23168](https://euclid.roe.ac.uk/issues/23168) | VIS_BrighterFatterCalibrationCalibration_Pipeline: output product is DpdVisFileContainer instead of DpdVisBFEModel\n+| [#23190](https://euclid.roe.ac.uk/issues/23190) | wcsfit crashes on SIM-PV2-008_R2 EXTRA-FOCAL and INTRA-FOCAL exposures\n+| [#23233](https://euclid.roe.ac.uk/issues/23233) | Scattered light in VIS calblock-001 data \n+| [#23265](https://euclid.roe.ac.uk/issues/23265) | VIS_ProcessField_Pipeline: VIS_Calibrate_Photometry crashes on out-of-focus exposures\n+| [#23455](https://euclid.roe.ac.uk/issues/23455) | bias_modelling.py uses a lot of memory\n+\n+New features:\n+\n+| Issue | Title |\n+| -----------   | ----------- |\n+| [#22219](https://euclid.roe.ac.uk/issues/22219) | VIS_SmallScaleFlat: add DQC ouptut, should now accept any combination of single-LED/single-fluence master flats (see #22219)\n+| [#22650](https://euclid.roe.ac.uk/issues/22650) | PTCNLCalibration pipeline enhancements\n+| [#23191](https://euclid.roe.ac.uk/issues/23191) | Astrometric calibration: adapt magnitude range selection to exposure duration\n+| [#23227](https://euclid.roe.ac.uk/issues/23227) | BloomingCalibration: PTC values added to output product\n+| None                                            | VIS_CTI: new version 5.9.0\n+\n+\n+\n # 6. Known issues <a name=\"known_issues\"></a>\n \n Bug reports and software change/addition requests should be submitted through the Euclid Redmine tool at https://euclid.roe.ac.uk/projects/vis_pf/issues.\n@@ -129,13 +159,7 @@ Bug reports and software change/addition requests should be submitted through th\n | [#22976](https://euclid.roe.ac.uk/issues/22976) | VIS_MasterDark_Pipeline (95 s exposures): Exception: model_dark(): All pixels are masked (perhaps the hot pixel threshold is too low?)\n | [#23033](https://euclid.roe.ac.uk/issues/23033) | Astrometric calibration (use-fpa-model) fails on SIM-PV2-006_R2\n | [#23072](https://euclid.roe.ac.uk/issues/23072) | Insufficient CR rejection in the newest VIS PVPR#2 data\n-| [#23096](https://euclid.roe.ac.uk/issues/23096) | FITS files are trucated when ZipOutputs = True\n-| [#23101](https://euclid.roe.ac.uk/issues/23101) | Large-scale Flat model CCDs may be showing an indexing error\n-| [#23168](https://euclid.roe.ac.uk/issues/23168) | VIS_BrighterFatterCalibrationCalibration_Pipeline: output product is DpdVisFileContainer instead of DpdVisBFEModel\n-| [#23190](https://euclid.roe.ac.uk/issues/23190) | wcsfit crashes on SIM-PV2-008_R2 EXTRA-FOCAL and INTRA-FOCAL exposures\n-| [#23233](https://euclid.roe.ac.uk/issues/23233) | Scattered light in VIS calblock-001 data\n | [#23243](https://euclid.roe.ac.uk/issues/23243) | VIS_NonLinCalibration_Pipeline (APERTURE mode) produces incorrect results\n-| [#23265](https://euclid.roe.ac.uk/issues/23265) | VIS_ProcessField_Pipeline: VIS_Calibrate_Photometry crashes on out-of-focus exposures\n | [#23266](https://euclid.roe.ac.uk/issues/23266) | stacking output product XML is empty\n \n \n",
                            "Merge branch 'feature-SUM' into release-13.0: SRN VIS PF 13.0.12",
                            "Catherine Grenet",
                            "2023-08-14T16:13:23.000+02:00",
                            "bec4d2f7797ae8a84255ffd581f45f5a4f533835"
                        ],
                        [
                            "@@ -0,0 +1,145 @@\n+|         |**Document Identification**                                                                          |\n+|---------|-----------------------------------------------------------------------------------------------------|\n+|Title|Euclid SGS VIS PF Software Release Note |\n+|PF Release| 13.0.6 |\n+|Date:|02/08/2023|\n+|Doc. Issue| 13.0.6 |\n+|Reference:|EUCL-IAP-TN-8-019|\n+|Custodian:|C. Grenet|\n+\n+# Table of Contents\n+\n+1. [Purpose and Scope](#purpose_and_scope)\n+    * [1.1 Scope of this PF Software](#scope)\n+    * [1.2 Purpose of the PF](#purpose)\n+2. [PF Documents](#documentation)\n+3. [PF Software products](#software)\n+    * [3.1 PF Environment configuration](#envt)\n+    * [3.2 PF software products configuration](#products)\n+ 4. [Changes Major Release](#changes_and_fixed_issues)\n+    * [4.1 Functional changes in this release](#changes)\n+    * [4.2 Issues fixed](#fixed_issues)\n+5. [Patch releases](#patches)\n+6. [Known issues](#known_issues)\n+\n+# 1. Purpose and Scope <a name=\"purpose_and_scope\"></a>\n+\n+## 1.1 Scope of this PF Software Release Note <a name=\"scope\"></a>\n+\n+The objective of the **S**oftware **R**elease **N**ote (SRN) is to provide the configuration status of the software configuration item.\n+It controls its evolution during the programme or project life cycle.\n+\n+## 1.2 Purpose of this PF Release <a name=\"purpose\"></a>\n+\n+**Release 13.0** of the VIS PF has been developed for Performance Verification phase which will start beginning of August 2023.\n+\n+# 2. PF Documents <a name=\"documentation\"></a>\n+\n+\n+| RD | Title / Author | Document reference | Doc. Release |\n+| -----------   | ----------- | ----------- |----------- |\n+| [RSD](https://euclid.roe.ac.uk/projects/vis_pf/dmsf?folder_id=489) | Euclid SGS PF Processing Function Requirements Specifications | EUCL-IAP-RS-8-001 | [2.4](https://euclid.roe.ac.uk/dmsf/files/5032/view) |\n+| [SDD](https://euclid.roe.ac.uk/projects/vis_pf/dmsf?folder_id=442) | Euclid SGS PF Software Design Document | EUCL-IAP-DDD-8-001 |[1.0](https://euclid.roe.ac.uk/dmsf/files/3053/view) |\n+| [VP-STS](https://euclid.roe.ac.uk/projects/vis_pf/dmsf?folder_id=372) | Euclid SGS PF Euclid SGS PF Validation Plan and Software Tests Specifications  | EUCL-IAP-PL-8-001 |[2.6](https://euclid.roe.ac.uk/dmsf/files/4082/view) |\n+| [STP-STR](https://euclid.roe.ac.uk/projects/vis_pf/dmsf?folder_id=372) | Euclid SGS PF Software Test Plan and Test Report | EUCL-IAP-TP-8-001| [7.0.3](https://euclid.roe.ac.uk/dmsf/files/4807/view) |\n+| [SUM]()https://gitlab.euclid-sgs.uk/PF-VIS/VIS_IAL_Pipelines/-/tree/release-13.0/doc/user_manual | Euclid SGS VIS PF Software User Manual | EUCL-IAP-MA-8-002 | 4.0 |\n+| [CCB]|Euclid SGS PF Configuration Control Board report   | -  | - |\n+\n+\n+# 3. PF Software products <a name=\"software\"></a>\n+\n+## 3.1 PF Environment configuration <a name=\"envt\"></a>\n+\n+The PF User Manual [RD5] describes the principal software parts of the system, including other software, such as operating systems, utilities, other supporting systems, and other facilities, equipment or resources.\n+\n+| Envt  | Version  |\n+|------|------|\n+| EDEN | `3.1` |\n+| Data Model | `9.0.2` |\n+| PF IAL Pipelines conf. | [13.0.6](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_IAL_Pipelines/-/tree/13.0.6) |\n+\n+\n+## 3.2 PF software products configuration <a name=\"products\"></a>\n+\n+\n+| Gitlab project    | Gitlab tag | SonarQube analysis\n+| ----------- | ----------- | ----------- |\n+| [VIS_Tasks](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks) | [13.0.6](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks/-/tags/13.0.6)|[release-13.0](https://codeen-app.euclid-ec.org/sonar/dashboard?branch=release-13.0&id=VIS_Tasks)|\n+| [VIS_PyLibrary](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_PyLibrary) | [3.20.2](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_PyLibrary/-/tags/3.20.2) |[release-3.20](https://codeen-app.euclid-ec.org/sonar/dashboard?branch=release-3.20&id=VIS_PyLibrary)|\n+| [VIS_ImageTools](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_ImageTools) | [3.16.0](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_ImageTools/-/tags/3.16.0) | [release-3.16](https://codeen-app.euclid-ec.org/sonar/dashboard?branch=release-3.16&id=VIS_ImageTools)|\n+ | [VIS_CTI](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_CTI) | [5.8.1](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_CTI/-/tags/5.8.1) |[release-5.8](https://codeen-app.euclid-ec.org/sonar/dashboard?branch=release-5.8&id=VIS_CTI)|\n+ | [VIS_Instrument_Tools](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Instrument_Tools) | [0.7.0](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Instrument_Tools/-/tags/0.7.0) | [release-0.7](https://codeen-app.euclid-ec.org/sonar/dashboard?branch=release-0.7&id=VIS_Instrument_Tools) |\n+ | [VIS_DiffractionSpikesFocus](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_DiffractionSpikesFocus) | [1.1.0](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_DiffractionSpikesFocus/-/tags/1.1.0) | [release-1.1](https://codeen-app.euclid-ec.org/sonar/dashboard?branch=release-1.1&id=VIS_DiffractionSpikesFocus) |\n+\n+\n+# 4. Main Changes in this Release <a name=\"changes_and_fixed_issues\"></a>\n+\n+This release of the VIS PF is issued for the purpose of usual progress development in the context of the Euclid SGS. It has a particular emphasis with the preparation of the forthcoming Performance and Verification Phase processing.\n+This release is deployed as part of the cvmfs and does fully comply with the CODEEN standards.\n+\n+## 4.1 Functional changes <a name=\"changes\"></a>\n+\n+This release includes the following new calibration pipelines:\n+- VIS_BloomingCalibration \n+- VIS_BrighterFatterCalibration\n+- VIS_CTICalibration\n+- VIS_CTITimeEvolution\n+- VIS_DiffractionSpikesFocus\n+- VIS_FlagObjects\n+- VIS_GainCalibration\n+- VIS_NonLinCalibration\n+- VIS_PersistenceCalibration\n+- VIS_PhotometryCalibration\n+- VIS_PTCNLCalibration\n+- VIS_SmallScaleFlat\n+- VIS_TrapPumpingCalibration\n+\n+Refer to the SUM for the function of each of these pipelines.\n+\n+Processing of science exposures has been splitted in two pipelines: VIS_ProcessField for the processing of individual exposures, with the possibility to not produce the stack; and VIS_Stacking pipeline to produce a stack from a set of calibrated exposures. \n+\n+\n+\n+## 4.2 Bugs fixed  <a name=\"fixed_issues\"></a>\n+\n+| Issue | Title |\n+| -----------   | ----------- |\n+| [#17058](https://euclid.roe.ac.uk/issues/17058)| VIS PF crashes if a task is retried|\n+| [#17592](https://euclid.roe.ac.uk/issues/17592)| Some per-exposure statistics possibly lost in master dark pipeline|\n+| [#18113](https://euclid.roe.ac.uk/issues/18113)| Short exposure catalog metadata|\n+| [#20024](https://euclid.roe.ac.uk/issues/20024)| Master dark has incorrect unit|\n+| [#20034](https://euclid.roe.ac.uk/issues/20034)| wcsfit: Floating point nan values are not allowed in FITS headers|\n+| [#20089](https://euclid.roe.ac.uk/issues/20089)| VIS_LargeFlatCalibration_Pipeline: psf_model and starmask_model inputs are mandatory|\n+\n+\n+# 6. Known issues <a name=\"known_issues\"></a>\n+\n+Bug reports and software change/addition requests should be submitted through the Euclid Redmine tool at https://euclid.roe.ac.uk/projects/vis_pf/issues.\n+\n+\n+| Issue | Title |\n+| -----------   | ----------- |\n+| [#8670](https://euclid.roe.ac.uk/issues/8670)   | Missing columns in catalogs wrt R-VIS-PRD-F-070|\n+| [#19375](https://euclid.roe.ac.uk/issues/19375) | Master bias is out of requirement| \n+| [#19677](https://euclid.roe.ac.uk/issues/19677) | Master flat is out of requirement |\n+| [#19685](https://euclid.roe.ac.uk/issues/19685) | Dark calibration is out of requirement|\n+| [#20077](https://euclid.roe.ac.uk/issues/20077) | VIS PSFs seem to be broader than the TU stars|\n+| [#22778](https://euclid.roe.ac.uk/issues/22778) | VIS_NonLinCalibration_Pipeline (pixel MODE) produces incorrect results\n+| [#22866](https://euclid.roe.ac.uk/issues/22866) | Crosstalk calibration crashes when RemoveTempFiles = True\n+| [#22976](https://euclid.roe.ac.uk/issues/22976) | VIS_MasterDark_Pipeline (95 s exposures): Exception: model_dark(): All pixels are masked (perhaps the hot pixel threshold is too low?)\n+| [#23033](https://euclid.roe.ac.uk/issues/23033) | Astrometric calibration (use-fpa-model) fails on SIM-PV2-006_R2\n+| [#23072](https://euclid.roe.ac.uk/issues/23072) | Insufficient CR rejection in the newest VIS PVPR#2 data\n+| [#23096](https://euclid.roe.ac.uk/issues/23096) | FITS files are trucated when ZipOutputs = True\n+| [#23101](https://euclid.roe.ac.uk/issues/23101) | Large-scale Flat model CCDs may be showing an indexing error\n+| [#23168](https://euclid.roe.ac.uk/issues/23168) | VIS_BrighterFatterCalibrationCalibration_Pipeline: output product is DpdVisFileContainer instead of DpdVisBFEModel\n+| [#23190](https://euclid.roe.ac.uk/issues/23190) | wcsfit crashes on SIM-PV2-008_R2 EXTRA-FOCAL and INTRA-FOCAL exposures\n+| [#23233](https://euclid.roe.ac.uk/issues/23233) | Scattered light in VIS calblock-001 data\n+| [#23243](https://euclid.roe.ac.uk/issues/23243) | VIS_NonLinCalibration_Pipeline (APERTURE mode) produces incorrect results\n+| [#23265](https://euclid.roe.ac.uk/issues/23265) | VIS_ProcessField_Pipeline: VIS_Calibrate_Photometry crashes on out-of-focus exposures\n+| [#23266](https://euclid.roe.ac.uk/issues/23266) | stacking output product XML is empty\n+\n+\n+\n+\n+\n+\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ],
                        [
                            "@@ -0,0 +1,145 @@\n+|         |**Document Identification**                                                                          |\n+|---------|-----------------------------------------------------------------------------------------------------|\n+|Title|Euclid SGS VIS PF Software Release Note |\n+|PF Release| 13.0.6 |\n+|Date:|02/08/2023|\n+|Doc. Issue| 13.0.6 |\n+|Reference:|EUCL-IAP-TN-8-019|\n+|Custodian:|C. Grenet|\n+\n+# Table of Contents\n+\n+1. [Purpose and Scope](#purpose_and_scope)\n+    * [1.1 Scope of this PF Software](#scope)\n+    * [1.2 Purpose of the PF](#purpose)\n+2. [PF Documents](#documentation)\n+3. [PF Software products](#software)\n+    * [3.1 PF Environment configuration](#envt)\n+    * [3.2 PF software products configuration](#products)\n+ 4. [Changes Major Release](#changes_and_fixed_issues)\n+    * [4.1 Functional changes in this release](#changes)\n+    * [4.2 Issues fixed](#fixed_issues)\n+5. [Patch releases](#patches)\n+6. [Known issues](#known_issues)\n+\n+# 1. Purpose and Scope <a name=\"purpose_and_scope\"></a>\n+\n+## 1.1 Scope of this PF Software Release Note <a name=\"scope\"></a>\n+\n+The objective of the **S**oftware **R**elease **N**ote (SRN) is to provide the configuration status of the software configuration item.\n+It controls its evolution during the programme or project life cycle.\n+\n+## 1.2 Purpose of this PF Release <a name=\"purpose\"></a>\n+\n+**Release 13.0** of the VIS PF has been developed for Performance Verification phase which will start beginning of August 2023.\n+\n+# 2. PF Documents <a name=\"documentation\"></a>\n+\n+\n+| RD | Title / Author | Document reference | Doc. Release |\n+| -----------   | ----------- | ----------- |----------- |\n+| [RSD](https://euclid.roe.ac.uk/projects/vis_pf/dmsf?folder_id=489) | Euclid SGS PF Processing Function Requirements Specifications | EUCL-IAP-RS-8-001 | [2.4](https://euclid.roe.ac.uk/dmsf/files/5032/view) |\n+| [SDD](https://euclid.roe.ac.uk/projects/vis_pf/dmsf?folder_id=442) | Euclid SGS PF Software Design Document | EUCL-IAP-DDD-8-001 |[1.0](https://euclid.roe.ac.uk/dmsf/files/3053/view) |\n+| [VP-STS](https://euclid.roe.ac.uk/projects/vis_pf/dmsf?folder_id=372) | Euclid SGS PF Euclid SGS PF Validation Plan and Software Tests Specifications  | EUCL-IAP-PL-8-001 |[2.6](https://euclid.roe.ac.uk/dmsf/files/4082/view) |\n+| [STP-STR](https://euclid.roe.ac.uk/projects/vis_pf/dmsf?folder_id=372) | Euclid SGS PF Software Test Plan and Test Report | EUCL-IAP-TP-8-001| [7.0.3](https://euclid.roe.ac.uk/dmsf/files/4807/view) |\n+| [SUM]()https://gitlab.euclid-sgs.uk/PF-VIS/VIS_IAL_Pipelines/-/tree/release-13.0/doc/user_manual | Euclid SGS VIS PF Software User Manual | EUCL-IAP-MA-8-002 | 4.0 |\n+| [CCB]|Euclid SGS PF Configuration Control Board report   | -  | - |\n+\n+\n+# 3. PF Software products <a name=\"software\"></a>\n+\n+## 3.1 PF Environment configuration <a name=\"envt\"></a>\n+\n+The PF User Manual [RD5] describes the principal software parts of the system, including other software, such as operating systems, utilities, other supporting systems, and other facilities, equipment or resources.\n+\n+| Envt  | Version  |\n+|------|------|\n+| EDEN | `3.1` |\n+| Data Model | `9.0.2` |\n+| PF IAL Pipelines conf. | [13.0.6](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_IAL_Pipelines/-/tree/13.0.6) |\n+\n+\n+## 3.2 PF software products configuration <a name=\"products\"></a>\n+\n+\n+| Gitlab project    | Gitlab tag | SonarQube analysis\n+| ----------- | ----------- | ----------- |\n+| [VIS_Tasks](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks) | [13.0.6](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks/-/tags/13.0.6)|[release-13.0](https://codeen-app.euclid-ec.org/sonar/dashboard?branch=release-13.0&id=VIS_Tasks)|\n+| [VIS_PyLibrary](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_PyLibrary) | [3.20.2](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_PyLibrary/-/tags/3.20.2) |[release-3.20](https://codeen-app.euclid-ec.org/sonar/dashboard?branch=release-3.20&id=VIS_PyLibrary)|\n+| [VIS_ImageTools](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_ImageTools) | [3.16.0](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_ImageTools/-/tags/3.16.0) | [release-3.16](https://codeen-app.euclid-ec.org/sonar/dashboard?branch=release-3.16&id=VIS_ImageTools)|\n+ | [VIS_CTI](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_CTI) | [5.8.1](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_CTI/-/tags/5.8.1) |[release-5.8](https://codeen-app.euclid-ec.org/sonar/dashboard?branch=release-5.8&id=VIS_CTI)|\n+ | [VIS_Instrument_Tools](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Instrument_Tools) | [0.7.0](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Instrument_Tools/-/tags/0.7.0) | [release-0.7](https://codeen-app.euclid-ec.org/sonar/dashboard?branch=release-0.7&id=VIS_Instrument_Tools) |\n+ | [VIS_DiffractionSpikesFocus](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_DiffractionSpikesFocus) | [1.1.0](https://gitlab.euclid-sgs.uk/PF-VIS/VIS_DiffractionSpikesFocus/-/tags/1.1.0) | [release-1.1](https://codeen-app.euclid-ec.org/sonar/dashboard?branch=release-1.1&id=VIS_DiffractionSpikesFocus) |\n+\n+\n+# 4. Main Changes in this Release <a name=\"changes_and_fixed_issues\"></a>\n+\n+This release of the VIS PF is issued for the purpose of usual progress development in the context of the Euclid SGS. It has a particular emphasis with the preparation of the forthcoming Performance and Verification Phase processing.\n+This release is deployed as part of the cvmfs and does fully comply with the CODEEN standards.\n+\n+## 4.1 Functional changes <a name=\"changes\"></a>\n+\n+This release includes the following new calibration pipelines:\n+- VIS_BloomingCalibration \n+- VIS_BrighterFatterCalibration\n+- VIS_CTICalibration\n+- VIS_CTITimeEvolution\n+- VIS_DiffractionSpikesFocus\n+- VIS_FlagObjects\n+- VIS_GainCalibration\n+- VIS_NonLinCalibration\n+- VIS_PersistenceCalibration\n+- VIS_PhotometryCalibration\n+- VIS_PTCNLCalibration\n+- VIS_SmallScaleFlat\n+- VIS_TrapPumpingCalibration\n+\n+Refer to the SUM for the function of each of these pipelines.\n+\n+Processing of science exposures has been splitted in two pipelines: VIS_ProcessField for the processing of individual exposures, with the possibility to not produce the stack; and VIS_Stacking pipeline to produce a stack from a set of calibrated exposures. \n+\n+\n+\n+## 4.2 Bugs fixed  <a name=\"fixed_issues\"></a>\n+\n+| Issue | Title |\n+| -----------   | ----------- |\n+| [#17058](https://euclid.roe.ac.uk/issues/17058)| VIS PF crashes if a task is retried|\n+| [#17592](https://euclid.roe.ac.uk/issues/17592)| Some per-exposure statistics possibly lost in master dark pipeline|\n+| [#18113](https://euclid.roe.ac.uk/issues/18113)| Short exposure catalog metadata|\n+| [#20024](https://euclid.roe.ac.uk/issues/20024)| Master dark has incorrect unit|\n+| [#20034](https://euclid.roe.ac.uk/issues/20034)| wcsfit: Floating point nan values are not allowed in FITS headers|\n+| [#20089](https://euclid.roe.ac.uk/issues/20089)| VIS_LargeFlatCalibration_Pipeline: psf_model and starmask_model inputs are mandatory|\n+\n+\n+# 6. Known issues <a name=\"known_issues\"></a>\n+\n+Bug reports and software change/addition requests should be submitted through the Euclid Redmine tool at https://euclid.roe.ac.uk/projects/vis_pf/issues.\n+\n+\n+| Issue | Title |\n+| -----------   | ----------- |\n+| [#8670](https://euclid.roe.ac.uk/issues/8670)   | Missing columns in catalogs wrt R-VIS-PRD-F-070|\n+| [#19375](https://euclid.roe.ac.uk/issues/19375) | Master bias is out of requirement| \n+| [#19677](https://euclid.roe.ac.uk/issues/19677) | Master flat is out of requirement |\n+| [#19685](https://euclid.roe.ac.uk/issues/19685) | Dark calibration is out of requirement|\n+| [#20077](https://euclid.roe.ac.uk/issues/20077) | VIS PSFs seem to be broader than the TU stars|\n+| [#22778](https://euclid.roe.ac.uk/issues/22778) | VIS_NonLinCalibration_Pipeline (pixel MODE) produces incorrect results\n+| [#22866](https://euclid.roe.ac.uk/issues/22866) | Crosstalk calibration crashes when RemoveTempFiles = True\n+| [#22976](https://euclid.roe.ac.uk/issues/22976) | VIS_MasterDark_Pipeline (95 s exposures): Exception: model_dark(): All pixels are masked (perhaps the hot pixel threshold is too low?)\n+| [#23033](https://euclid.roe.ac.uk/issues/23033) | Astrometric calibration (use-fpa-model) fails on SIM-PV2-006_R2\n+| [#23072](https://euclid.roe.ac.uk/issues/23072) | Insufficient CR rejection in the newest VIS PVPR#2 data\n+| [#23096](https://euclid.roe.ac.uk/issues/23096) | FITS files are trucated when ZipOutputs = True\n+| [#23101](https://euclid.roe.ac.uk/issues/23101) | Large-scale Flat model CCDs may be showing an indexing error\n+| [#23168](https://euclid.roe.ac.uk/issues/23168) | VIS_BrighterFatterCalibrationCalibration_Pipeline: output product is DpdVisFileContainer instead of DpdVisBFEModel\n+| [#23190](https://euclid.roe.ac.uk/issues/23190) | wcsfit crashes on SIM-PV2-008_R2 EXTRA-FOCAL and INTRA-FOCAL exposures\n+| [#23233](https://euclid.roe.ac.uk/issues/23233) | Scattered light in VIS calblock-001 data\n+| [#23243](https://euclid.roe.ac.uk/issues/23243) | VIS_NonLinCalibration_Pipeline (APERTURE mode) produces incorrect results\n+| [#23265](https://euclid.roe.ac.uk/issues/23265) | VIS_ProcessField_Pipeline: VIS_Calibrate_Photometry crashes on out-of-focus exposures\n+| [#23266](https://euclid.roe.ac.uk/issues/23266) | stacking output product XML is empty\n+\n+\n+\n+\n+\n+\n",
                            "fix conflicts",
                            "James Nightingale",
                            "2023-08-10T10:37:45.000+01:00",
                            "77f423cb2068faeffab5fa9074c5e89e156b42d4"
                        ]
                    ],
                    "doc/user_manual/chap04.md": [
                        [
                            "@@ -86,47 +86,8 @@ Processing of science exposures uses two pipelines:\n \n All other pipelines are intended to produce calibration models from calibration data.\n \n-The current version of this document describes VIS pipelines operation during PV phase. We describe below the processing of some complex calblocks which require to run several pipelines.\n+Operation of the pipelines during PV phase is described in chapter PV operations.\n \n-### PV-001 Self Calibration\n-\n-1. Execution of VIS_PSFCalibration pipeline to produce a PSF model\n-\n-   This PSF model will be used in all subsequent steps where a PSF model is needed.\n-\n-2. Execution of 2 instances of VIS_ProcessField pipeline without stacking, using the PSF model above, possibly in parallel:  \n-   * one on the raw short exposures: it will produce short calibrated exposures and catalogs\n-   * one on the raw nominal exposures: it will produce nominal calibrated exposures and catalogs\n-\n-3. Possibly in parallel\n-   * Execution of the VIS_LargeFlatCalibration pipeline on the short calibrated catalogs produced in the previous step: it will produce the short large flat\n-   * Execution of the VIS_LargeFlatCalibration pipeline on the nominal calibrated catalogs produced in the previous step: it will produce the nominal large flat\n-   * Execution of the VIS_Stacking pipeline on the nominal calibrated exposures produced in the previous step: it will produce the astrometric catalog for NIR\n-\n-   These large flats will be used in all subsequent steps where a large flat is needed.\n-\n-4. Possibly in parallel\n-   * Execution of 2 instances of VIS_ProcessField pipeline without stacking\n-     * one on the raw short exposures, using the short large flat produced in step 3\n-     * one on the raw nominal exposures, using the nominal large flat produced in step 3\n-\n-5. Possibly in parallel\n-   * Execution of VIS_PhotometryCalibration pipeline on the short calibrated catalogs produced in step 4: it will produce a first estimation of the zero point\n-   * Execution of VIS_GhostsCalibration pipeline on the ghosts catalogs produced in step 4, both nominal and short\n-   * Execution of VIS_XTalkCalibration pipeline on the raw nominal exposures\n-\n-6. Execution of 2 instances of VIS_ProcessField pipeline with stacking, possibly in parallel:\n-   * one on the raw short exposures\n-   * one on the raw nominal exposures\n-\n-   using PSF model, large flats, zero point and crosstalk model produced in the previous steps.\n-\n-   This final step wil produce the standard VIS products calibrated in photometry.\n-\n-### PV-002 NISP-P and VIS Absolute Photometric Standards\n-\n-TBW\n-   \n \n ## PF configuration file\n \n",
                            "Merge branch 'feature-SUM' into release-13.0: SRN VIS PF 13.0.12",
                            "Catherine Grenet",
                            "2023-08-14T16:13:23.000+02:00",
                            "bec4d2f7797ae8a84255ffd581f45f5a4f533835"
                        ],
                        [
                            "@@ -45,9 +45,9 @@ The SGS document [RD7] describes through the principal software parts of the sys\n \n |   |   |\n |---|---|\n-| **PF Release:**  | `X.Y` |\n-| **EDEN:** | `i.j` |\n-| **Data Models:** | `m.n` |\n+| **PF Release:**  | `13.0` |\n+| **EDEN:** | `3.1` |\n+| **Data Models:** | `9.2` |\n \n These elements (related to the PF software) are identified **with their versions** in the **PF Release Note** [RD10].\n \n@@ -79,3 +79,64 @@ These elements (related to the PF software) are identified **with their versions\n * `VIS_TrapPumpingCalibration_Pipeline`\n * `VIS_XTalkCalibration_Pipeline`\n \n+Processing of science exposures uses two pipelines:\n+\n+* `VIS_ProcessField_Pipeline`: processing of N raw science exposures to produce calibrated exposures and associated catalogs. Optionally, production of the stack image and the associated catalog.\n+* `VIS_Stacking_Pipeline`: production of the stack image and associated catalog from calibrated exposures and associated catalogs produced by `VIS_ProcessField_Pipeline`.\n+\n+All other pipelines are intended to produce calibration models from calibration data.\n+\n+The current version of this document describes VIS pipelines operation during PV phase. We describe below the processing of some complex calblocks which require to run several pipelines.\n+\n+### PV-001 Self Calibration\n+\n+1. Execution of VIS_PSFCalibration pipeline to produce a PSF model\n+\n+   This PSF model will be used in all subsequent steps where a PSF model is needed.\n+\n+2. Execution of 2 instances of VIS_ProcessField pipeline without stacking, using the PSF model above, possibly in parallel:  \n+   * one on the raw short exposures: it will produce short calibrated exposures and catalogs\n+   * one on the raw nominal exposures: it will produce nominal calibrated exposures and catalogs\n+\n+3. Possibly in parallel\n+   * Execution of the VIS_LargeFlatCalibration pipeline on the short calibrated catalogs produced in the previous step: it will produce the short large flat\n+   * Execution of the VIS_LargeFlatCalibration pipeline on the nominal calibrated catalogs produced in the previous step: it will produce the nominal large flat\n+   * Execution of the VIS_Stacking pipeline on the nominal calibrated exposures produced in the previous step: it will produce the astrometric catalog for NIR\n+\n+   These large flats will be used in all subsequent steps where a large flat is needed.\n+\n+4. Possibly in parallel\n+   * Execution of 2 instances of VIS_ProcessField pipeline without stacking\n+     * one on the raw short exposures, using the short large flat produced in step 3\n+     * one on the raw nominal exposures, using the nominal large flat produced in step 3\n+\n+5. Possibly in parallel\n+   * Execution of VIS_PhotometryCalibration pipeline on the short calibrated catalogs produced in step 4: it will produce a first estimation of the zero point\n+   * Execution of VIS_GhostsCalibration pipeline on the ghosts catalogs produced in step 4, both nominal and short\n+   * Execution of VIS_XTalkCalibration pipeline on the raw nominal exposures\n+\n+6. Execution of 2 instances of VIS_ProcessField pipeline with stacking, possibly in parallel:\n+   * one on the raw short exposures\n+   * one on the raw nominal exposures\n+\n+   using PSF model, large flats, zero point and crosstalk model produced in the previous steps.\n+\n+   This final step wil produce the standard VIS products calibrated in photometry.\n+\n+### PV-002 NISP-P and VIS Absolute Photometric Standards\n+\n+TBW\n+   \n+\n+## PF configuration file\n+\n+Each pipeline has in input a configuration file, named hereafter VIS PF configuration file, which controls its behavior. The configuration file is of type `DpdVisConfigurationFile`.\n+\n+Three configuration files are provided, listed below with their ProductId:\n+\n+* `DpdVisConfigurationFile_EUC_VIS_ConfigFile_PF12_01JUL2023_ini`: generic configuration file, to be used when no specific instructions are provided.\n+* `DpdVisConfigurationFile_EUC_VIS_ConfigFile_PF12_01JUL2023_nostack_ini`: to be used to execute a `ProcessField` pipeline without stacking\n+* `DpdVisConfigurationFile_EUC_VIS_ConfigFile_PF12_01JUL2023_normtmp_ini`: to be used to execute a pipeline without removing temporary files from the workdir\n+\n+\n+\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ],
                        [
                            "@@ -45,9 +45,9 @@ The SGS document [RD7] describes through the principal software parts of the sys\n \n |   |   |\n |---|---|\n-| **PF Release:**  | `X.Y` |\n-| **EDEN:** | `i.j` |\n-| **Data Models:** | `m.n` |\n+| **PF Release:**  | `13.0` |\n+| **EDEN:** | `3.1` |\n+| **Data Models:** | `9.2` |\n \n These elements (related to the PF software) are identified **with their versions** in the **PF Release Note** [RD10].\n \n@@ -79,3 +79,64 @@ These elements (related to the PF software) are identified **with their versions\n * `VIS_TrapPumpingCalibration_Pipeline`\n * `VIS_XTalkCalibration_Pipeline`\n \n+Processing of science exposures uses two pipelines:\n+\n+* `VIS_ProcessField_Pipeline`: processing of N raw science exposures to produce calibrated exposures and associated catalogs. Optionally, production of the stack image and the associated catalog.\n+* `VIS_Stacking_Pipeline`: production of the stack image and associated catalog from calibrated exposures and associated catalogs produced by `VIS_ProcessField_Pipeline`.\n+\n+All other pipelines are intended to produce calibration models from calibration data.\n+\n+The current version of this document describes VIS pipelines operation during PV phase. We describe below the processing of some complex calblocks which require to run several pipelines.\n+\n+### PV-001 Self Calibration\n+\n+1. Execution of VIS_PSFCalibration pipeline to produce a PSF model\n+\n+   This PSF model will be used in all subsequent steps where a PSF model is needed.\n+\n+2. Execution of 2 instances of VIS_ProcessField pipeline without stacking, using the PSF model above, possibly in parallel:  \n+   * one on the raw short exposures: it will produce short calibrated exposures and catalogs\n+   * one on the raw nominal exposures: it will produce nominal calibrated exposures and catalogs\n+\n+3. Possibly in parallel\n+   * Execution of the VIS_LargeFlatCalibration pipeline on the short calibrated catalogs produced in the previous step: it will produce the short large flat\n+   * Execution of the VIS_LargeFlatCalibration pipeline on the nominal calibrated catalogs produced in the previous step: it will produce the nominal large flat\n+   * Execution of the VIS_Stacking pipeline on the nominal calibrated exposures produced in the previous step: it will produce the astrometric catalog for NIR\n+\n+   These large flats will be used in all subsequent steps where a large flat is needed.\n+\n+4. Possibly in parallel\n+   * Execution of 2 instances of VIS_ProcessField pipeline without stacking\n+     * one on the raw short exposures, using the short large flat produced in step 3\n+     * one on the raw nominal exposures, using the nominal large flat produced in step 3\n+\n+5. Possibly in parallel\n+   * Execution of VIS_PhotometryCalibration pipeline on the short calibrated catalogs produced in step 4: it will produce a first estimation of the zero point\n+   * Execution of VIS_GhostsCalibration pipeline on the ghosts catalogs produced in step 4, both nominal and short\n+   * Execution of VIS_XTalkCalibration pipeline on the raw nominal exposures\n+\n+6. Execution of 2 instances of VIS_ProcessField pipeline with stacking, possibly in parallel:\n+   * one on the raw short exposures\n+   * one on the raw nominal exposures\n+\n+   using PSF model, large flats, zero point and crosstalk model produced in the previous steps.\n+\n+   This final step wil produce the standard VIS products calibrated in photometry.\n+\n+### PV-002 NISP-P and VIS Absolute Photometric Standards\n+\n+TBW\n+   \n+\n+## PF configuration file\n+\n+Each pipeline has in input a configuration file, named hereafter VIS PF configuration file, which controls its behavior. The configuration file is of type `DpdVisConfigurationFile`.\n+\n+Three configuration files are provided, listed below with their ProductId:\n+\n+* `DpdVisConfigurationFile_EUC_VIS_ConfigFile_PF12_01JUL2023_ini`: generic configuration file, to be used when no specific instructions are provided.\n+* `DpdVisConfigurationFile_EUC_VIS_ConfigFile_PF12_01JUL2023_nostack_ini`: to be used to execute a `ProcessField` pipeline without stacking\n+* `DpdVisConfigurationFile_EUC_VIS_ConfigFile_PF12_01JUL2023_normtmp_ini`: to be used to execute a pipeline without removing temporary files from the workdir\n+\n+\n+\n",
                            "fix conflicts",
                            "James Nightingale",
                            "2023-08-10T10:37:45.000+01:00",
                            "77f423cb2068faeffab5fa9074c5e89e156b42d4"
                        ]
                    ],
                    "doc/user_manual/chap05_AstrometryCalibration.md": [
                        [
                            "@@ -37,8 +37,6 @@ graph LR\n     DpdVisMasterFlatFrame -.->|masterflat<br>0..1| pipeline\n     DpdVisDistortionModel -.->|dist_model<br>0..1| pipeline\n     DpdVisLargeFlatFrame -.->|lsf_model<br>0..1| pipeline\n-    DpdVisGhostModel -.->|ghost_model<br>1..1| pipeline\n-    DpdVisStarMask -.->|starmask_model<br>1..1| pipeline\n     DpdVisBFEModel -.->|bfe_model<br>0..1| pipeline\n     DpdTrueUniverseOutput -->|ref_catalogues<br>1..*| pipeline\n     pipeline -->|dist_model_xml_out<br>>1..1| DpdVisDistortionModel\n@@ -62,8 +60,6 @@ graph LR\n * `masterflat`: master flat frame\n * `dist_model`: distortion model, not to be used\n * `lsf_model`: large scale flat model from `VIS_LargeFlatCalibration` pipeline\n-* `ghost_model`: ghost model\n-* `starmask_model`: star mask model\n * `bfe_model`: brighter-fatter model\n * `ref_catalogues`: list of reference catalogues covering raw science frames sky area\n \n@@ -73,7 +69,7 @@ The pipeline will be executed on calblock PV-023. Only nominal exposures shall b\n \n xtalk_model, nlcorr_model, cti_model, lsf_model, bfe_model should not used because the corresponding models will not be available at the time PV-023 is received.\n \n-gains_model, ron_model, saturation_model, zero_point, ghost_model, starmask_model: on-ground models should be used.\n+gains_model, ron_model, saturation_model, zero_point: on-ground models should be used.\n \n ## Operational constraints\n \n@@ -85,7 +81,7 @@ A run on a simulated realisation of PV-023 (20 nominal exposures) requires:\n \n | Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n | ----- | -------- | ------------ | --------------- |\n-| 20    | TBW      | 5            | TBW             |\n+| 20    | TBW      | 5            | 350             |\n \n ## Normal termination\n \n",
                            "Merge branch 'feature-SUM' into release-13.0: SRN VIS PF 13.0.12",
                            "Catherine Grenet",
                            "2023-08-14T16:13:23.000+02:00",
                            "bec4d2f7797ae8a84255ffd581f45f5a4f533835"
                        ],
                        [
                            "@@ -0,0 +1,97 @@\n+\\newpage\n+\n+# Pipeline `VIS_AstrometryCalibration_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_AstrometryCalibration**: production of a distortion model from a suitable set of science exposures.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+* `VIS_CTI`\n+* `VIS_Instrument_Tools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_AstrometryCalibration`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_AstrometryCalibration)\n+    DpdVisRawFrame ==>|raw_frames_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisGainModel -->|gains_model<br>1..1| pipeline\n+    DpdVisRONModel -->|ron_model<br>1..1| pipeline\n+    DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n+    DpdVisMasterBiasFrame -.->|masterbias<br>0..1| pipeline\n+    DpdVisFlagMap -.->|flagmaps<br>0..*| pipeline\n+    DpdVisXTalkModel -.->|xtalk_model<br>0..1| pipeline\n+    DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n+    DpdVisCTIModel -.->|cti_model<br>0..1| pipeline\n+    DpdVisZeroPoint -->|zero_point<br>1..1| pipeline\n+    DpdVisMasterDarkFrame -.->|masterdark<br>0..1| pipeline\n+    DpdVisMasterFlatFrame -.->|masterflat<br>0..1| pipeline\n+    DpdVisDistortionModel -.->|dist_model<br>0..1| pipeline\n+    DpdVisLargeFlatFrame -.->|lsf_model<br>0..1| pipeline\n+    DpdVisGhostModel -.->|ghost_model<br>1..1| pipeline\n+    DpdVisStarMask -.->|starmask_model<br>1..1| pipeline\n+    DpdVisBFEModel -.->|bfe_model<br>0..1| pipeline\n+    DpdTrueUniverseOutput -->|ref_catalogues<br>1..*| pipeline\n+    pipeline -->|dist_model_xml_out<br>>1..1| DpdVisDistortionModel\n+```\n+\n+**Ports description:**\n+\n+* `raw_frames_in`: raw science frames to be processed\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `gains_model`: gain model\n+* `ron_model`: readout noise model\n+* `saturation_model`: saturation model\n+* `masterbias`: master bias frame from `VIS_MasterBias` pipeline\n+* `flagmaps`: map of defects in darkness from `VIS_MasterDark` pipeline, map of defects in photoresponse from `VIS_MasterFlat` pipeline\n+* `xtalk_model`: crosstalk model\n+* `nlcorr_model`: non-linearity correction model\n+* `cti_model`: CTI model\n+* `zero_point`: zero point\n+* `masterdark`: master dark, not to be used as long as dark is not measurable\n+* `masterflat`: master flat frame\n+* `dist_model`: distortion model, not to be used\n+* `lsf_model`: large scale flat model from `VIS_LargeFlatCalibration` pipeline\n+* `ghost_model`: ghost model\n+* `starmask_model`: star mask model\n+* `bfe_model`: brighter-fatter model\n+* `ref_catalogues`: list of reference catalogues covering raw science frames sky area\n+\n+## Processing triggering assumptions\n+\n+The pipeline will be executed on calblock PV-023. Only nominal exposures shall be used. \n+\n+xtalk_model, nlcorr_model, cti_model, lsf_model, bfe_model should not used because the corresponding models will not be available at the time PV-023 is received.\n+\n+gains_model, ron_model, saturation_model, zero_point, ghost_model, starmask_model: on-ground models should be used.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+A run on a simulated realisation of PV-023 (20 nominal exposures) requires:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| 20    | TBW      | 5            | TBW             |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n+\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ],
                        [
                            "@@ -0,0 +1,97 @@\n+\\newpage\n+\n+# Pipeline `VIS_AstrometryCalibration_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_AstrometryCalibration**: production of a distortion model from a suitable set of science exposures.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+* `VIS_CTI`\n+* `VIS_Instrument_Tools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_AstrometryCalibration`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_AstrometryCalibration)\n+    DpdVisRawFrame ==>|raw_frames_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisGainModel -->|gains_model<br>1..1| pipeline\n+    DpdVisRONModel -->|ron_model<br>1..1| pipeline\n+    DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n+    DpdVisMasterBiasFrame -.->|masterbias<br>0..1| pipeline\n+    DpdVisFlagMap -.->|flagmaps<br>0..*| pipeline\n+    DpdVisXTalkModel -.->|xtalk_model<br>0..1| pipeline\n+    DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n+    DpdVisCTIModel -.->|cti_model<br>0..1| pipeline\n+    DpdVisZeroPoint -->|zero_point<br>1..1| pipeline\n+    DpdVisMasterDarkFrame -.->|masterdark<br>0..1| pipeline\n+    DpdVisMasterFlatFrame -.->|masterflat<br>0..1| pipeline\n+    DpdVisDistortionModel -.->|dist_model<br>0..1| pipeline\n+    DpdVisLargeFlatFrame -.->|lsf_model<br>0..1| pipeline\n+    DpdVisGhostModel -.->|ghost_model<br>1..1| pipeline\n+    DpdVisStarMask -.->|starmask_model<br>1..1| pipeline\n+    DpdVisBFEModel -.->|bfe_model<br>0..1| pipeline\n+    DpdTrueUniverseOutput -->|ref_catalogues<br>1..*| pipeline\n+    pipeline -->|dist_model_xml_out<br>>1..1| DpdVisDistortionModel\n+```\n+\n+**Ports description:**\n+\n+* `raw_frames_in`: raw science frames to be processed\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `gains_model`: gain model\n+* `ron_model`: readout noise model\n+* `saturation_model`: saturation model\n+* `masterbias`: master bias frame from `VIS_MasterBias` pipeline\n+* `flagmaps`: map of defects in darkness from `VIS_MasterDark` pipeline, map of defects in photoresponse from `VIS_MasterFlat` pipeline\n+* `xtalk_model`: crosstalk model\n+* `nlcorr_model`: non-linearity correction model\n+* `cti_model`: CTI model\n+* `zero_point`: zero point\n+* `masterdark`: master dark, not to be used as long as dark is not measurable\n+* `masterflat`: master flat frame\n+* `dist_model`: distortion model, not to be used\n+* `lsf_model`: large scale flat model from `VIS_LargeFlatCalibration` pipeline\n+* `ghost_model`: ghost model\n+* `starmask_model`: star mask model\n+* `bfe_model`: brighter-fatter model\n+* `ref_catalogues`: list of reference catalogues covering raw science frames sky area\n+\n+## Processing triggering assumptions\n+\n+The pipeline will be executed on calblock PV-023. Only nominal exposures shall be used. \n+\n+xtalk_model, nlcorr_model, cti_model, lsf_model, bfe_model should not used because the corresponding models will not be available at the time PV-023 is received.\n+\n+gains_model, ron_model, saturation_model, zero_point, ghost_model, starmask_model: on-ground models should be used.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+A run on a simulated realisation of PV-023 (20 nominal exposures) requires:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| 20    | TBW      | 5            | TBW             |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n+\n",
                            "fix conflicts",
                            "James Nightingale",
                            "2023-08-10T10:37:45.000+01:00",
                            "77f423cb2068faeffab5fa9074c5e89e156b42d4"
                        ]
                    ],
                    "doc/user_manual/chap06_BloomingCalibration.md": [
                        [
                            "@@ -72,7 +72,7 @@ A typical run on 10 raw flat frames requires:\n \n | Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n | ----- | -------- | ------------ | --------------- |\n-| TBW   | TBW      | TBW          | TBW             |\n+| TBW   | TBW      | 5            | 550             |\n \n ## Normal termination\n \n",
                            "Merge branch 'feature-SUM' into release-13.0: SRN VIS PF 13.0.12",
                            "Catherine Grenet",
                            "2023-08-14T16:13:23.000+02:00",
                            "bec4d2f7797ae8a84255ffd581f45f5a4f533835"
                        ],
                        [
                            "@@ -0,0 +1,85 @@\n+\\newpage\n+\n+# Pipeline `VIS_BloomingCalibration_Pipeline`\n+\n+\n+## Pipeline Description\n+\n+**VIS_BloomingCalibration**: Production of a blooming model containing a json file, with the threshold in ADU of the blooming effect for all quadrants. Contains also png images of the graph of the PTC (Photon Transfer Curve) for all quadrants, used to compute the blooming threshold. The PTC images are located into the Data of the calibration product.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+* `VIS_CTI`\n+* `VIS_Instrument_Tools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_BloomingCalibration`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_BloomingCalibration)\n+    DpdVisRawFrame ==>|raw_frames_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisGainModel -->|gains_model<br>1..1| pipeline\n+    DpdVisRONModel -->|ron_model<br>1..1| pipeline\n+    DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n+    DpdVisMasterBiasFrame -.->|masterbias<br>0..1| pipeline\n+    DpdVisFlagMap -.->|flagmaps<br>0..*| pipeline\n+    DpdVisXTalkModel -.->|xtalk_model<br>0..1| pipeline\n+    DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n+    DpdVisCTIModel -.->|cti_model<br>0..1| pipeline\n+    DpdVisBFEModel -.->|bfe_model<br>0..1| pipeline\n+    pipeline -->|dpdcalib_blooming<br>1..*| DpdVisBloomingModel&nbsp\n+```\n+\n+**Ports description:**\n+\n+* `DpdVisRawFrame`: raw flat field frames\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `DpdVisGainModel`: gain model from `VIS_GainCalibration` pipeline\n+* `ron_model`: readout noise model\n+* `saturation_model`: saturation model, not used\n+* `masterbias`: master bias frame from `VIS_MasterBias` pipeline\n+* `flagmaps`: map of defects in darkness from `VIS_MasterDark` pipeline, map of defects in photoresponse from `VIS_MasterFlat` pipeline\n+* `xtalk_model`: crosstalk model from VIS_XTalkCalibration_Pipeline\n+* `nlcorr_model`: non-linearity correction model\n+* `cti_model`: CTI model\n+* `bfe_model`: bfe model\n+\n+\n+\n+## Processing triggering assumptions\n+\n+During PV phase the pipeline will be triggered on all the flatfields of calblock PV-029 and calblock PV-031.\n+\n+Input ports nlcorr_model, cti_model, bfe_model shall be left empty.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+Hardware requirement for the pipeline depend on the number of input raw flat frames.\n+\n+A typical run on 10 raw flat frames requires:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| TBW   | TBW      | TBW          | TBW             |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n+\n+\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ],
                        [
                            "@@ -0,0 +1,85 @@\n+\\newpage\n+\n+# Pipeline `VIS_BloomingCalibration_Pipeline`\n+\n+\n+## Pipeline Description\n+\n+**VIS_BloomingCalibration**: Production of a blooming model containing a json file, with the threshold in ADU of the blooming effect for all quadrants. Contains also png images of the graph of the PTC (Photon Transfer Curve) for all quadrants, used to compute the blooming threshold. The PTC images are located into the Data of the calibration product.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+* `VIS_CTI`\n+* `VIS_Instrument_Tools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_BloomingCalibration`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_BloomingCalibration)\n+    DpdVisRawFrame ==>|raw_frames_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisGainModel -->|gains_model<br>1..1| pipeline\n+    DpdVisRONModel -->|ron_model<br>1..1| pipeline\n+    DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n+    DpdVisMasterBiasFrame -.->|masterbias<br>0..1| pipeline\n+    DpdVisFlagMap -.->|flagmaps<br>0..*| pipeline\n+    DpdVisXTalkModel -.->|xtalk_model<br>0..1| pipeline\n+    DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n+    DpdVisCTIModel -.->|cti_model<br>0..1| pipeline\n+    DpdVisBFEModel -.->|bfe_model<br>0..1| pipeline\n+    pipeline -->|dpdcalib_blooming<br>1..*| DpdVisBloomingModel&nbsp\n+```\n+\n+**Ports description:**\n+\n+* `DpdVisRawFrame`: raw flat field frames\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `DpdVisGainModel`: gain model from `VIS_GainCalibration` pipeline\n+* `ron_model`: readout noise model\n+* `saturation_model`: saturation model, not used\n+* `masterbias`: master bias frame from `VIS_MasterBias` pipeline\n+* `flagmaps`: map of defects in darkness from `VIS_MasterDark` pipeline, map of defects in photoresponse from `VIS_MasterFlat` pipeline\n+* `xtalk_model`: crosstalk model from VIS_XTalkCalibration_Pipeline\n+* `nlcorr_model`: non-linearity correction model\n+* `cti_model`: CTI model\n+* `bfe_model`: bfe model\n+\n+\n+\n+## Processing triggering assumptions\n+\n+During PV phase the pipeline will be triggered on all the flatfields of calblock PV-029 and calblock PV-031.\n+\n+Input ports nlcorr_model, cti_model, bfe_model shall be left empty.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+Hardware requirement for the pipeline depend on the number of input raw flat frames.\n+\n+A typical run on 10 raw flat frames requires:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| TBW   | TBW      | TBW          | TBW             |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n+\n+\n",
                            "fix conflicts",
                            "James Nightingale",
                            "2023-08-10T10:37:45.000+01:00",
                            "77f423cb2068faeffab5fa9074c5e89e156b42d4"
                        ]
                    ],
                    "doc/user_manual/chap08_CTICalibration.md": [
                        [
                            "@@ -16,7 +16,9 @@ The related GitLab projects are following [RD6]:\n \n ## Pipeline ports with inputs/outputs\n \n-The following diagram represents the ports of `Pipeline VIS_CTICalibration`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+The following diagram represents the ports of `Pipeline VIS_CTICalibration`. For each port, the product type,\n+port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented\n+by dotted arrows.\n \n ```mermaid\n graph LR\n@@ -32,8 +34,8 @@ graph LR\n     DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n     DpdVisRONModel -->|ron_model<br>1..1| pipeline\n     DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n-    pipeline -->|dpdcticalibration<br>1..1| DpdVisCTICalibrationResults\n-    pipeline -->|dpdanalysis_out<br>1..1| DpdVisAnalysisResults\n+    pipeline -->|parallel_cti_xml_out<br>1..1| DpdVisCTICalibrationResults\n+    pipeline -->|serial_cti_xml_out<br>1..1| DpdVisCTICalibrationResults\n ```\n \n **Ports description:**\n@@ -49,8 +51,8 @@ graph LR\n * `nlcorr_model`: non-linearity correction model\n * `ron_model`: readout noise model\n * `saturation_model`: saturation model\n-* `dpdcticalibration`: CTI calibration results, including best-fit model with errors.\n-* `dpdanalysis`: quality assessment parameters\n+* `parallel_cti_xml_out`: Parallel CTI calibration results, including best-fit model with errors and DQ images.\n+* `serial_cti_xml_out`: Serial CTI calibration results, including best-fit model with errors and DQ images.\n \n Input ports not described above are currently unused.\n \n@@ -70,7 +72,7 @@ A typical run on 8 raw charge injection frames requires:\n \n | Cores | RSS (GB)        | Walltime (h) | Disk space (GB) |\n |-------|-----------------|-------------|-----------------|\n-| 36    | 9216 (36 * 256) | 12          | TBW             | # Estimate from workdir\n+| 36    | 9216 (36 * 256) | 12          | 4               |\n \n ## Normal termination\n \n@@ -79,4 +81,4 @@ order should have its `ProcessingState` element set to `Completed`.\n \n ## Error condition\n \n-In case of runtime error contact PF support.\n+In case of runtime error contact PF support.\n\\ No newline at end of file\n",
                            "Merge branch 'feature-SUM' into release-13.0: SRN VIS PF 13.0.12",
                            "Catherine Grenet",
                            "2023-08-14T16:13:23.000+02:00",
                            "bec4d2f7797ae8a84255ffd581f45f5a4f533835"
                        ],
                        [
                            "@@ -0,0 +1,82 @@\n+\\newpage\n+\n+# Pipeline `VIS_CTICalibration_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_CTICalibration**: Production of a cti model at a given data and time from a list of raw charge injection images.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_CTI`\n+* `SHE_ArCTIC`\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_CTICalibration`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_CTICalibration)\n+    DpdVisRawFrame ==>|raw_frames_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisFlagMap -.->|flagmaps<br>0..*| pipeline\n+    DpdVisGainModel -->|gains_model<br>1..1| pipeline\n+    DpdVisXTalkModel -.->|xtalk_model<br>0..1| pipeline\n+    DpdVisMasterBiasFrame -.->|master_bias<br>0..1| pipeline\n+    DpdVisMasterDarkFrame -.->|master_dark<br>0..1| pipeline\n+    DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n+    DpdVisRONModel -->|ron_model<br>1..1| pipeline\n+    DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n+    pipeline -->|dpdcticalibration<br>1..1| DpdVisCTICalibrationResults\n+    pipeline -->|dpdanalysis_out<br>1..1| DpdVisAnalysisResults\n+```\n+\n+**Ports description:**\n+\n+* `raw_frames_in`: list of raw charge injection frames, ImgType.FirstType=CHARGE_INJECTION\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `flagmaps`: list of flag maps.\n+* `gains_model`: gain model\n+* `xtalk_model`: crosstalk model\n+* `masterbias`: master bias frame\n+* `masterdark`: master dark frame\n+* `nlcorr_model`: non-linearity correction model\n+* `ron_model`: readout noise model\n+* `saturation_model`: saturation model\n+* `dpdcticalibration`: CTI calibration results, including best-fit model with errors.\n+* `dpdanalysis`: quality assessment parameters\n+\n+Input ports not described above are currently unused.\n+\n+## Processing triggering assumptions\n+\n+The pipeline needs a day's ROS sequence of raw charge injection\n+frames (see CALPRODUCT-VS-005: VIS CTI Charge Injection Lines), which consists of 8 frames taken at 8 different charge\n+injection levels.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+A typical run on 8 raw charge injection frames requires:\n+\n+| Cores | RSS (GB)        | Walltime (h) | Disk space (GB) |\n+|-------|-----------------|-------------|-----------------|\n+| 36    | 9216 (36 * 256) | 12          | TBW             | # Estimate from workdir\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing\n+order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ],
                        [
                            "@@ -1,3 +1,5 @@\n+\\newpage\n+\n # Pipeline `VIS_CTICalibration_Pipeline`\n \n ## Pipeline Description\n",
                            "add docs for PV-034 to chap29_PVOperations.md",
                            "James Nightingale",
                            "2023-08-10T13:40:05.000+01:00",
                            "d86df14db03b2ff86480e84e059fd5c487eb6ae0"
                        ],
                        [
                            "@@ -1,5 +1,3 @@\n-\\newpage\n-\n # Pipeline `VIS_CTICalibration_Pipeline`\n \n ## Pipeline Description\n@@ -16,7 +14,9 @@ The related GitLab projects are following [RD6]:\n \n ## Pipeline ports with inputs/outputs\n \n-The following diagram represents the ports of `Pipeline VIS_CTICalibration`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+The following diagram represents the ports of `Pipeline VIS_CTICalibration`. For each port, the product type,\n+port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented\n+by dotted arrows.\n \n ```mermaid\n graph LR\n@@ -32,8 +32,8 @@ graph LR\n     DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n     DpdVisRONModel -->|ron_model<br>1..1| pipeline\n     DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n-    pipeline -->|dpdcticalibration<br>1..1| DpdVisCTICalibrationResults\n-    pipeline -->|dpdanalysis_out<br>1..1| DpdVisAnalysisResults\n+    pipeline -->|parallel_cti_xml_out<br>1..1| DpdVisCTICalibrationResults\n+    pipeline -->|serial_cti_xml_out<br>1..1| DpdVisCTICalibrationResults\n ```\n \n **Ports description:**\n@@ -49,8 +49,8 @@ graph LR\n * `nlcorr_model`: non-linearity correction model\n * `ron_model`: readout noise model\n * `saturation_model`: saturation model\n-* `dpdcticalibration`: CTI calibration results, including best-fit model with errors.\n-* `dpdanalysis`: quality assessment parameters\n+* `parallel_cti_xml_out`: Parallel CTI calibration results, including best-fit model with errors and DQ images.\n+* `serial_cti_xml_out`: Serial CTI calibration results, including best-fit model with errors and DQ images.\n \n Input ports not described above are currently unused.\n \n@@ -70,7 +70,7 @@ A typical run on 8 raw charge injection frames requires:\n \n | Cores | RSS (GB)        | Walltime (h) | Disk space (GB) |\n |-------|-----------------|-------------|-----------------|\n-| 36    | 9216 (36 * 256) | 12          | TBW             | # Estimate from workdir\n+| 36    | 9216 (36 * 256) | 12          | 4               |\n \n ## Normal termination\n \n@@ -79,4 +79,4 @@ order should have its `ProcessingState` element set to `Completed`.\n \n ## Error condition\n \n-In case of runtime error contact PF support.\n+In case of runtime error contact PF support.\n\\ No newline at end of file\n",
                            "update chap08_CTICalibration.md",
                            "James Nightingale",
                            "2023-08-10T13:36:26.000+01:00",
                            "482579d0f212cf9142cdebe855ceff243f21d70b"
                        ],
                        [
                            "@@ -0,0 +1,82 @@\n+\\newpage\n+\n+# Pipeline `VIS_CTICalibration_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_CTICalibration**: Production of a cti model at a given data and time from a list of raw charge injection images.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_CTI`\n+* `SHE_ArCTIC`\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_CTICalibration`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_CTICalibration)\n+    DpdVisRawFrame ==>|raw_frames_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisFlagMap -.->|flagmaps<br>0..*| pipeline\n+    DpdVisGainModel -->|gains_model<br>1..1| pipeline\n+    DpdVisXTalkModel -.->|xtalk_model<br>0..1| pipeline\n+    DpdVisMasterBiasFrame -.->|master_bias<br>0..1| pipeline\n+    DpdVisMasterDarkFrame -.->|master_dark<br>0..1| pipeline\n+    DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n+    DpdVisRONModel -->|ron_model<br>1..1| pipeline\n+    DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n+    pipeline -->|dpdcticalibration<br>1..1| DpdVisCTICalibrationResults\n+    pipeline -->|dpdanalysis_out<br>1..1| DpdVisAnalysisResults\n+```\n+\n+**Ports description:**\n+\n+* `raw_frames_in`: list of raw charge injection frames, ImgType.FirstType=CHARGE_INJECTION\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `flagmaps`: list of flag maps.\n+* `gains_model`: gain model\n+* `xtalk_model`: crosstalk model\n+* `masterbias`: master bias frame\n+* `masterdark`: master dark frame\n+* `nlcorr_model`: non-linearity correction model\n+* `ron_model`: readout noise model\n+* `saturation_model`: saturation model\n+* `dpdcticalibration`: CTI calibration results, including best-fit model with errors.\n+* `dpdanalysis`: quality assessment parameters\n+\n+Input ports not described above are currently unused.\n+\n+## Processing triggering assumptions\n+\n+The pipeline needs a day's ROS sequence of raw charge injection\n+frames (see CALPRODUCT-VS-005: VIS CTI Charge Injection Lines), which consists of 8 frames taken at 8 different charge\n+injection levels.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+A typical run on 8 raw charge injection frames requires:\n+\n+| Cores | RSS (GB)        | Walltime (h) | Disk space (GB) |\n+|-------|-----------------|-------------|-----------------|\n+| 36    | 9216 (36 * 256) | 12          | TBW             | # Estimate from workdir\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing\n+order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n",
                            "fix conflicts",
                            "James Nightingale",
                            "2023-08-10T10:37:45.000+01:00",
                            "77f423cb2068faeffab5fa9074c5e89e156b42d4"
                        ]
                    ],
                    "doc/user_manual/chap09_CTIMasterCI.md": [
                        [
                            "@@ -16,7 +16,9 @@ The related GitLab projects are following [RD6]:\n \n ## Pipeline ports with inputs/outputs\n \n-The following diagram represents the ports of `Pipeline VIS_CTIMasterCI`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+The following diagram represents the ports of `Pipeline VIS_CTIMasterCI`. For each port, the product type,\n+port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented\n+by dotted arrows.\n \n ```mermaid\n graph LR\n@@ -32,8 +34,7 @@ graph LR\n     DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n     DpdVisRONModel -->|ron_model<br>1..1| pipeline\n     DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n-    pipeline -->|dpdmasterci<br>1..1| DpdVisMasterCIFrame\n-    pipeline -->|dpdanalysis_out<br>1..1| DpdVisAnalysisResults\n+    pipeline -->|master_ci_xml_out<br>1..1| DpdVisMasterCIFrame\n ```\n \n **Ports description:**\n@@ -49,16 +50,15 @@ graph LR\n * `nlcorr_model`: non-linearity correction model\n * `ron_model`: readout noise model\n * `saturation_model`: saturation model\n-* `dpdcticalibration`: CTI calibration results, including best-fit model with errors.\n-* `dpdanalysis`: quality assessment parameters\n+* `master_ci_xml_out`: FPA of master charge injection images.\n \n Input ports not described above are currently unused.\n \n ## Processing triggering assumptions\n \n-The pipeline only runs during PV, on reception of calblock PV-028.\n+The pipeline only runs during PV, on reception of CALBLOCK PV-028.\n \n-The process should be triggered independently according to the two variants in the calblock:\n+The process should be triggered independently according to the two variants in the CALBLOCK:\n \n - ROS variant: 32 times for each set of ROS sequence charge injection settings.\n \n@@ -74,7 +74,7 @@ A typical run on 6 raw charge injection frames requires:\n \n | Cores | RSS (GB)        | Walltime (h) | Disk space (GB) |\n |-------|-----------------|--------------|-----------------|\n-| 36    | 9216 (36 * 256) | 4            | TBW             | # Estimate from workdir\n+| 36    | 9216 (36 * 256) | 4            | 4               |\n \n ## Normal termination\n \n@@ -83,4 +83,4 @@ order should have its `ProcessingState` element set to `Completed`.\n \n ## Error condition\n \n-In case of runtime error contact PF support.\n+In case of runtime error contact PF support.\n\\ No newline at end of file\n",
                            "Merge branch 'feature-SUM' into release-13.0: SRN VIS PF 13.0.12",
                            "Catherine Grenet",
                            "2023-08-14T16:13:23.000+02:00",
                            "bec4d2f7797ae8a84255ffd581f45f5a4f533835"
                        ],
                        [
                            "@@ -0,0 +1,86 @@\n+\\newpage\n+\n+# Pipeline `VIS_CTIMasterCI_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_CTIMasterCI**: Production of a master charge injection image from a list of raw charge injection frames.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_CTI`\n+* `SHE_ArCTIC`\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_CTIMasterCI`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_CTIMasterCI)\n+    DpdVisRawFrame ==>|raw_frames_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisFlagMap -.->|flagmaps<br>0..*| pipeline\n+    DpdVisGainModel -->|gains_model<br>1..1| pipeline\n+    DpdVisXTalkModel -.->|xtalk_model<br>0..1| pipeline\n+    DpdVisMasterBiasFrame -.->|master_bias<br>0..1| pipeline\n+    DpdVisMasterDarkFrame -.->|master_dark<br>0..1| pipeline\n+    DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n+    DpdVisRONModel -->|ron_model<br>1..1| pipeline\n+    DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n+    pipeline -->|dpdmasterci<br>1..1| DpdVisMasterCIFrame\n+    pipeline -->|dpdanalysis_out<br>1..1| DpdVisAnalysisResults\n+```\n+\n+**Ports description:**\n+\n+* `raw_frames_in`: list of raw charge injection frames, ImgType.FirstType=CHARGE_INJECTION\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `flagmaps`: list of flag maps.\n+* `gains_model`: gain model\n+* `xtalk_model`: crosstalk model\n+* `masterbias`: master bias frame\n+* `masterdark`: master dark frame\n+* `nlcorr_model`: non-linearity correction model\n+* `ron_model`: readout noise model\n+* `saturation_model`: saturation model\n+* `dpdcticalibration`: CTI calibration results, including best-fit model with errors.\n+* `dpdanalysis`: quality assessment parameters\n+\n+Input ports not described above are currently unused.\n+\n+## Processing triggering assumptions\n+\n+The pipeline only runs during PV, on reception of calblock PV-028.\n+\n+The process should be triggered independently according to the two variants in the calblock:\n+\n+- ROS variant: 32 times for each set of ROS sequence charge injection settings.\n+\n+- IG1-SCAN variant: 42 times, for each column in Table 45.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+A typical run on 6 raw charge injection frames requires:\n+\n+| Cores | RSS (GB)        | Walltime (h) | Disk space (GB) |\n+|-------|-----------------|--------------|-----------------|\n+| 36    | 9216 (36 * 256) | 4            | TBW             | # Estimate from workdir\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing\n+order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ],
                        [
                            "@@ -1,3 +1,4 @@\n+\\newpage\n \n # Pipeline `VIS_CTIMasterCI_Pipeline`\n \n",
                            "add docs for PV-034 to chap29_PVOperations.md",
                            "James Nightingale",
                            "2023-08-10T13:40:05.000+01:00",
                            "d86df14db03b2ff86480e84e059fd5c487eb6ae0"
                        ],
                        [
                            "@@ -1,4 +1,3 @@\n-\\newpage\n \n # Pipeline `VIS_CTIMasterCI_Pipeline`\n \n@@ -16,7 +15,9 @@ The related GitLab projects are following [RD6]:\n \n ## Pipeline ports with inputs/outputs\n \n-The following diagram represents the ports of `Pipeline VIS_CTIMasterCI`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+The following diagram represents the ports of `Pipeline VIS_CTIMasterCI`. For each port, the product type,\n+port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented\n+by dotted arrows.\n \n ```mermaid\n graph LR\n@@ -32,8 +33,7 @@ graph LR\n     DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n     DpdVisRONModel -->|ron_model<br>1..1| pipeline\n     DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n-    pipeline -->|dpdmasterci<br>1..1| DpdVisMasterCIFrame\n-    pipeline -->|dpdanalysis_out<br>1..1| DpdVisAnalysisResults\n+    pipeline -->|master_ci_xml_out<br>1..1| DpdVisMasterCIFrame\n ```\n \n **Ports description:**\n@@ -49,16 +49,15 @@ graph LR\n * `nlcorr_model`: non-linearity correction model\n * `ron_model`: readout noise model\n * `saturation_model`: saturation model\n-* `dpdcticalibration`: CTI calibration results, including best-fit model with errors.\n-* `dpdanalysis`: quality assessment parameters\n+* `master_ci_xml_out`: FPA of master charge injection images.\n \n Input ports not described above are currently unused.\n \n ## Processing triggering assumptions\n \n-The pipeline only runs during PV, on reception of calblock PV-028.\n+The pipeline only runs during PV, on reception of CALBLOCK PV-028.\n \n-The process should be triggered independently according to the two variants in the calblock:\n+The process should be triggered independently according to the two variants in the CALBLOCK:\n \n - ROS variant: 32 times for each set of ROS sequence charge injection settings.\n \n@@ -74,7 +73,7 @@ A typical run on 6 raw charge injection frames requires:\n \n | Cores | RSS (GB)        | Walltime (h) | Disk space (GB) |\n |-------|-----------------|--------------|-----------------|\n-| 36    | 9216 (36 * 256) | 4            | TBW             | # Estimate from workdir\n+| 36    | 9216 (36 * 256) | 4            | 4               |\n \n ## Normal termination\n \n@@ -83,4 +82,4 @@ order should have its `ProcessingState` element set to `Completed`.\n \n ## Error condition\n \n-In case of runtime error contact PF support.\n+In case of runtime error contact PF support.\n\\ No newline at end of file\n",
                            "chap09_CTIMasterCI.md",
                            "James Nightingale",
                            "2023-08-10T13:37:12.000+01:00",
                            "e33be92e5891b254c0e1666981728e039231e015"
                        ],
                        [
                            "@@ -0,0 +1,86 @@\n+\\newpage\n+\n+# Pipeline `VIS_CTIMasterCI_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_CTIMasterCI**: Production of a master charge injection image from a list of raw charge injection frames.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_CTI`\n+* `SHE_ArCTIC`\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_CTIMasterCI`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_CTIMasterCI)\n+    DpdVisRawFrame ==>|raw_frames_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisFlagMap -.->|flagmaps<br>0..*| pipeline\n+    DpdVisGainModel -->|gains_model<br>1..1| pipeline\n+    DpdVisXTalkModel -.->|xtalk_model<br>0..1| pipeline\n+    DpdVisMasterBiasFrame -.->|master_bias<br>0..1| pipeline\n+    DpdVisMasterDarkFrame -.->|master_dark<br>0..1| pipeline\n+    DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n+    DpdVisRONModel -->|ron_model<br>1..1| pipeline\n+    DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n+    pipeline -->|dpdmasterci<br>1..1| DpdVisMasterCIFrame\n+    pipeline -->|dpdanalysis_out<br>1..1| DpdVisAnalysisResults\n+```\n+\n+**Ports description:**\n+\n+* `raw_frames_in`: list of raw charge injection frames, ImgType.FirstType=CHARGE_INJECTION\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `flagmaps`: list of flag maps.\n+* `gains_model`: gain model\n+* `xtalk_model`: crosstalk model\n+* `masterbias`: master bias frame\n+* `masterdark`: master dark frame\n+* `nlcorr_model`: non-linearity correction model\n+* `ron_model`: readout noise model\n+* `saturation_model`: saturation model\n+* `dpdcticalibration`: CTI calibration results, including best-fit model with errors.\n+* `dpdanalysis`: quality assessment parameters\n+\n+Input ports not described above are currently unused.\n+\n+## Processing triggering assumptions\n+\n+The pipeline only runs during PV, on reception of calblock PV-028.\n+\n+The process should be triggered independently according to the two variants in the calblock:\n+\n+- ROS variant: 32 times for each set of ROS sequence charge injection settings.\n+\n+- IG1-SCAN variant: 42 times, for each column in Table 45.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+A typical run on 6 raw charge injection frames requires:\n+\n+| Cores | RSS (GB)        | Walltime (h) | Disk space (GB) |\n+|-------|-----------------|--------------|-----------------|\n+| 36    | 9216 (36 * 256) | 4            | TBW             | # Estimate from workdir\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing\n+order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n",
                            "fix conflicts",
                            "James Nightingale",
                            "2023-08-10T10:37:45.000+01:00",
                            "77f423cb2068faeffab5fa9074c5e89e156b42d4"
                        ]
                    ],
                    "doc/user_manual/chap20_PSFCalibration.md": [
                        [
                            "@@ -32,16 +32,8 @@ graph LR\n     DpdVisXTalkModel -.->|xtalk_model<br>0..1| pipeline\n     DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n     DpdVisCTIModel -.->|cti_model<br>0..1| pipeline\n-    DpdVisZeroPoint -.->|zero_point<br>0..1| pipeline\n     DpdVisMasterDarkFrame -.->|masterdark<br>0..1| pipeline\n     DpdVisMasterFlatFrame -.->|masterflat<br>0..1| pipeline\n-    DpdVisPSFModel -.->|psf_model<br>0..1| pipeline\n-    DpdVisDistortionModel -.->|dist_model<br>0..1| pipeline\n-    DpdVisLargeFlatFrame -.->|lsf_model<br>0..1| pipeline\n-    DpdVisGhostModel -.->|ghost_model<br>0..1| pipeline\n-    DpdVisStarMask -.->|starmask_model<br>0..1| pipeline\n-    DpdVisBFEModel -.->|bfe_model<br>0..1| pipeline\n-    DpdTrueUniverseOutput -.->|ref_catalogues<br>0..*| pipeline\n     pipeline -->|psf_model_xml_out<br>1..1| DpdVisPSFModel\n ```\n \n@@ -58,16 +50,8 @@ graph LR\n * `xtalk_model`: crosstalk model\n * `nlcorr_model`: non-linearity correction model\n * `cti_model`: CTI model\n-* `zero_point`: zero point, not used\n * `masterdark`: master dark, not to be used as long as dark is not measurable\n * `masterflat`: master flat frame\n-* `psf_model`: PSF model, not used\n-* `dist_model`: distortion model, not used\n-* `lsf_model`: large scale flat model from `VIS_LargeFlatCalibration` pipeline, none if not available\n-* `ghost_model`: ghost model, not used\n-* `starmask_model`: star mask model, not used\n-* `bfe_model`: brighter-fatter model\n-* `ref_catalogues`: list of reference catalogues covering raw science frames sky area, not used\n \n ## Processing triggering assumptions\n \n",
                            "Merge branch 'feature-SUM' into release-13.0: SRN VIS PF 13.0.12",
                            "Catherine Grenet",
                            "2023-08-14T16:13:23.000+02:00",
                            "bec4d2f7797ae8a84255ffd581f45f5a4f533835"
                        ],
                        [
                            "@@ -0,0 +1,98 @@\n+\\newpage\n+\n+# Pipeline `VIS_PSFCalibration_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_PSFCalibration**: Production of a PSF model from raw science exposures.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+* `VIS_CTI`\n+* `VIS_Instrument_Tools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_PSFCalibration`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_PSFCalibration)\n+    DpdVisRawFrame ==>|raw_frames_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisGainModel -->|gains_model<br>1..1| pipeline\n+    DpdVisRONModel -->|ron_model<br>1..1| pipeline\n+    DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n+    DpdVisMasterBiasFrame -.->|masterbias<br>0..1| pipeline\n+    DpdVisFlagMap -.->|flagmaps<br>0..*| pipeline\n+    DpdVisXTalkModel -.->|xtalk_model<br>0..1| pipeline\n+    DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n+    DpdVisCTIModel -.->|cti_model<br>0..1| pipeline\n+    DpdVisZeroPoint -.->|zero_point<br>0..1| pipeline\n+    DpdVisMasterDarkFrame -.->|masterdark<br>0..1| pipeline\n+    DpdVisMasterFlatFrame -.->|masterflat<br>0..1| pipeline\n+    DpdVisPSFModel -.->|psf_model<br>0..1| pipeline\n+    DpdVisDistortionModel -.->|dist_model<br>0..1| pipeline\n+    DpdVisLargeFlatFrame -.->|lsf_model<br>0..1| pipeline\n+    DpdVisGhostModel -.->|ghost_model<br>0..1| pipeline\n+    DpdVisStarMask -.->|starmask_model<br>0..1| pipeline\n+    DpdVisBFEModel -.->|bfe_model<br>0..1| pipeline\n+    DpdTrueUniverseOutput -.->|ref_catalogues<br>0..*| pipeline\n+    pipeline -->|psf_model_xml_out<br>1..1| DpdVisPSFModel\n+```\n+\n+**Ports description:**\n+\n+* `raw_frames_in`: raw science frames to be processed\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `gains_model`: gain model\n+* `ron_model`: readout noise model\n+* `saturation_model`: saturation model\n+* `masterbias`: master bias frame from `VIS_MasterBias` pipeline\n+* `flagmaps`: map of defect in darkness from `VIS_MasterDark` pipeline, map of defects in photoresponse from `VIS_MasterFlat` pipeline\n+* `xtalk_model`: crosstalk model\n+* `nlcorr_model`: non-linearity correction model\n+* `cti_model`: CTI model\n+* `zero_point`: zero point, not used\n+* `masterdark`: master dark, not to be used as long as dark is not measurable\n+* `masterflat`: master flat frame\n+* `psf_model`: PSF model, not used\n+* `dist_model`: distortion model, not used\n+* `lsf_model`: large scale flat model from `VIS_LargeFlatCalibration` pipeline, none if not available\n+* `ghost_model`: ghost model, not used\n+* `starmask_model`: star mask model, not used\n+* `bfe_model`: brighter-fatter model\n+* `ref_catalogues`: list of reference catalogues covering raw science frames sky area, not used\n+\n+## Processing triggering assumptions\n+\n+The `VIS_PSFCalibration` pipeline will be the first one to be trigerred on calblock PV-001.\n+\n+It will be executed on short science exposures only.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+A typical run on 58 short science exposures requires:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| 58    | TBW      | 10           | 940             |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n+\n+\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ],
                        [
                            "@@ -0,0 +1,98 @@\n+\\newpage\n+\n+# Pipeline `VIS_PSFCalibration_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_PSFCalibration**: Production of a PSF model from raw science exposures.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+* `VIS_CTI`\n+* `VIS_Instrument_Tools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_PSFCalibration`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_PSFCalibration)\n+    DpdVisRawFrame ==>|raw_frames_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisGainModel -->|gains_model<br>1..1| pipeline\n+    DpdVisRONModel -->|ron_model<br>1..1| pipeline\n+    DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n+    DpdVisMasterBiasFrame -.->|masterbias<br>0..1| pipeline\n+    DpdVisFlagMap -.->|flagmaps<br>0..*| pipeline\n+    DpdVisXTalkModel -.->|xtalk_model<br>0..1| pipeline\n+    DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n+    DpdVisCTIModel -.->|cti_model<br>0..1| pipeline\n+    DpdVisZeroPoint -.->|zero_point<br>0..1| pipeline\n+    DpdVisMasterDarkFrame -.->|masterdark<br>0..1| pipeline\n+    DpdVisMasterFlatFrame -.->|masterflat<br>0..1| pipeline\n+    DpdVisPSFModel -.->|psf_model<br>0..1| pipeline\n+    DpdVisDistortionModel -.->|dist_model<br>0..1| pipeline\n+    DpdVisLargeFlatFrame -.->|lsf_model<br>0..1| pipeline\n+    DpdVisGhostModel -.->|ghost_model<br>0..1| pipeline\n+    DpdVisStarMask -.->|starmask_model<br>0..1| pipeline\n+    DpdVisBFEModel -.->|bfe_model<br>0..1| pipeline\n+    DpdTrueUniverseOutput -.->|ref_catalogues<br>0..*| pipeline\n+    pipeline -->|psf_model_xml_out<br>1..1| DpdVisPSFModel\n+```\n+\n+**Ports description:**\n+\n+* `raw_frames_in`: raw science frames to be processed\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `gains_model`: gain model\n+* `ron_model`: readout noise model\n+* `saturation_model`: saturation model\n+* `masterbias`: master bias frame from `VIS_MasterBias` pipeline\n+* `flagmaps`: map of defect in darkness from `VIS_MasterDark` pipeline, map of defects in photoresponse from `VIS_MasterFlat` pipeline\n+* `xtalk_model`: crosstalk model\n+* `nlcorr_model`: non-linearity correction model\n+* `cti_model`: CTI model\n+* `zero_point`: zero point, not used\n+* `masterdark`: master dark, not to be used as long as dark is not measurable\n+* `masterflat`: master flat frame\n+* `psf_model`: PSF model, not used\n+* `dist_model`: distortion model, not used\n+* `lsf_model`: large scale flat model from `VIS_LargeFlatCalibration` pipeline, none if not available\n+* `ghost_model`: ghost model, not used\n+* `starmask_model`: star mask model, not used\n+* `bfe_model`: brighter-fatter model\n+* `ref_catalogues`: list of reference catalogues covering raw science frames sky area, not used\n+\n+## Processing triggering assumptions\n+\n+The `VIS_PSFCalibration` pipeline will be the first one to be trigerred on calblock PV-001.\n+\n+It will be executed on short science exposures only.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+A typical run on 58 short science exposures requires:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| 58    | TBW      | 10           | 940             |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n+\n+\n",
                            "fix conflicts",
                            "James Nightingale",
                            "2023-08-10T10:37:45.000+01:00",
                            "77f423cb2068faeffab5fa9074c5e89e156b42d4"
                        ]
                    ],
                    "doc/user_manual/chap24_ProcessField.md": [
                        [
                            "@@ -6,6 +6,8 @@\n \n **VIS_ProcessField**: Production of calibrated frames and associated catalogs from a list of raw science exposures. Optionally, production of the stacked image and its associated catalog.\n \n+Stack production is controlled by the PF configuration file (see PF Operations Environment).\n+\n The related GitLab projects are following [RD6]:\n \n * `VIS_Tasks`\n@@ -88,10 +90,6 @@ During nominal operations the pipeline will be triggered on each observation (RO\n \n Either during PV or nominal operations, short and nominal science exposures should always be processed in different instances of the pipeline, because the large flat model is different depending on exposure duration.\n \n-Below we describe the operation of the pipeline during PV, in chronological order of calblocks.\n-\n-TBW\n-\n ## Operational constraints\n \n None.\n",
                            "Merge branch 'feature-SUM' into release-13.0: SRN VIS PF 13.0.12",
                            "Catherine Grenet",
                            "2023-08-14T16:13:23.000+02:00",
                            "bec4d2f7797ae8a84255ffd581f45f5a4f533835"
                        ],
                        [
                            "@@ -0,0 +1,117 @@\n+\\newpage\n+\n+# Pipeline `VIS_ProcessField_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_ProcessField**: Production of calibrated frames and associated catalogs from a list of raw science exposures. Optionally, production of the stacked image and its associated catalog.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+* `VIS_CTI`\n+* `VIS_Instrument_Tools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_ProcessField`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_ProcessField)\n+    DpdVisRawFrame ==>|raw_frames_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisGainModel -->|gains_model<br>1..1| pipeline\n+    DpdVisRONModel -->|ron_model<br>1..1| pipeline\n+    DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n+    DpdVisMasterBiasFrame -.->|masterbias<br>0..1| pipeline\n+    DpdVisFlagMap -.->|flagmaps<br>0..*| pipeline\n+    DpdVisXTalkModel -.->|xtalk_model<br>0..1| pipeline\n+    DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n+    DpdVisCTIModel -.->|cti_model<br>0..1| pipeline\n+    DpdVisZeroPoint -->|zero_point<br>1..1| pipeline\n+    DpdVisMasterDarkFrame -.->|masterdark<br>0..1| pipeline\n+    DpdVisMasterFlatFrame -.->|masterflat<br>0..1| pipeline\n+    DpdVisPSFModel -->|psf_model<br>1..1| pipeline\n+    DpdVisDistortionModel -->|dist_model<br>1..1| pipeline\n+    DpdVisLargeFlatFrame -.->|lsf_model<br>0..1| pipeline\n+    DpdVisGhostModel -->|ghost_model<br>1..1| pipeline\n+    DpdVisStarMask -->|starmask_model<br>1..1| pipeline\n+    DpdVisBFEModel -.->|bfe_model<br>0..1| pipeline\n+    DpdTrueUniverseOutput -->|ref_catalogues<br>1..*| pipeline\n+\n+    pipeline -->|dpdcalibrated_frames<br>1..*| DpdVisCalibratedFrame\n+    pipeline -->|dpdcalibrated_catalogues<br>1..*| DpdVisCalibratedFrameCatalog\n+    pipeline -->|dpdghost_catalogues<br>1..*| DpdVisFileContainer\n+    pipeline -.->|dpdstacked_frame<br>0..1|DpdVisStackedFrame\n+    pipeline -.->|dpdstacked_catalogue<br>0..1|DpdVisStackedFrameCatalog\n+    pipeline -->|dpdanalysis_out<br>1..*| DpdVisAnalysisResults\n+```\n+\n+**Ports description:**\n+\n+* `raw_frames_in`: raw science frames to be processed\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `gains_model`: gain model\n+* `ron_model`: readout noise model\n+* `saturation_model`: saturation model\n+* `masterbias`: master bias frame from `VIS_MasterBias` pipeline\n+* `flagmaps`: map of defect in darkness from `VIS_MasterDark` pipeline, map of defects in photoresponse from `VIS_MasterFlat` pipeline\n+* `xtalk_model`: crosstalk model\n+* `nlcorr_model`: non-linearity correction model\n+* `cti_model`: CTI model\n+* `zero_point`: zero point\n+* `masterdark`: master dark, not to be used as long as dark is not measurable\n+* `masterflat`: master flat frame\n+* `psf_model`: PSF model from `VIS_PSFCalibration` pipeline\n+* `dist_model`: distortion model\n+* `lsf_model`: large scale flat model from `VIS_LargeFlatCalibration` pipeline\n+* `ghost_model`: ghost model\n+* `starmask_model`: star mask model\n+* `bfe_model`: brighter-fatter model\n+* `ref_catalogues`: list of reference catalogues covering raw science frames sky area\n+* `dpdcalibrated_frames`: calibrated images\n+* `dpdcalibrated_catalogues`: calibrated images catalogues\n+* `dpdghost_catalogues`: ghosts catalogues, to be used by `VIS_GhostsCalibration` pipeline\n+* `dpdstacked_frame`: stacked image\n+* `dpdstacked_catalogue`: stacked image catalogue\n+* `dpdanalysis_out`: quality assessment parameters\n+\n+\n+## Processing triggering assumptions\n+\n+During nominal operations the pipeline will be triggered on each observation (ROS). It will also be executed at different stages during PV phase, for the processing of several calblocks.\n+\n+Either during PV or nominal operations, short and nominal science exposures should always be processed in different instances of the pipeline, because the large flat model is different depending on exposure duration.\n+\n+Below we describe the operation of the pipeline during PV, in chronological order of calblocks.\n+\n+TBW\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+Hardware configuration requirements for the pipeline depends on the number of input exposures.\n+\n+N being the cumber of input exposuers:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| N     | TBW      | TBW          | 352 * N + 140   |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n+\n+\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ],
                        [
                            "@@ -0,0 +1,117 @@\n+\\newpage\n+\n+# Pipeline `VIS_ProcessField_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_ProcessField**: Production of calibrated frames and associated catalogs from a list of raw science exposures. Optionally, production of the stacked image and its associated catalog.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+* `VIS_CTI`\n+* `VIS_Instrument_Tools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_ProcessField`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_ProcessField)\n+    DpdVisRawFrame ==>|raw_frames_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisGainModel -->|gains_model<br>1..1| pipeline\n+    DpdVisRONModel -->|ron_model<br>1..1| pipeline\n+    DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n+    DpdVisMasterBiasFrame -.->|masterbias<br>0..1| pipeline\n+    DpdVisFlagMap -.->|flagmaps<br>0..*| pipeline\n+    DpdVisXTalkModel -.->|xtalk_model<br>0..1| pipeline\n+    DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n+    DpdVisCTIModel -.->|cti_model<br>0..1| pipeline\n+    DpdVisZeroPoint -->|zero_point<br>1..1| pipeline\n+    DpdVisMasterDarkFrame -.->|masterdark<br>0..1| pipeline\n+    DpdVisMasterFlatFrame -.->|masterflat<br>0..1| pipeline\n+    DpdVisPSFModel -->|psf_model<br>1..1| pipeline\n+    DpdVisDistortionModel -->|dist_model<br>1..1| pipeline\n+    DpdVisLargeFlatFrame -.->|lsf_model<br>0..1| pipeline\n+    DpdVisGhostModel -->|ghost_model<br>1..1| pipeline\n+    DpdVisStarMask -->|starmask_model<br>1..1| pipeline\n+    DpdVisBFEModel -.->|bfe_model<br>0..1| pipeline\n+    DpdTrueUniverseOutput -->|ref_catalogues<br>1..*| pipeline\n+\n+    pipeline -->|dpdcalibrated_frames<br>1..*| DpdVisCalibratedFrame\n+    pipeline -->|dpdcalibrated_catalogues<br>1..*| DpdVisCalibratedFrameCatalog\n+    pipeline -->|dpdghost_catalogues<br>1..*| DpdVisFileContainer\n+    pipeline -.->|dpdstacked_frame<br>0..1|DpdVisStackedFrame\n+    pipeline -.->|dpdstacked_catalogue<br>0..1|DpdVisStackedFrameCatalog\n+    pipeline -->|dpdanalysis_out<br>1..*| DpdVisAnalysisResults\n+```\n+\n+**Ports description:**\n+\n+* `raw_frames_in`: raw science frames to be processed\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `gains_model`: gain model\n+* `ron_model`: readout noise model\n+* `saturation_model`: saturation model\n+* `masterbias`: master bias frame from `VIS_MasterBias` pipeline\n+* `flagmaps`: map of defect in darkness from `VIS_MasterDark` pipeline, map of defects in photoresponse from `VIS_MasterFlat` pipeline\n+* `xtalk_model`: crosstalk model\n+* `nlcorr_model`: non-linearity correction model\n+* `cti_model`: CTI model\n+* `zero_point`: zero point\n+* `masterdark`: master dark, not to be used as long as dark is not measurable\n+* `masterflat`: master flat frame\n+* `psf_model`: PSF model from `VIS_PSFCalibration` pipeline\n+* `dist_model`: distortion model\n+* `lsf_model`: large scale flat model from `VIS_LargeFlatCalibration` pipeline\n+* `ghost_model`: ghost model\n+* `starmask_model`: star mask model\n+* `bfe_model`: brighter-fatter model\n+* `ref_catalogues`: list of reference catalogues covering raw science frames sky area\n+* `dpdcalibrated_frames`: calibrated images\n+* `dpdcalibrated_catalogues`: calibrated images catalogues\n+* `dpdghost_catalogues`: ghosts catalogues, to be used by `VIS_GhostsCalibration` pipeline\n+* `dpdstacked_frame`: stacked image\n+* `dpdstacked_catalogue`: stacked image catalogue\n+* `dpdanalysis_out`: quality assessment parameters\n+\n+\n+## Processing triggering assumptions\n+\n+During nominal operations the pipeline will be triggered on each observation (ROS). It will also be executed at different stages during PV phase, for the processing of several calblocks.\n+\n+Either during PV or nominal operations, short and nominal science exposures should always be processed in different instances of the pipeline, because the large flat model is different depending on exposure duration.\n+\n+Below we describe the operation of the pipeline during PV, in chronological order of calblocks.\n+\n+TBW\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+Hardware configuration requirements for the pipeline depends on the number of input exposures.\n+\n+N being the cumber of input exposuers:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| N     | TBW      | TBW          | 352 * N + 140   |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n+\n+\n",
                            "fix conflicts",
                            "James Nightingale",
                            "2023-08-10T10:37:45.000+01:00",
                            "77f423cb2068faeffab5fa9074c5e89e156b42d4"
                        ]
                    ],
                    "doc/user_manual/chap27_TrapPumpingCalibration.md": [
                        [
                            "@@ -58,23 +58,23 @@ For MSTP (`TrapPumping.Status=MultipleSerial`), each pipeline instance requires\n \n ### PV configurations\n \n-During PV the pipeline will be triggered on reception of calblock PV-027, with an instance to be run for each TP parameter configuration. For VTP, there are 2 IG1 voltages and 4 shuffling modes, giving a total of 8 pipeline instances. For MSTP, there are 2 IG1 voltages and 2 shuffling modes, so 4 instances. The frame selection queries are given below.\n+During PV the pipeline will be triggered on reception of calblock PV-027, with an instance to be run for each TP parameter configuration. For VTP, there are 2 IG1 voltages and 4 shuffling modes, giving a total of 8 pipeline instances. For MSTP, there are 2 IG1 voltages and 2 shuffling modes, so 4 instances. The frame selection criteria are given below.\n \n **VTP:**\n \n-The queries follow the pattern\n+The frame selections follow the pattern\n ```\n-ObservationSequence.CalblockId=PV-027&ObservationSequence.CalblockVariant=PARALLEL-CI-<variant>&(TrapPumping.ParallelTrapPumpingParameters.ShufflingCyclesCount=1|TrapPumping.ParallelTrapPumpingParameters.ShufflingMode=<mode>)\n+ObservationSequence.CalblockId=PV-027 & ObservationSequence.CalblockVariant=PARALLEL-CI-<variant> & (TrapPumping.ParallelTrapPumpingParameters.ShufflingCyclesCount=1 | TrapPumping.ParallelTrapPumpingParameters.ShufflingMode=<mode>)\n ```\n with `<variant>` taking the values `HIGH` and `LOW` and, for each of these, `<mode>` taking the values `234`, `123`, `341` and `412`.\n \n **STP:**\n \n-The queries follow the pattern\n+The frame selections follow the pattern\n ```\n-ObservationSequence.CalBlockId=PV-027&ObservationSequence.CalBlockVariant=SERIAL&ChargeInjection.Parameters.InjectionGate1Voltage.Value=<ig1>&TrapPumping.SerialTrapPumpingParameters.SerialTrapPumpingParameterList.SerialTrapPumpingParameterSet1.ShufflingMode=<mode>\n+ObservationSequence.CalBlockId=PV-027 & ObservationSequence.CalBlockVariant=SERIAL & ChargeInjection.Parameters.InjectionGate1Voltage.Value=<ig1> & TrapPumping.SerialTrapPumpingParameters.SerialTrapPumpingParameterList.SerialTrapPumpingParameterSet1.ShufflingMode=<mode>\n ```\n-with `<ig1>` taking the values `4.0` and `4.75` and, for each of these, `<mode>` taking the values `23` and `31`.\n+with `<ig1>` taking the values of approximately `4.0` and `4.75` and, for each of these, `<mode>` taking the values `23` and `31`. Since IG1 voltages will vary around the nominal values and there are only two options, a single threshold can be used to separate them, giving a pair of criteria such as `InjectionGate1Voltage.Value < 4.4` and `InjectionGate1Voltage.Value > 4.4`.\n \n ## Operational constraints\n \n",
                            "Merge branch 'feature-SUM' into release-13.0: SRN VIS PF 13.0.12",
                            "Catherine Grenet",
                            "2023-08-14T16:13:23.000+02:00",
                            "bec4d2f7797ae8a84255ffd581f45f5a4f533835"
                        ],
                        [
                            "@@ -0,0 +1,97 @@\n+\\newpage\n+\n+# Pipeline `VIS_TrapPumpingCalibration_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_TrapPumpingCalibration**: Production of CCD trap analysis from trap pumping (TP) data.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_TrapPumpingCalibration`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_TrapPumpingCalibration)\n+    DpdVisRawFrame ==>|raw_frames_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisGainModel -->|gains_model<br>1..1| pipeline\n+    DpdVisFlagMap -.->|flagmaps<br>0..*| pipeline\n+    DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n+    DpdVisMasterBiasFrame -.->|masterbias<br>0..1| pipeline\n+    DpdVisMasterDarkFrame -.->|masterdark<br>0..1| pipeline\n+    DpdVisXTalkModel -.->|xtalk_model<br>0..1| pipeline\n+    DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n+    DpdVisRONModel -->|ron_model<br>1..1| pipeline\n+    DpdVisCTIModel -.->|cti_model<br>0..1| pipeline\n+    DpdVisBFEModel -.->|bfe_model<br>0..1| pipeline\n+    pipeline -->|tp_params_xml<br>1..1| DpdVisTrapPumpingResults\n+    pipeline -->|analysis_xml<br>1..1| DpdVisAnalysisResults\n+```\n+\n+**Ports description:**\n+\n+* `raw_frames_in`: list of raw TP frames, ImgType.FirstType=TRAP_PUMPING\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase (not used by the pipeline)\n+* `gains_model`: gain model (not used by the pipeline)\n+* `ron_model`: readout noise model (not used by the pipeline)\n+* `tp_params_xml`: trap parameters from analysis of TP data\n+* `analysis_xml`: quality assessment parameters and plots\n+\n+Input ports not described above are currently unused.\n+\n+## Processing triggering assumptions\n+\n+The pipeline can accept vertical (parallel) trap pumping (VTP) or multiple-readout serial trap pumping (MSTP) data. Separate instances of each of these are run for different TP parameter configurations. A configuration is defined by a combination of a charge injection (CI) injection gate 1 (IG1) voltage and a TP \"shuffling mode\". The configurations are described in general terms below, and specific details of PV configurations are given in the following [subsection](#pv-configurations).\n+\n+For VTP (`TrapPumping.Status=Parallel`), each pipeline instance requires 1 reference CI frame and 11 TP frames. The reference frame is specifically CI for TP: it has `TrapPumping.Status=Parallel` but `ParallelTrapPumpingParameters.ShufflingCyclesCount=1`, being effectively a VTP frame without pumping. The TP frames each have a different value of `ParallelTrapPumpingParameters.PhaseTime`. All frames for each pipeline instance must share the same `ChargeInjection.Parameters.InjectionGate1Voltage`, and the TP frames must share the same `ParallelTrapPumpingParameters.ShufflingMode`.\n+\n+For MSTP (`TrapPumping.Status=MultipleSerial`), each pipeline instance requires 2 frames with the same `ChargeInjection.Parameters.InjectionGate1Voltage` and `SerialTrapPumpingParameters.SerialTrapPumpingParameterList.SerialTrapPumpingParameterSet1.ShufflingMode`. Each frame has a different set of `SerialTrapPumpingParameterSet?.DwellingTime` values.\n+\n+### PV configurations\n+\n+During PV the pipeline will be triggered on reception of calblock PV-027, with an instance to be run for each TP parameter configuration. For VTP, there are 2 IG1 voltages and 4 shuffling modes, giving a total of 8 pipeline instances. For MSTP, there are 2 IG1 voltages and 2 shuffling modes, so 4 instances. The frame selection queries are given below.\n+\n+**VTP:**\n+\n+The queries follow the pattern\n+```\n+ObservationSequence.CalblockId=PV-027&ObservationSequence.CalblockVariant=PARALLEL-CI-<variant>&(TrapPumping.ParallelTrapPumpingParameters.ShufflingCyclesCount=1|TrapPumping.ParallelTrapPumpingParameters.ShufflingMode=<mode>)\n+```\n+with `<variant>` taking the values `HIGH` and `LOW` and, for each of these, `<mode>` taking the values `234`, `123`, `341` and `412`.\n+\n+**STP:**\n+\n+The queries follow the pattern\n+```\n+ObservationSequence.CalBlockId=PV-027&ObservationSequence.CalBlockVariant=SERIAL&ChargeInjection.Parameters.InjectionGate1Voltage.Value=<ig1>&TrapPumping.SerialTrapPumpingParameters.SerialTrapPumpingParameterList.SerialTrapPumpingParameterSet1.ShufflingMode=<mode>\n+```\n+with `<ig1>` taking the values `4.0` and `4.75` and, for each of these, `<mode>` taking the values `23` and `31`.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+A typical run of VTP is estimated to use:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| 144   | TBD      | <1           | 150             |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ],
                        [
                            "@@ -74,7 +74,7 @@ The frame selections follow the pattern\n ```\n ObservationSequence.CalBlockId=PV-027 & ObservationSequence.CalBlockVariant=SERIAL & ChargeInjection.Parameters.InjectionGate1Voltage.Value=<ig1> & TrapPumping.SerialTrapPumpingParameters.SerialTrapPumpingParameterList.SerialTrapPumpingParameterSet1.ShufflingMode=<mode>\n ```\n-with `<ig1>` taking the values `4.0` and `4.75` and, for each of these, `<mode>` taking the values `23` and `31`.\n+with `<ig1>` taking the values of approximately `4.0` and `4.75` and, for each of these, `<mode>` taking the values `23` and `31`. Since IG1 voltages will vary around the nominal values and there are only two options, a single threshold can be used to separate them, giving a pair of criteria such as `InjectionGate1Voltage.Value < 4.4` and `InjectionGate1Voltage.Value > 4.4`.\n \n ## Operational constraints\n \n",
                            "Trap pumping SUM chapter: clarification of CI IG1 voltage selection for serial TP",
                            "Matt Wander",
                            "2023-08-10T16:24:46.000+02:00",
                            "715123123238eb19db1db35a490caace0af65979"
                        ],
                        [
                            "@@ -58,21 +58,21 @@ For MSTP (`TrapPumping.Status=MultipleSerial`), each pipeline instance requires\n \n ### PV configurations\n \n-During PV the pipeline will be triggered on reception of calblock PV-027, with an instance to be run for each TP parameter configuration. For VTP, there are 2 IG1 voltages and 4 shuffling modes, giving a total of 8 pipeline instances. For MSTP, there are 2 IG1 voltages and 2 shuffling modes, so 4 instances. The frame selection queries are given below.\n+During PV the pipeline will be triggered on reception of calblock PV-027, with an instance to be run for each TP parameter configuration. For VTP, there are 2 IG1 voltages and 4 shuffling modes, giving a total of 8 pipeline instances. For MSTP, there are 2 IG1 voltages and 2 shuffling modes, so 4 instances. The frame selection criteria are given below.\n \n **VTP:**\n \n-The queries follow the pattern\n+The frame selections follow the pattern\n ```\n-ObservationSequence.CalblockId=PV-027&ObservationSequence.CalblockVariant=PARALLEL-CI-<variant>&(TrapPumping.ParallelTrapPumpingParameters.ShufflingCyclesCount=1|TrapPumping.ParallelTrapPumpingParameters.ShufflingMode=<mode>)\n+ObservationSequence.CalblockId=PV-027 & ObservationSequence.CalblockVariant=PARALLEL-CI-<variant> & (TrapPumping.ParallelTrapPumpingParameters.ShufflingCyclesCount=1 | TrapPumping.ParallelTrapPumpingParameters.ShufflingMode=<mode>)\n ```\n with `<variant>` taking the values `HIGH` and `LOW` and, for each of these, `<mode>` taking the values `234`, `123`, `341` and `412`.\n \n **STP:**\n \n-The queries follow the pattern\n+The frame selections follow the pattern\n ```\n-ObservationSequence.CalBlockId=PV-027&ObservationSequence.CalBlockVariant=SERIAL&ChargeInjection.Parameters.InjectionGate1Voltage.Value=<ig1>&TrapPumping.SerialTrapPumpingParameters.SerialTrapPumpingParameterList.SerialTrapPumpingParameterSet1.ShufflingMode=<mode>\n+ObservationSequence.CalBlockId=PV-027 & ObservationSequence.CalBlockVariant=SERIAL & ChargeInjection.Parameters.InjectionGate1Voltage.Value=<ig1> & TrapPumping.SerialTrapPumpingParameters.SerialTrapPumpingParameterList.SerialTrapPumpingParameterSet1.ShufflingMode=<mode>\n ```\n with `<ig1>` taking the values `4.0` and `4.75` and, for each of these, `<mode>` taking the values `23` and `31`.\n \n",
                            "Minor changes to wording of trap pumping SUM chapter. No content changes.",
                            "Matt Wander",
                            "2023-08-10T15:04:32.000+02:00",
                            "ef90a5a28c8e550ae9a4ee19a579ff3357c565f5"
                        ],
                        [
                            "@@ -0,0 +1,97 @@\n+\\newpage\n+\n+# Pipeline `VIS_TrapPumpingCalibration_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_TrapPumpingCalibration**: Production of CCD trap analysis from trap pumping (TP) data.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_TrapPumpingCalibration`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_TrapPumpingCalibration)\n+    DpdVisRawFrame ==>|raw_frames_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisGainModel -->|gains_model<br>1..1| pipeline\n+    DpdVisFlagMap -.->|flagmaps<br>0..*| pipeline\n+    DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n+    DpdVisMasterBiasFrame -.->|masterbias<br>0..1| pipeline\n+    DpdVisMasterDarkFrame -.->|masterdark<br>0..1| pipeline\n+    DpdVisXTalkModel -.->|xtalk_model<br>0..1| pipeline\n+    DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n+    DpdVisRONModel -->|ron_model<br>1..1| pipeline\n+    DpdVisCTIModel -.->|cti_model<br>0..1| pipeline\n+    DpdVisBFEModel -.->|bfe_model<br>0..1| pipeline\n+    pipeline -->|tp_params_xml<br>1..1| DpdVisTrapPumpingResults\n+    pipeline -->|analysis_xml<br>1..1| DpdVisAnalysisResults\n+```\n+\n+**Ports description:**\n+\n+* `raw_frames_in`: list of raw TP frames, ImgType.FirstType=TRAP_PUMPING\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase (not used by the pipeline)\n+* `gains_model`: gain model (not used by the pipeline)\n+* `ron_model`: readout noise model (not used by the pipeline)\n+* `tp_params_xml`: trap parameters from analysis of TP data\n+* `analysis_xml`: quality assessment parameters and plots\n+\n+Input ports not described above are currently unused.\n+\n+## Processing triggering assumptions\n+\n+The pipeline can accept vertical (parallel) trap pumping (VTP) or multiple-readout serial trap pumping (MSTP) data. Separate instances of each of these are run for different TP parameter configurations. A configuration is defined by a combination of a charge injection (CI) injection gate 1 (IG1) voltage and a TP \"shuffling mode\". The configurations are described in general terms below, and specific details of PV configurations are given in the following [subsection](#pv-configurations).\n+\n+For VTP (`TrapPumping.Status=Parallel`), each pipeline instance requires 1 reference CI frame and 11 TP frames. The reference frame is specifically CI for TP: it has `TrapPumping.Status=Parallel` but `ParallelTrapPumpingParameters.ShufflingCyclesCount=1`, being effectively a VTP frame without pumping. The TP frames each have a different value of `ParallelTrapPumpingParameters.PhaseTime`. All frames for each pipeline instance must share the same `ChargeInjection.Parameters.InjectionGate1Voltage`, and the TP frames must share the same `ParallelTrapPumpingParameters.ShufflingMode`.\n+\n+For MSTP (`TrapPumping.Status=MultipleSerial`), each pipeline instance requires 2 frames with the same `ChargeInjection.Parameters.InjectionGate1Voltage` and `SerialTrapPumpingParameters.SerialTrapPumpingParameterList.SerialTrapPumpingParameterSet1.ShufflingMode`. Each frame has a different set of `SerialTrapPumpingParameterSet?.DwellingTime` values.\n+\n+### PV configurations\n+\n+During PV the pipeline will be triggered on reception of calblock PV-027, with an instance to be run for each TP parameter configuration. For VTP, there are 2 IG1 voltages and 4 shuffling modes, giving a total of 8 pipeline instances. For MSTP, there are 2 IG1 voltages and 2 shuffling modes, so 4 instances. The frame selection queries are given below.\n+\n+**VTP:**\n+\n+The queries follow the pattern\n+```\n+ObservationSequence.CalblockId=PV-027&ObservationSequence.CalblockVariant=PARALLEL-CI-<variant>&(TrapPumping.ParallelTrapPumpingParameters.ShufflingCyclesCount=1|TrapPumping.ParallelTrapPumpingParameters.ShufflingMode=<mode>)\n+```\n+with `<variant>` taking the values `HIGH` and `LOW` and, for each of these, `<mode>` taking the values `234`, `123`, `341` and `412`.\n+\n+**STP:**\n+\n+The queries follow the pattern\n+```\n+ObservationSequence.CalBlockId=PV-027&ObservationSequence.CalBlockVariant=SERIAL&ChargeInjection.Parameters.InjectionGate1Voltage.Value=<ig1>&TrapPumping.SerialTrapPumpingParameters.SerialTrapPumpingParameterList.SerialTrapPumpingParameterSet1.ShufflingMode=<mode>\n+```\n+with `<ig1>` taking the values `4.0` and `4.75` and, for each of these, `<mode>` taking the values `23` and `31`.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+A typical run of VTP is estimated to use:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| 144   | TBD      | <1           | 150             |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n",
                            "fix conflicts",
                            "James Nightingale",
                            "2023-08-10T10:37:45.000+01:00",
                            "77f423cb2068faeffab5fa9074c5e89e156b42d4"
                        ]
                    ],
                    "doc/user_manual/chap29_PVOperations.md": [
                        [
                            "@@ -0,0 +1,606 @@\n+\\newpage\n+\n+# PV operations\n+\n+## Commonalities\n+\n+There is no VIS pipeline to trigger for Calblocks not mentioned in this chapter.\n+\n+Unless otherwise stated, the following inputs will be used for all pipelines:\n+\n+- vis_config_in: DpdVisConfigurationFile ProductId=DpdVisConfigurationFile_EUC_VIS_ConfigFile_PF12_01JUL2023_ini\n+- MDB: DpdMdbDataBase ProductId=EUC_MDB_MISSIONCONFIGURATION-DEV_2023-07-17T12:00:00.00Z_00\n+\n+These inputs will not be repeated hereafter.\n+\n+Some pipelines will use on-ground models. These on-ground models are:\n+\n+- gains_model: DpdVisGainModel ProductId=DpdVisGainModel_EUC_VIS_MDL-PTC01_GAIN_elperadu_MAP_json\n+- psf_model: DpdVisPSFModel ProductId=DpdVisPSFModel_EUC_VIS_MDL-PSF_OH_issue-20981-44_2022-12-20\n+- ron_model: DpdVisRONModel ProductId=DpdVisRONModel_EUC_VIS_MDL-BIAS02_RON_ELE_MAP_json\n+- saturation_model: DpdVisBloomingModel ProductId=DpdVisBloomingModel_EUC_VIS_MDL-SC8_BLOOM_ELE_json\n+- zero_point: DpdVisZeroPoint ProductId=DpdVisZeroPoint_2436_040223_json\n+- ghost_model: DpdVisGhostModel ProductId=DpdVisGhostModel_ghost_model_JAN2022_json\n+- starmask_model: DpdVisStarMask ProductId= DpdVisStarMask_starmask_JAN2022_fits\n+\n+Hereafter these products are referenced as _on-ground_.\n+\n+Note that when ExposureTime is used for selection, the exact value in real data may not be the one mentioned in the current version of this document.\n+\n+VIS_FlagObjects pipeline is intended to run on Calbloks PV-022, PV-029, and PV-031. It processes the short science exposures in the Calblock to create masks of celestial objects for each pointing. These masks are then used by the pipelines in charge of processing the flat-field exposures of each calblock. These pipelines need in input the masks corresponding to the flats to process, but more can be given: each pipeline will search for the masks corresponding to the flat fields they are processing.\n+\n+The detailed description of VIS_FlagObjects is given only once for PV-022. For the other calblocks we just mention the differences with this first run.\n+\n+## PV-021\n+\n+### Pipeline: VIS_MasterBias\n+\n+**Inputs:**\n+\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-021 & ImgType.FirstType=BIAS\n+- vis_config_in:\n+- MDB:\n+- gains_model: on-ground\n+- ron_model: on-ground\n+- saturation_model: empty\n+- flagmaps: empty\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+\n+**Outputs:**\n+\n+- dpdcalib_data: CALPRODUCT VS-003 VIS Bias\n+- dpdanalysis: quality assessment parameters\n+\n+### Pipeline: VIS_MasterDark\n+\n+**Inputs:**\n+\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-021 & ImgType.FirstType=DARK & ExposureTime=565\n+- vis_config_in:\n+- MDB:\n+- gains_model: on-ground\n+- ron_model: on-ground\n+- saturation_model: empty\n+- masterbias: CALPRODUCT VS-003 VIS Bias\n+- flagmaps: empty\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+\n+**Outputs:**\n+\n+- dpdcalib_data: CALPRODUCT VS-009 VIS Darks\n+- dpdcalib_flag: map of defects in darkness, first part of CALPRODUCT VS-007 VIS Cosmetic Map\n+- dpdanalysis: quality assessment parameters\n+\n+## F-014\n+\n+## PV-022 - PRNU2-10000ADU\n+\n+### Pipeline: VIS_FlagObjects\n+\n+**Inputs:**\n+\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-022 &  ObservationSequence.CalBlockVariant=PRNU2-10000ADU & ImgType.FirstType=SURVEY\n+- vis_config_in:\n+- MDB:\n+- gains_model: on-ground\n+- ron_model: on-ground\n+- saturation_model: on-ground\n+- masterbias: CALPRODUCT VS-003 VIS Bias\n+- flagmaps: map of defects in darkness, output of PV-021\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+- zero_point: on-ground\n+- masterdark: empty\n+- masterflat: empty\n+- psf_model: on-ground\n+- dist_model: empty\n+- lsf_model: empty\n+- ghost_model: empty\n+- starmask_model: empty\n+- bfe_model: empty\n+- ref_catalogues: empty\n+\n+**Outputs:**\n+\n+- objects_flagmap_xml_out: list of object masks, one for each input exposure\n+\n+### Pipeline: VIS_MasterFlat\n+\n+4 instances of the pipelines will be run, one for each of LEDs 1, 2, 3, 4. The 4 instances can be run in parallel.\n+\n+ LED selection is done with CalibUnit.LedMask:\n+\n+- LED1: CalibUnit.LedMask=0x1\n+- LED2: CalibUnit.LedMask=0x2\n+- LED3: CalibUnit.LedMask=0x4\n+- LED4: CalibUnit.LedMask=0x8\n+\n+**Inputs:**\n+\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-022 & ObservationSequence.CalBlockVariant=PRNU2-10000ADU & ImgType.FirstType=FLAT & CalibUnit.LedMask=_mask for LEDi_\n+- vis_config_in:\n+- MDB:\n+- gains_model: on-ground\n+- ron_model: on-ground\n+- saturation_model: empty\n+- masterbias: CALPRODUCT VS-003 VIS Bias\n+- flagmaps: map of defects in darkness, output of VIS_MasterDark pipeline\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+- masterdark: empty\n+- bfe_model: empty\n+- object_masks: outputs of VIS_FlagObjects pipeline\n+\n+**Outputs:**\n+\n+- dpdcalib_data: master flat _LEDi_ 10kADU\n+- dpdcalib_flag: map of defects in photoresponse at 10 kADU, second part of CALPRODUCT VS-007 VIS Cosmetic Map\n+- dpdanalysis: quality assessment parameters\n+- dpd_ledprofile: calibration unit profile\n+\n+## PV-029 - PTC-SERIES-1\n+\n+## PV-027 - PARALLEL-CI-HIGH\n+## PV-027 - PARALLEL-CI-LOW\n+## PV-027 - SERIAL\n+\n+## PV-028 - CI-ROS - VIS_CTIMasterCI\n+\n+### Pipeline: VIS_CTIMasterCI\n+\n+Set of 6 x 32 CIL images taken with different charge injection parameters corresponding to\n+[table 11 of this webpage](http://calibration.pages.euclid-sgs.uk/CalTQ-Framework/calobs/calobs-vis-cti-cil.html#calobs-vis-cti-cil).\n+\n+Each batch of 6 CIL images taken with identical charge injection parameters (e.g. each row of table 11) are passed\n+to the VIS_CTIMasterCI pipeline, outputting a single master CIL image for each input image. In total, 32 independent\n+runs of this pipeline are performed for the CI-ROS calblock.\n+\n+**Inputs:**\n+\n+- raw_frames_in: x6 DpdVisRawFrame raw charge injection frames corresponding to each row of table 11 (see example query below).\n+- MDB:\n+- flagmaps: map of defects in darkness, output of PV-021\n+- gains_model: on-ground\n+- xtalk_model: empty\n+- masterbias: CALPRODUCT VS-003 VIS Bias\n+- masterdark: empty\n+- nlcorr_model: empty\n+- ron_model: on-ground\n+- saturation_model: on-ground\n+\n+**Outputs:**\n+\n+- master_ci_xml_out: MasterCIFrame corresponding to an FPA of charge injection data for a single set of charge injection parameter settings for CALPRODUCT-VS-005.\n+\n+**Example Query for Row 1:**\n+\n+```\n+ImgType.FirstType=CHARGE_INJECTION\n+ObservationSequence.CalblockId=PV-028\n+ChargeInjection.Parameters.InjectedLinesCount=420\n+ChargeInjection.Parameters.NonInjectedLinesCount=100\n+ChargeInjection.Parameters.InjectionDrainLowPulseDelay.Value>2.4 && ChargeInjection.Parameters.InjectionDrainLowPulseDelay.Value<2.6\n+ChargeInjection.Parameters.InjectionGate1Voltage.Value>4.24 && ChargeInjection.Parameters.InjectionGate1Voltage.Value<4.26\n+ChargeInjection.Parameters.InjectionGate2Voltage.Value>5.98 && ChargeInjection.Parameters.InjectionGate2Voltage.Value<6.02\n+```\n+\n+## PV-028 - IG1-SCAN\n+\n+### Pipeline: VIS_CTIMasterCI\n+\n+Identical to PV-028 - CI-ROS, except that the charge injection parameters are varied in a grid scan of IG1 values,\n+given by [table 45 of this webpage](http://calibration.pages.euclid-sgs.uk/CalTQ-Framework/calobs/calobs-block-pv-vis-cti-charge-injection.html).\n+\n+**Inputs:**\n+\n+- raw_frames_in: x6 DpdVisRawFrame raw charge injection frames corresponding to each row of table 45 (see example query below).\n+- MDB:\n+- flagmaps: map of defects in darkness, output of PV-021\n+- gains_model: on-ground\n+- xtalk_model: empty\n+- masterbias: CALPRODUCT VS-003 VIS Bias\n+- masterdark: empty\n+- nlcorr_model: empty\n+- ron_model: on-ground\n+- saturation_model: on-ground\n+\n+**Outputs:**\n+\n+- master_ci_xml_out: MasterCIFrame corresponding to an FPA of charge injection data for a single set of charge injection parameter settings for CALPRODUCT-VS-005.\n+\n+**Example Query for Row 1:**\n+\n+```\n+ImgType.FirstType=CHARGE_INJECTION\n+ObservationSequence.CalblockId=PV-028\n+ChargeInjection.Parameters.InjectedLinesCount=420\n+ChargeInjection.Parameters.NonInjectedLinesCount=100\n+ChargeInjection.Parameters.InjectionDrainLowPulseDelay.Value>2.4 && ChargeInjection.Parameters.InjectionDrainLowPulseDelay.Value<2.6\n+ChargeInjection.Parameters.InjectionGate1Voltage.Value>3.24 && ChargeInjection.Parameters.InjectionGate1Voltage.Value<3.26\n+ChargeInjection.Parameters.InjectionGate2Voltage.Value>5.98 && ChargeInjection.Parameters.InjectionGate2Voltage.Value<6.02\n+```\n+\n+## PV-028 - CI-ROS - VIS_CTICalibration\n+\n+### Pipeline: VIS_CTICalibration\n+\n+4 independent runs of the CTI calibration pipeline, using a subset of the ROS data (and none of the IG1-Scan data).\n+\n+For each set of 6 CIL taken with identical charge injection settings, only one of each set of the 6 images are used.\n+\n+Therefore, in total  32 images with settings corresponding to the 32 rows\n+[table 11 of this webpage](http://calibration.pages.euclid-sgs.uk/CalTQ-Framework/calobs/calobs-vis-cti-cil.html#calobs-vis-cti-cil)\n+are used.\n+\n+Four independent runs of the pipeline, each with 8 CIL images are performed, corresponding to\n+rows 1-8, 9-16, 17-24 and 25-32 of table 11.\n+\n+**Inputs:**\n+\n+- raw_frames_in: x8 DpdVisRawFrame raw charge injection frames corresponding to a block of 8 rows of table 11 (see example query below).\n+- MDB:\n+- flagmaps: map of defects in darkness, output of PV-021\n+- gains_model: on-ground\n+- xtalk_model: empty\n+- masterbias: CALPRODUCT VS-003 VIS Bias\n+- masterdark: empty\n+- nlcorr_model: empty\n+- ron_model: on-ground\n+- saturation_model: on-ground\n+\n+**Outputs:**\n+\n+- parallel_cti_xml_out: Parallel CTICalibrationResults for CALPRODUCT-VS-005.\n+- serial_cti_xml_out: Serial CTICalibrationResults for CALPRODUCT-VS-005.\n+\n+**Example Query for Row 1:**\n+\n+```\n+ImgType.FirstType=CHARGE_INJECTION\n+ObservationSequence.CalblockId=PV-028\n+ChargeInjection.Parameters.InjectedLinesCount=420\n+ChargeInjection.Parameters.NonInjectedLinesCount=100\n+ChargeInjection.Parameters.InjectionDrainLowPulseDelay.Value>2.4 && ChargeInjection.Parameters.InjectionDrainLowPulseDelay.Value<2.6\n+ChargeInjection.Parameters.InjectionGate1Voltage.Value>4.24 && ChargeInjection.Parameters.InjectionGate1Voltage.Value<4.26\n+ChargeInjection.Parameters.InjectionGate2Voltage.Value>5.98 && ChargeInjection.Parameters.InjectionGate2Voltage.Value<6.02\n+```\n+\n+## PV-034 VIS Charge Injection Timing\n+\n+No processing during PV.\n+\n+## PV-023\n+\n+### Pipeline: VIS_AstrometryCalibration\n+\n+**Inputs:**\n+\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-023 & ImgType.Category=SCIENCE & ExposureTime=565\n+- vis_config_in:\n+- MDB:\n+- gains_model: on-ground\n+- ron_model: on-ground\n+- saturation_model: on-ground\n+- masterbias: CALPRODUCT VS-003 VIS Bias\n+- flagmaps:\n+  - map of defects in darkness, output of PV-021\n+  - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+- zero_point: on-ground\n+- masterdark: empty\n+- masterflat: master flat LED3 10kADU, output of PV-022 - PRNU2-10000ADU\n+- dist_model: empty\n+- lsf_model: empty\n+- bfe_model: empty\n+- ref_catalogues: DpdExtGaiaCutout covering raw science frames sky area\n+\n+\n+**Outputs:**\n+\n+- dist_model_xml_out: CALPRODUCT VS-010 VIS Focal Plane Astrometric Solution\n+\n+Quality control plots are in the workdir in logs/VIS_astrom_calib.\n+\n+## F-014\n+\n+## PV-022 - LOW1-1000ADU\n+\n+### Pipeline: VIS_FlagObjects\n+\n+**Inputs:**\n+\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-022 & ObservationSequence.CalBlockVariant=LOW1-1000ADU & ImgType.FirstType=SURVEY\n+- flagmaps:\n+  - map of defects in darkness, output of PV-021\n+  - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n+\n+**Outputs:**\n+\n+- objects_flagmap_xml_out: list of object masks, one for each input exposure\n+\n+\n+### Pipeline: VIS_GainCalibration\n+\n+**Inputs:**\n+\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-022 & ObservationSequence.CalBlockVariant=LOW1-1000ADU & ImgType.FirstType=FLAT & CalibUnit.LedMask=Ox4\n+- vis_config_in:\n+- MDB:\n+- gains_model: on-ground\n+- ron_model: on-ground\n+- saturation_model: on-ground\n+- masterbias: CALPRODUCT VS-003 VIS Bias\n+- flagmaps:\n+  - map of defects in darkness, output of PV-021\n+  - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+- masterdark: empty\n+- bfe_model: empty\n+- object_masks: outputs of VIS_FlagObjects pipeline\n+\n+**Outputs:**\n+\n+- gain_model_xml_out: gain model, part of CALPRODUCT VS-011\n+\n+## PV-022 - LOW2-5000ADU\n+\n+## PV-022 - BF-40000ADU\n+\n+### Pipeline: VIS_FlagObjects\n+\n+**Inputs:**\n+\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-022 & ObservationSequence.CalBlockVariant=BF-40000ADU & ImgType.FirstType=SURVEY\n+- flagmaps:\n+  - map of defects in darkness, output of PV-021\n+  - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n+\n+**Outputs:**\n+\n+- objects_flagmap_xml_out: list of object masks, one for each input exposure\n+\n+\n+### Pipeline: VIS_BrighterFatterCalibration\n+\n+**Inputs:**\n+\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-022 & ObservationSequence.CalBlockVariant=BF-40000ADU & ImgType.FirstType=FLAT & CalibUnit.LedMask=Ox4\n+- vis_config_in:\n+- MDB:\n+- gains_model: gain model CALPRODUCT VS-011\n+- ron_model: on-ground\n+- saturation_model: on-ground\n+- masterbias: CALPRODUCT VS-003 VIS Bias\n+- flagmaps:\n+  - map of defects in darkness, output of PV-021\n+  - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+- object_masks: outputs of VIS_FlagObjects pipeline\n+\n+**Outputs:**\n+\n+- bfecalib_xml_out: brighter-fatter model CALPRODUCT VS-004 VIS Brighter-fatter Effect\n+\n+## PV-007 - PROPOSAL-08-M33\n+## PV-007 - PROPOSAL-11-A370\n+## PV-007 - PROPOSAL-11-N01\n+\n+## PV-001 - VISIT-1\n+\n+### Step 1 - Pipeline: VIS_PSFCalibration\n+\n+**Inputs:**\n+\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-001 & ObservationSequence.CalBlockVariant=likeVISIT-1* & ImgType.FirstType=SELF_CALIBRATION & ExposureTime =106\n+- vis_config_in:\n+- MDB:\n+- gains_model: gain model CALPRODUCT VS-011\n+- ron_model: on-ground\n+- saturation_model: on-ground\n+- masterbias: CALPRODUCT VS-003 VIS Bias\n+- flagmaps:\n+  - map of defects in darkness, output of PV-021\n+  - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+- masterdark: empty\n+- masterflat: master flat LED3 10kADU, output of PV-022 - PRNU2-10000ADU\n+\n+\n+**Outputs:**\n+\n+- psf_model_xml_out: PSF model\n+\n+### Step 2 - Pipelines: VIS_ProcessField\n+\n+2 instances of VIS_ProcessField without stacking will be run, possibly in parallel, one on the short exposures and one on the nominal exposures.\n+\n+**Inputs:**\n+\n+- raw_frames_in:\n+  - short exposures: DpdVisRawFrame ObservationSequence.CalblockId=PV-001 & ObservationSequence.CalBlockVariant=likeVISIT-1* & ImgType.FirstType=SELF_CALIBRATION & ExposureTime = 106\n+  - nominal exposures: DpdVisRawFrame ObservationSequence.CalblockId=PV-001 & ObservationSequence.CalBlockVariant=likeVISIT-1* & ImgType.FirstType=SELF_CALIBRATION & ExposureTime = 565\n+- vis_config_in: DpdVisConfigurationFile_EUC_VIS_ConfigFile_PF12_01JUL2023_nostack_ini\n+- MDB:\n+- gains_model: gain model CALPRODUCT VS-011\n+- ron_model: on-ground\n+- saturation_model: on-ground\n+- masterbias:  CALPRODUCT VS-003 VIS Bias\n+- flagmaps:\n+  - map of defects in darkness, output of PV-021\n+  - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+- zero_point: on-ground\n+- masterdark: empty\n+- masterflat: master flat LED3 10kADU, output of PV-022 - PRNU2-10000ADU\n+- psf_model: output of previous VIS_PSFCalibration\n+- dist_model: distortion model CALPRODUCT VS-010 VIS\n+- lsf_model: empty\n+- ghost_model: on-ground\n+- starmask_model: on-ground\n+- bfe_model: empty\n+- ref_catalogues: DpdExtGaiaCutout covering raw science frames sky area\n+\n+**Outputs:**\n+\n+- dpdcalibrated_frames: VIS calibrated frames\n+- dpdcalibrated_catalogues: VIS calibrated catalogues\n+- dpdghost_catalogues: unused in the rest of the processing\n+\n+### Step 3 - Pipelines: VIS_LargeFlatCalibration\n+\n+2 instances of VIS_LargeFlatCalibration will be run, possibly in parallel, one on the short exposure catalogs and one on the nominal exposure catalogs.\n+\n+**Inputs:**\n+\n+- vis_config_in:\n+- MDB:\n+- catalogues_in: DpdVisCalibratedFrameCatalog\n+  - short exposures: DpdVisCalibratedFrameCatalog, output the previous VIS_ProcessField on short exposures\n+  - nominal exposures: DpdVisCalibratedFrameCatalog, output the previous VIS_ProcessField on nominal exposures\n+\n+**Outputs:**\n+\n+- largeflatcal_output: large flat for short and nominal exposures, respectively, CALPRODUCT VS-013\n+\n+### Step 4 - Pipelines: VIS_ProcessField\n+\n+2 instances of VIS_ProcessField without stacking will be run, possibly in parallel, one on the short exposures and one on the nominal exposures. It is exactly the same processing as in step 4, except that large flat correction will be applied. Below we describe only the differences with Step 2.\n+\n+**Inputs:**\n+\n+- lsf_model:\n+  - short exposures: CALPRODUCT VS-013, output of VIS_LargeFlatCalibration for short exposures\n+  - nominal exposures: CALPRODUCT VS-013, output of VIS_LargeFlatCalibration for nominal exposures\n+\n+**Outputs:**\n+\n+- dpdcalibrated_frames: VIS calibrated frames\n+- dpdcalibrated_catalogues: VIS calibrated catalogues\n+- dpdghost_catalogues: ghost catalogues\n+\n+### Step 5 - Pipeline: VIS_PhotometryCalibration\n+\n+**Inputs:**\n+\n+- vis_config_in:\n+- MDB:\n+- catalogues_in: list of DpdVisCalibratedFrameCatalog from VIS_ProcessField on short exposures in step 4\n+\n+**Outputs:**\n+\n+- zero_point_xml_out: updated VIS zero point CALPRODUCT VS-001\n+\n+### Step 6 - Pipeline: VIS_GhostsCalibration\n+\n+This pipeline can be run in parallel with VIS_PhotometryCalibration in step 5.\n+\n+**Inputs:**\n+\n+- MDB:\n+- ghost_cat_list: ghost catalogues, output of both VIS_ProcessField in step 4 (long and short exposures)\n+- ref_ghost_model_in: on-ground\n+\n+**Outputs:**\n+\n+ghost_model_xml_out: updated ghost model CALPRODUCT VS-012\n+\n+### Step 7 - Pipeline: VIS_XTalkCalibration_Pipeline\n+\n+This pipeline can be run in parallel with VIS_PhotometryCalibration in step 5 and VIS_GhostsCalibration in step 6.\n+It will be run on the raw nominal exposures only.\n+\n+**Inputs:**\n+\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-001 & ObservationSequence.CalBlockVariant=likeVISIT-1* & ImgType.FirstType=SELF_CALIBRATION & ExposureTime = 565\n+- vis_config_in: DpdVisConfigurationFile_EUC_VIS_ConfigFile_PF12_01JUL2023_normtmp_ini\n+- MDB:\n+- gains_model: gain model CALPRODUCT VS-011\n+- ron_model: on-ground\n+- saturation_model: on-ground\n+- masterbias:  CALPRODUCT VS-003 VIS Bias\n+- flagmaps:\n+  - map of defects in darkness, output of PV-021\n+  - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+- zero_point: on-ground\n+- masterdark: empty\n+- masterflat: master flat LED3 10kADU, output of PV-022 - PRNU2-10000ADU\n+- psf_model: output of previous VIS_PSFCalibration\n+- dist_model: distortion model CALPRODUCT VS-010 VIS\n+- lsf_model: CALPRODUCT VS-013, output of VIS_LargeFlatCalibration for nominal exposures\n+- ghost_model: on-ground\n+- starmask_model: on-ground\n+- bfe_model: empty\n+- ref_catalogues: DpdExtGaiaCutout covering raw science frames sky area\n+\n+**Outputs:**\n+\n+- xtalk_model_xml_out: crosstalk model, CALPRODUCT VS-008\n+\n+### Step 8  - Pipelines: VIS_ProcessField\n+\n+2 instances of VIS_ProcessField without stacking will be run, possibly in parallel, one on the short exposures and one on the nominal exposures. It is the same processing as in step 4, except that we will use the zero point and the crosstalk model produced in the previous steps. Below we describe only the differences with step 4.\n+\n+**Inputs:**\n+\n+- xtalk_model: crosstalk model CALPRODUCT VS-008\n+- zero_point: VIS zero point CALPRODUCT VS-001\n+\n+**Outputs:**\n+\n+- dpdcalibrated_frames: VIS calibrated frames for MER\n+\n+### Step X - Pipeline: VIS stacking\n+\n+This pipeline aims at producing the astrometric catalogue for NIR. This step can be executed either after step 2, 4 or 8, depending on NIR needs.\n+\n+**Inputs:**\n+\n+- vis_config_in:\n+- ref_catalogues: DpdExtGaiaCutout covering raw science frames sky area\n+- exposure_list: list of DpdVisCalibratedFrame, output of VIS_ProcessField in step 2, 4 or 8\n+\n+**Outputs:**\n+\n+- dpdstacked_catalogue: single VIS catalog for NIR\n+\n+\n+\n+## PV-006\tELAT-90-20\n+## PV-006\tELAT-100-20\n+## PV-006\tGLAT-20\n+\n+## PV-024\n+\n+## F-014\n+\n+## PV-029 PTC-SERIES-2\n+\n+## PV-031\n+\n+\n+\n+\n+\n+\n+\n+\n+\n",
                            "Merge branch 'feature-SUM' into release-13.0: SRN VIS PF 13.0.12",
                            "Catherine Grenet",
                            "2023-08-14T16:13:23.000+02:00",
                            "bec4d2f7797ae8a84255ffd581f45f5a4f533835"
                        ],
                        [
                            "@@ -178,8 +178,9 @@ runs of this pipeline are performed for the CI-ROS calblock.\n \n - master_ci_xml_out: MasterCIFrame corresponding to an FPA of charge injection data for a single set of charge injection parameter settings for CALPRODUCT-VS-005.\n \n-* **Example Query for Row 1:**\n+**Example Query for Row 1:**\n \n+```\n ImgType.FirstType=CHARGE_INJECTION\n ObservationSequence.CalblockId=PV-028\n ChargeInjection.Parameters.InjectedLinesCount=420\n@@ -187,6 +188,7 @@ ChargeInjection.Parameters.NonInjectedLinesCount=100\n ChargeInjection.Parameters.InjectionDrainLowPulseDelay.Value>2.4 && ChargeInjection.Parameters.InjectionDrainLowPulseDelay.Value<2.6\n ChargeInjection.Parameters.InjectionGate1Voltage.Value>4.24 && ChargeInjection.Parameters.InjectionGate1Voltage.Value<4.26\n ChargeInjection.Parameters.InjectionGate2Voltage.Value>5.98 && ChargeInjection.Parameters.InjectionGate2Voltage.Value<6.02\n+```\n \n ## PV-028 - IG1-SCAN\n \n@@ -214,6 +216,7 @@ given by [table 45 of this webpage](http://calibration.pages.euclid-sgs.uk/CalTQ\n \n **Example Query for Row 1:**\n \n+```\n ImgType.FirstType=CHARGE_INJECTION\n ObservationSequence.CalblockId=PV-028\n ChargeInjection.Parameters.InjectedLinesCount=420\n@@ -221,6 +224,7 @@ ChargeInjection.Parameters.NonInjectedLinesCount=100\n ChargeInjection.Parameters.InjectionDrainLowPulseDelay.Value>2.4 && ChargeInjection.Parameters.InjectionDrainLowPulseDelay.Value<2.6\n ChargeInjection.Parameters.InjectionGate1Voltage.Value>3.24 && ChargeInjection.Parameters.InjectionGate1Voltage.Value<3.26\n ChargeInjection.Parameters.InjectionGate2Voltage.Value>5.98 && ChargeInjection.Parameters.InjectionGate2Voltage.Value<6.02\n+```\n \n ## PV-028 - CI-ROS - VIS_CTICalibration\n \n@@ -257,6 +261,7 @@ rows 1-8, 9-16, 17-24 and 25-32 of table 11.\n \n **Example Query for Row 1:**\n \n+```\n ImgType.FirstType=CHARGE_INJECTION\n ObservationSequence.CalblockId=PV-028\n ChargeInjection.Parameters.InjectedLinesCount=420\n@@ -264,6 +269,7 @@ ChargeInjection.Parameters.NonInjectedLinesCount=100\n ChargeInjection.Parameters.InjectionDrainLowPulseDelay.Value>2.4 && ChargeInjection.Parameters.InjectionDrainLowPulseDelay.Value<2.6\n ChargeInjection.Parameters.InjectionGate1Voltage.Value>4.24 && ChargeInjection.Parameters.InjectionGate1Voltage.Value<4.26\n ChargeInjection.Parameters.InjectionGate2Voltage.Value>5.98 && ChargeInjection.Parameters.InjectionGate2Voltage.Value<6.02\n+```\n \n ## PV-034 VIS Charge Injection Timing\n \n",
                            "clean up pv028 formatting",
                            "James Nightingale",
                            "2023-08-14T09:55:40.000+01:00",
                            "20875164a4ce5c33770dcc23a5301ea439962878"
                        ],
                        [
                            "@@ -176,17 +176,17 @@ runs of this pipeline are performed for the CI-ROS calblock.\n \n **Outputs:**\n \n-* master_ci_xml_out: FPA of master charge injection images corresponding to a single set of charge injection parameter settings.\n+- master_ci_xml_out: MasterCIFrame corresponding to an FPA of charge injection data for a single set of charge injection parameter settings for CALPRODUCT-VS-005.\n \n-**Example Query for Row 1:**\n+* **Example Query for Row 1:**\n \n ImgType.FirstType=CHARGE_INJECTION\n ObservationSequence.CalblockId=PV-028\n-CI_IJON=420\n-CI_IJOFF=100\n-CI_IDDLY>2.4 && CI_IDDLY<2.6\n-CI_IG1>4.24 && CI_IG1<4.26\n-CI_IG2>5.98 && CI_IG2<6.02\n+ChargeInjection.Parameters.InjectedLinesCount=420\n+ChargeInjection.Parameters.NonInjectedLinesCount=100\n+ChargeInjection.Parameters.InjectionDrainLowPulseDelay.Value>2.4 && ChargeInjection.Parameters.InjectionDrainLowPulseDelay.Value<2.6\n+ChargeInjection.Parameters.InjectionGate1Voltage.Value>4.24 && ChargeInjection.Parameters.InjectionGate1Voltage.Value<4.26\n+ChargeInjection.Parameters.InjectionGate2Voltage.Value>5.98 && ChargeInjection.Parameters.InjectionGate2Voltage.Value<6.02\n \n ## PV-028 - IG1-SCAN\n \n@@ -210,17 +210,17 @@ given by [table 45 of this webpage](http://calibration.pages.euclid-sgs.uk/CalTQ\n \n **Outputs:**\n \n-* master_ci_xml_out: FPA of master charge injection images corresponding to a single set of charge injection parameter settings.\n+- master_ci_xml_out: MasterCIFrame corresponding to an FPA of charge injection data for a single set of charge injection parameter settings for CALPRODUCT-VS-005.\n \n **Example Query for Row 1:**\n \n ImgType.FirstType=CHARGE_INJECTION\n ObservationSequence.CalblockId=PV-028\n-CI_IJON=420\n-CI_IJOFF=100\n-CI_IDDLY>2.4 && CI_IDDLY<2.6\n-CI_IG1>3.24 && CI_IG1<3.26\n-CI_IG2>5.98 && CI_IG2<6.02\n+ChargeInjection.Parameters.InjectedLinesCount=420\n+ChargeInjection.Parameters.NonInjectedLinesCount=100\n+ChargeInjection.Parameters.InjectionDrainLowPulseDelay.Value>2.4 && ChargeInjection.Parameters.InjectionDrainLowPulseDelay.Value<2.6\n+ChargeInjection.Parameters.InjectionGate1Voltage.Value>3.24 && ChargeInjection.Parameters.InjectionGate1Voltage.Value<3.26\n+ChargeInjection.Parameters.InjectionGate2Voltage.Value>5.98 && ChargeInjection.Parameters.InjectionGate2Voltage.Value<6.02\n \n ## PV-028 - CI-ROS - VIS_CTICalibration\n \n@@ -239,7 +239,7 @@ rows 1-8, 9-16, 17-24 and 25-32 of table 11.\n \n **Inputs:**\n \n-- raw_frames_in: x6 DpdVisRawFrame raw charge injection frames corresponding to each row of table 11 (see example query below).\n+- raw_frames_in: x8 DpdVisRawFrame raw charge injection frames corresponding to a block of 8 rows of table 11 (see example query below).\n - MDB:\n - flagmaps: map of defects in darkness, output of PV-021\n - gains_model: on-ground\n@@ -252,17 +252,18 @@ rows 1-8, 9-16, 17-24 and 25-32 of table 11.\n \n **Outputs:**\n \n-* master_ci_xml_out: FPA of master charge injection images corresponding to a single set of charge injection parameter settings.\n+- parallel_cti_xml_out: Parallel CTICalibrationResults for CALPRODUCT-VS-005.\n+- serial_cti_xml_out: Serial CTICalibrationResults for CALPRODUCT-VS-005.\n \n **Example Query for Row 1:**\n \n ImgType.FirstType=CHARGE_INJECTION\n ObservationSequence.CalblockId=PV-028\n-CI_IJON=420\n-CI_IJOFF=100\n-CI_IDDLY>2.4 && CI_IDDLY<2.6\n-CI_IG1>4.24 && CI_IG1<4.26\n-CI_IG2>5.98 && CI_IG2<6.02\n+ChargeInjection.Parameters.InjectedLinesCount=420\n+ChargeInjection.Parameters.NonInjectedLinesCount=100\n+ChargeInjection.Parameters.InjectionDrainLowPulseDelay.Value>2.4 && ChargeInjection.Parameters.InjectionDrainLowPulseDelay.Value<2.6\n+ChargeInjection.Parameters.InjectionGate1Voltage.Value>4.24 && ChargeInjection.Parameters.InjectionGate1Voltage.Value<4.26\n+ChargeInjection.Parameters.InjectionGate2Voltage.Value>5.98 && ChargeInjection.Parameters.InjectionGate2Voltage.Value<6.02\n \n ## PV-034 VIS Charge Injection Timing\n \n",
                            "update queries in doc",
                            "James Nightingale",
                            "2023-08-14T09:53:23.000+01:00",
                            "9426bc9731e72e94cf0f14923827ef2671e15d7b"
                        ],
                        [
                            "@@ -38,8 +38,8 @@ The detailed description of VIS_FlagObjects is given only once for PV-022. For t\n **Inputs:**\n \n - raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-021 & ImgType.FirstType=BIAS\n-- vis_config_in: \n-- MDB: \n+- vis_config_in:\n+- MDB:\n - gains_model: on-ground\n - ron_model: on-ground\n - saturation_model: empty\n@@ -150,31 +150,124 @@ The detailed description of VIS_FlagObjects is given only once for PV-022. For t\n ## PV-027 - PARALLEL-CI-LOW\n ## PV-027 - SERIAL\n \n-## PV-028 - CI-ROS\n-## PV-028 - IG1-SCAN\n+## PV-028 - CI-ROS - VIS_CTIMasterCI\n \n-## PV-034 VIS Charge Injection Timing\n+### Pipeline: VIS_CTIMasterCI\n+\n+Set of 6 x 32 CIL images taken with different charge injection parameters corresponding to\n+[table 11 of this webpage](http://calibration.pages.euclid-sgs.uk/CalTQ-Framework/calobs/calobs-vis-cti-cil.html#calobs-vis-cti-cil).\n+\n+Each batch of 6 CIL images taken with identical charge injection parameters (e.g. each row of table 11) are passed\n+to the VIS_CTIMasterCI pipeline, outputting a single master CIL image for each input image. In total, 32 independent\n+runs of this pipeline are performed for the CI-ROS calblock.\n \n **Inputs:**\n \n-* `raw_frames_in`: list of 4 raw charge injection frames, ImgType.FirstType=CHARGE_INJECTION\n-* `vis_config_in`: VIS PF configuration file\n-* `MDB`: Mission DataBase\n-* `flagmaps`: list of flag maps.\n-* `gains_model`: gain model\n-* `xtalk_model`: crosstalk model\n-* `masterbias`: master bias frame\n-* `masterdark`: master dark frame\n-* `nlcorr_model`: non-linearity correction model\n-* `ron_model`: readout noise model\n-* `saturation_model`: saturation model\n+- raw_frames_in: x6 DpdVisRawFrame raw charge injection frames corresponding to each row of table 11 (see example query below).\n+- MDB:\n+- flagmaps: map of defects in darkness, output of PV-021\n+- gains_model: on-ground\n+- xtalk_model: empty\n+- masterbias: CALPRODUCT VS-003 VIS Bias\n+- masterdark: empty\n+- nlcorr_model: empty\n+- ron_model: on-ground\n+- saturation_model: on-ground\n \n **Outputs:**\n \n-* `master_ci_xml_out`: FPA of master charge injection images.\n+* master_ci_xml_out: FPA of master charge injection images corresponding to a single set of charge injection parameter settings.\n+\n+**Example Query for Row 1:**\n+\n+ImgType.FirstType=CHARGE_INJECTION\n+ObservationSequence.CalblockId=PV-028\n+CI_IJON=420\n+CI_IJOFF=100\n+CI_IDDLY>2.4 && CI_IDDLY<2.6\n+CI_IG1>4.24 && CI_IG1<4.26\n+CI_IG2>5.98 && CI_IG2<6.02\n+\n+## PV-028 - IG1-SCAN\n \n ### Pipeline: VIS_CTIMasterCI\n \n+Identical to PV-028 - CI-ROS, except that the charge injection parameters are varied in a grid scan of IG1 values,\n+given by [table 45 of this webpage](http://calibration.pages.euclid-sgs.uk/CalTQ-Framework/calobs/calobs-block-pv-vis-cti-charge-injection.html).\n+\n+**Inputs:**\n+\n+- raw_frames_in: x6 DpdVisRawFrame raw charge injection frames corresponding to each row of table 45 (see example query below).\n+- MDB:\n+- flagmaps: map of defects in darkness, output of PV-021\n+- gains_model: on-ground\n+- xtalk_model: empty\n+- masterbias: CALPRODUCT VS-003 VIS Bias\n+- masterdark: empty\n+- nlcorr_model: empty\n+- ron_model: on-ground\n+- saturation_model: on-ground\n+\n+**Outputs:**\n+\n+* master_ci_xml_out: FPA of master charge injection images corresponding to a single set of charge injection parameter settings.\n+\n+**Example Query for Row 1:**\n+\n+ImgType.FirstType=CHARGE_INJECTION\n+ObservationSequence.CalblockId=PV-028\n+CI_IJON=420\n+CI_IJOFF=100\n+CI_IDDLY>2.4 && CI_IDDLY<2.6\n+CI_IG1>3.24 && CI_IG1<3.26\n+CI_IG2>5.98 && CI_IG2<6.02\n+\n+## PV-028 - CI-ROS - VIS_CTICalibration\n+\n+### Pipeline: VIS_CTICalibration\n+\n+4 independent runs of the CTI calibration pipeline, using a subset of the ROS data (and none of the IG1-Scan data).\n+\n+For each set of 6 CIL taken with identical charge injection settings, only one of each set of the 6 images are used.\n+\n+Therefore, in total  32 images with settings corresponding to the 32 rows\n+[table 11 of this webpage](http://calibration.pages.euclid-sgs.uk/CalTQ-Framework/calobs/calobs-vis-cti-cil.html#calobs-vis-cti-cil)\n+are used.\n+\n+Four independent runs of the pipeline, each with 8 CIL images are performed, corresponding to\n+rows 1-8, 9-16, 17-24 and 25-32 of table 11.\n+\n+**Inputs:**\n+\n+- raw_frames_in: x6 DpdVisRawFrame raw charge injection frames corresponding to each row of table 11 (see example query below).\n+- MDB:\n+- flagmaps: map of defects in darkness, output of PV-021\n+- gains_model: on-ground\n+- xtalk_model: empty\n+- masterbias: CALPRODUCT VS-003 VIS Bias\n+- masterdark: empty\n+- nlcorr_model: empty\n+- ron_model: on-ground\n+- saturation_model: on-ground\n+\n+**Outputs:**\n+\n+* master_ci_xml_out: FPA of master charge injection images corresponding to a single set of charge injection parameter settings.\n+\n+**Example Query for Row 1:**\n+\n+ImgType.FirstType=CHARGE_INJECTION\n+ObservationSequence.CalblockId=PV-028\n+CI_IJON=420\n+CI_IJOFF=100\n+CI_IDDLY>2.4 && CI_IDDLY<2.6\n+CI_IG1>4.24 && CI_IG1<4.26\n+CI_IG2>5.98 && CI_IG2<6.02\n+\n+## PV-034 VIS Charge Injection Timing\n+\n+No processing during PV.\n+\n ## PV-023\n \n ### Pipeline: VIS_AstrometryCalibration\n@@ -188,7 +281,7 @@ The detailed description of VIS_FlagObjects is given only once for PV-022. For t\n - ron_model: on-ground\n - saturation_model: on-ground\n - masterbias: CALPRODUCT VS-003 VIS Bias\n-- flagmaps: \n+- flagmaps:\n   - map of defects in darkness, output of PV-021\n   - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n - xtalk_model: empty\n@@ -218,7 +311,7 @@ Quality control plots are in the workdir in logs/VIS_astrom_calib.\n **Inputs:**\n \n - raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-022 & ObservationSequence.CalBlockVariant=LOW1-1000ADU & ImgType.FirstType=SURVEY\n-- flagmaps: \n+- flagmaps:\n   - map of defects in darkness, output of PV-021\n   - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n \n@@ -238,7 +331,7 @@ Quality control plots are in the workdir in logs/VIS_astrom_calib.\n - ron_model: on-ground\n - saturation_model: on-ground\n - masterbias: CALPRODUCT VS-003 VIS Bias\n-- flagmaps: \n+- flagmaps:\n   - map of defects in darkness, output of PV-021\n   - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n - xtalk_model: empty\n@@ -368,9 +461,9 @@ Quality control plots are in the workdir in logs/VIS_astrom_calib.\n \n **Inputs:**\n \n-- vis_config_in: \n+- vis_config_in:\n - MDB:\n-- catalogues_in: DpdVisCalibratedFrameCatalog \n+- catalogues_in: DpdVisCalibratedFrameCatalog\n   - short exposures: DpdVisCalibratedFrameCatalog, output the previous VIS_ProcessField on short exposures\n   - nominal exposures: DpdVisCalibratedFrameCatalog, output the previous VIS_ProcessField on nominal exposures\n \n@@ -463,7 +556,7 @@ It will be run on the raw nominal exposures only.\n \n - xtalk_model: crosstalk model CALPRODUCT VS-008\n - zero_point: VIS zero point CALPRODUCT VS-001\n- \n+\n **Outputs:**\n \n - dpdcalibrated_frames: VIS calibrated frames for MER\n",
                            "PV-028 document updates",
                            "James Nightingale",
                            "2023-08-14T08:48:46.000+01:00",
                            "7c4409c94a42b7778e7132e614b56b8ad296b718"
                        ],
                        [
                            "@@ -20,6 +20,8 @@ Some pipelines will use on-ground models. These on-ground models are:\n - ron_model: DpdVisRONModel ProductId=DpdVisRONModel_EUC_VIS_MDL-BIAS02_RON_ELE_MAP_json\n - saturation_model: DpdVisBloomingModel ProductId=DpdVisBloomingModel_EUC_VIS_MDL-SC8_BLOOM_ELE_json\n - zero_point: DpdVisZeroPoint ProductId=DpdVisZeroPoint_2436_040223_json\n+- ghost_model: DpdVisGhostModel ProductId=DpdVisGhostModel_ghost_model_JAN2022_json\n+- starmask_model: DpdVisStarMask ProductId= DpdVisStarMask_starmask_JAN2022_fits\n \n Hereafter these products are referenced as _on-ground_.\n \n@@ -36,8 +38,8 @@ The detailed description of VIS_FlagObjects is given only once for PV-022. For t\n **Inputs:**\n \n - raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-021 & ImgType.FirstType=BIAS\n-- vis_config_in:\n-- MDB:\n+- vis_config_in: \n+- MDB: \n - gains_model: on-ground\n - ron_model: on-ground\n - saturation_model: empty\n@@ -155,7 +157,7 @@ The detailed description of VIS_FlagObjects is given only once for PV-022. For t\n \n **Inputs:**\n \n-* `raw_frames_in`: list of raw charge injection frames, ImgType.FirstType=CHARGE_INJECTION\n+* `raw_frames_in`: list of 4 raw charge injection frames, ImgType.FirstType=CHARGE_INJECTION\n * `vis_config_in`: VIS PF configuration file\n * `MDB`: Mission DataBase\n * `flagmaps`: list of flag maps.\n@@ -186,7 +188,7 @@ The detailed description of VIS_FlagObjects is given only once for PV-022. For t\n - ron_model: on-ground\n - saturation_model: on-ground\n - masterbias: CALPRODUCT VS-003 VIS Bias\n-- flagmaps:\n+- flagmaps: \n   - map of defects in darkness, output of PV-021\n   - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n - xtalk_model: empty\n@@ -216,7 +218,7 @@ Quality control plots are in the workdir in logs/VIS_astrom_calib.\n **Inputs:**\n \n - raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-022 & ObservationSequence.CalBlockVariant=LOW1-1000ADU & ImgType.FirstType=SURVEY\n-- flagmaps:\n+- flagmaps: \n   - map of defects in darkness, output of PV-021\n   - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n \n@@ -236,7 +238,7 @@ Quality control plots are in the workdir in logs/VIS_astrom_calib.\n - ron_model: on-ground\n - saturation_model: on-ground\n - masterbias: CALPRODUCT VS-003 VIS Bias\n-- flagmaps:\n+- flagmaps: \n   - map of defects in darkness, output of PV-021\n   - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n - xtalk_model: empty\n@@ -297,6 +299,191 @@ Quality control plots are in the workdir in logs/VIS_astrom_calib.\n \n ## PV-001 - VISIT-1\n \n+### Step 1 - Pipeline: VIS_PSFCalibration\n+\n+**Inputs:**\n+\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-001 & ObservationSequence.CalBlockVariant=likeVISIT-1* & ImgType.FirstType=SELF_CALIBRATION & ExposureTime =106\n+- vis_config_in:\n+- MDB:\n+- gains_model: gain model CALPRODUCT VS-011\n+- ron_model: on-ground\n+- saturation_model: on-ground\n+- masterbias: CALPRODUCT VS-003 VIS Bias\n+- flagmaps:\n+  - map of defects in darkness, output of PV-021\n+  - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+- masterdark: empty\n+- masterflat: master flat LED3 10kADU, output of PV-022 - PRNU2-10000ADU\n+\n+\n+**Outputs:**\n+\n+- psf_model_xml_out: PSF model\n+\n+### Step 2 - Pipelines: VIS_ProcessField\n+\n+2 instances of VIS_ProcessField without stacking will be run, possibly in parallel, one on the short exposures and one on the nominal exposures.\n+\n+**Inputs:**\n+\n+- raw_frames_in:\n+  - short exposures: DpdVisRawFrame ObservationSequence.CalblockId=PV-001 & ObservationSequence.CalBlockVariant=likeVISIT-1* & ImgType.FirstType=SELF_CALIBRATION & ExposureTime = 106\n+  - nominal exposures: DpdVisRawFrame ObservationSequence.CalblockId=PV-001 & ObservationSequence.CalBlockVariant=likeVISIT-1* & ImgType.FirstType=SELF_CALIBRATION & ExposureTime = 565\n+- vis_config_in: DpdVisConfigurationFile_EUC_VIS_ConfigFile_PF12_01JUL2023_nostack_ini\n+- MDB:\n+- gains_model: gain model CALPRODUCT VS-011\n+- ron_model: on-ground\n+- saturation_model: on-ground\n+- masterbias:  CALPRODUCT VS-003 VIS Bias\n+- flagmaps:\n+  - map of defects in darkness, output of PV-021\n+  - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+- zero_point: on-ground\n+- masterdark: empty\n+- masterflat: master flat LED3 10kADU, output of PV-022 - PRNU2-10000ADU\n+- psf_model: output of previous VIS_PSFCalibration\n+- dist_model: distortion model CALPRODUCT VS-010 VIS\n+- lsf_model: empty\n+- ghost_model: on-ground\n+- starmask_model: on-ground\n+- bfe_model: empty\n+- ref_catalogues: DpdExtGaiaCutout covering raw science frames sky area\n+\n+**Outputs:**\n+\n+- dpdcalibrated_frames: VIS calibrated frames\n+- dpdcalibrated_catalogues: VIS calibrated catalogues\n+- dpdghost_catalogues: unused in the rest of the processing\n+\n+### Step 3 - Pipelines: VIS_LargeFlatCalibration\n+\n+2 instances of VIS_LargeFlatCalibration will be run, possibly in parallel, one on the short exposure catalogs and one on the nominal exposure catalogs.\n+\n+**Inputs:**\n+\n+- vis_config_in: \n+- MDB:\n+- catalogues_in: DpdVisCalibratedFrameCatalog \n+  - short exposures: DpdVisCalibratedFrameCatalog, output the previous VIS_ProcessField on short exposures\n+  - nominal exposures: DpdVisCalibratedFrameCatalog, output the previous VIS_ProcessField on nominal exposures\n+\n+**Outputs:**\n+\n+- largeflatcal_output: large flat for short and nominal exposures, respectively, CALPRODUCT VS-013\n+\n+### Step 4 - Pipelines: VIS_ProcessField\n+\n+2 instances of VIS_ProcessField without stacking will be run, possibly in parallel, one on the short exposures and one on the nominal exposures. It is exactly the same processing as in step 4, except that large flat correction will be applied. Below we describe only the differences with Step 2.\n+\n+**Inputs:**\n+\n+- lsf_model:\n+  - short exposures: CALPRODUCT VS-013, output of VIS_LargeFlatCalibration for short exposures\n+  - nominal exposures: CALPRODUCT VS-013, output of VIS_LargeFlatCalibration for nominal exposures\n+\n+**Outputs:**\n+\n+- dpdcalibrated_frames: VIS calibrated frames\n+- dpdcalibrated_catalogues: VIS calibrated catalogues\n+- dpdghost_catalogues: ghost catalogues\n+\n+### Step 5 - Pipeline: VIS_PhotometryCalibration\n+\n+**Inputs:**\n+\n+- vis_config_in:\n+- MDB:\n+- catalogues_in: list of DpdVisCalibratedFrameCatalog from VIS_ProcessField on short exposures in step 4\n+\n+**Outputs:**\n+\n+- zero_point_xml_out: updated VIS zero point CALPRODUCT VS-001\n+\n+### Step 6 - Pipeline: VIS_GhostsCalibration\n+\n+This pipeline can be run in parallel with VIS_PhotometryCalibration in step 5.\n+\n+**Inputs:**\n+\n+- MDB:\n+- ghost_cat_list: ghost catalogues, output of both VIS_ProcessField in step 4 (long and short exposures)\n+- ref_ghost_model_in: on-ground\n+\n+**Outputs:**\n+\n+ghost_model_xml_out: updated ghost model CALPRODUCT VS-012\n+\n+### Step 7 - Pipeline: VIS_XTalkCalibration_Pipeline\n+\n+This pipeline can be run in parallel with VIS_PhotometryCalibration in step 5 and VIS_GhostsCalibration in step 6.\n+It will be run on the raw nominal exposures only.\n+\n+**Inputs:**\n+\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-001 & ObservationSequence.CalBlockVariant=likeVISIT-1* & ImgType.FirstType=SELF_CALIBRATION & ExposureTime = 565\n+- vis_config_in: DpdVisConfigurationFile_EUC_VIS_ConfigFile_PF12_01JUL2023_normtmp_ini\n+- MDB:\n+- gains_model: gain model CALPRODUCT VS-011\n+- ron_model: on-ground\n+- saturation_model: on-ground\n+- masterbias:  CALPRODUCT VS-003 VIS Bias\n+- flagmaps:\n+  - map of defects in darkness, output of PV-021\n+  - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+- zero_point: on-ground\n+- masterdark: empty\n+- masterflat: master flat LED3 10kADU, output of PV-022 - PRNU2-10000ADU\n+- psf_model: output of previous VIS_PSFCalibration\n+- dist_model: distortion model CALPRODUCT VS-010 VIS\n+- lsf_model: CALPRODUCT VS-013, output of VIS_LargeFlatCalibration for nominal exposures\n+- ghost_model: on-ground\n+- starmask_model: on-ground\n+- bfe_model: empty\n+- ref_catalogues: DpdExtGaiaCutout covering raw science frames sky area\n+\n+**Outputs:**\n+\n+- xtalk_model_xml_out: crosstalk model, CALPRODUCT VS-008\n+\n+### Step 8  - Pipelines: VIS_ProcessField\n+\n+2 instances of VIS_ProcessField without stacking will be run, possibly in parallel, one on the short exposures and one on the nominal exposures. It is the same processing as in step 4, except that we will use the zero point and the crosstalk model produced in the previous steps. Below we describe only the differences with step 4.\n+\n+**Inputs:**\n+\n+- xtalk_model: crosstalk model CALPRODUCT VS-008\n+- zero_point: VIS zero point CALPRODUCT VS-001\n+ \n+**Outputs:**\n+\n+- dpdcalibrated_frames: VIS calibrated frames for MER\n+\n+### Step X - Pipeline: VIS stacking\n+\n+This pipeline aims at producing the astrometric catalogue for NIR. This step can be executed either after step 2, 4 or 8, depending on NIR needs.\n+\n+**Inputs:**\n+\n+- vis_config_in:\n+- ref_catalogues: DpdExtGaiaCutout covering raw science frames sky area\n+- exposure_list: list of DpdVisCalibratedFrame, output of VIS_ProcessField in step 2, 4 or 8\n+\n+**Outputs:**\n+\n+- dpdstacked_catalogue: single VIS catalog for NIR\n+\n+\n+\n ## PV-006\tELAT-90-20\n ## PV-006\tELAT-100-20\n ## PV-006\tGLAT-20\n",
                            "Merge branch 'feature-SUM' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_IAL_Pipelines into feature-SUM",
                            "James Nightingale",
                            "2023-08-14T08:09:51.000+01:00",
                            "868608c57b3da62eedb887785132fc28ab84c77d"
                        ],
                        [
                            "@@ -155,6 +155,26 @@ The detailed description of VIS_FlagObjects is given only once for PV-022. For t\n \n ## PV-034 VIS Charge Injection Timing\n \n+**Inputs:**\n+\n+* `raw_frames_in`: list of 4 raw charge injection frames, ImgType.FirstType=CHARGE_INJECTION\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `flagmaps`: list of flag maps.\n+* `gains_model`: gain model\n+* `xtalk_model`: crosstalk model\n+* `masterbias`: master bias frame\n+* `masterdark`: master dark frame\n+* `nlcorr_model`: non-linearity correction model\n+* `ron_model`: readout noise model\n+* `saturation_model`: saturation model\n+\n+**Outputs:**\n+\n+* `master_ci_xml_out`: FPA of master charge injection images.\n+\n+### Pipeline: VIS_CTIMasterCI\n+\n ## PV-023\n \n ### Pipeline: VIS_AstrometryCalibration\n",
                            "[FIX]SUM: chap29_PVOperations.md restore PV-034 section (suppressed by error in previous commit)",
                            "Catherine Grenet",
                            "2023-08-13T20:15:06.000+02:00",
                            "1d2cdfe3c7cc399e2d58f500b507aa00a1d0bef6"
                        ],
                        [
                            "@@ -20,6 +20,8 @@ Some pipelines will use on-ground models. These on-ground models are:\n - ron_model: DpdVisRONModel ProductId=DpdVisRONModel_EUC_VIS_MDL-BIAS02_RON_ELE_MAP_json\n - saturation_model: DpdVisBloomingModel ProductId=DpdVisBloomingModel_EUC_VIS_MDL-SC8_BLOOM_ELE_json\n - zero_point: DpdVisZeroPoint ProductId=DpdVisZeroPoint_2436_040223_json\n+- ghost_model: DpdVisGhostModel ProductId=DpdVisGhostModel_ghost_model_JAN2022_json\n+- starmask_model: DpdVisStarMask ProductId= DpdVisStarMask_starmask_JAN2022_fits\n \n Hereafter these products are referenced as _on-ground_.\n \n@@ -36,8 +38,8 @@ The detailed description of VIS_FlagObjects is given only once for PV-022. For t\n **Inputs:**\n \n - raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-021 & ImgType.FirstType=BIAS\n-- vis_config_in:\n-- MDB:\n+- vis_config_in: \n+- MDB: \n - gains_model: on-ground\n - ron_model: on-ground\n - saturation_model: empty\n@@ -153,26 +155,6 @@ The detailed description of VIS_FlagObjects is given only once for PV-022. For t\n \n ## PV-034 VIS Charge Injection Timing\n \n-**Inputs:**\n-\n-* `raw_frames_in`: list of 4 raw charge injection frames, ImgType.FirstType=CHARGE_INJECTION\n-* `vis_config_in`: VIS PF configuration file\n-* `MDB`: Mission DataBase\n-* `flagmaps`: list of flag maps.\n-* `gains_model`: gain model\n-* `xtalk_model`: crosstalk model\n-* `masterbias`: master bias frame\n-* `masterdark`: master dark frame\n-* `nlcorr_model`: non-linearity correction model\n-* `ron_model`: readout noise model\n-* `saturation_model`: saturation model\n-\n-**Outputs:**\n-\n-* `master_ci_xml_out`: FPA of master charge injection images.\n-\n-### Pipeline: VIS_CTIMasterCI\n-\n ## PV-023\n \n ### Pipeline: VIS_AstrometryCalibration\n@@ -186,7 +168,7 @@ The detailed description of VIS_FlagObjects is given only once for PV-022. For t\n - ron_model: on-ground\n - saturation_model: on-ground\n - masterbias: CALPRODUCT VS-003 VIS Bias\n-- flagmaps:\n+- flagmaps: \n   - map of defects in darkness, output of PV-021\n   - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n - xtalk_model: empty\n@@ -216,7 +198,7 @@ Quality control plots are in the workdir in logs/VIS_astrom_calib.\n **Inputs:**\n \n - raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-022 & ObservationSequence.CalBlockVariant=LOW1-1000ADU & ImgType.FirstType=SURVEY\n-- flagmaps:\n+- flagmaps: \n   - map of defects in darkness, output of PV-021\n   - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n \n@@ -236,7 +218,7 @@ Quality control plots are in the workdir in logs/VIS_astrom_calib.\n - ron_model: on-ground\n - saturation_model: on-ground\n - masterbias: CALPRODUCT VS-003 VIS Bias\n-- flagmaps:\n+- flagmaps: \n   - map of defects in darkness, output of PV-021\n   - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n - xtalk_model: empty\n@@ -297,6 +279,191 @@ Quality control plots are in the workdir in logs/VIS_astrom_calib.\n \n ## PV-001 - VISIT-1\n \n+### Step 1 - Pipeline: VIS_PSFCalibration\n+\n+**Inputs:**\n+\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-001 & ObservationSequence.CalBlockVariant=likeVISIT-1* & ImgType.FirstType=SELF_CALIBRATION & ExposureTime =106\n+- vis_config_in:\n+- MDB:\n+- gains_model: gain model CALPRODUCT VS-011\n+- ron_model: on-ground\n+- saturation_model: on-ground\n+- masterbias: CALPRODUCT VS-003 VIS Bias\n+- flagmaps:\n+  - map of defects in darkness, output of PV-021\n+  - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+- masterdark: empty\n+- masterflat: master flat LED3 10kADU, output of PV-022 - PRNU2-10000ADU\n+\n+\n+**Outputs:**\n+\n+- psf_model_xml_out: PSF model\n+\n+### Step 2 - Pipelines: VIS_ProcessField\n+\n+2 instances of VIS_ProcessField without stacking will be run, possibly in parallel, one on the short exposures and one on the nominal exposures.\n+\n+**Inputs:**\n+\n+- raw_frames_in:\n+  - short exposures: DpdVisRawFrame ObservationSequence.CalblockId=PV-001 & ObservationSequence.CalBlockVariant=likeVISIT-1* & ImgType.FirstType=SELF_CALIBRATION & ExposureTime = 106\n+  - nominal exposures: DpdVisRawFrame ObservationSequence.CalblockId=PV-001 & ObservationSequence.CalBlockVariant=likeVISIT-1* & ImgType.FirstType=SELF_CALIBRATION & ExposureTime = 565\n+- vis_config_in: DpdVisConfigurationFile_EUC_VIS_ConfigFile_PF12_01JUL2023_nostack_ini\n+- MDB:\n+- gains_model: gain model CALPRODUCT VS-011\n+- ron_model: on-ground\n+- saturation_model: on-ground\n+- masterbias:  CALPRODUCT VS-003 VIS Bias\n+- flagmaps:\n+  - map of defects in darkness, output of PV-021\n+  - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+- zero_point: on-ground\n+- masterdark: empty\n+- masterflat: master flat LED3 10kADU, output of PV-022 - PRNU2-10000ADU\n+- psf_model: output of previous VIS_PSFCalibration\n+- dist_model: distortion model CALPRODUCT VS-010 VIS\n+- lsf_model: empty\n+- ghost_model: on-ground\n+- starmask_model: on-ground\n+- bfe_model: empty\n+- ref_catalogues: DpdExtGaiaCutout covering raw science frames sky area\n+\n+**Outputs:**\n+\n+- dpdcalibrated_frames: VIS calibrated frames\n+- dpdcalibrated_catalogues: VIS calibrated catalogues\n+- dpdghost_catalogues: unused in the rest of the processing\n+\n+### Step 3 - Pipelines: VIS_LargeFlatCalibration\n+\n+2 instances of VIS_LargeFlatCalibration will be run, possibly in parallel, one on the short exposure catalogs and one on the nominal exposure catalogs.\n+\n+**Inputs:**\n+\n+- vis_config_in: \n+- MDB:\n+- catalogues_in: DpdVisCalibratedFrameCatalog \n+  - short exposures: DpdVisCalibratedFrameCatalog, output the previous VIS_ProcessField on short exposures\n+  - nominal exposures: DpdVisCalibratedFrameCatalog, output the previous VIS_ProcessField on nominal exposures\n+\n+**Outputs:**\n+\n+- largeflatcal_output: large flat for short and nominal exposures, respectively, CALPRODUCT VS-013\n+\n+### Step 4 - Pipelines: VIS_ProcessField\n+\n+2 instances of VIS_ProcessField without stacking will be run, possibly in parallel, one on the short exposures and one on the nominal exposures. It is exactly the same processing as in step 4, except that large flat correction will be applied. Below we describe only the differences with Step 2.\n+\n+**Inputs:**\n+\n+- lsf_model:\n+  - short exposures: CALPRODUCT VS-013, output of VIS_LargeFlatCalibration for short exposures\n+  - nominal exposures: CALPRODUCT VS-013, output of VIS_LargeFlatCalibration for nominal exposures\n+\n+**Outputs:**\n+\n+- dpdcalibrated_frames: VIS calibrated frames\n+- dpdcalibrated_catalogues: VIS calibrated catalogues\n+- dpdghost_catalogues: ghost catalogues\n+\n+### Step 5 - Pipeline: VIS_PhotometryCalibration\n+\n+**Inputs:**\n+\n+- vis_config_in:\n+- MDB:\n+- catalogues_in: list of DpdVisCalibratedFrameCatalog from VIS_ProcessField on short exposures in step 4\n+\n+**Outputs:**\n+\n+- zero_point_xml_out: updated VIS zero point CALPRODUCT VS-001\n+\n+### Step 6 - Pipeline: VIS_GhostsCalibration\n+\n+This pipeline can be run in parallel with VIS_PhotometryCalibration in step 5.\n+\n+**Inputs:**\n+\n+- MDB:\n+- ghost_cat_list: ghost catalogues, output of both VIS_ProcessField in step 4 (long and short exposures)\n+- ref_ghost_model_in: on-ground\n+\n+**Outputs:**\n+\n+ghost_model_xml_out: updated ghost model CALPRODUCT VS-012\n+\n+### Step 7 - Pipeline: VIS_XTalkCalibration_Pipeline\n+\n+This pipeline can be run in parallel with VIS_PhotometryCalibration in step 5 and VIS_GhostsCalibration in step 6.\n+It will be run on the raw nominal exposures only.\n+\n+**Inputs:**\n+\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-001 & ObservationSequence.CalBlockVariant=likeVISIT-1* & ImgType.FirstType=SELF_CALIBRATION & ExposureTime = 565\n+- vis_config_in: DpdVisConfigurationFile_EUC_VIS_ConfigFile_PF12_01JUL2023_normtmp_ini\n+- MDB:\n+- gains_model: gain model CALPRODUCT VS-011\n+- ron_model: on-ground\n+- saturation_model: on-ground\n+- masterbias:  CALPRODUCT VS-003 VIS Bias\n+- flagmaps:\n+  - map of defects in darkness, output of PV-021\n+  - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+- zero_point: on-ground\n+- masterdark: empty\n+- masterflat: master flat LED3 10kADU, output of PV-022 - PRNU2-10000ADU\n+- psf_model: output of previous VIS_PSFCalibration\n+- dist_model: distortion model CALPRODUCT VS-010 VIS\n+- lsf_model: CALPRODUCT VS-013, output of VIS_LargeFlatCalibration for nominal exposures\n+- ghost_model: on-ground\n+- starmask_model: on-ground\n+- bfe_model: empty\n+- ref_catalogues: DpdExtGaiaCutout covering raw science frames sky area\n+\n+**Outputs:**\n+\n+- xtalk_model_xml_out: crosstalk model, CALPRODUCT VS-008\n+\n+### Step 8  - Pipelines: VIS_ProcessField\n+\n+2 instances of VIS_ProcessField without stacking will be run, possibly in parallel, one on the short exposures and one on the nominal exposures. It is the same processing as in step 4, except that we will use the zero point and the crosstalk model produced in the previous steps. Below we describe only the differences with step 4.\n+\n+**Inputs:**\n+\n+- xtalk_model: crosstalk model CALPRODUCT VS-008\n+- zero_point: VIS zero point CALPRODUCT VS-001\n+ \n+**Outputs:**\n+\n+- dpdcalibrated_frames: VIS calibrated frames for MER\n+\n+### Step X - Pipeline: VIS stacking\n+\n+This pipeline aims at producing the astrometric catalogue for NIR. This step can be executed either after step 2, 4 or 8, depending on NIR needs.\n+\n+**Inputs:**\n+\n+- vis_config_in:\n+- ref_catalogues: DpdExtGaiaCutout covering raw science frames sky area\n+- exposure_list: list of DpdVisCalibratedFrame, output of VIS_ProcessField in step 2, 4 or 8\n+\n+**Outputs:**\n+\n+- dpdstacked_catalogue: single VIS catalog for NIR\n+\n+\n+\n ## PV-006\tELAT-90-20\n ## PV-006\tELAT-100-20\n ## PV-006\tGLAT-20\n",
                            "[NEW]SUM: chap29_PVOperations.md Description of PV-001 VISIT-1 added.",
                            "Catherine Grenet",
                            "2023-08-13T19:53:45.000+02:00",
                            "03e9200592de97d73bb7ff45ccf536a4f3dc0b84"
                        ],
                        [
                            "@@ -36,8 +36,8 @@ The detailed description of VIS_FlagObjects is given only once for PV-022. For t\n **Inputs:**\n \n - raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-021 & ImgType.FirstType=BIAS\n-- vis_config_in: \n-- MDB: \n+- vis_config_in:\n+- MDB:\n - gains_model: on-ground\n - ron_model: on-ground\n - saturation_model: empty\n@@ -153,6 +153,26 @@ The detailed description of VIS_FlagObjects is given only once for PV-022. For t\n \n ## PV-034 VIS Charge Injection Timing\n \n+**Inputs:**\n+\n+* `raw_frames_in`: list of 4 raw charge injection frames, ImgType.FirstType=CHARGE_INJECTION\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `flagmaps`: list of flag maps.\n+* `gains_model`: gain model\n+* `xtalk_model`: crosstalk model\n+* `masterbias`: master bias frame\n+* `masterdark`: master dark frame\n+* `nlcorr_model`: non-linearity correction model\n+* `ron_model`: readout noise model\n+* `saturation_model`: saturation model\n+\n+**Outputs:**\n+\n+* `master_ci_xml_out`: FPA of master charge injection images.\n+\n+### Pipeline: VIS_CTIMasterCI\n+\n ## PV-023\n \n ### Pipeline: VIS_AstrometryCalibration\n@@ -166,7 +186,7 @@ The detailed description of VIS_FlagObjects is given only once for PV-022. For t\n - ron_model: on-ground\n - saturation_model: on-ground\n - masterbias: CALPRODUCT VS-003 VIS Bias\n-- flagmaps: \n+- flagmaps:\n   - map of defects in darkness, output of PV-021\n   - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n - xtalk_model: empty\n@@ -196,7 +216,7 @@ Quality control plots are in the workdir in logs/VIS_astrom_calib.\n **Inputs:**\n \n - raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-022 & ObservationSequence.CalBlockVariant=LOW1-1000ADU & ImgType.FirstType=SURVEY\n-- flagmaps: \n+- flagmaps:\n   - map of defects in darkness, output of PV-021\n   - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n \n@@ -216,7 +236,7 @@ Quality control plots are in the workdir in logs/VIS_astrom_calib.\n - ron_model: on-ground\n - saturation_model: on-ground\n - masterbias: CALPRODUCT VS-003 VIS Bias\n-- flagmaps: \n+- flagmaps:\n   - map of defects in darkness, output of PV-021\n   - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n - xtalk_model: empty\n",
                            "Merge branch 'feature-SUM_cti_update' into 'feature-SUM'",
                            "Catherine Grenet",
                            "2023-08-12T12:21:47.000+00:00",
                            "c8a06ba292989275375ad2e303521da30c5a2933"
                        ],
                        [
                            "@@ -155,7 +155,7 @@ The detailed description of VIS_FlagObjects is given only once for PV-022. For t\n \n **Inputs:**\n \n-* `raw_frames_in`: list of raw charge injection frames, ImgType.FirstType=CHARGE_INJECTION\n+* `raw_frames_in`: list of 4 raw charge injection frames, ImgType.FirstType=CHARGE_INJECTION\n * `vis_config_in`: VIS PF configuration file\n * `MDB`: Mission DataBase\n * `flagmaps`: list of flag maps.\n",
                            "specify number of raw frames",
                            "James Nightingale",
                            "2023-08-11T12:26:54.000+01:00",
                            "616799fe426366abd61ee5dcda282f666dbdb349"
                        ],
                        [
                            "@@ -36,8 +36,8 @@ The detailed description of VIS_FlagObjects is given only once for PV-022. For t\n **Inputs:**\n \n - raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-021 & ImgType.FirstType=BIAS\n-- vis_config_in: \n-- MDB: \n+- vis_config_in:\n+- MDB:\n - gains_model: on-ground\n - ron_model: on-ground\n - saturation_model: empty\n@@ -153,6 +153,26 @@ The detailed description of VIS_FlagObjects is given only once for PV-022. For t\n \n ## PV-034 VIS Charge Injection Timing\n \n+**Inputs:**\n+\n+* `raw_frames_in`: list of raw charge injection frames, ImgType.FirstType=CHARGE_INJECTION\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `flagmaps`: list of flag maps.\n+* `gains_model`: gain model\n+* `xtalk_model`: crosstalk model\n+* `masterbias`: master bias frame\n+* `masterdark`: master dark frame\n+* `nlcorr_model`: non-linearity correction model\n+* `ron_model`: readout noise model\n+* `saturation_model`: saturation model\n+\n+**Outputs:**\n+\n+* `master_ci_xml_out`: FPA of master charge injection images.\n+\n+### Pipeline: VIS_CTIMasterCI\n+\n ## PV-023\n \n ### Pipeline: VIS_AstrometryCalibration\n@@ -166,7 +186,7 @@ The detailed description of VIS_FlagObjects is given only once for PV-022. For t\n - ron_model: on-ground\n - saturation_model: on-ground\n - masterbias: CALPRODUCT VS-003 VIS Bias\n-- flagmaps: \n+- flagmaps:\n   - map of defects in darkness, output of PV-021\n   - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n - xtalk_model: empty\n@@ -196,7 +216,7 @@ Quality control plots are in the workdir in logs/VIS_astrom_calib.\n **Inputs:**\n \n - raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-022 & ObservationSequence.CalBlockVariant=LOW1-1000ADU & ImgType.FirstType=SURVEY\n-- flagmaps: \n+- flagmaps:\n   - map of defects in darkness, output of PV-021\n   - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n \n@@ -216,7 +236,7 @@ Quality control plots are in the workdir in logs/VIS_astrom_calib.\n - ron_model: on-ground\n - saturation_model: on-ground\n - masterbias: CALPRODUCT VS-003 VIS Bias\n-- flagmaps: \n+- flagmaps:\n   - map of defects in darkness, output of PV-021\n   - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n - xtalk_model: empty\n",
                            "add docs for PV-034 to chap29_PVOperations.md",
                            "James Nightingale",
                            "2023-08-10T13:40:05.000+01:00",
                            "d86df14db03b2ff86480e84e059fd5c487eb6ae0"
                        ],
                        [
                            "@@ -19,7 +19,7 @@ Some pipelines will use on-ground models. These on-ground models are:\n - psf_model: DpdVisPSFModel ProductId=DpdVisPSFModel_EUC_VIS_MDL-PSF_OH_issue-20981-44_2022-12-20\n - ron_model: DpdVisRONModel ProductId=DpdVisRONModel_EUC_VIS_MDL-BIAS02_RON_ELE_MAP_json\n - saturation_model: DpdVisBloomingModel ProductId=DpdVisBloomingModel_EUC_VIS_MDL-SC8_BLOOM_ELE_json\n-- zero_point: DpdVisZeroPoint DpdVisZeroPoint_2436_040223_json\n+- zero_point: DpdVisZeroPoint ProductId=DpdVisZeroPoint_2436_040223_json\n \n Hereafter these products are referenced as _on-ground_.\n \n@@ -177,8 +177,6 @@ The detailed description of VIS_FlagObjects is given only once for PV-022. For t\n - masterflat: master flat LED3 10kADU, output of PV-022 - PRNU2-10000ADU\n - dist_model: empty\n - lsf_model: empty\n-- ghost_model: empty\n-- starmask_model: empty\n - bfe_model: empty\n - ref_catalogues: DpdExtGaiaCutout covering raw science frames sky area\n \n@@ -236,12 +234,62 @@ Quality control plots are in the workdir in logs/VIS_astrom_calib.\n \n ## PV-022 - BF-40000ADU\n \n+### Pipeline: VIS_FlagObjects\n+\n+**Inputs:**\n+\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-022 & ObservationSequence.CalBlockVariant=BF-40000ADU & ImgType.FirstType=SURVEY\n+- flagmaps:\n+  - map of defects in darkness, output of PV-021\n+  - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n+\n+**Outputs:**\n+\n+- objects_flagmap_xml_out: list of object masks, one for each input exposure\n+\n+\n+### Pipeline: VIS_BrighterFatterCalibration\n+\n+**Inputs:**\n+\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-022 & ObservationSequence.CalBlockVariant=BF-40000ADU & ImgType.FirstType=FLAT & CalibUnit.LedMask=Ox4\n+- vis_config_in:\n+- MDB:\n+- gains_model: gain model CALPRODUCT VS-011\n+- ron_model: on-ground\n+- saturation_model: on-ground\n+- masterbias: CALPRODUCT VS-003 VIS Bias\n+- flagmaps:\n+  - map of defects in darkness, output of PV-021\n+  - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+- object_masks: outputs of VIS_FlagObjects pipeline\n+\n+**Outputs:**\n+\n+- bfecalib_xml_out: brighter-fatter model CALPRODUCT VS-004 VIS Brighter-fatter Effect\n+\n ## PV-007 - PROPOSAL-08-M33\n ## PV-007 - PROPOSAL-11-A370\n ## PV-007 - PROPOSAL-11-N01\n \n ## PV-001 - VISIT-1\n \n+## PV-006\tELAT-90-20\n+## PV-006\tELAT-100-20\n+## PV-006\tGLAT-20\n+\n+## PV-024\n+\n+## F-014\n+\n+## PV-029 PTC-SERIES-2\n+\n+## PV-031\n+\n+\n \n \n \n",
                            "SUM: fix AstrometryCalibration (#23397), PV-022 BF-40000ADU added to PVOperations",
                            "Catherine Grenet",
                            "2023-08-10T11:17:31.000+02:00",
                            "3d0969bb4f5de9a44d8e155e71242066a3d2e04c"
                        ],
                        [
                            "@@ -7,24 +7,34 @@\n There is no VIS pipeline to trigger for Calblocks not mentioned in this chapter.\n \n Unless otherwise stated, the following inputs will be used for all pipelines:\n+\n - vis_config_in: DpdVisConfigurationFile ProductId=DpdVisConfigurationFile_EUC_VIS_ConfigFile_PF12_01JUL2023_ini\n - MDB: DpdMdbDataBase ProductId=EUC_MDB_MISSIONCONFIGURATION-DEV_2023-07-17T12:00:00.00Z_00\n \n These inputs will not be repeated hereafter.\n \n Some pipelines will use on-ground models. These on-ground models are:\n+\n - gains_model: DpdVisGainModel ProductId=DpdVisGainModel_EUC_VIS_MDL-PTC01_GAIN_elperadu_MAP_json\n+- psf_model: DpdVisPSFModel ProductId=DpdVisPSFModel_EUC_VIS_MDL-PSF_OH_issue-20981-44_2022-12-20\n - ron_model: DpdVisRONModel ProductId=DpdVisRONModel_EUC_VIS_MDL-BIAS02_RON_ELE_MAP_json\n+- saturation_model: DpdVisBloomingModel ProductId=DpdVisBloomingModel_EUC_VIS_MDL-SC8_BLOOM_ELE_json\n+- zero_point: DpdVisZeroPoint DpdVisZeroPoint_2436_040223_json\n \n-Hereafter these product are referenced as _on-ground_.\n+Hereafter these products are referenced as _on-ground_.\n \n Note that when ExposureTime is used for selection, the exact value in real data may not be the one mentioned in the current version of this document.\n \n+VIS_FlagObjects pipeline is intended to run on Calbloks PV-022, PV-029, and PV-031. It processes the short science exposures in the Calblock to create masks of celestial objects for each pointing. These masks are then used by the pipelines in charge of processing the flat-field exposures of each calblock. These pipelines need in input the masks corresponding to the flats to process, but more can be given: each pipeline will search for the masks corresponding to the flat fields they are processing.\n+\n+The detailed description of VIS_FlagObjects is given only once for PV-022. For the other calblocks we just mention the differences with this first run.\n+\n ## PV-021\n \n ### Pipeline: VIS_MasterBias\n \n **Inputs:**\n+\n - raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-021 & ImgType.FirstType=BIAS\n - vis_config_in: \n - MDB: \n@@ -37,26 +47,205 @@ Note that when ExposureTime is used for selection, the exact value in real data\n - cti_model: empty\n \n **Outputs:**\n+\n - dpdcalib_data: CALPRODUCT VS-003 VIS Bias\n - dpdanalysis: quality assessment parameters\n \n ### Pipeline: VIS_MasterDark\n \n **Inputs:**\n+\n - raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-021 & ImgType.FirstType=DARK & ExposureTime=565\n - vis_config_in:\n - MDB:\n - gains_model: on-ground\n - ron_model: on-ground\n - saturation_model: empty\n-- masterbias:  CALPRODUCT VS-003 VIS Bias\n+- masterbias: CALPRODUCT VS-003 VIS Bias\n - flagmaps: empty\n - xtalk_model: empty\n - nlcorr_model: empty\n - cti_model: empty\n \n **Outputs:**\n+\n - dpdcalib_data: CALPRODUCT VS-009 VIS Darks\n-- dpdcalib_flag: map of defects in darkness, part of CALPRODUCT VS-007 VIS Cosmetic Map\n+- dpdcalib_flag: map of defects in darkness, first part of CALPRODUCT VS-007 VIS Cosmetic Map\n+- dpdanalysis: quality assessment parameters\n+\n+## F-014\n+\n+## PV-022 - PRNU2-10000ADU\n+\n+### Pipeline: VIS_FlagObjects\n+\n+**Inputs:**\n+\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-022 &  ObservationSequence.CalBlockVariant=PRNU2-10000ADU & ImgType.FirstType=SURVEY\n+- vis_config_in:\n+- MDB:\n+- gains_model: on-ground\n+- ron_model: on-ground\n+- saturation_model: on-ground\n+- masterbias: CALPRODUCT VS-003 VIS Bias\n+- flagmaps: map of defects in darkness, output of PV-021\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+- zero_point: on-ground\n+- masterdark: empty\n+- masterflat: empty\n+- psf_model: on-ground\n+- dist_model: empty\n+- lsf_model: empty\n+- ghost_model: empty\n+- starmask_model: empty\n+- bfe_model: empty\n+- ref_catalogues: empty\n+\n+**Outputs:**\n+\n+- objects_flagmap_xml_out: list of object masks, one for each input exposure\n+\n+### Pipeline: VIS_MasterFlat\n+\n+4 instances of the pipelines will be run, one for each of LEDs 1, 2, 3, 4. The 4 instances can be run in parallel.\n+\n+ LED selection is done with CalibUnit.LedMask:\n+\n+- LED1: CalibUnit.LedMask=0x1\n+- LED2: CalibUnit.LedMask=0x2\n+- LED3: CalibUnit.LedMask=0x4\n+- LED4: CalibUnit.LedMask=0x8\n+\n+**Inputs:**\n+\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-022 & ObservationSequence.CalBlockVariant=PRNU2-10000ADU & ImgType.FirstType=FLAT & CalibUnit.LedMask=_mask for LEDi_\n+- vis_config_in:\n+- MDB:\n+- gains_model: on-ground\n+- ron_model: on-ground\n+- saturation_model: empty\n+- masterbias: CALPRODUCT VS-003 VIS Bias\n+- flagmaps: map of defects in darkness, output of VIS_MasterDark pipeline\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+- masterdark: empty\n+- bfe_model: empty\n+- object_masks: outputs of VIS_FlagObjects pipeline\n+\n+**Outputs:**\n+\n+- dpdcalib_data: master flat _LEDi_ 10kADU\n+- dpdcalib_flag: map of defects in photoresponse at 10 kADU, second part of CALPRODUCT VS-007 VIS Cosmetic Map\n - dpdanalysis: quality assessment parameters\n+- dpd_ledprofile: calibration unit profile\n+\n+## PV-029 - PTC-SERIES-1\n+\n+## PV-027 - PARALLEL-CI-HIGH\n+## PV-027 - PARALLEL-CI-LOW\n+## PV-027 - SERIAL\n+\n+## PV-028 - CI-ROS\n+## PV-028 - IG1-SCAN\n+\n+## PV-034 VIS Charge Injection Timing\n+\n+## PV-023\n+\n+### Pipeline: VIS_AstrometryCalibration\n+\n+**Inputs:**\n+\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-023 & ImgType.Category=SCIENCE & ExposureTime=565\n+- vis_config_in:\n+- MDB:\n+- gains_model: on-ground\n+- ron_model: on-ground\n+- saturation_model: on-ground\n+- masterbias: CALPRODUCT VS-003 VIS Bias\n+- flagmaps: \n+  - map of defects in darkness, output of PV-021\n+  - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+- zero_point: on-ground\n+- masterdark: empty\n+- masterflat: master flat LED3 10kADU, output of PV-022 - PRNU2-10000ADU\n+- dist_model: empty\n+- lsf_model: empty\n+- ghost_model: empty\n+- starmask_model: empty\n+- bfe_model: empty\n+- ref_catalogues: DpdExtGaiaCutout covering raw science frames sky area\n+\n+\n+**Outputs:**\n+\n+- dist_model_xml_out: CALPRODUCT VS-010 VIS Focal Plane Astrometric Solution\n+\n+Quality control plots are in the workdir in logs/VIS_astrom_calib.\n+\n+## F-014\n+\n+## PV-022 - LOW1-1000ADU\n+\n+### Pipeline: VIS_FlagObjects\n+\n+**Inputs:**\n+\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-022 & ObservationSequence.CalBlockVariant=LOW1-1000ADU & ImgType.FirstType=SURVEY\n+- flagmaps: \n+  - map of defects in darkness, output of PV-021\n+  - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n+\n+**Outputs:**\n+\n+- objects_flagmap_xml_out: list of object masks, one for each input exposure\n+\n+\n+### Pipeline: VIS_GainCalibration\n+\n+**Inputs:**\n+\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-022 & ObservationSequence.CalBlockVariant=LOW1-1000ADU & ImgType.FirstType=FLAT & CalibUnit.LedMask=Ox4\n+- vis_config_in:\n+- MDB:\n+- gains_model: on-ground\n+- ron_model: on-ground\n+- saturation_model: on-ground\n+- masterbias: CALPRODUCT VS-003 VIS Bias\n+- flagmaps: \n+  - map of defects in darkness, output of PV-021\n+  - map of defects in photoresponse at 10 kADU, output of PV-022 - PRNU2-10000ADU\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+- masterdark: empty\n+- bfe_model: empty\n+- object_masks: outputs of VIS_FlagObjects pipeline\n+\n+**Outputs:**\n+\n+- gain_model_xml_out: gain model, part of CALPRODUCT VS-011\n+\n+## PV-022 - LOW2-5000ADU\n+\n+## PV-022 - BF-40000ADU\n+\n+## PV-007 - PROPOSAL-08-M33\n+## PV-007 - PROPOSAL-11-A370\n+## PV-007 - PROPOSAL-11-N01\n+\n+## PV-001 - VISIT-1\n+\n+\n+\n+\n+\n+\n+\n \n",
                            "[UPD]SUM: additions to chapter chap29_PVOperations.md",
                            "Catherine Grenet",
                            "2023-08-09T14:00:40.000+02:00",
                            "a4e1cbb6821ca4e8713d613488a8037188bdf15d"
                        ],
                        [
                            "@@ -0,0 +1,62 @@\n+\\newpage\n+\n+# PV operations\n+\n+## Commonalities\n+\n+There is no VIS pipeline to trigger for Calblocks not mentioned in this chapter.\n+\n+Unless otherwise stated, the following inputs will be used for all pipelines:\n+- vis_config_in: DpdVisConfigurationFile ProductId=DpdVisConfigurationFile_EUC_VIS_ConfigFile_PF12_01JUL2023_ini\n+- MDB: DpdMdbDataBase ProductId=EUC_MDB_MISSIONCONFIGURATION-DEV_2023-07-17T12:00:00.00Z_00\n+\n+These inputs will not be repeated hereafter.\n+\n+Some pipelines will use on-ground models. These on-ground models are:\n+- gains_model: DpdVisGainModel ProductId=DpdVisGainModel_EUC_VIS_MDL-PTC01_GAIN_elperadu_MAP_json\n+- ron_model: DpdVisRONModel ProductId=DpdVisRONModel_EUC_VIS_MDL-BIAS02_RON_ELE_MAP_json\n+\n+Hereafter these product are referenced as _on-ground_.\n+\n+Note that when ExposureTime is used for selection, the exact value in real data may not be the one mentioned in the current version of this document.\n+\n+## PV-021\n+\n+### Pipeline: VIS_MasterBias\n+\n+**Inputs:**\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-021 & ImgType.FirstType=BIAS\n+- vis_config_in: \n+- MDB: \n+- gains_model: on-ground\n+- ron_model: on-ground\n+- saturation_model: empty\n+- flagmaps: empty\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+\n+**Outputs:**\n+- dpdcalib_data: CALPRODUCT VS-003 VIS Bias\n+- dpdanalysis: quality assessment parameters\n+\n+### Pipeline: VIS_MasterDark\n+\n+**Inputs:**\n+- raw_frames_in: DpdVisRawFrame ObservationSequence.CalblockId=PV-021 & ImgType.FirstType=DARK & ExposureTime=565\n+- vis_config_in:\n+- MDB:\n+- gains_model: on-ground\n+- ron_model: on-ground\n+- saturation_model: empty\n+- masterbias:  CALPRODUCT VS-003 VIS Bias\n+- flagmaps: empty\n+- xtalk_model: empty\n+- nlcorr_model: empty\n+- cti_model: empty\n+\n+**Outputs:**\n+- dpdcalib_data: CALPRODUCT VS-009 VIS Darks\n+- dpdcalib_flag: map of defects in darkness, part of CALPRODUCT VS-007 VIS Cosmetic Map\n+- dpdanalysis: quality assessment parameters\n+\n",
                            "[NEW]SUM: new chapter chap29_PVOperations.md",
                            "Catherine Grenet",
                            "2023-08-08T18:11:34.000+02:00",
                            "e206494aaed5e34d064074846f744f64bacf766c"
                        ]
                    ],
                    "VIS_IAL_Pipelines/auxdir/VIS_IAL_Pipelines/VIS_CTICalibration_Pipeline/PkgDef_VIS_CTICalibration.py": [
                        [
                            "@@ -18,7 +18,7 @@ import os\n \n PIPE_NAME = \"VIS_\" + os.path.splitext( os.path.basename( __file__))[0].split( \"VIS_\")[1]\n \n-TASKS_VER = \"13.0.12\"\n+TASKS_VERSION = \"13.0.13\"\n \n VIS_cti_xml_in = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_xml_in --pipeline_name={PIPE_NAME} \",\n@@ -75,4 +75,4 @@ VIS_cti_xml_out = Executable(\n         Output(\"serial_cti_xml_out\"),\n     ],\n     resources=ComputingResources(cores=1, ram=7.0, walltime=3.0),\n-)\n\\ No newline at end of file\n+)\n",
                            "sigh",
                            "James Nightingale",
                            "2023-08-14T15:37:54.000+02:00",
                            "5f665d3b31e49c7888107f9de7f5f2ea0cd9fcce"
                        ],
                        [
                            "@@ -67,8 +67,8 @@ VIS_cti_xml_out = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_cti_xml_out\",\n     inputs=[\n         \"config\",\n-        \"parallel_calibrate_cti_results_list\",\n-        \"serial_calibrate_cti_results_list\"\n+        Input(\"parallel_calibrate_cti_results_list\"),\n+        Input(\"serial_calibrate_cti_results_list\")\n     ],\n     outputs=[\n         Output(\"parallel_cti_xml_out\"),\n",
                            "put Input ports on IAL",
                            "James Nightingale",
                            "2023-08-14T13:51:52.000+01:00",
                            "a591146cea5c45d446ebb9a1748158864c0a837c"
                        ],
                        [
                            "@@ -18,6 +18,8 @@ import os\n \n PIPE_NAME = \"VIS_\" + os.path.splitext( os.path.basename( __file__))[0].split( \"VIS_\")[1]\n \n+TASKS_VER = \"13.0.12\"\n+\n VIS_cti_xml_in = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_xml_in --pipeline_name={PIPE_NAME} \",\n     inputs=[\n",
                            "Trying to fix pipelinme runner bug",
                            "James Nightingale",
                            "2023-08-14T13:48:06.000+01:00",
                            "cb96b904b57dea50d50dd1dc23369211ee49bed4"
                        ],
                        [
                            "@@ -63,7 +63,11 @@ calibrate_cti = Executable(\n \n VIS_cti_xml_out = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_cti_xml_out\",\n-    inputs=[\"config\", \"calibrate_cti_results_list\"],\n+    inputs=[\n+        \"config\",\n+        \"parallel_calibrate_cti_results_list\",\n+        \"serial_calibrate_cti_results_list\"\n+    ],\n     outputs=[\n         Output(\"parallel_cti_xml_out\"),\n         Output(\"serial_cti_xml_out\"),\n",
                            "updates which fix outputs to be two lists",
                            "James Nightingale",
                            "2023-08-14T12:23:46.000+01:00",
                            "43eeda1056922ee1811ae519426c089929b0926a"
                        ],
                        [
                            "@@ -1,30 +1,9 @@\n #\n-# File PkgDef_VIS_ProcessField.py\n+# File PkgDef_VIS_CTICalibration.py\n #\n-# Created on: Jan 09, 2016\n-# Author: Catherine Grenet\n-#\n-# VIS package definition for IAL workflow manager\n-#\n-# History\n-# Nov 07, 2017 (LP & OH): processExp task is now splitted in 3 differents tasks to be able to run the astrometry over 4 dithers at the same time:\n-#     processExtractExp, processAstroField and processPhotoExp are now declared in package definition\n-# Oct 19, 2017 (OH): migration from pickle list to json file. Adjust tasks parameters name accordingly\n-# Sep 06, 2017 (CG): \"ram\" now specifies maxrss instead of maxvmem\n-# Aug 24, 2017 (CG):\n-#     VIS_science_xml_out: specify mime_type=\"json\" for outfile (bug #5563)\n-# Nov 26, 2016 (CG):\n-#     processExp: cores = 1 not to use the multicore queues at CC\n-#                 walltime = 24 h to cope the 2nd SExtractor run\n-#     stacking  : walltime = 8 h\n-# Apr 07, 2016 (CG):\n-#     ComputingResources: ram = 4.0 for all jobs\n-# Apr 03, 2016 (CG):\n-#     Non linearity model is not a processQuad input any more\n-# Mar 18, 2016 (CG):\n-#    added processFlatQuad executable\n-# Mar 16, 2016 (CG):\n-#    added explist2quadlist, processQuad and ghosts2stack executables\n+# Created on: Feb 2023\n+# Author: James Nightingale\n+\n \n from euclidwf.framework.taskdefs import (\n     Executable,\n@@ -71,21 +50,23 @@ gather_cti_quads = Executable(\n \n calibrate_cti = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_CTI_Calibration\",\n-    inputs=[ \n-         Input('config'),\n-#        Input(\"MDB\"),\n-        Input(\"input_ccd\")],\n-    outputs=[Output(\"cti_parallel_output\", mime_type=\"json\"), \n-             Output(\"cti_serial_output\", mime_type=\"json\")],\n-    resources=ComputingResources(cores=1, ram=256.0, walltime=4.0),\n+    inputs=[\n+        Input('config'),\n+        Input(\"input_ccd\")\n+    ],\n+    outputs=[\n+        Output(\"cti_parallel_output\", mime_type=\"json\"),\n+        Output(\"cti_serial_output\", mime_type=\"json\")\n+    ],\n+    resources=ComputingResources(cores=1, ram=256.0, walltime=16.0),\n )\n \n VIS_cti_xml_out = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_cti_xml_out\",\n     inputs=[\"config\", \"calibrate_cti_results_list\"],\n     outputs=[\n-        Output(\"dpdcticalibration\", mime_type=\"json\", content_type=\"listfile\"),\n-        Output(\"dpdanalysis_out\", mime_type=\"json\", content_type=\"listfile\"),\n+        Output(\"parallel_cti_xml_out\"),\n+        Output(\"serial_cti_xml_out\"),\n     ],\n     resources=ComputingResources(cores=1, ram=7.0, walltime=3.0),\n-)\n+)\n\\ No newline at end of file\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ],
                        [
                            "@@ -1,30 +1,9 @@\n #\n-# File PkgDef_VIS_ProcessField.py\n+# File PkgDef_VIS_CTICalibration.py\n #\n-# Created on: Jan 09, 2016\n-# Author: Catherine Grenet\n-#\n-# VIS package definition for IAL workflow manager\n-#\n-# History\n-# Nov 07, 2017 (LP & OH): processExp task is now splitted in 3 differents tasks to be able to run the astrometry over 4 dithers at the same time:\n-#     processExtractExp, processAstroField and processPhotoExp are now declared in package definition\n-# Oct 19, 2017 (OH): migration from pickle list to json file. Adjust tasks parameters name accordingly\n-# Sep 06, 2017 (CG): \"ram\" now specifies maxrss instead of maxvmem\n-# Aug 24, 2017 (CG):\n-#     VIS_science_xml_out: specify mime_type=\"json\" for outfile (bug #5563)\n-# Nov 26, 2016 (CG):\n-#     processExp: cores = 1 not to use the multicore queues at CC\n-#                 walltime = 24 h to cope the 2nd SExtractor run\n-#     stacking  : walltime = 8 h\n-# Apr 07, 2016 (CG):\n-#     ComputingResources: ram = 4.0 for all jobs\n-# Apr 03, 2016 (CG):\n-#     Non linearity model is not a processQuad input any more\n-# Mar 18, 2016 (CG):\n-#    added processFlatQuad executable\n-# Mar 16, 2016 (CG):\n-#    added explist2quadlist, processQuad and ghosts2stack executables\n+# Created on: Feb 2023\n+# Author: James Nightingale\n+\n \n from euclidwf.framework.taskdefs import (\n     Executable,\n@@ -71,21 +50,23 @@ gather_cti_quads = Executable(\n \n calibrate_cti = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_CTI_Calibration\",\n-    inputs=[ \n-         Input('config'),\n-#        Input(\"MDB\"),\n-        Input(\"input_ccd\")],\n-    outputs=[Output(\"cti_parallel_output\", mime_type=\"json\"), \n-             Output(\"cti_serial_output\", mime_type=\"json\")],\n-    resources=ComputingResources(cores=1, ram=256.0, walltime=4.0),\n+    inputs=[\n+        Input('config'),\n+        Input(\"input_ccd\")\n+    ],\n+    outputs=[\n+        Output(\"cti_parallel_output\", mime_type=\"json\"),\n+        Output(\"cti_serial_output\", mime_type=\"json\")\n+    ],\n+    resources=ComputingResources(cores=1, ram=256.0, walltime=16.0),\n )\n \n VIS_cti_xml_out = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_cti_xml_out\",\n     inputs=[\"config\", \"calibrate_cti_results_list\"],\n     outputs=[\n-        Output(\"dpdcticalibration\", mime_type=\"json\", content_type=\"listfile\"),\n-        Output(\"dpdanalysis_out\", mime_type=\"json\", content_type=\"listfile\"),\n+        Output(\"parallel_cti_xml_out\"),\n+        Output(\"serial_cti_xml_out\"),\n     ],\n     resources=ComputingResources(cores=1, ram=7.0, walltime=3.0),\n-)\n+)\n\\ No newline at end of file\n",
                            "Merge branch 'cti_xml_out' into 'release-13.0'",
                            "Catherine Grenet",
                            "2023-08-12T13:39:06.000+00:00",
                            "186e271fa9883de8b10db78ab0693ea4d5c6a379"
                        ],
                        [
                            "@@ -16,8 +16,6 @@ from euclidwf.framework.taskdefs import (\n from VIS_ProcessField_Pipeline.PkgDef_VIS_ProcessField import TASKS_VER\n import os\n \n-TASKS_VER = \"13.0.11\"\n-\n PIPE_NAME = \"VIS_\" + os.path.splitext( os.path.basename( __file__))[0].split( \"VIS_\")[1]\n \n VIS_cti_xml_in = Executable(\n",
                            "merge time",
                            "James Nightingale",
                            "2023-08-10T10:57:03.000+01:00",
                            "c67653384be3dc4a0cf8048f7879a9f9edab81d6"
                        ],
                        [
                            "@@ -16,7 +16,7 @@ from euclidwf.framework.taskdefs import (\n from VIS_ProcessField_Pipeline.PkgDef_VIS_ProcessField import TASKS_VER\n import os\n \n-TASKS_VER = \"13.0.3\"\n+TASKS_VER = \"13.0.11\"\n \n PIPE_NAME = \"VIS_\" + os.path.splitext( os.path.basename( __file__))[0].split( \"VIS_\")[1]\n \n",
                            "manual tasks override",
                            "James Nightingale",
                            "2023-08-10T10:38:34.000+01:00",
                            "d069cbf5ee31280ddc765bff3a23fbd5c75d9b67"
                        ],
                        [
                            "@@ -1,30 +1,9 @@\n #\n-# File PkgDef_VIS_ProcessField.py\n+# File PkgDef_VIS_CTICalibration.py\n #\n-# Created on: Jan 09, 2016\n-# Author: Catherine Grenet\n-#\n-# VIS package definition for IAL workflow manager\n-#\n-# History\n-# Nov 07, 2017 (LP & OH): processExp task is now splitted in 3 differents tasks to be able to run the astrometry over 4 dithers at the same time:\n-#     processExtractExp, processAstroField and processPhotoExp are now declared in package definition\n-# Oct 19, 2017 (OH): migration from pickle list to json file. Adjust tasks parameters name accordingly\n-# Sep 06, 2017 (CG): \"ram\" now specifies maxrss instead of maxvmem\n-# Aug 24, 2017 (CG):\n-#     VIS_science_xml_out: specify mime_type=\"json\" for outfile (bug #5563)\n-# Nov 26, 2016 (CG):\n-#     processExp: cores = 1 not to use the multicore queues at CC\n-#                 walltime = 24 h to cope the 2nd SExtractor run\n-#     stacking  : walltime = 8 h\n-# Apr 07, 2016 (CG):\n-#     ComputingResources: ram = 4.0 for all jobs\n-# Apr 03, 2016 (CG):\n-#     Non linearity model is not a processQuad input any more\n-# Mar 18, 2016 (CG):\n-#    added processFlatQuad executable\n-# Mar 16, 2016 (CG):\n-#    added explist2quadlist, processQuad and ghosts2stack executables\n+# Created on: Feb 2023\n+# Author: James Nightingale\n+\n \n from euclidwf.framework.taskdefs import (\n     Executable,\n",
                            "fix conflicts",
                            "James Nightingale",
                            "2023-08-10T10:37:45.000+01:00",
                            "77f423cb2068faeffab5fa9074c5e89e156b42d4"
                        ]
                    ],
                    "VIS_IAL_Pipelines/auxdir/VIS_IAL_Pipelines/VIS_CTICalibration_Pipeline/PipScript_VIS_CTICalibration.py": [
                        [
                            "@@ -46,7 +46,8 @@ def process_cti_to_quad(config, MDB, rawexp_list):\n \n @parallel(\n     iterable=\"ccd_in\",\n-    outputs=(\"cti_parallel_output\", \"cti_serial_output\")\n+    outputs=(\"cti_parallel_output\", \"cti_serial_output\"),\n+    one_list_per_output=True\n )\n def process_calibrate_cti(\n         config,\n",
                            "trial     one_list_per_output=True",
                            "James Nightingale",
                            "2023-08-14T12:41:13.000+01:00",
                            "1cd1a24549010640a78c5e60054cafc38c25c275"
                        ],
                        [
                            "@@ -46,7 +46,7 @@ def process_cti_to_quad(config, MDB, rawexp_list):\n \n @parallel(\n     iterable=\"ccd_in\",\n-    outputs=(\"cti_parallel_output, cti_serial_output\")\n+    outputs=(\"cti_parallel_output\", \"cti_serial_output\")\n )\n def process_calibrate_cti(\n         config,\n@@ -63,9 +63,9 @@ def process_calibrate_cti(\n \n def process_calibrate_cti_to_ccd(config, ccd_list):\n \n-    calibrate_cti = process_calibrate_cti(config=config, ccd_in=ccd_list)\n+    cti_parallel_output, cti_serial_output = process_calibrate_cti(config=config, ccd_in=ccd_list)\n \n-    return calibrate_cti\n+    return cti_parallel_output, cti_serial_output\n \n \n @pipeline(outputs=(\"parallel_cti_xml_out\", \"serial_cti_xml_out\"))\n@@ -117,14 +117,15 @@ def processCTI(\n \n     # Using each ccd_list, perform CTI calibration. This occurs in total 36 times, with a unique calibration for each\n     # CCD.\n-    calibrate_cti_results_list = process_calibrate_cti_to_ccd(\n+    cti_parallel_output, cti_serial_output = process_calibrate_cti_to_ccd(\n         config=config,\n         ccd_list=ccd_list\n     )\n \n     parallel_cti_xml_out, serial_cti_xml_out = PkgDef.VIS_cti_xml_out(\n         config=config,\n-        calibrate_cti_results_list=calibrate_cti_results_list\n+        parallel_calibrate_cti_results_list=cti_parallel_output,\n+        serial_calibrate_cti_results_list=cti_serial_output\n     )\n \n     return parallel_cti_xml_out, serial_cti_xml_out\n",
                            "updates which fix outputs to be two lists",
                            "James Nightingale",
                            "2023-08-14T12:23:46.000+01:00",
                            "43eeda1056922ee1811ae519426c089929b0926a"
                        ],
                        [
                            "@@ -46,7 +46,7 @@ def process_cti_to_quad(config, MDB, rawexp_list):\n \n @parallel(\n     iterable=\"ccd_in\",\n-    outputs=(\"cti_parallel_output\", \"cti_serial_output\")\n+    outputs=(\"cti_parallel_output, cti_serial_output\")\n )\n def process_calibrate_cti(\n         config,\n",
                            "Merge branch 'hotfix/cti_calibration_pipeline' into 'release-13.0'",
                            "Catherine Grenet",
                            "2023-08-14T09:52:59.000+00:00",
                            "70a8e93d0d0dd31669dd4298025521522c08bbd8"
                        ],
                        [
                            "@@ -46,7 +46,7 @@ def process_cti_to_quad(config, MDB, rawexp_list):\n \n @parallel(\n     iterable=\"ccd_in\",\n-    outputs=(\"cti_parallel_output\", \"cti_serial_output\")\n+    outputs=(\"cti_parallel_output, cti_serial_output\")\n )\n def process_calibrate_cti(\n         config,\n",
                            "undo change to one of two @parallel decorators on line 48",
                            "James Nightingale",
                            "2023-08-14T09:56:27.000+02:00",
                            "cf694bbd2ce41516aeb7b2750d6f840be8fc7e75"
                        ],
                        [
                            "@@ -1,7 +1,8 @@\n #\n-# File PipScript_VIS_ProcessField.py\n+# File PipScript_VIS_CTICalibration.py\n #\n-# Created on: Feb 18, 2016\n+# Created on: Feb 2023\n+# Author: James Nightingale\n \n from VIS_ProcessField_Pipeline import PkgDef_VIS_ProcessField as PF_Pkg\n from VIS_CTICalibration_Pipeline import PkgDef_VIS_CTICalibration as PkgDef\n@@ -17,9 +18,11 @@ from euclidwf.framework.taskdefs import (\n from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n \n-@parallel(iterable=\"exposure_in\",\n-           outputs=('processed_quad_list', 'processed_quad_flg_list'),\n-          one_list_per_output=True)\n+@parallel(\n+    iterable=\"exposure_in\",\n+    outputs=('processed_quad_list', 'processed_quad_flg_list'),\n+    one_list_per_output=True\n+)\n def process_quad(config, MDB, exposure_in):\n \n     processed_quad_list, processed_quad_flg_list = PF_Pkg.processQuad(\n@@ -33,48 +36,73 @@ def process_quad(config, MDB, exposure_in):\n \n def process_cti_to_quad(config, MDB, rawexp_list):\n \n-    cti_quads, cti_quads_flg_list = process_quad(config=config, MDB=MDB, exposure_in=rawexp_list)\n+    cti_quads, cti_quads_flg_list = process_quad(\n+        config=config,\n+        MDB=MDB,\n+        exposure_in=rawexp_list\n+    )\n \n     return cti_quads\n \n-@parallel(iterable=\"ccd_in\", outputs=(\"cti_parallel_output, cti_serial_output\"))\n+@parallel(\n+    iterable=\"ccd_in\",\n+    outputs=(\"cti_parallel_output\", \"cti_serial_output\")\n+)\n def process_calibrate_cti(\n         config,\n-        # MDB,\n-        ccd_in):\n+        ccd_in\n+):\n+\n+    cti_parallel_output, cti_serial_output = PkgDef.calibrate_cti(\n+        config=config,\n+        input_ccd=ccd_in\n+    )\n \n-    cti_parallel_output, cti_serial_output = PkgDef.calibrate_cti(config=config,\n-                                      # MDB,\n-                                      input_ccd=ccd_in)\n     return cti_parallel_output, cti_serial_output\n \n \n-def process_calibrate_cti_to_ccd(config, MDB, ccd_list):\n+def process_calibrate_cti_to_ccd(config, ccd_list):\n \n     calibrate_cti = process_calibrate_cti(config=config, ccd_in=ccd_list)\n \n     return calibrate_cti\n \n \n-@pipeline(outputs=(\"dpdcticalibration\", \"dpdanalysis_out\"))\n-def processCTI(   vis_config_in, MDB, raw_frames_in, flagmaps, gains_model, xtalk_model,\n-                  masterbias, masterdark, nlcorr_model, ron_model,\n-                  saturation_model):\n+@pipeline(outputs=(\"parallel_cti_xml_out\", \"serial_cti_xml_out\"))\n+def processCTI(\n+    vis_config_in,\n+    MDB,\n+    raw_frames_in,\n+    flagmaps,\n+    gains_model,\n+    xtalk_model,\n+    masterbias,\n+    masterdark,\n+    nlcorr_model,\n+    ron_model,\n+    saturation_model\n+):\n \n     rawexp_list, quad_list, config = \\\n-    PkgDef.VIS_cti_xml_in(vis_config_in=  vis_config_in,\n-                          MDB=           MDB,\n-                          raw_frames_in= raw_frames_in,\n-                          flagmaps=      flagmaps,\n-                          gains_model=   gains_model,\n-                          xtalk_model=   xtalk_model,\n-                          master_bias=   masterbias,\n-                          master_dark=   masterdark,\n-                          nlcorr_model=  nlcorr_model,\n-                          ron_model=     ron_model,\n-                          saturation_model = saturation_model)\n-\n-    quad_list = process_cti_to_quad(config=config, MDB=MDB, rawexp_list=rawexp_list)\n+    PkgDef.VIS_cti_xml_in(\n+        vis_config_in=vis_config_in,\n+        MDB=MDB,\n+        raw_frames_in=raw_frames_in,\n+        flagmaps=flagmaps,\n+        gains_model=gains_model,\n+        xtalk_model=xtalk_model,\n+        master_bias=masterbias,\n+        master_dark=masterdark,\n+        nlcorr_model=nlcorr_model,\n+        ron_model=ron_model,\n+        saturation_model =saturation_model\n+    )\n+\n+    quad_list = process_cti_to_quad(\n+        config=config,\n+        MDB=MDB,\n+        rawexp_list=rawexp_list\n+    )\n \n     # quad_list is a list of .json files, where each .json file is a list of all 144 quadrant .fits files corresponding\n     # to a single charge injection image. For a typical CTI calibration run it will contain 8 .json files of 8 charge\n@@ -89,15 +117,17 @@ def processCTI(   vis_config_in, MDB, raw_frames_in, flagmaps, gains_model, xtal\n \n     # Using each ccd_list, perform CTI calibration. This occurs in total 36 times, with a unique calibration for each\n     # CCD.\n- #   calibrate_cti_results_list = process_calibrate_cti(config=config, MDB=MDB, ccd_in=ccd_list)\n-    calibrate_cti_results_list = process_calibrate_cti_to_ccd(config=config, MDB=MDB, ccd_list=ccd_list)\n-\n-    dpdcticalibration, dpdanalysis_out = PkgDef.VIS_cti_xml_out(\n-        config=config, calibrate_cti_results_list=calibrate_cti_results_list\n+    calibrate_cti_results_list = process_calibrate_cti_to_ccd(\n+        config=config,\n+        ccd_list=ccd_list\n     )\n \n-    return dpdcticalibration, dpdanalysis_out\n+    parallel_cti_xml_out, serial_cti_xml_out = PkgDef.VIS_cti_xml_out(\n+        config=config,\n+        calibrate_cti_results_list=calibrate_cti_results_list\n+    )\n \n+    return parallel_cti_xml_out, serial_cti_xml_out\n \n if __name__ == \"__main__\":\n     from euclidwf.utilities import visualizer\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ],
                        [
                            "@@ -46,7 +46,7 @@ def process_cti_to_quad(config, MDB, rawexp_list):\n \n @parallel(\n     iterable=\"ccd_in\",\n-    outputs=(\"cti_parallel_output, cti_serial_output\")\n+    outputs=(\"cti_parallel_output\", \"cti_serial_output\")\n )\n def process_calibrate_cti(\n         config,\n@@ -68,7 +68,7 @@ def process_calibrate_cti_to_ccd(config, ccd_list):\n     return calibrate_cti\n \n \n-@pipeline(outputs=(\"parallel_cti_xml_out, serial_cti_xml_out\"))\n+@pipeline(outputs=(\"parallel_cti_xml_out\", \"serial_cti_xml_out\"))\n def processCTI(\n     vis_config_in,\n     MDB,\n",
                            "Merge branch 'hotfix_23449_ctioutputs' into 'release-13.0'",
                            "Catherine Grenet",
                            "2023-08-12T14:20:36.000+00:00",
                            "05269054de968ce1a0da7e5e30626a40945e8ede"
                        ],
                        [
                            "@@ -46,7 +46,7 @@ def process_cti_to_quad(config, MDB, rawexp_list):\n \n @parallel(\n     iterable=\"ccd_in\",\n-    outputs=(\"cti_parallel_output, cti_serial_output\")\n+    outputs=(\"cti_parallel_output\", \"cti_serial_output\")\n )\n def process_calibrate_cti(\n         config,\n@@ -68,7 +68,7 @@ def process_calibrate_cti_to_ccd(config, ccd_list):\n     return calibrate_cti\n \n \n-@pipeline(outputs=(\"parallel_cti_xml_out, serial_cti_xml_out\"))\n+@pipeline(outputs=(\"parallel_cti_xml_out\", \"serial_cti_xml_out\"))\n def processCTI(\n     vis_config_in,\n     MDB,\n",
                            "PipScript_VIS_CTICalibration.py: fix #23449, correct typo, tests now pass",
                            "Sylvain Mottet",
                            "2023-08-12T16:02:52.000+02:00",
                            "c2705a84138ce2bb07e37de27ca123330c98429a"
                        ],
                        [
                            "@@ -1,7 +1,8 @@\n #\n-# File PipScript_VIS_ProcessField.py\n+# File PipScript_VIS_CTICalibration.py\n #\n-# Created on: Feb 18, 2016\n+# Created on: Feb 2023\n+# Author: James Nightingale\n \n from VIS_ProcessField_Pipeline import PkgDef_VIS_ProcessField as PF_Pkg\n from VIS_CTICalibration_Pipeline import PkgDef_VIS_CTICalibration as PkgDef\n@@ -17,9 +18,11 @@ from euclidwf.framework.taskdefs import (\n from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n \n-@parallel(iterable=\"exposure_in\",\n-           outputs=('processed_quad_list', 'processed_quad_flg_list'),\n-          one_list_per_output=True)\n+@parallel(\n+    iterable=\"exposure_in\",\n+    outputs=('processed_quad_list', 'processed_quad_flg_list'),\n+    one_list_per_output=True\n+)\n def process_quad(config, MDB, exposure_in):\n \n     processed_quad_list, processed_quad_flg_list = PF_Pkg.processQuad(\n@@ -33,48 +36,73 @@ def process_quad(config, MDB, exposure_in):\n \n def process_cti_to_quad(config, MDB, rawexp_list):\n \n-    cti_quads, cti_quads_flg_list = process_quad(config=config, MDB=MDB, exposure_in=rawexp_list)\n+    cti_quads, cti_quads_flg_list = process_quad(\n+        config=config,\n+        MDB=MDB,\n+        exposure_in=rawexp_list\n+    )\n \n     return cti_quads\n \n-@parallel(iterable=\"ccd_in\", outputs=(\"cti_parallel_output, cti_serial_output\"))\n+@parallel(\n+    iterable=\"ccd_in\",\n+    outputs=(\"cti_parallel_output, cti_serial_output\")\n+)\n def process_calibrate_cti(\n         config,\n-        # MDB,\n-        ccd_in):\n+        ccd_in\n+):\n+\n+    cti_parallel_output, cti_serial_output = PkgDef.calibrate_cti(\n+        config=config,\n+        input_ccd=ccd_in\n+    )\n \n-    cti_parallel_output, cti_serial_output = PkgDef.calibrate_cti(config=config,\n-                                      # MDB,\n-                                      input_ccd=ccd_in)\n     return cti_parallel_output, cti_serial_output\n \n \n-def process_calibrate_cti_to_ccd(config, MDB, ccd_list):\n+def process_calibrate_cti_to_ccd(config, ccd_list):\n \n     calibrate_cti = process_calibrate_cti(config=config, ccd_in=ccd_list)\n \n     return calibrate_cti\n \n \n-@pipeline(outputs=(\"dpdcticalibration\", \"dpdanalysis_out\"))\n-def processCTI(   vis_config_in, MDB, raw_frames_in, flagmaps, gains_model, xtalk_model,\n-                  masterbias, masterdark, nlcorr_model, ron_model,\n-                  saturation_model):\n+@pipeline(outputs=(\"parallel_cti_xml_out, serial_cti_xml_out\"))\n+def processCTI(\n+    vis_config_in,\n+    MDB,\n+    raw_frames_in,\n+    flagmaps,\n+    gains_model,\n+    xtalk_model,\n+    masterbias,\n+    masterdark,\n+    nlcorr_model,\n+    ron_model,\n+    saturation_model\n+):\n \n     rawexp_list, quad_list, config = \\\n-    PkgDef.VIS_cti_xml_in(vis_config_in=  vis_config_in,\n-                          MDB=           MDB,\n-                          raw_frames_in= raw_frames_in,\n-                          flagmaps=      flagmaps,\n-                          gains_model=   gains_model,\n-                          xtalk_model=   xtalk_model,\n-                          master_bias=   masterbias,\n-                          master_dark=   masterdark,\n-                          nlcorr_model=  nlcorr_model,\n-                          ron_model=     ron_model,\n-                          saturation_model = saturation_model)\n-\n-    quad_list = process_cti_to_quad(config=config, MDB=MDB, rawexp_list=rawexp_list)\n+    PkgDef.VIS_cti_xml_in(\n+        vis_config_in=vis_config_in,\n+        MDB=MDB,\n+        raw_frames_in=raw_frames_in,\n+        flagmaps=flagmaps,\n+        gains_model=gains_model,\n+        xtalk_model=xtalk_model,\n+        master_bias=masterbias,\n+        master_dark=masterdark,\n+        nlcorr_model=nlcorr_model,\n+        ron_model=ron_model,\n+        saturation_model =saturation_model\n+    )\n+\n+    quad_list = process_cti_to_quad(\n+        config=config,\n+        MDB=MDB,\n+        rawexp_list=rawexp_list\n+    )\n \n     # quad_list is a list of .json files, where each .json file is a list of all 144 quadrant .fits files corresponding\n     # to a single charge injection image. For a typical CTI calibration run it will contain 8 .json files of 8 charge\n@@ -89,15 +117,17 @@ def processCTI(   vis_config_in, MDB, raw_frames_in, flagmaps, gains_model, xtal\n \n     # Using each ccd_list, perform CTI calibration. This occurs in total 36 times, with a unique calibration for each\n     # CCD.\n- #   calibrate_cti_results_list = process_calibrate_cti(config=config, MDB=MDB, ccd_in=ccd_list)\n-    calibrate_cti_results_list = process_calibrate_cti_to_ccd(config=config, MDB=MDB, ccd_list=ccd_list)\n-\n-    dpdcticalibration, dpdanalysis_out = PkgDef.VIS_cti_xml_out(\n-        config=config, calibrate_cti_results_list=calibrate_cti_results_list\n+    calibrate_cti_results_list = process_calibrate_cti_to_ccd(\n+        config=config,\n+        ccd_list=ccd_list\n     )\n \n-    return dpdcticalibration, dpdanalysis_out\n+    parallel_cti_xml_out, serial_cti_xml_out = PkgDef.VIS_cti_xml_out(\n+        config=config,\n+        calibrate_cti_results_list=calibrate_cti_results_list\n+    )\n \n+    return parallel_cti_xml_out, serial_cti_xml_out\n \n if __name__ == \"__main__\":\n     from euclidwf.utilities import visualizer\n",
                            "Merge branch 'cti_xml_out' into 'release-13.0'",
                            "Catherine Grenet",
                            "2023-08-12T13:39:06.000+00:00",
                            "186e271fa9883de8b10db78ab0693ea4d5c6a379"
                        ],
                        [
                            "@@ -18,9 +18,11 @@ from euclidwf.framework.taskdefs import (\n from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n \n-@parallel(iterable=\"exposure_in\",\n-           outputs=('processed_quad_list', 'processed_quad_flg_list'),\n-          one_list_per_output=True)\n+@parallel(\n+    iterable=\"exposure_in\",\n+    outputs=('processed_quad_list', 'processed_quad_flg_list'),\n+    one_list_per_output=True\n+)\n def process_quad(config, MDB, exposure_in):\n \n     processed_quad_list, processed_quad_flg_list = PF_Pkg.processQuad(\n@@ -34,11 +36,18 @@ def process_quad(config, MDB, exposure_in):\n \n def process_cti_to_quad(config, MDB, rawexp_list):\n \n-    cti_quads, cti_quads_flg_list = process_quad(config=config, MDB=MDB, exposure_in=rawexp_list)\n+    cti_quads, cti_quads_flg_list = process_quad(\n+        config=config,\n+        MDB=MDB,\n+        exposure_in=rawexp_list\n+    )\n \n     return cti_quads\n \n-@parallel(iterable=\"ccd_in\", outputs=(\"cti_parallel_output, cti_serial_output\"))\n+@parallel(\n+    iterable=\"ccd_in\",\n+    outputs=(\"cti_parallel_output, cti_serial_output\")\n+)\n def process_calibrate_cti(\n         config,\n         ccd_in\n@@ -60,26 +69,40 @@ def process_calibrate_cti_to_ccd(config, ccd_list):\n \n \n @pipeline(outputs=(\"parallel_cti_xml_out, serial_cti_xml_out\"))\n-def processCTI(   vis_config_in, MDB, raw_frames_in, flagmaps, gains_model, xtalk_model,\n-                  masterbias, masterdark, nlcorr_model, ron_model,\n-                  saturation_model):\n+def processCTI(\n+    vis_config_in,\n+    MDB,\n+    raw_frames_in,\n+    flagmaps,\n+    gains_model,\n+    xtalk_model,\n+    masterbias,\n+    masterdark,\n+    nlcorr_model,\n+    ron_model,\n+    saturation_model\n+):\n \n     rawexp_list, quad_list, config = \\\n     PkgDef.VIS_cti_xml_in(\n-        vis_config_in=  vis_config_in,\n-        MDB=           MDB,\n-        raw_frames_in= raw_frames_in,\n-        flagmaps=      flagmaps,\n-        gains_model=   gains_model,\n-        xtalk_model=   xtalk_model,\n-        master_bias=   masterbias,\n-        master_dark=   masterdark,\n-        nlcorr_model=  nlcorr_model,\n-        ron_model=     ron_model,\n-        saturation_model = saturation_model\n+        vis_config_in=vis_config_in,\n+        MDB=MDB,\n+        raw_frames_in=raw_frames_in,\n+        flagmaps=flagmaps,\n+        gains_model=gains_model,\n+        xtalk_model=xtalk_model,\n+        master_bias=masterbias,\n+        master_dark=masterdark,\n+        nlcorr_model=nlcorr_model,\n+        ron_model=ron_model,\n+        saturation_model =saturation_model\n     )\n \n-    quad_list = process_cti_to_quad(config=config, MDB=MDB, rawexp_list=rawexp_list)\n+    quad_list = process_cti_to_quad(\n+        config=config,\n+        MDB=MDB,\n+        rawexp_list=rawexp_list\n+    )\n \n     # quad_list is a list of .json files, where each .json file is a list of all 144 quadrant .fits files corresponding\n     # to a single charge injection image. For a typical CTI calibration run it will contain 8 .json files of 8 charge\n@@ -94,7 +117,6 @@ def processCTI(   vis_config_in, MDB, raw_frames_in, flagmaps, gains_model, xtal\n \n     # Using each ccd_list, perform CTI calibration. This occurs in total 36 times, with a unique calibration for each\n     # CCD.\n- #   calibrate_cti_results_list = process_calibrate_cti(config=config, MDB=MDB, ccd_in=ccd_list)\n     calibrate_cti_results_list = process_calibrate_cti_to_ccd(\n         config=config,\n         ccd_list=ccd_list\n",
                            "formatting and parameter names",
                            "James Nightingale",
                            "2023-08-10T11:07:50.000+01:00",
                            "6ba0d9f757fecb3a1eef1be2385c1a2ac939cdc2"
                        ],
                        [
                            "@@ -1,7 +1,8 @@\n #\n-# File PipScript_VIS_ProcessField.py\n+# File PipScript_VIS_CTICalibration.py\n #\n-# Created on: Feb 18, 2016\n+# Created on: Feb 2023\n+# Author: James Nightingale\n \n from VIS_ProcessField_Pipeline import PkgDef_VIS_ProcessField as PF_Pkg\n from VIS_CTICalibration_Pipeline import PkgDef_VIS_CTICalibration as PkgDef\n",
                            "fix conflicts",
                            "James Nightingale",
                            "2023-08-10T10:37:45.000+01:00",
                            "77f423cb2068faeffab5fa9074c5e89e156b42d4"
                        ]
                    ],
                    "VIS_IAL_Pipelines/auxdir/VIS_IAL_Pipelines/VIS_MasterBias_Pipeline/PkgDef_VIS_MasterBias.py": [
                        [
                            "@@ -71,7 +71,7 @@ processBiasQuad = Executable(command = f\"E-Run VIS_Tasks {TASKS_VER} VIS_process\n                                         Output(\"output_quadrant_stdev\", mime_type=\"json\", content_type=\"listfile\"),\n                                         Output(\"output_quadrant_count\", mime_type=\"json\", content_type=\"listfile\"),],\n                              resources = ComputingResources(cores = 1,\n-                                                            ram = 6.0,\n+                                                            ram = 9.0,\n                                                             walltime = 3.0))\n \n quad2FPA = Executable(command = f\"E-Run VIS_Tasks {TASKS_VER} VIS_quad_to_fpa\",\n",
                            "Merge branch 'hotfix_23455_masterbiasram' into 'release-13.0'",
                            "Catherine Grenet",
                            "2023-08-14T09:11:48.000+00:00",
                            "0ded2a18694b2eb4406f5661c8743326a316f1d4"
                        ]
                    ],
                    "VIS_IAL_Pipelines/auxdir/VIS_IAL_Pipelines/VIS_ProcessField_Pipeline/PkgDef_VIS_ProcessField.py": [
                        [
                            "@@ -41,7 +41,7 @@ from euclidwf.framework.taskdefs import Executable, Input, Output, ComputingReso\n #mod = importlib.machinery.SourceFileLoader( \"VIS_IAL_PIPELINES_VERSION\", ialversion_path).load_module()\n #TASKS_VER = VIS_IAL_PIPELINES_VERSION.VIS_IAL_PIPELINES_ORIGINAL_VERSION\n \n-TASKS_VER = \"13.0.11\"\n+TASKS_VER = \"13.0.12\"\n \n import os\n PIPE_NAME = \"VIS_\" + os.path.splitext( os.path.basename( __file__))[0].split( \"VIS_\")[1]\n",
                            "[UPD]Set TASKS_VER to 13.0.12",
                            "Catherine Grenet",
                            "2023-08-14T11:09:22.000+02:00",
                            "65a7c9228c83143727270412b527ff9722bae3da"
                        ],
                        [
                            "@@ -41,7 +41,7 @@ from euclidwf.framework.taskdefs import Executable, Input, Output, ComputingReso\n #mod = importlib.machinery.SourceFileLoader( \"VIS_IAL_PIPELINES_VERSION\", ialversion_path).load_module()\n #TASKS_VER = VIS_IAL_PIPELINES_VERSION.VIS_IAL_PIPELINES_ORIGINAL_VERSION\n \n-TASKS_VER = \"13.0.10\"\n+TASKS_VER = \"13.0.11\"\n \n import os\n PIPE_NAME = \"VIS_\" + os.path.splitext( os.path.basename( __file__))[0].split( \"VIS_\")[1]\n",
                            "[UPD]Set TASKS_VER to 13.0.11",
                            "Catherine Grenet",
                            "2023-08-12T10:32:16.000+02:00",
                            "5f37d3c5af51e7be89d64dce372ddf9b063fd7a3"
                        ],
                        [
                            "@@ -41,7 +41,7 @@ from euclidwf.framework.taskdefs import Executable, Input, Output, ComputingReso\n #mod = importlib.machinery.SourceFileLoader( \"VIS_IAL_PIPELINES_VERSION\", ialversion_path).load_module()\n #TASKS_VER = VIS_IAL_PIPELINES_VERSION.VIS_IAL_PIPELINES_ORIGINAL_VERSION\n \n-TASKS_VER = \"13.0.4\"\n+TASKS_VER = \"13.0.10\"\n \n import os\n PIPE_NAME = \"VIS_\" + os.path.splitext( os.path.basename( __file__))[0].split( \"VIS_\")[1]\n",
                            "fix conflicts",
                            "James Nightingale",
                            "2023-08-10T10:37:45.000+01:00",
                            "77f423cb2068faeffab5fa9074c5e89e156b42d4"
                        ],
                        [
                            "@@ -41,7 +41,7 @@ from euclidwf.framework.taskdefs import Executable, Input, Output, ComputingReso\n #mod = importlib.machinery.SourceFileLoader( \"VIS_IAL_PIPELINES_VERSION\", ialversion_path).load_module()\n #TASKS_VER = VIS_IAL_PIPELINES_VERSION.VIS_IAL_PIPELINES_ORIGINAL_VERSION\n \n-TASKS_VER = \"13.0.9\"\n+TASKS_VER = \"13.0.10\"\n \n import os\n PIPE_NAME = \"VIS_\" + os.path.splitext( os.path.basename( __file__))[0].split( \"VIS_\")[1]\n",
                            "[UPD]Set TASKS_VER to 13.0.10",
                            "Catherine Grenet",
                            "2023-08-08T14:57:49.000+02:00",
                            "ccc61aa044e0ce8eba6c1d8a04d5c5491981b329"
                        ]
                    ],
                    "VIS_IAL_Pipelines/auxdir/VIS_IAL_Pipelines/VIS_SmallScaleFlat_Pipeline/PipScript_VIS_SmallScaleFlat.py": [
                        [
                            "@@ -24,7 +24,7 @@ def extrapolate_prnu( vis_config_in, MDB, prnulist_in):\n \n #-------------------------------------------------------------------------------\n \n-@pipeline( outputs=( \"smallscaleflat_out\", \"prnuflagmap_out\"))\n+@pipeline( outputs=( \"smallscaleflat_out\", \"prnuflagmap_out\", \"dqc_out\"))\n def VIS_SmallScaleFlat( vis_config_in, MDB, prnulist_in, flagmaps_in):\n \n   prnulist_perled = \\\n@@ -37,13 +37,13 @@ def VIS_SmallScaleFlat( vis_config_in, MDB, prnulist_in, flagmaps_in):\n                       MDB = MDB,\n                       prnulist_in = prnulist_perled)\n \n-  smallscaleflat_out, prnuflagmap_out = \\\n+  smallscaleflat_out, prnuflagmap_out, dqc_out = \\\n     SSF_Pkg.VIS_CombinePRNU( vis_config_in = vis_config_in,\n-                      MDB = MDB,\n-                      prnulist_in = extrapolated_prnu_list,\n-                      flagmaps_in = flagmaps_in)\n+                             MDB = MDB,\n+                             prnulist_in = extrapolated_prnu_list,\n+                             flagmaps_in = flagmaps_in)\n \n-  return smallscaleflat_out, prnuflagmap_out\n+  return smallscaleflat_out, prnuflagmap_out, dqc_out\n \n \n #-------------------------------------------------------------------------------\n",
                            "Merge branch 'release-13.0' into develop: SmallScaleFlat add DQC ouptut, accepts any combination of LED/fluence",
                            "Catherine Grenet",
                            "2023-08-13T17:26:05.000+02:00",
                            "0fe441ebf05cc4b6cdc67d2165352626892351c9"
                        ]
                    ],
                    "VIS_IAL_Pipelines/auxdir/VIS_IAL_Pipelines/VIS_SmallScaleFlat_Pipeline/PkgDef_VIS_SmallScaleFlat.py": [
                        [
                            "@@ -17,7 +17,7 @@ VIS_SmallScaleFlat_xml_in = \\\n                          Input(  \"prnulist_in\", content_type=\"listfile\")],\n               outputs = [Output( \"prnulists_out\", mime_type=\"json\", content_type=\"listfile\")],\n               resources = ComputingResources( cores = 1,\n-                                              ram = 3.0,\n+                                              ram = 1.0,\n                                               walltime = 1.0))\n \n \n@@ -39,7 +39,8 @@ VIS_CombinePRNU = \\\n                          Input(  \"prnulist_in\", content_type=\"listfile\"),\n                          Input(  \"flagmaps_in\", content_type=\"listfile\")],\n               outputs = [Output( \"smallscaleflat_out\"),\n-                         Output( \"prnuflagmap_out\")],\n+                         Output( \"prnuflagmap_out\"),\n+                         Output( \"dqc_out\")],\n               resources = ComputingResources( cores = 1,\n-                                              ram = 3.0,\n-                                              walltime = 1.0))\n+                                              ram = 1.0,\n+                                              walltime = 2.0))\n",
                            "Merge branch 'release-13.0' into develop: SmallScaleFlat add DQC ouptut, accepts any combination of LED/fluence",
                            "Catherine Grenet",
                            "2023-08-13T17:26:05.000+02:00",
                            "0fe441ebf05cc4b6cdc67d2165352626892351c9"
                        ]
                    ],
                    "CMakeLists.txt": [
                        [
                            "@@ -12,6 +12,6 @@ find_package(ElementsProject)\n #                         elements_project(MyProject 1.0 USE Element 3.9)\n #===============================================================================\n \n-elements_project( VIS_IAL_Pipelines 13.0.11\n+elements_project( VIS_IAL_Pipelines 13.0.12\n                   USE ST_PipelineChecker 1.5.0\n                   DESCRIPTION \"VIS Processing Function pipelines interface description\")\n",
                            "Bump version to 13.0.12",
                            "Catherine Grenet",
                            "2023-08-12T17:42:38.000+02:00",
                            "c8398de63e6f64bf8ecf653eedc153d90bc34b96"
                        ],
                        [
                            "@@ -12,6 +12,6 @@ find_package(ElementsProject)\n #                         elements_project(MyProject 1.0 USE Element 3.9)\n #===============================================================================\n \n-elements_project( VIS_IAL_Pipelines 13.0.6\n+elements_project( VIS_IAL_Pipelines 13.0.11\n                   USE ST_PipelineChecker 1.5.0\n                   DESCRIPTION \"VIS Processing Function pipelines interface description\")\n",
                            "fix conflicts",
                            "James Nightingale",
                            "2023-08-10T10:37:45.000+01:00",
                            "77f423cb2068faeffab5fa9074c5e89e156b42d4"
                        ],
                        [
                            "@@ -12,6 +12,6 @@ find_package(ElementsProject)\n #                         elements_project(MyProject 1.0 USE Element 3.9)\n #===============================================================================\n \n-elements_project( VIS_IAL_Pipelines 13.0.10\n+elements_project( VIS_IAL_Pipelines 13.0.11\n                   USE ST_PipelineChecker 1.5.0\n                   DESCRIPTION \"VIS Processing Function pipelines interface description\")\n",
                            "Bump version to 13.0.11",
                            "Catherine Grenet",
                            "2023-08-08T15:54:11.000+02:00",
                            "8b4d63e31aa21cf25a0062dddd2105360ddb306e"
                        ]
                    ],
                    "VIS_IAL_Pipelines/auxdir/VIS_IAL_Pipelines/VIS_CTIMasterCI_Pipeline/PipScript_VIS_CTIMasterCI.py": [
                        [
                            "@@ -1,7 +1,8 @@\n #\n-# File PipScript_VIS_ProcessField.py\n+# File PipScript_VIS_CTIMasterCI.py\n #\n-# Created on: Feb 18, 2016\n+# Created on: June 2023\n+# Author: James Nightingale\n \n from VIS_ProcessField_Pipeline import PkgDef_VIS_ProcessField as PF_Pkg\n from VIS_CTIMasterCI_Pipeline import PkgDef_VIS_CTIMasterCI as PkgDef\n@@ -17,9 +18,11 @@ from euclidwf.framework.taskdefs import (\n from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n \n-@parallel(iterable=\"exposure_in\",\n-           outputs=('processed_quad_list', 'processed_quad_flg_list'),\n-          one_list_per_output=True)\n+@parallel(\n+    iterable=\"exposure_in\",\n+    outputs=('processed_quad_list', 'processed_quad_flg_list'),\n+    one_list_per_output=True\n+)\n def process_quad(config, MDB, exposure_in):\n \n     processed_quad_list, processed_quad_flg_list = PF_Pkg.processQuad(\n@@ -33,48 +36,69 @@ def process_quad(config, MDB, exposure_in):\n \n def process_cti_to_quad(config, MDB, rawexp_list):\n \n-    cti_quads, cti_quads_flg_list = process_quad(config=config, MDB=MDB, exposure_in=rawexp_list)\n+    cti_quads, cti_quads_flg_list = process_quad(\n+        config=config,\n+        MDB=MDB,\n+        exposure_in=rawexp_list\n+    )\n \n     return cti_quads\n \n \n-@pipeline(outputs=(\"dpdmasterci\", \"dpdanalysis_out\"))\n-def processCTI(   vis_config_in, MDB, raw_frames_in, flagmaps, gains_model, xtalk_model,\n-                  masterbias, masterdark, nlcorr_model, ron_model,\n-                  saturation_model):\n+@pipeline(outputs=(\"master_ci_xml_out\"))\n+def processCTI(\n+    vis_config_in,\n+    MDB,\n+    raw_frames_in,\n+    flagmaps,\n+    gains_model,\n+    xtalk_model,\n+    masterbias,\n+    masterdark,\n+    nlcorr_model,\n+    ron_model,\n+    saturation_model\n+):\n \n     rawexp_list, quad_list, config = \\\n-    PkgDef.VIS_cti_xml_in(vis_config_in=  vis_config_in,\n-                          MDB=           MDB,\n-                          raw_frames_in= raw_frames_in,\n-                          flagmaps=      flagmaps,\n-                          gains_model=   gains_model,\n-                          xtalk_model=   xtalk_model,\n-                          master_bias=   masterbias,\n-                          master_dark=   masterdark,\n-                          nlcorr_model=  nlcorr_model,\n-                          ron_model=     ron_model,\n-                          saturation_model = saturation_model)\n-\n-    quad_list = process_cti_to_quad(config=config, MDB=MDB, rawexp_list=rawexp_list)\n-\n-    # Using each ccd_list, perform CTI calibration. This occurs in total 36 times, with a unique calibration for each\n-    # CCD.\n-    cti_master_ci_list = PkgDef.master_ci_estimate(config=config,\n-                                      # MDB,\n-                                      quad_list_of_lists=quad_list)\n+    PkgDef.VIS_cti_xml_in(\n+        vis_config_in=vis_config_in,\n+        MDB=MDB,\n+        raw_frames_in=raw_frames_in,\n+        flagmaps=flagmaps,\n+        gains_model=gains_model,\n+        xtalk_model=xtalk_model,\n+        master_bias=masterbias,\n+        master_dark=masterdark,\n+        nlcorr_model=nlcorr_model,\n+        ron_model=ron_model,\n+        saturation_model=saturation_model\n+    )\n+\n+    quad_list = process_cti_to_quad(\n+        config=config,\n+        MDB=MDB,\n+        rawexp_list=rawexp_list\n+    )\n+\n+    # Using each ccd_list, perform CTI calibration. This occurs in total 36 times,\n+    # with a unique calibration for each CCD.\n+    cti_master_ci_list = PkgDef.master_ci_estimate(\n+        config=config,\n+        quad_list_of_lists=quad_list\n+    )\n \n     master_ci_data = PkgDef.quad2FPA(\n         infilelist_data=cti_master_ci_list,\n         config=config\n     )\n \n-\n-    dpdmasterci, dpdanalysis_out = PkgDef.VIS_cti_master_ci_xml_out(\n-        config=config, cti_master_ci_list=master_ci_data\n+    master_ci_xml_out = PkgDef.VIS_cti_master_ci_xml_out(\n+        config=config,\n+        cti_master_ci_list=master_ci_data\n     )\n \n-    return dpdmasterci, dpdanalysis_out\n+    return master_ci_xml_out\n \n \n if __name__ == \"__main__\":\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ],
                        [
                            "@@ -18,9 +18,11 @@ from euclidwf.framework.taskdefs import (\n from euclidwf.framework.workflow_dsl import pipeline, parallel\n \n \n-@parallel(iterable=\"exposure_in\",\n-           outputs=('processed_quad_list', 'processed_quad_flg_list'),\n-          one_list_per_output=True)\n+@parallel(\n+    iterable=\"exposure_in\",\n+    outputs=('processed_quad_list', 'processed_quad_flg_list'),\n+    one_list_per_output=True\n+)\n def process_quad(config, MDB, exposure_in):\n \n     processed_quad_list, processed_quad_flg_list = PF_Pkg.processQuad(\n@@ -34,35 +36,53 @@ def process_quad(config, MDB, exposure_in):\n \n def process_cti_to_quad(config, MDB, rawexp_list):\n \n-    cti_quads, cti_quads_flg_list = process_quad(config=config, MDB=MDB, exposure_in=rawexp_list)\n+    cti_quads, cti_quads_flg_list = process_quad(\n+        config=config,\n+        MDB=MDB,\n+        exposure_in=rawexp_list\n+    )\n \n     return cti_quads\n \n \n-@pipeline(outputs=(\"dpdmasterci\"))\n-def processCTI(   vis_config_in, MDB, raw_frames_in, flagmaps, gains_model, xtalk_model,\n-                  masterbias, masterdark, nlcorr_model, ron_model,\n-                  saturation_model):\n+@pipeline(outputs=(\"master_ci_xml_out\"))\n+def processCTI(\n+    vis_config_in,\n+    MDB,\n+    raw_frames_in,\n+    flagmaps,\n+    gains_model,\n+    xtalk_model,\n+    masterbias,\n+    masterdark,\n+    nlcorr_model,\n+    ron_model,\n+    saturation_model\n+):\n \n     rawexp_list, quad_list, config = \\\n     PkgDef.VIS_cti_xml_in(\n-        vis_config_in=  vis_config_in,\n-        MDB=           MDB,\n-        raw_frames_in= raw_frames_in,\n-        flagmaps=      flagmaps,\n-        gains_model=   gains_model,\n-        xtalk_model=   xtalk_model,\n-        master_bias=   masterbias,\n-        master_dark=   masterdark,\n-        nlcorr_model=  nlcorr_model,\n-        ron_model=     ron_model,\n-        saturation_model = saturation_model\n+        vis_config_in=vis_config_in,\n+        MDB=MDB,\n+        raw_frames_in=raw_frames_in,\n+        flagmaps=flagmaps,\n+        gains_model=gains_model,\n+        xtalk_model=xtalk_model,\n+        master_bias=masterbias,\n+        master_dark=masterdark,\n+        nlcorr_model=nlcorr_model,\n+        ron_model=ron_model,\n+        saturation_model=saturation_model\n     )\n \n-    quad_list = process_cti_to_quad(config=config, MDB=MDB, rawexp_list=rawexp_list)\n+    quad_list = process_cti_to_quad(\n+        config=config,\n+        MDB=MDB,\n+        rawexp_list=rawexp_list\n+    )\n \n-    # Using each ccd_list, perform CTI calibration. This occurs in total 36 times, with a unique calibration for each\n-    # CCD.\n+    # Using each ccd_list, perform CTI calibration. This occurs in total 36 times,\n+    # with a unique calibration for each CCD.\n     cti_master_ci_list = PkgDef.master_ci_estimate(\n         config=config,\n         quad_list_of_lists=quad_list\n@@ -73,12 +93,12 @@ def processCTI(   vis_config_in, MDB, raw_frames_in, flagmaps, gains_model, xtal\n         config=config\n     )\n \n-    dpdmasterci = PkgDef.VIS_cti_master_ci_xml_out(\n+    master_ci_xml_out = PkgDef.VIS_cti_master_ci_xml_out(\n         config=config,\n         cti_master_ci_list=master_ci_data\n     )\n \n-    return dpdmasterci\n+    return master_ci_xml_out\n \n \n if __name__ == \"__main__\":\n",
                            "formatting and parameter names",
                            "James Nightingale",
                            "2023-08-10T11:07:50.000+01:00",
                            "6ba0d9f757fecb3a1eef1be2385c1a2ac939cdc2"
                        ],
                        [
                            "@@ -1,7 +1,8 @@\n #\n-# File PipScript_VIS_ProcessField.py\n+# File PipScript_VIS_CTIMasterCI.py\n #\n-# Created on: Feb 18, 2016\n+# Created on: June 2023\n+# Author: James Nightingale\n \n from VIS_ProcessField_Pipeline import PkgDef_VIS_ProcessField as PF_Pkg\n from VIS_CTIMasterCI_Pipeline import PkgDef_VIS_CTIMasterCI as PkgDef\n",
                            "fix conflicts",
                            "James Nightingale",
                            "2023-08-10T10:37:45.000+01:00",
                            "77f423cb2068faeffab5fa9074c5e89e156b42d4"
                        ]
                    ],
                    "VIS_IAL_Pipelines/auxdir/VIS_IAL_Pipelines/VIS_CTIMasterCI_Pipeline/PkgDef_VIS_CTIMasterCI.py": [
                        [
                            "@@ -1,30 +1,10 @@\n #\n-# File PkgDef_VIS_ProcessField.py\n+# File PkgDef_VIS_CTIMasterCI.py\n #\n-# Created on: Jan 09, 2016\n-# Author: Catherine Grenet\n+# Created on: June 2023\n+# Author: James Nightingale\n #\n # VIS package definition for IAL workflow manager\n-#\n-# History\n-# Nov 07, 2017 (LP & OH): processExp task is now splitted in 3 differents tasks to be able to run the astrometry over 4 dithers at the same time:\n-#     processExtractExp, processAstroField and processPhotoExp are now declared in package definition\n-# Oct 19, 2017 (OH): migration from pickle list to json file. Adjust tasks parameters name accordingly\n-# Sep 06, 2017 (CG): \"ram\" now specifies maxrss instead of maxvmem\n-# Aug 24, 2017 (CG):\n-#     VIS_science_xml_out: specify mime_type=\"json\" for outfile (bug #5563)\n-# Nov 26, 2016 (CG):\n-#     processExp: cores = 1 not to use the multicore queues at CC\n-#                 walltime = 24 h to cope the 2nd SExtractor run\n-#     stacking  : walltime = 8 h\n-# Apr 07, 2016 (CG):\n-#     ComputingResources: ram = 4.0 for all jobs\n-# Apr 03, 2016 (CG):\n-#     Non linearity model is not a processQuad input any more\n-# Mar 18, 2016 (CG):\n-#    added processFlatQuad executable\n-# Mar 16, 2016 (CG):\n-#    added explist2quadlist, processQuad and ghosts2stack executables\n \n from euclidwf.framework.taskdefs import (\n     Executable,\n@@ -66,18 +46,18 @@ master_ci_estimate = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_CTI_Master_CI\",\n     inputs=[\n          Input('config'),\n-#        Input(\"MDB\"),\n-        Input(\"quad_list_of_lists\")],\n+        Input(\"quad_list_of_lists\")\n+    ],\n     outputs=[Output(\"cti_master_ci\", mime_type=\"json\")],\n-    resources=ComputingResources(cores=1, ram=16.0, walltime=4.0),\n+    resources=ComputingResources(cores=1, ram=256.0, walltime=4.0),\n )\n \n-quad2FPA = Executable(command = f\"E-Run VIS_Tasks {TASKS_VER} VIS_quad_to_fpa\",\n-                      inputs = [Input(\"infilelist_data\"), \"config\"],\n-                      outputs = [Output(\"master_data\", mime_type=\"json\")],\n-                      resources = ComputingResources(cores = 1,\n-                                                     ram = 3.0,\n-                                                     walltime = 1.0))\n+quad2FPA = Executable(\n+    command = f\"E-Run VIS_Tasks {TASKS_VER} VIS_quad_to_fpa\",\n+    inputs = [Input(\"infilelist_data\"), \"config\"],\n+    outputs = [Output(\"master_data\", mime_type=\"json\")],\n+    resources = ComputingResources(cores = 1, ram = 3.0, walltime = 1.0)\n+)\n \n \n \n@@ -85,8 +65,7 @@ VIS_cti_master_ci_xml_out = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_cti_master_ci_xml_out\",\n     inputs=[\"config\", \"cti_master_ci_list\"],\n     outputs=[\n-        Output(\"dpdmasterci\", mime_type=\"json\", content_type=\"listfile\"),\n-        Output(\"dpdanalysis_out\", mime_type=\"json\", content_type=\"listfile\"),\n+        Output(\"master_ci_xml_out\"),\n     ],\n     resources=ComputingResources(cores=1, ram=7.0, walltime=3.0),\n )\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ],
                        [
                            "@@ -1,30 +1,10 @@\n #\n-# File PkgDef_VIS_ProcessField.py\n+# File PkgDef_VIS_CTIMasterCI.py\n #\n-# Created on: Jan 09, 2016\n-# Author: Catherine Grenet\n+# Created on: June 2023\n+# Author: James Nightingale\n #\n # VIS package definition for IAL workflow manager\n-#\n-# History\n-# Nov 07, 2017 (LP & OH): processExp task is now splitted in 3 differents tasks to be able to run the astrometry over 4 dithers at the same time:\n-#     processExtractExp, processAstroField and processPhotoExp are now declared in package definition\n-# Oct 19, 2017 (OH): migration from pickle list to json file. Adjust tasks parameters name accordingly\n-# Sep 06, 2017 (CG): \"ram\" now specifies maxrss instead of maxvmem\n-# Aug 24, 2017 (CG):\n-#     VIS_science_xml_out: specify mime_type=\"json\" for outfile (bug #5563)\n-# Nov 26, 2016 (CG):\n-#     processExp: cores = 1 not to use the multicore queues at CC\n-#                 walltime = 24 h to cope the 2nd SExtractor run\n-#     stacking  : walltime = 8 h\n-# Apr 07, 2016 (CG):\n-#     ComputingResources: ram = 4.0 for all jobs\n-# Apr 03, 2016 (CG):\n-#     Non linearity model is not a processQuad input any more\n-# Mar 18, 2016 (CG):\n-#    added processFlatQuad executable\n-# Mar 16, 2016 (CG):\n-#    added explist2quadlist, processQuad and ghosts2stack executables\n \n from euclidwf.framework.taskdefs import (\n     Executable,\n@@ -66,18 +46,18 @@ master_ci_estimate = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_CTI_Master_CI\",\n     inputs=[\n          Input('config'),\n-#        Input(\"MDB\"),\n-        Input(\"quad_list_of_lists\")],\n+        Input(\"quad_list_of_lists\")\n+    ],\n     outputs=[Output(\"cti_master_ci\", mime_type=\"json\")],\n     resources=ComputingResources(cores=1, ram=256.0, walltime=4.0),\n )\n \n-quad2FPA = Executable(command = f\"E-Run VIS_Tasks {TASKS_VER} VIS_quad_to_fpa\",\n-                      inputs = [Input(\"infilelist_data\"), \"config\"],\n-                      outputs = [Output(\"master_data\", mime_type=\"json\")],\n-                      resources = ComputingResources(cores = 1,\n-                                                     ram = 3.0,\n-                                                     walltime = 1.0))\n+quad2FPA = Executable(\n+    command = f\"E-Run VIS_Tasks {TASKS_VER} VIS_quad_to_fpa\",\n+    inputs = [Input(\"infilelist_data\"), \"config\"],\n+    outputs = [Output(\"master_data\", mime_type=\"json\")],\n+    resources = ComputingResources(cores = 1, ram = 3.0, walltime = 1.0)\n+)\n \n \n \n@@ -85,8 +65,7 @@ VIS_cti_master_ci_xml_out = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_cti_master_ci_xml_out\",\n     inputs=[\"config\", \"cti_master_ci_list\"],\n     outputs=[\n-        Output(\"dpdmasterci\", mime_type=\"json\", content_type=\"listfile\"),\n-        Output(\"dpdanalysis_out\", mime_type=\"json\", content_type=\"listfile\"),\n+        Output(\"master_ci_xml_out\"),\n     ],\n     resources=ComputingResources(cores=1, ram=7.0, walltime=3.0),\n )\n",
                            "Merge branch 'cti_xml_out' into 'release-13.0'",
                            "Catherine Grenet",
                            "2023-08-12T13:39:06.000+00:00",
                            "186e271fa9883de8b10db78ab0693ea4d5c6a379"
                        ],
                        [
                            "@@ -65,7 +65,7 @@ VIS_cti_master_ci_xml_out = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_cti_master_ci_xml_out\",\n     inputs=[\"config\", \"cti_master_ci_list\"],\n     outputs=[\n-        Output(\"dpdmasterci\"),\n+        Output(\"master_ci_xml_out\"),\n     ],\n     resources=ComputingResources(cores=1, ram=7.0, walltime=3.0),\n )\n",
                            "formatting and parameter names",
                            "James Nightingale",
                            "2023-08-10T11:07:50.000+01:00",
                            "6ba0d9f757fecb3a1eef1be2385c1a2ac939cdc2"
                        ],
                        [
                            "@@ -17,8 +17,6 @@ from euclidwf.framework.taskdefs import (\n from VIS_ProcessField_Pipeline.PkgDef_VIS_ProcessField import TASKS_VER\n import os\n \n-TASKS_VER = \"13.0.11\"\n-\n PIPE_NAME = \"VIS_\" + os.path.splitext( os.path.basename( __file__))[0].split( \"VIS_\")[1]\n \n VIS_cti_xml_in = Executable(\n",
                            "merge time",
                            "James Nightingale",
                            "2023-08-10T10:57:03.000+01:00",
                            "c67653384be3dc4a0cf8048f7879a9f9edab81d6"
                        ],
                        [
                            "@@ -17,7 +17,7 @@ from euclidwf.framework.taskdefs import (\n from VIS_ProcessField_Pipeline.PkgDef_VIS_ProcessField import TASKS_VER\n import os\n \n-TASKS_VER = \"13.0.3\"\n+TASKS_VER = \"13.0.11\"\n \n PIPE_NAME = \"VIS_\" + os.path.splitext( os.path.basename( __file__))[0].split( \"VIS_\")[1]\n \n",
                            "manual tasks override",
                            "James Nightingale",
                            "2023-08-10T10:38:34.000+01:00",
                            "d069cbf5ee31280ddc765bff3a23fbd5c75d9b67"
                        ],
                        [
                            "@@ -1,30 +1,10 @@\n #\n-# File PkgDef_VIS_ProcessField.py\n+# File PkgDef_VIS_CTIMasterCI.py\n #\n-# Created on: Jan 09, 2016\n-# Author: Catherine Grenet\n+# Created on: June 2023\n+# Author: James Nightingale\n #\n # VIS package definition for IAL workflow manager\n-#\n-# History\n-# Nov 07, 2017 (LP & OH): processExp task is now splitted in 3 differents tasks to be able to run the astrometry over 4 dithers at the same time:\n-#     processExtractExp, processAstroField and processPhotoExp are now declared in package definition\n-# Oct 19, 2017 (OH): migration from pickle list to json file. Adjust tasks parameters name accordingly\n-# Sep 06, 2017 (CG): \"ram\" now specifies maxrss instead of maxvmem\n-# Aug 24, 2017 (CG):\n-#     VIS_science_xml_out: specify mime_type=\"json\" for outfile (bug #5563)\n-# Nov 26, 2016 (CG):\n-#     processExp: cores = 1 not to use the multicore queues at CC\n-#                 walltime = 24 h to cope the 2nd SExtractor run\n-#     stacking  : walltime = 8 h\n-# Apr 07, 2016 (CG):\n-#     ComputingResources: ram = 4.0 for all jobs\n-# Apr 03, 2016 (CG):\n-#     Non linearity model is not a processQuad input any more\n-# Mar 18, 2016 (CG):\n-#    added processFlatQuad executable\n-# Mar 16, 2016 (CG):\n-#    added explist2quadlist, processQuad and ghosts2stack executables\n \n from euclidwf.framework.taskdefs import (\n     Executable,\n@@ -71,7 +51,7 @@ master_ci_estimate = Executable(\n         Input(\"quad_list_of_lists\")\n     ],\n     outputs=[Output(\"cti_master_ci\", mime_type=\"json\")],\n-    resources=ComputingResources(cores=1, ram=128.0, walltime=4.0),\n+    resources=ComputingResources(cores=1, ram=256.0, walltime=4.0),\n )\n \n quad2FPA = Executable(\n",
                            "fix conflicts",
                            "James Nightingale",
                            "2023-08-10T10:37:45.000+01:00",
                            "77f423cb2068faeffab5fa9074c5e89e156b42d4"
                        ]
                    ],
                    "VIS_IAL_Pipelines/auxdir/VIS_IAL_Pipelines/VIS_CTITimeEvolution_Pipeline/PkgDef_VIS_CTITimeEvolution.py": [
                        [
                            "@@ -17,7 +17,6 @@ from VIS_ProcessField_Pipeline.PkgDef_VIS_ProcessField import TASKS_VER\n VIS_xml_in = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_cti_time_evolution_xml_in\",\n     inputs=[\n-        Input(\"auxdatafiles\"),\n         Input(\"MDB\"),\n         Input(\"cti_results_in\", content_type=\"listfile\"),\n      ],\n@@ -34,7 +33,7 @@ fit_cti_time_evolution = Executable(command   = f\"E-Run VIS_Tasks {TASKS_VER} VI\n                                       Input(\"cti_results_x1_ccd\")],\n                          outputs   = [Output(\"time_evolution_json\", mime_type=\"json\")],\n                          resources = ComputingResources(cores = 1,\n-                                                        ram = 4.0,\n+                                                        ram = 32.0,\n                                                         walltime = 6.0))\n \n VIS_cti_xml_out = Executable(\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/chap01.md": [
                        [
                            "",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/chap02.md": [
                        [
                            "",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/chap03.md": [
                        [
                            "",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/chap07_BrighterFatterCalibration.md": [
                        [
                            "@@ -0,0 +1,83 @@\n+\\newpage\n+\n+# Pipeline `VIS_BrighterFatterCalibration_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_BrighterFatterCalibration**: Production of brighter-fatter model from a list of raw flat fields and associated oject masks.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+* `VIS_CTI`\n+* `VIS_Instrument_Tools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_BrighterFatterCalibration`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_BrighterFatterCalibration)\n+    DpdVisRawFrame ==>|raw_frames_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisGainModel -->|gains_model<br>1..1| pipeline\n+    DpdVisRONModel -->|ron_model<br>1..1| pipeline\n+    DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n+    DpdVisMasterBiasFrame -.->|masterbias<br>0..1| pipeline\n+    DpdVisFlagMap -.->|flagmaps<br>0..*| pipeline\n+    DpdVisXTalkModel -.->|xtalk_model<br>0..1| pipeline\n+    DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n+    DpdVisCTIModel -.->|cti_model<br>0..1| pipeline\n+    DpdVisFlagMap -.->|object_masks<br>0..1| pipeline\n+    pipeline -->|bfecalib_xml_out<br>1..*| DpdVisBFEModel\n+```\n+\n+**Ports description:**\n+\n+* `DpdVisRawFrame`: raw flat field frames\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `DpdVisGainModel`: gain model from `VIS_GainCalibration` pipeline\n+* `ron_model`: readout noise model\n+* `saturation_model`: saturation model\n+* `masterbias`: master bias frame from `VIS_MasterBias` pipeline\n+* `flagmaps`: map of defects in darkness from `VIS_MasterDark` pipeline, map of defects in photoresponse from `VIS_MasterFlat` pipeline\n+* `xtalk_model`: crosstalk model\n+* `nlcorr_model`: non-linearity correction model\n+* `cti_model`: CTI model\n+* `object_masks`: object masks from `VIS_FlagObjects` pipeline\n+\n+\n+\n+## Processing triggering assumptions\n+\n+During PV phase the pipeline will be triggered on variant BF-40000ADU of calblock PV-022, selecting LED3 flats only (CalibUnit.LedMask=4).\n+\n+Input ports xtalk_model, nlcorr_model, cti_model shall be left empty.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+Hardware requirement for the pipeline depend on the number of input raw flat frames.\n+\n+A typical run on 10 raw flat frames requires:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| 10    | 5        | 7            | 160             |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n+\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/chap10_CTITimeEvolution.md": [
                        [
                            "@@ -0,0 +1,62 @@\n+\\newpage\n+\n+# Pipeline `VIS_CTITimeEvolution_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_CTITimeEvolution**: Production of a cti model as a function of time since launch, from a list of cti calibration results from the CTI calibration pipeline.\n+\n+The VIS science pipeline will input the time-stamp of science imaging into this interpolation model, in order to deterine the CTI model used for correction.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_CTI`\n+* `SHE_ArCTIC`\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_CTITimeEvolution`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisCTICalibrationResults -->|cti_results_in<br>1..1| pipeline\n+    pipeline -->|dpdcticalibration<br>1..1| DpdVisCTITimeEvolutionModel\n+    pipeline -->|dpdanalysis_out<br>1..1| DpdVisAnalysisResults\n+```\n+\n+**Ports description:**\n+\n+* `MDB`: Mission DataBase\n+* `cti_results_in`: list of previous CTI calibration pipeline results.\n+* `dpdctitimeevolution`: CTI time evolution model.\n+* `dpdanalysis`: quality assessment parameters\n+\n+## Processing triggering assumptions\n+\n+The pipeline will not be triggered from mission start, and will be switched on when CTI calibration results\n+indicate a need for CTI correction in science data.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+A typical run requires:\n+\n+| Cores | RSS (GB)       | Walltime (h) | Disk space (GB)                            |\n+|-------|----------------|--------------|--------------------------------------------|\n+| 36    | 1152 (36 * 32) | 6            | 1+ (Increases as more CTI results created) | # Estimate from workdir\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing\n+order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/chap11_DiffractionSpikesFocus.md": [
                        [
                            "@@ -0,0 +1,63 @@\n+\\newpage\n+\n+# Pipeline `VIS_DiffractionSpikesFocus_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_DiffractionSpikesFocus**: The aim of the algorithm is to measure (primarily) focus variations by detecting diffraction spikes around bright stars (including saturated stars) and measuring the lateral shifts of the spikes, following [EUCL-OXF-TN-8-\n+012](https://euclid.roe.ac.uk/dmsf/files/17822/view) although with a different measurement method from what was proposed in that Tech Note.\n+\n+Diffraction spike detection is carried out on each individual science exposure, by first generating an expected spike pattern using the PSF toolkit, for various values of telescope focus, then using a Fourier filtering method to cross-correlate the predicted spike patterns with the data. The best-fitting spike pattern is used to output an estimated focus value for each star.\n+\n+A focus estimate for the entire exposure is obtained from a weighted average over all detected star patterns with outlier rejection.\n+\n+The core algorithm was written by OU-SHE Lance Miller.\n+\n+The related GitLab projects are [RD6]:\n+\n+* `VIS_DiffractionSpikesFocus`\n+* `SHE_PSFToolkit`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of Pipeline `VIS_DiffractionSpikesFocus`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_DiffractionSpikesFocus)\n+    DpdVisCalibratedFrame ==>|cal_frames_in<br>1..*| pipeline\n+    DpdVisFileContainer -->|nominal_focus<br>1..1| pipeline\n+    pipeline -->|focus_list_out<br>1..*| DpdVisFileContainer&nbsp;\n+```\n+\n+**Ports description:**\n+\n+* `cal_frames_in`: input list of VIS processed science exposures\n+* `nominal_focus`: initial central focus value. It's a floating point number in micrometre stored in a genereic 'nominal_focus' key parameter\n+* `focus_list_out`: list of focus analysis results per exposure\n+\n+## Processing triggering assumptions\n+\n+The pipeline may be triggered anytime a telescope focus value measurement is needed, from any VIS processed science exposure.\n+\n+It is not currently planned to be triggered automatically. It will first be run manually until a focus monitoring automatisation scheme is devised.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+Hardware requirement for the pipeline depend on the number of input science exposures ([#21328#note-52](https://euclid.roe.ac.uk/issues/21328#note-52)).\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space |\n+| ----- | -------- | ------------ | ---------- |\n+|     8 |       24 | 0.25/exp     | 100KB/exp  |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/chap12_FlagObjects.md": [
                        [
                            "@@ -0,0 +1,100 @@\n+\\newpage\n+\n+# Pipeline `VIS_FlagObjects_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_FlagObjects**: Production of masks of celestial objects in science exposures.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+* `VIS_CTI`\n+* `VIS_Instrument_Tools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_FlagObjects`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_FlagObjects)\n+    DpdVisRawFrame ==>|raw_frames_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisGainModel -->|gains_model<br>1..1| pipeline\n+    DpdVisRONModel -->|ron_model<br>1..1| pipeline\n+    DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n+    DpdVisMasterBiasFrame -.->|masterbias<br>0..1| pipeline\n+    DpdVisFlagMap -.->|flagmaps<br>0..*| pipeline\n+    DpdVisXTalkModel -.->|xtalk_model<br>0..1| pipeline\n+    DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n+    DpdVisCTIModel -.->|cti_model<br>0..1| pipeline\n+    DpdVisZeroPoint -->|zero_point<br>1..1| pipeline\n+    DpdVisMasterDarkFrame -.->|masterdark<br>0..1| pipeline\n+    DpdVisMasterFlatFrame -.->|masterflat<br>0..1| pipeline\n+    DpdVisPSFModel -->|psf_model<br>1..1| pipeline\n+    DpdVisDistortionModel -.->|dist_model<br>0..1| pipeline\n+    DpdVisLargeFlatFrame -.->|lsf_model<br>0..1| pipeline\n+    DpdVisGhostModel -.->|ghost_model<br>0..1| pipeline\n+    DpdVisStarMask -.->|starmask_model<br>0..1| pipeline\n+    DpdVisBFEModel -.->|bfe_model<br>0..1| pipeline\n+    DpdTrueUniverseOutput -.->|ref_catalogues<br>0..*| pipeline\n+    pipeline -->|objects_flagmap_xml_out<br>1..*| DpdVisFlagMap\n+```\n+\n+**Ports description:**\n+\n+* `raw_frames_in`: raw science exposures\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `gains_model`: gain model\n+* `ron_model`: readout noise model\n+* `saturation_model`: saturation model\n+* `masterbias`: master bias frame from `VIS_MasterBias` pipeline\n+* `flagmaps`: map of defects in darkness from `VIS_MasterDark` pipeline, map of defects in photoresponse from `VIS_MasterFlat` pipeline\n+* `xtalk_model`: empty\n+* `nlcorr_model`: empty\n+* `cti_model`: empty\n+* `zero_point`: on-ground zero point (not used by the pipeline)\n+* `masterdark`: master dark, not to be used as long as dark is not measurable\n+* `masterflat`: master flat frame, not to be used\n+* `psf_model`: PSF model from `VIS_PSFCalibration` pipeline, otherwise any DpdVisPSFModel (not used by the pipeline)\n+* `dist_model`: empty\n+* `lsf_model`: empty\n+* `ghost_model`: empty\n+* `starmask_model`: empty\n+* `bfe_model`: empty\n+* `ref_catalogues`: empty\n+* `objects_flagmap_xml_out`: list of object masks, one for each input exposure\n+\n+## Processing triggering assumptions\n+\n+The pipeline will be triggered on science exposures taken at the same pointing than flat field exposures. It will produce a mask of celestial objects for each pointing. These masks will be used by the `VIS_MasterFlat` pipeline to exclude pixels affected by sky objects from its processing.\n+\n+The way exposures are grouped in different instances of the pipeline does not matter, provided that the masks corresponding to a given input set of flat fields are available when `VIS_MasterFlat` pipeline is triggered.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+Hardware requirement for the pipeline depends on the number of input raw science exposure.\n+\n+A typical run requires:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| TBW   | TBW      | TBW          | TBW             |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n+\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/chap13_GainCalibration.md": [
                        [
                            "@@ -0,0 +1,85 @@\n+\\newpage\n+\n+# Pipeline `VIS_GainCalibration_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_GainCalibration**: Production of gain model for each quadrant from a list of raw flat fields\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+* `VIS_CTI`\n+* `VIS_Instrument_Tools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_GainCalibration`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_GainCalibration)\n+    DpdVisRawFrame ==>|raw_frames_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisGainModel -->|gains_model<br>1..1| pipeline\n+    DpdVisRONModel -->|ron_model<br>1..1| pipeline\n+    DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n+    DpdVisMasterBiasFrame -.->|masterbias<br>0..1| pipeline\n+    DpdVisFlagMap -.->|flagmaps<br>0..*| pipeline\n+    DpdVisXTalkModel -.->|xtalk_model<br>0..1| pipeline\n+    DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n+    DpdVisCTIModel -.->|cti_model<br>0..1| pipeline\n+    DpdVisMasterDarkFrame -.->|masterdark<br>0..1| pipeline\n+    DpdVisBFEModel -.->|bfe_model<br>0..1| pipeline\n+    DpdVisFlagMap -.-> |object_masks<br>0..*| pipeline\n+    pipeline -->|gain_model_xml_out<br>1..*| DpdVisGainModel\n+```\n+\n+**Ports description:**\n+\n+* `DpdVisRawFrame`: raw flat field frames\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `gains_model`: reference gain model (most recent valid gain model or on-ground model)\n+* `ron_model`: readout noise model\n+* `saturation_model`: saturation model\n+* `masterbias`: master bias frame from `VIS_MasterBias` pipeline\n+* `flagmaps`: map of defect in darkness from `VIS_MasterDark` pipeline, map of defects in photoresponse from `VIS_MasterFlat` pipeline\n+* `xtalk_model`: crosstalk model\n+* `nlcorr_model`: non-linearity correction model\n+* `cti_model`: CTI model\n+* `masterdark`: master dark, not to be used as long as dark is not measurable\n+* `bfe_model`: brighter-fatter model\n+* `object_masks`: objects masks from VIS_FlagObjects_Pipeline\n+\n+## Processing triggering assumptions\n+\n+During PV phase the pipeline will be triggered on variant LOW1-1000ADU of calblock PV-022, selecting LED3 flats only (CalibUnit.LedMask=4).\n+\n+Input ports xtalk_model, nlcorr_model, cti_model and bfe_model shall be left empty.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+Hardware requirement for the pipeline depend on the number of input raw flat frames.\n+\n+A typical run on 10 raw flat frames requires:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| TBW   | TBW      | TBW          | TBW             |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n+\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/chap14_GhostsCalibration.md": [
                        [
                            "@@ -0,0 +1,62 @@\n+\\newpage\n+\n+# Pipeline `VIS_GhostsCalibration_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_GhostsCalibration**: Production of a ghost model from a list of ghosts catalogs\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+* `VIS_CTI`\n+* `VIS_Instrument_Tools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_GhostsCalibration`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_GhostsCalibration)\n+    DpdVisFileContainer ==>|ghost_cat_list<br>1..*| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisGhostModel -->|ref_ghost_model_in<br>1..1| pipeline\n+    pipeline -->|ghost_model_xml_out<br>1..*| DpdVisGhostModel \n+```\n+\n+**Ports description:**\n+\n+* `ghost_cat_list`: list of ghosts catalogs, DpdVisFileContainer with VisProduct=ghost_catalogue\n+* `MDB`: Mission DataBase\n+* `ref_ghost_model_in`: reference ghost model (most recent valid model or on-ground model)\n+* `ghost_model_xml_out`: output ghost model\n+\n+## Processing triggering assumptions\n+\n+During PV phase the pipeline will be trigerred on the ghosts catalogs produced by the second run of `VIS_ProcessField` pipeline on calblock PV-001, after large flat correction. The two set of catalogs produced by `VIS_ProcessField`, from nominal and short exposures, will be used.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+A typical run on 120 ghosts catalogs requires:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| 1     | TBW      | 0.2          | 0.003           |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n+\n+\n+\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/chap15_LargeFlatCalibration.md": [
                        [
                            "@@ -0,0 +1,60 @@\n+\\newpage\n+\n+# Pipeline `VIS_LargeFlatCalibration_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_LargeFlatCalibration**: Production of a large flat from a list of raw science exposures.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+* `VIS_CTI`\n+* `VIS_Instrument_Tools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_LargeFlatCalibration`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_LargeFlatCalibration)\n+    DpdVisCalibratedFrameCatalog ==>|catalogues_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    pipeline -->|largeflatcal_output<br>1..1| DpdVisLargeFlatFrame\n+```\n+\n+**Ports description:**\n+\n+* `catalogues_in`: VIS single exposure catalogs\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `largeflatcal_output`: large flat\n+\n+## Processing triggering assumptions\n+\n+This pipeline will be executed during the processing of calblock PV-001. It will be triggered on the DpdVisCalibratedFrameCatalogs produced by a first ProcessField pipeline executed on PV-001 raw exposures (see description of PV-001 processing in chapter 4). Two instances of the pipeline will be run, one for the short exposures and one for the nominal exposures.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+A typical run on 60 raw bias frames requires:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| TBW   | TBW      | 0.5          | 10              |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n+\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/chap16_MasterBias.md": [
                        [
                            "@@ -0,0 +1,74 @@\n+\\newpage\n+\n+# Pipeline `VIS_MasterBias`\n+\n+## Pipeline Description\n+\n+**VIS_MasterBias**: Production of a master bias from a list of raw bias frames.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+* `VIS_CTI`\n+* `VIS_Instrument_Tools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_MasterBias`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_MasterBias)\n+    DpdVisRawFrame ==>|raw_frames_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisGainModel -->|gains_model<br>1..1| pipeline\n+    DpdVisRONModel -->|ron_model<br>1..1| pipeline\n+    DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n+    DpdVisFlagMap -.->|flagmaps<br>0..*| pipeline\n+    DpdVisXTalkModel -.->|xtalk_model<br>0..1| pipeline\n+    DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n+    DpdVisCTIModel -.->|cti_model<br>0..1| pipeline\n+    pipeline -->|dpdcalib_data<br>1..1| DpdVisMasterBiasFrame\n+    pipeline -->|dpdanalysis<br>1..1| DpdVisAnalysisResults\n+```\n+\n+**Ports description:**\n+\n+* `raw_frames_in`: list of raw bias frames, ImgType.FirstType=BIAS\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `gains_model`: gain model\n+* `ron_model`: readout noise model\n+* `dpdcalib_data`: master bias\n+* `dpdanalysis`: quality assessment parameters\n+\n+Input ports not described above are currently unused.\n+\n+## Processing triggering assumptions\n+\n+The pipeline needs 60 or more raw bias frames.\n+\n+During PV it will be triggered on reception of calblock PV-021.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+A typical run on 60 raw bias frames requires:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| 60    | TBW      | 2            | 300             |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/chap17_MasterDark.md": [
                        [
                            "@@ -0,0 +1,78 @@\n+\\newpage\n+\n+# Pipeline `VIS_MasterDark_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_MasterDark**: Production of a master dark from a list of raw dark frames.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+* `VIS_CTI`\n+* `VIS_Instrument_Tools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_MasterDark`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_MasterDark)\n+    DpdVisRawFrame ==>|raw_frames_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisGainModel -->|gains_model<br>1..1| pipeline\n+    DpdVisRONModel -->|ron_model<br>1..1| pipeline\n+    DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n+    DpdVisMasterBiasFrame -.->|masterbias<br>0..1| pipeline\n+    DpdVisFlagMap -.->|flagmaps<br>0..*| pipeline\n+    DpdVisXTalkModel -.->|xtalk_model<br>0..1| pipeline\n+    DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n+    DpdVisCTIModel -.->|cti_model<br>0..1| pipeline\n+    pipeline -->|dpdcalib_data<br>1..1| DpdVisMasterDarkFrame\n+    pipeline -->|dpdcalib_flag<br>1..1| DpdVisFlagMap\n+    pipeline -->|dpdanalysis<br>1..1| DpdVisAnalysisResults\n+```\n+\n+**Ports description:**\n+\n+* `raw_frames_in`: list of raw bias frames, ImgType.FirstType=DARK\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `gains_model`: gain model\n+* `ron_model`: readout noise model\n+* `masterbias`: master bias frame from `VIS_MasterBias` pipeline\n+* `dpdcalib_data`: master dark\n+* `dpdcalib_flag`: map of defects in darkness\n+* `dpdanalysis`: quality assessment parameters\n+\n+Input ports not described above are currently unused.\n+\n+## Processing triggering assumptions\n+\n+The pipeline needs 30 or more raw dark frames. Although it can support dark frames of different durations, it will be triggered with dark frames of same duration (ExposureTime) only.\n+\n+During PV it will be triggered on reception of calblock PV-021.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+A typical run on 30 raw dark frames requires:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| 30    | TBW      | 1.5          | 520             |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/chap18_MasterFlat.md": [
                        [
                            "@@ -0,0 +1,93 @@\n+\\newpage\n+\n+# Pipeline `VIS_MasterFlat_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_MasterFlat**: Production of a master flat from a list of raw flat frames.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+* `VIS_CTI`\n+* `VIS_Instrument_Tools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_MasterFlat`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_MasterFlat)\n+    DpdVisRawFrame ==>|raw_frames_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisGainModel -->|gains_model<br>1..1| pipeline\n+    DpdVisRONModel -->|ron_model<br>1..1| pipeline\n+    DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n+    DpdVisMasterBiasFrame -.->|masterbias<br>0..1| pipeline\n+    DpdVisFlagMap -.->|flagmaps<br>0..*| pipeline\n+    DpdVisXTalkModel -.->|xtalk_model<br>0..1| pipeline\n+    DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n+    DpdVisCTIModel -.->|cti_model<br>0..1| pipeline\n+    DpdVisMasterDarkFrame -.->|masterdark<br>0..1| pipeline\n+    DpdVisBFEModel -.->|bfe_model<br>0..1| pipeline\n+    DpdVisFlagMap -.->|object_masks<br>0..1| pipeline\n+    pipeline -->|dpdcalib_data<br>1..1| DpdVisMasterFlatFrame\n+    pipeline -->|dpdcalib_flag<br>1..1| DpdVisFlagMap\n+    pipeline -->|dpdanalysis<br>1..1| DpdVisAnalysisResults\n+    pipeline -->|dpd_ledprofile<br>1..1| DpdVisFileContainer\n+```\n+\n+**Ports description:**\n+\n+* `raw_frames_in`: list of raw flat frames, ImgType.FirstType=FLAT\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `gains_model`: gain model\n+* `ron_model`: readout noise model\n+* `masterbias`: master bias frame from `VIS_MasterBias` pipeline\n+* `flagmaps`:  map of defects in darkness from `VIS_MasterDark` pipeline\n+* `object_masks`: masks of celestial objects from `VIS_FlagObjects` pipeline\n+* `dpdcalib_data`: master flat\n+* `dpdcalib_flag`: map of defects in photoresponse\n+* `dpdanalysis`: quality assessment parameters\n+* `dpd_ledprofile`: calibration unit profile\n+\n+Input ports not described above are currently unused.\n+\n+## Processing triggering assumptions\n+\n+During PV phase the pipeline will be triggered on the different variants of calblock PV-022.\n+\n+One pipeline will be triggered for each pair (LED, fluence).\n+\n+LED can be selected from CalibUnit.LedMask, a 8-bit field indicating which LED is active: Bit0 (LSB) = LED1, ..., Bit5 = LED6 (see LE1 data model).\n+Fluence can be selected from ObservationSequence.CalBlockVariant: each variant except LED56-PRNU1-PRNU2-BF contains flat fields of one fluence only.\n+\n+The way to select fluence in calblock LED56-PRNU1-PRNU2-BF is TBD (but see https://euclid.roe.ac.uk/issues/21059).\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+Hardware requirement for the pipeline depend on the number of input raw flat frames.\n+\n+A typical run on 32 raw flat frames requires:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| 50    | TBW      | 2            | 164             |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n+\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/chap19_NonLinCalibration.md": [
                        [
                            "@@ -0,0 +1,5 @@\n+\\newpage\n+\n+# Pipeline `VIS_NonLinCalibration_Pipeline`\n+\n+TBW\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/chap21_PTCNLCalibration.md": [
                        [
                            "@@ -0,0 +1,83 @@\n+\\newpage\n+\n+# Pipeline `VIS_PTCNLCalibration_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_PTCNLCalibration**: Production of Non linearity polynomial coefficients from a list of raw flats frames.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_PTCNLCalibration`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_PTCNLCalibration)\n+    DpdVisConfigurationFile ==>|vis_config_in<br>1..1   | pipeline\n+    DpdMdbDataBase          ==>|MDB<br>1..1             | pipeline\n+    DpdVisRawFrame          ==>|raw_frames_in<br>1..*   | pipeline\n+    DpdVisFlagmap           ==>|flagmaps<br>1..*        | pipeline\n+    DpdVisGainModel         -->|gains_model<br>1..1     | pipeline\n+    DpdVisBloomingModel     -->|saturation_model<br>0..1| pipeline\n+    DpdVisMasterBiasFrame   ==>|masterbias<br>0..1      | pipeline\n+    DpdVisMasterDarkFrame   -->|masterdark<br>0..1      | pipeline\n+    DpdVisXTalkModel        -->|xtalk_model<br>0..1     | pipeline\n+    DpdVisNonLinearityModel -->|nlcorr_model<br>0..1    | pipeline\n+    DpdVisRONModel          -->|ron_model<br>1..1       | pipeline\n+    DpdVisCTIModel          -->|cti_model<br>0..1       | pipeline\n+    DpdVisBFEModel          -->|bfe_model<br>0..1       | pipeline\n+    DpdVisFlagmap           ==>|object_masks<br>1..*    | pipeline\n+    pipeline                ==>|dpdcalib_ptc<br>1..1    | DpdVisFileContainer\n+    pipeline                ==>|dpdcalib_nl<br>1..1     | DpdVisFileContainer\n+```\n+\n+**Ports description:**\n+\n+* `vis_config_in`   : VIS PF configuration file\n+* `MDB`             : Mission DataBase\n+* `raw_frames_in`   : list of raw flat frames, ImgType.FirstType=FLAT\n+* `flagmaps`        : map of defect in darkness from `VIS_MasterDark` pipeline, map of defects in\n+* `gains_model`     : gain model\n+* `saturation_model`: saturation model\n+* `masterbias`      : master bias frame from `VIS_MasterBias` pipeline\n+* `masterdark`      : master dark frame from `VIS_MasterDark` pipeline (to be left empty)\n+* `xtalk_model`     : crosstalk model\n+* `nlcorr_model`    : non-linearity correction model (to be left empty)\n+* `ron_model`       : readout noise model\n+* `cti_model`       : CTI model\n+* `bfe_model`       : brighter-fatter model (to be left empty)\n+* `object_masks`    : list of object masks, one for each input nominal/short exposure corresponding to the flat pair\n+* `dpdcalib_ptc`    : ptc mean, variance and variance error values for each quadrant json file\n+* `dpdcalib_nl`     : non linearity polynomial coefficients for each quadrant json file\n+\n+## Processing triggering assumptions\n+\n+The pipeline needs at least one pair of flats of same OBS_ID, PTG_ID, nominal fluence value or more as input\n+\n+During PV it will be triggered on reception of calblock PV-029 all variants.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+A typical run on 42 flat frames paires requires:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| TBW   | TBW      | 33           | TBW             |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/chap22_PersistenceCalibration.md": [
                        [
                            "@@ -0,0 +1,78 @@\n+\\newpage\n+\n+# Pipeline `VIS_PersistenceCalibration_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_PersistenceCalibration**: Production of Non linearity polynomial coefficients from a list of raw flats frames.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_PersistenceCalibration`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_PersistenceCalibration)\n+    DpdMdbDataBase          ==>|MDB<br>1..1                 | pipeline\n+    DpdVisRawFrame          ==>|raw_frames_in<br>1..*       | pipeline\n+    DpdVisFlagmap           ==>|flagmaps<br>1..*            | pipeline\n+    DpdVisGainModel         -->|gains_model<br>1..1         | pipeline\n+    DpdVisBloomingModel     -->|saturation_model<br>0..1    | pipeline\n+    DpdVisMasterBiasFrame   ==>|masterbias<br>0..1          | pipeline\n+    DpdVisMasterDarkFrame   -->|masterdark<br>0..1          | pipeline\n+    DpdVisXTalkModel        -->|xtalk_model<br>0..1         | pipeline\n+    DpdVisNonLinearityModel -->|nlcorr_model<br>0..1        | pipeline\n+    DpdVisRONModel          -->|ron_model<br>1..1           | pipeline\n+    DpdVisCTIModel          -->|cti_model<br>0..1           | pipeline\n+    DpdVisConfigurationFile ==>|vis_config_in<br>1..1       | pipeline\n+    DpdVisBFEModel          -->|bfe_model<br>0..1           | pipeline\n+    pipeline                -->|dpdcalib_persistence<br>1..1| DpdVisFileContainer\n+```\n+\n+**Ports description:**\n+\n+* `MDB`                  : Mission DataBase\n+* `raw_frames_in`        : list of raw flat frames, ImgType.FirstType=FLAT\n+* `flagmaps`             : map of defect in darkness from `VIS_MasterDark` pipeline, map of defects in\n+* `gains_model`          : gain model\n+* `saturation_model`     : saturation model\n+* `masterbias`           : master bias frame from `VIS_MasterBias` pipeline\n+* `masterdark`           : master dark frame from `VIS_MasterDark` pipeline\n+* `xtalk_model`          : crosstalk model\n+* `nlcorr_model`         : non-linearity correction model\n+* `ron_model`            : readout noise model\n+* `cti_model`            : CTI model\n+* `vis_config_in`        : VIS PF configuration file\n+* `bfe_model`            : brighter-fatter model\n+* `dpdcalib_persistence` : json file containing difference between dark exposures, mean, variance and mean err of persistence\n+\n+## Processing triggering assumptions\n+\n+The pipeline needs 14 dark frames as input.\n+\n+During PV it will be triggered on reception of calblock PV-031 all variants.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+A typical run on 14 dark frames paires requires:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| TBW   | TBW      | TBW          | TBW             |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/chap23_PhotometryCalibration.md": [
                        [
                            "@@ -0,0 +1,60 @@\n+\\newpage\n+\n+# Pipeline `VIS_PhotometryCalibration_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_PhotometryCalibration**: production of the VIS zeropoint.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+* `VIS_CTI`\n+* `VIS_Instrument_Tools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of pipeline `VIS_PhotometryCalibration`.  For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_PhotometryCalibration)\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisCalibratedFrameCatalog ==>|catalogues_in<br>1..*| pipeline\n+    pipeline -->|zero_point_xml_out<br>1..1| DpdVisZeroPoint\n+```\n+\n+**Ports description:**\n+\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `catalogues_in`: calibrated input catalogues\n+* `zero_point_xml_out`: VIS zero point\n+\n+## Processing triggering assumptions\n+\n+The pipeline will be triggered during the processing of calblocks PV-001 and PV-002 on the DpdVisCalibratedFrameCatalog produced by ProcessField pipelines. See chapter 4 for more details on PV-001 and PV-002 processing.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+A typical run on 60 raw bias frames requires:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| 1     | TBW      | 0.25         | 0.002           |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n+ \n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/chap25_SmallScaleFlat.md": [
                        [
                            "@@ -0,0 +1,64 @@\n+\\newpage\n+\n+# Pipeline `VIS_SmallScaleFlat_Pipeline`\n+\n+## Pipeline Description\n+\n+**VIS_SmallScaleFlat**: Produce a 'small-scale' master flat from a list of single-LED / single-fluence master flats.\n+\n+The VIS_SmallScaleFlat pipelines first produces an 'extrapolated to 0 ADU' master flat per LED using all the different fluences available for each LED and extrapolating linearly each pixel to a 0 ADU signal.\n+\n+It then combines all the extrapolated master flat models per LED using an equal weight average. LED weights could be calculated to better fit a given signal SED, but this has not been decided and done yet ([#19832#note-23](https://euclid.roe.ac.uk/issues/19832#note-23)).\n+\n+The related GitLab projects are [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of `Pipeline VIS_SmallScaleFlat`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_SmallScaleFlat)\n+    DpdVisRawFrame ==>|prnulist_in<br>1..*| pipeline\n+    DpdVisFlagMap -->|flagmaps_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    pipeline -->|smallscaleflat_out<br>1..1| DpdVisMasterFlatFrame\n+    pipeline -->|prnuflagmap_out<br>1..1| DpdVisFlagMap&nbsp;\n+```\n+\n+**Ports description:**\n+\n+* `prnulist_in`: input list of master flats per LED and per fluence\n+* `flagmaps_in`: input list of master flat associated flagmaps\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `smallscaleflat_out`: output small-scale master flat\n+* `prnuflagmap_out`: output small-scale master flat flagmap\n+\n+## Processing triggering assumptions\n+\n+During PV phase, the pipeline will be triggered when a small-scale flat model is needed to process science data, using available PV-022 master flat models.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+Hardware requirement for the pipeline depend on the number of input master flats and LEDs.\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| 1/LED | TBD      | TBD          | TBD             |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/chap26_Stacking.md": [
                        [
                            "@@ -0,0 +1,61 @@\n+\\newpage\n+\n+# Pipeline `VIS_Stacking`\n+\n+## Pipeline Description\n+\n+**VIS_Stacking**: Production of a stack image and associated catalog from a list of calibrated exposures.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+* `VIS_CTI`\n+* `VIS_Instrument_Tools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of pipeline `VIS_Stacking`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_Stacking)\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdTrueUniverseOutput   -->|ref_catalogues<br>1..*| pipeline\n+    DpdVisCalibratedFrame   ==>|exposure_list<br>1..*| pipeline\n+    pipeline -->|dpdstacked_frame<br>1..1| DpdVisStackedFrame\n+    pipeline -->|dpdstacked_catalogue<br>1..1| DpdVisStackedFrameCatalog\n+```\n+\n+**Ports description:**\n+\n+* `vis_config_in`: VIS PF configuration file\n+* `ref_catalogues`: list of reference catalogues covering input exposures sky area\n+* `exposure_list`: list of input calibrated exposures\n+* `dpdstacked_frame`: stack image\n+* `dpdstacked_catalogue`: catalogue of the stack image\n+\n+## Processing triggering assumptions\n+\n+The pipeline will be triggered on DpdVisCalibratedFrames produced by the VIS_ProcessField pipeline to produce a single astrometric catalog for NIR during processing of calblocks PV-001 and PV-002.\n+\n+## Hardware configuration and related performances\n+\n+Hardware configuration for the pipeline depends on the number of input exposures.\n+\n+Processing of the 60 exposures of PV-001 requires:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| TBW   | TBW      | 15           | 220             |\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n+\n+\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/chap28_XTalkCalibration.md": [
                        [
                            "@@ -0,0 +1,98 @@\n+\\newpage\n+\n+# Pipeline `VIS_XTalkCalibration_Pipeline`\n+\n+**VIS_XTalkCalibration**: Production of a crosstalk model from a list of raw science exposures.\n+\n+The related GitLab projects are following [RD6]:\n+\n+* `VIS_Tasks`\n+* `VIS_PyLibrary`\n+* `VIS_ImageTools`\n+* `VIS_CTI`\n+* `VIS_Instrument_Tools`\n+\n+## Pipeline ports with inputs/outputs\n+\n+The following diagram represents the ports of pipeline `VIS_XTalkCalibration`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n+\n+```mermaid\n+graph LR\n+    pipeline(VIS_XTalkCalibration)\n+    DpdVisRawFrame ==>|raw_frames_in<br>1..*| pipeline\n+    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n+    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n+    DpdVisGainModel -->|gains_model<br>1..1| pipeline\n+    DpdVisRONModel -->|ron_model<br>1..1| pipeline\n+    DpdVisBloomingModel -.->|saturation_model<br>0..1| pipeline\n+    DpdVisMasterBiasFrame -.->|masterbias<br>0..1| pipeline\n+    DpdVisFlagMap -.->|flagmaps<br>0..*| pipeline\n+    DpdVisXTalkModel -.->|xtalk_model<br>0..1| pipeline\n+    DpdVisNonLinearityModel -.->|nlcorr_model<br>0..1| pipeline\n+    DpdVisCTIModel -.->|cti_model<br>0..1| pipeline\n+    DpdVisZeroPoint -->|zero_point<br>1..1| pipeline\n+    DpdVisMasterDarkFrame -.->|masterdark<br>0..1| pipeline\n+    DpdVisMasterFlatFrame -.->|masterflat<br>0..1| pipeline\n+    DpdVisPSFModel -->|psf_model<br>1..1| pipeline\n+    DpdVisDistortionModel -->|dist_model<br>1..1| pipeline\n+    DpdVisLargeFlatFrame -.->|lsf_model<br>0..1| pipeline\n+    DpdVisGhostModel -->|ghost_model<br>1..1| pipeline\n+    DpdVisStarMask -->|starmask_model<br>1..1| pipeline\n+    DpdVisBFEModel -.->|bfe_model<br>0..1| pipeline\n+    DpdTrueUniverseOutput -->|ref_catalogues<br>1..*| pipeline\n+\n+    pipeline -->|xtalk_model_xml_out<br>1..1| DpdVisXTalkModel \n+```\n+\n+**Ports description:**\n+\n+* `raw_frames_in`: raw science frames to be processed\n+* `vis_config_in`: VIS PF configuration file\n+* `MDB`: Mission DataBase\n+* `gains_model`: gain model\n+* `ron_model`: readout noise model\n+* `saturation_model`: saturation model\n+* `masterbias`: master bias frame from `VIS_MasterBias` pipeline\n+* `flagmaps`: map of defect in darkness from `VIS_MasterDark` pipeline, map of defects in photoresponse from `VIS_MasterFlat` pipeline\n+* `xtalk_model`: crosstalk model, to be left empty.\n+* `nlcorr_model`: non-linearity correction model\n+* `cti_model`: CTI model\n+* `zero_point`: zero point\n+* `masterdark`: master dark, not to be used as long as dark is not measurable\n+* `masterflat`: master flat frame\n+* `psf_model`: PSF model from `VIS_PSFCalibration` pipeline\n+* `dist_model`: distortion model\n+* `lsf_model`: large scale flat model from `VIS_LargeFlatCalibration` pipeline\n+* `ghost_model`: ghost model\n+* `starmask_model`: star mask model\n+* `bfe_model`: brighter-fatter model\n+* `ref_catalogues`: list of reference catalogues covering raw science frames sky area\n+* `xtalk_model_xml_out`: crosstalk model\n+\n+## Processing triggering assumptions\n+\n+During PV phase the pipeline will be executed during processing of calblock PV-001. See description of PV-001 processing in chapter 4 for more details.\n+\n+## Operational constraints\n+\n+None.\n+\n+## Hardware configuration and related performances\n+\n+Hardware configuration for the pipeline depends on the number of input exposures.\n+\n+A typical run on 60 exposures requires:\n+\n+| Cores | RSS (GB) | Walltime (h) | Disk space (GB) |\n+| ----- | -------- | ------------ | --------------- |\n+| 60    | TBW      | 15           | 2100 (*)        |\n+\n+The required disk space is 2100 GB when temporary files are not removed from the workdir.\n+\n+## Normal termination\n+\n+The pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n+\n+## Error condition\n+\n+In case of runtime error contact PF support.\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/chap5.md": [
                        [
                            "@@ -1,106 +0,0 @@\n-\\newpage\n-\n-# Pipeline `VIS_MasterBias`\n-\n-## Pipeline Description\n-\n-**VIS_MasterBias**: Production of a master bias from a list of raw bias frames.\n-\n-The related GitLab projects are following [RD6]:\n-\n-* `GitLab project 1`\n-* `GitLab project 2`\n-* ...\n-\n-## Pipeline ports with inputs/outputs\n-\n-The following diagram represents the ports of `Pipeline VIS_MasterBias`. For each port, the product type, port name and cardinality are provided. The thick arrow is for the key input port. Optional ports are represented by dotted arrows.\n-\n-```mermaid\n-graph LR\n-    pipeline(VIS_MasterBias)\n-    DpdVisRawFrame ==>|raw_frames_in<br>1..*| pipeline\n-    DpdVisConfigurationFile -->|vis_config_in<br>1..1| pipeline\n-    DpdMdbDataBase -->|MDB<br>1..1| pipeline\n-    DpdVisGainModel -->|gains_model<br>1..1| pipeline\n-    DpdVisRONModel -->|ron_model<br>1..1| pipeline\n-    DpdVisBloomingModel -.->|saturation_model<br>1..1| pipeline\n-    DpdVisFlagMap -.->|flagmaps<br>1..*| pipeline\n-    DpdVisXTalkModel -.->|xtalk_model<br>1..1| pipeline\n-    DpdVisNonLinearityModel -.->|nlcorr_model<br>1..1| pipeline\n-    DpdVisCTIModel -.->|cti_model<br>1..1| pipeline\n-    pipeline -->|dpdcalib_data<br>1..1| DpdVisMasterBiasFrame\n-    pipeline -->|dpdanalysis<br>1..1| DpdVisAnalysisResults\n-```\n-\n-**Ports description:**\n-\n-* `dpdcalib_flag`: Map of darkness defects\n-\n-## Processing triggering assumptions\n-\n-> Add any information on the operational running context: scales and input data. Modify the bullets below.\n-\n-* PF pipeline triggered at different scales: Obs, Tile, SkyPatch, Full-sky to be completed\n-* Complementary description of the inputs: selection of L2 catalogs with aggregated columns from a selection of (input) PF tiles,\n-* possibly usage of the CATRED OR CONCAT outputs or mock catalogs\n-* any other useful information for creating the pipeline definitions (input/output data product and their optionality and cardinality ) and plan/PPOs\n-\n-| Scale(s) | Periodicity | Input DataProduct | Information for creating the pipeline definition |\n-| -----------   | ----------- | ----------- |  ----------- |\n-| Obs, Tile, SkyPatch, Island, Full sky | Week, Month, Data Release || Quality criteria, Metrics on catalogs, ...|\n-\n-## Operational constraints\n-\n-> Explain what the user must do with the software in addition to the standard rules described in [DR4 SGS Pipeline Operational Procedures]\n- in various states and modes of operation, including contingency and degraded modes\n-> Section by default should be empty (no specific tasks for running this pipeline.)\n-> **Example**\n-> Because GPUs can perform parallel operations on multiple sets of data, they must be used for scientific computation for this pipeline....\n-\n-## Hardware configuration and related performances\n-\n-The hardware requirements for the `PF_name` depend on the dimensions of the input catalogs and the maximum separation scale used in the computations.\n-\n-> Provide below any information on the HW resources and duration for a typical run (possibly add related assumptions vs the pipeline)\n-> Ensure these data are in line with the PackageDef.py in the PF-IAL-Pipelines Gitlab project\n-> Mention here that the PF dynamically (at run time) assigns some infra resources against the input data or configuration\n-\n-| Processing Element | Version | Executable name | Cores | RAM (GB) | Walltime (hours) | Disk space (GB) |\n-| ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- |\n-| PE name | x.y | Executable1 | n cores or formula against input data | x GB | xx hours | xxx GB |\n-\n-> **Example with typical run** ...\n->\n-> Assuming a typical run (i.e. 2PCF multipole moments) over a data catalog of 3*10^6 objects, and a random catalog of 1.5*10^7 objects,\n-> corresponding to a redshift z-bin of width delta_z=0.1 in the range 0.9 < z < 1.8, with a maximum separation scale of\n-> 200 Mpc/h in bins of 1Mpc/h, > the hardware requirements for each LE_GC_TwoPointCorrelation project PE are listed\n-> below:\n->\n-> | Processing Element | Version | Executable name | Cores | RAM (GB) | Walltime (hours) | Disk space (GB) |\n-> | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- |\n-> | LE_GC_TPC | 1.0 | Correlate | 24 | < 1 | < 3 | 15 |\n->\n-> In the worst case, in which the analysis is performed using a single z-bin for the whole redshift range delta_z=0.9, with a data catalog of 1.\n-> 7*10^7 objects, and a random catalog of 8.5*10^8 objects, the hardware requirements increase to 3 GB of RAM and 36 hours.\n-\n-## Normal termination\n-\n-> Describe how the user can interrupt the pipeline and how to determine whether normal termination has occurred. This section is optional.\n-\n-The `Pipeline_Name` pipeline is managed by the IAL pipeline runner so in the normal termination case the associated pipeline processing order should have its `ProcessingState` element set to `Completed`.\n-\n-If the code run is locally, code termination can be invoked at any time with Ctrl-C. This will not cause any problems but, depending on the code operation during termination, it may require the user to clean the `workdir` and `workdir/data` folder from incomplete output objects.\n-\n-## Error condition\n-\n-> Describe the common error conditions that can occur as a result of executing the function and how to detect that the error has occurred.\n-\n-The runtime errors related to `Pipeline_Name` are listed below:\n-\n-| Software Executable | Exception | Message | Operator Instruction |\n-| -----------   | ----------- | ----------- |  ----------- |\n-| `Executable X` | Exception name / ID | Configuration file not found | Contact PF support |\n-| `Executable Y` | Exception name / ID | Input product not found | Re-run |\n-| `Executable Z` | Exception name / ID | Message text | Contact infra support |\n-\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/manifest": [
                        [
                            "@@ -1,8 +1,31 @@\n # Manifest for template user manual document\n header.md\n version.md\n-chap1.md # Purpose\n-chap2.md # Applicable & Reference Documents\n-chap3.md # Acronyms, abbreviations and definitions\n-chap4.md # PF Operations Environment\n-chap5.md # Pipeline VIS_Masterbias\n+chap01.md # Purpose\n+chap02.md # Applicable & Reference Documents\n+chap03.md # Acronyms, abbreviations and definitions\n+chap04.md # PF Operations Environment\n+chap05_AstrometryCalibration.md\n+chap06_BloomingCalibration.md\n+chap07_BrighterFatterCalibration.md\n+chap08_CTICalibration.md\n+chap09_CTIMasterCI.md\n+chap10_CTITimeEvolution.md\n+chap11_DiffractionSpikesFocus.md\n+chap12_FlagObjects.md\n+chap13_GainCalibration.md\n+chap14_GhostsCalibration.md\n+chap15_LargeFlatCalibration.md\n+chap16_MasterBias.md\n+chap17_MasterDark.md\n+chap18_MasterFlat.md\n+chap19_NonLinCalibration.md\n+chap20_PSFCalibration.md\n+chap21_PTCNLCalibration.md\n+chap22_PersistenceCalibration.md\n+chap23_PhotometryCalibration.md\n+chap24_ProcessField.md\n+chap25_SmallScaleFlat.md\n+chap26_Stacking.md\n+chap27_TrapPumpingCalibration.md\n+chap28_XTalkCalibration.md\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ],
                    "doc/user_manual/title.md": [
                        [
                            "@@ -7,19 +7,22 @@ body-includes: no\n |         |**Document Identification**                                                                          |\n |---------|-----------------------------------------------------------------------------------------------------|\n |Title|Euclid SGS `VIS` PF User Manual \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\. |\n-|Date:|24-Jun-2023|\n+|Date:|24-Jul-2023|\n |Issue|4.0|\n |Reference:|EUCL-IAP-MA-8-002|\n-|Custodian:|Euclid SGS|\n+|Custodian:|Catherine Grenet|\n \n **Prepared by** | **Role**\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\. | **Date**  | **Signature** |\n --------------|--------------------------------|-----------|-----------\n-`User Manual Custodian Name`         | `SDC-xx` `Custodian Role`                                                     |`dd-month-yyyy`|\n+`Catherine Grenet`         | `OU-VIS` `Co-lead`                                                     |`dd-month-yyyy`|\n \n **Contributors** | **Role**\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\. | **Date** | **Signature**\n --------------|--------------------------------|-----------|-----------\n-`Contributor Name 1`|`SDC-xx` `Contributor Role`| |\n-`Contributor Name 2`|`SDC-xx` `Contributor Role`| |\n+`Thomas Flanet`|`SDC-FR` `Developer`| |\n+`Sylvain Mottet`|`SDC-FR` `Developer`| |\n+`Kane Nguyen-Kim`|`SDC-FR` `Developer`| |\n+`James Nightingale`|`SDC-FR` `Developer`| |\n+`Matt Wander`|`SDC-FR` `Developer`| |\n `...`\n \n **Authorised** | **Role**\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\. | **Date** | **Signature**\n@@ -36,8 +39,6 @@ Yannick Mellier|Euclid Consortium Lead||\n \n **Issue**|**Date**|**Page**|**Description of Change** \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\. |**Comment**\n -------|--------|------------------|----------------------------------|----------\n- 0.1 | 07/02/17 | all | First draft | JG|\n- 1.0 | 23/03/17 | none | Previous version elevated to version 1.0 | CV|\n- 2.0 | 06/06/22 | all | New version specific to the SGS environment | DB|\n+ 4.0 | 2023-07-24 | all | First issue in Mardown/Mermaid format | |\n \n ![](images/dot.png) \\\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ]
                },
                "selected_modifications": {
                    "VIS_IAL_Pipelines/auxdir/VIS_IAL_Pipelines/VIS_CTICalibration_Pipeline/PkgDef_VIS_CTICalibration.py": [
                        [
                            "@@ -18,7 +18,7 @@ import os\n \n PIPE_NAME = \"VIS_\" + os.path.splitext( os.path.basename( __file__))[0].split( \"VIS_\")[1]\n \n-TASKS_VER = \"13.0.12\"\n+TASKS_VERSION = \"13.0.13\"\n \n VIS_cti_xml_in = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_xml_in --pipeline_name={PIPE_NAME} \",\n@@ -75,4 +75,4 @@ VIS_cti_xml_out = Executable(\n         Output(\"serial_cti_xml_out\"),\n     ],\n     resources=ComputingResources(cores=1, ram=7.0, walltime=3.0),\n-)\n\\ No newline at end of file\n+)\n",
                            "sigh",
                            "James Nightingale",
                            "2023-08-14T15:37:54.000+02:00",
                            "5f665d3b31e49c7888107f9de7f5f2ea0cd9fcce"
                        ],
                        [
                            "@@ -67,8 +67,8 @@ VIS_cti_xml_out = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_cti_xml_out\",\n     inputs=[\n         \"config\",\n-        \"parallel_calibrate_cti_results_list\",\n-        \"serial_calibrate_cti_results_list\"\n+        Input(\"parallel_calibrate_cti_results_list\"),\n+        Input(\"serial_calibrate_cti_results_list\")\n     ],\n     outputs=[\n         Output(\"parallel_cti_xml_out\"),\n",
                            "put Input ports on IAL",
                            "James Nightingale",
                            "2023-08-14T13:51:52.000+01:00",
                            "a591146cea5c45d446ebb9a1748158864c0a837c"
                        ],
                        [
                            "@@ -18,6 +18,8 @@ import os\n \n PIPE_NAME = \"VIS_\" + os.path.splitext( os.path.basename( __file__))[0].split( \"VIS_\")[1]\n \n+TASKS_VER = \"13.0.12\"\n+\n VIS_cti_xml_in = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_xml_in --pipeline_name={PIPE_NAME} \",\n     inputs=[\n",
                            "Trying to fix pipelinme runner bug",
                            "James Nightingale",
                            "2023-08-14T13:48:06.000+01:00",
                            "cb96b904b57dea50d50dd1dc23369211ee49bed4"
                        ],
                        [
                            "@@ -63,7 +63,11 @@ calibrate_cti = Executable(\n \n VIS_cti_xml_out = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_cti_xml_out\",\n-    inputs=[\"config\", \"calibrate_cti_results_list\"],\n+    inputs=[\n+        \"config\",\n+        \"parallel_calibrate_cti_results_list\",\n+        \"serial_calibrate_cti_results_list\"\n+    ],\n     outputs=[\n         Output(\"parallel_cti_xml_out\"),\n         Output(\"serial_cti_xml_out\"),\n",
                            "updates which fix outputs to be two lists",
                            "James Nightingale",
                            "2023-08-14T12:23:46.000+01:00",
                            "43eeda1056922ee1811ae519426c089929b0926a"
                        ],
                        [
                            "@@ -1,30 +1,9 @@\n #\n-# File PkgDef_VIS_ProcessField.py\n+# File PkgDef_VIS_CTICalibration.py\n #\n-# Created on: Jan 09, 2016\n-# Author: Catherine Grenet\n-#\n-# VIS package definition for IAL workflow manager\n-#\n-# History\n-# Nov 07, 2017 (LP & OH): processExp task is now splitted in 3 differents tasks to be able to run the astrometry over 4 dithers at the same time:\n-#     processExtractExp, processAstroField and processPhotoExp are now declared in package definition\n-# Oct 19, 2017 (OH): migration from pickle list to json file. Adjust tasks parameters name accordingly\n-# Sep 06, 2017 (CG): \"ram\" now specifies maxrss instead of maxvmem\n-# Aug 24, 2017 (CG):\n-#     VIS_science_xml_out: specify mime_type=\"json\" for outfile (bug #5563)\n-# Nov 26, 2016 (CG):\n-#     processExp: cores = 1 not to use the multicore queues at CC\n-#                 walltime = 24 h to cope the 2nd SExtractor run\n-#     stacking  : walltime = 8 h\n-# Apr 07, 2016 (CG):\n-#     ComputingResources: ram = 4.0 for all jobs\n-# Apr 03, 2016 (CG):\n-#     Non linearity model is not a processQuad input any more\n-# Mar 18, 2016 (CG):\n-#    added processFlatQuad executable\n-# Mar 16, 2016 (CG):\n-#    added explist2quadlist, processQuad and ghosts2stack executables\n+# Created on: Feb 2023\n+# Author: James Nightingale\n+\n \n from euclidwf.framework.taskdefs import (\n     Executable,\n@@ -71,21 +50,23 @@ gather_cti_quads = Executable(\n \n calibrate_cti = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_CTI_Calibration\",\n-    inputs=[ \n-         Input('config'),\n-#        Input(\"MDB\"),\n-        Input(\"input_ccd\")],\n-    outputs=[Output(\"cti_parallel_output\", mime_type=\"json\"), \n-             Output(\"cti_serial_output\", mime_type=\"json\")],\n-    resources=ComputingResources(cores=1, ram=256.0, walltime=4.0),\n+    inputs=[\n+        Input('config'),\n+        Input(\"input_ccd\")\n+    ],\n+    outputs=[\n+        Output(\"cti_parallel_output\", mime_type=\"json\"),\n+        Output(\"cti_serial_output\", mime_type=\"json\")\n+    ],\n+    resources=ComputingResources(cores=1, ram=256.0, walltime=16.0),\n )\n \n VIS_cti_xml_out = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_cti_xml_out\",\n     inputs=[\"config\", \"calibrate_cti_results_list\"],\n     outputs=[\n-        Output(\"dpdcticalibration\", mime_type=\"json\", content_type=\"listfile\"),\n-        Output(\"dpdanalysis_out\", mime_type=\"json\", content_type=\"listfile\"),\n+        Output(\"parallel_cti_xml_out\"),\n+        Output(\"serial_cti_xml_out\"),\n     ],\n     resources=ComputingResources(cores=1, ram=7.0, walltime=3.0),\n-)\n+)\n\\ No newline at end of file\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ],
                        [
                            "@@ -1,30 +1,9 @@\n #\n-# File PkgDef_VIS_ProcessField.py\n+# File PkgDef_VIS_CTICalibration.py\n #\n-# Created on: Jan 09, 2016\n-# Author: Catherine Grenet\n-#\n-# VIS package definition for IAL workflow manager\n-#\n-# History\n-# Nov 07, 2017 (LP & OH): processExp task is now splitted in 3 differents tasks to be able to run the astrometry over 4 dithers at the same time:\n-#     processExtractExp, processAstroField and processPhotoExp are now declared in package definition\n-# Oct 19, 2017 (OH): migration from pickle list to json file. Adjust tasks parameters name accordingly\n-# Sep 06, 2017 (CG): \"ram\" now specifies maxrss instead of maxvmem\n-# Aug 24, 2017 (CG):\n-#     VIS_science_xml_out: specify mime_type=\"json\" for outfile (bug #5563)\n-# Nov 26, 2016 (CG):\n-#     processExp: cores = 1 not to use the multicore queues at CC\n-#                 walltime = 24 h to cope the 2nd SExtractor run\n-#     stacking  : walltime = 8 h\n-# Apr 07, 2016 (CG):\n-#     ComputingResources: ram = 4.0 for all jobs\n-# Apr 03, 2016 (CG):\n-#     Non linearity model is not a processQuad input any more\n-# Mar 18, 2016 (CG):\n-#    added processFlatQuad executable\n-# Mar 16, 2016 (CG):\n-#    added explist2quadlist, processQuad and ghosts2stack executables\n+# Created on: Feb 2023\n+# Author: James Nightingale\n+\n \n from euclidwf.framework.taskdefs import (\n     Executable,\n@@ -71,21 +50,23 @@ gather_cti_quads = Executable(\n \n calibrate_cti = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_CTI_Calibration\",\n-    inputs=[ \n-         Input('config'),\n-#        Input(\"MDB\"),\n-        Input(\"input_ccd\")],\n-    outputs=[Output(\"cti_parallel_output\", mime_type=\"json\"), \n-             Output(\"cti_serial_output\", mime_type=\"json\")],\n-    resources=ComputingResources(cores=1, ram=256.0, walltime=4.0),\n+    inputs=[\n+        Input('config'),\n+        Input(\"input_ccd\")\n+    ],\n+    outputs=[\n+        Output(\"cti_parallel_output\", mime_type=\"json\"),\n+        Output(\"cti_serial_output\", mime_type=\"json\")\n+    ],\n+    resources=ComputingResources(cores=1, ram=256.0, walltime=16.0),\n )\n \n VIS_cti_xml_out = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_cti_xml_out\",\n     inputs=[\"config\", \"calibrate_cti_results_list\"],\n     outputs=[\n-        Output(\"dpdcticalibration\", mime_type=\"json\", content_type=\"listfile\"),\n-        Output(\"dpdanalysis_out\", mime_type=\"json\", content_type=\"listfile\"),\n+        Output(\"parallel_cti_xml_out\"),\n+        Output(\"serial_cti_xml_out\"),\n     ],\n     resources=ComputingResources(cores=1, ram=7.0, walltime=3.0),\n-)\n+)\n\\ No newline at end of file\n",
                            "Merge branch 'cti_xml_out' into 'release-13.0'",
                            "Catherine Grenet",
                            "2023-08-12T13:39:06.000+00:00",
                            "186e271fa9883de8b10db78ab0693ea4d5c6a379"
                        ],
                        [
                            "@@ -16,8 +16,6 @@ from euclidwf.framework.taskdefs import (\n from VIS_ProcessField_Pipeline.PkgDef_VIS_ProcessField import TASKS_VER\n import os\n \n-TASKS_VER = \"13.0.11\"\n-\n PIPE_NAME = \"VIS_\" + os.path.splitext( os.path.basename( __file__))[0].split( \"VIS_\")[1]\n \n VIS_cti_xml_in = Executable(\n",
                            "merge time",
                            "James Nightingale",
                            "2023-08-10T10:57:03.000+01:00",
                            "c67653384be3dc4a0cf8048f7879a9f9edab81d6"
                        ],
                        [
                            "@@ -16,7 +16,7 @@ from euclidwf.framework.taskdefs import (\n from VIS_ProcessField_Pipeline.PkgDef_VIS_ProcessField import TASKS_VER\n import os\n \n-TASKS_VER = \"13.0.3\"\n+TASKS_VER = \"13.0.11\"\n \n PIPE_NAME = \"VIS_\" + os.path.splitext( os.path.basename( __file__))[0].split( \"VIS_\")[1]\n \n",
                            "manual tasks override",
                            "James Nightingale",
                            "2023-08-10T10:38:34.000+01:00",
                            "d069cbf5ee31280ddc765bff3a23fbd5c75d9b67"
                        ],
                        [
                            "@@ -1,30 +1,9 @@\n #\n-# File PkgDef_VIS_ProcessField.py\n+# File PkgDef_VIS_CTICalibration.py\n #\n-# Created on: Jan 09, 2016\n-# Author: Catherine Grenet\n-#\n-# VIS package definition for IAL workflow manager\n-#\n-# History\n-# Nov 07, 2017 (LP & OH): processExp task is now splitted in 3 differents tasks to be able to run the astrometry over 4 dithers at the same time:\n-#     processExtractExp, processAstroField and processPhotoExp are now declared in package definition\n-# Oct 19, 2017 (OH): migration from pickle list to json file. Adjust tasks parameters name accordingly\n-# Sep 06, 2017 (CG): \"ram\" now specifies maxrss instead of maxvmem\n-# Aug 24, 2017 (CG):\n-#     VIS_science_xml_out: specify mime_type=\"json\" for outfile (bug #5563)\n-# Nov 26, 2016 (CG):\n-#     processExp: cores = 1 not to use the multicore queues at CC\n-#                 walltime = 24 h to cope the 2nd SExtractor run\n-#     stacking  : walltime = 8 h\n-# Apr 07, 2016 (CG):\n-#     ComputingResources: ram = 4.0 for all jobs\n-# Apr 03, 2016 (CG):\n-#     Non linearity model is not a processQuad input any more\n-# Mar 18, 2016 (CG):\n-#    added processFlatQuad executable\n-# Mar 16, 2016 (CG):\n-#    added explist2quadlist, processQuad and ghosts2stack executables\n+# Created on: Feb 2023\n+# Author: James Nightingale\n+\n \n from euclidwf.framework.taskdefs import (\n     Executable,\n",
                            "fix conflicts",
                            "James Nightingale",
                            "2023-08-10T10:37:45.000+01:00",
                            "77f423cb2068faeffab5fa9074c5e89e156b42d4"
                        ]
                    ],
                    "VIS_IAL_Pipelines/auxdir/VIS_IAL_Pipelines/VIS_MasterBias_Pipeline/PkgDef_VIS_MasterBias.py": [
                        [
                            "@@ -71,7 +71,7 @@ processBiasQuad = Executable(command = f\"E-Run VIS_Tasks {TASKS_VER} VIS_process\n                                         Output(\"output_quadrant_stdev\", mime_type=\"json\", content_type=\"listfile\"),\n                                         Output(\"output_quadrant_count\", mime_type=\"json\", content_type=\"listfile\"),],\n                              resources = ComputingResources(cores = 1,\n-                                                            ram = 6.0,\n+                                                            ram = 9.0,\n                                                             walltime = 3.0))\n \n quad2FPA = Executable(command = f\"E-Run VIS_Tasks {TASKS_VER} VIS_quad_to_fpa\",\n",
                            "Merge branch 'hotfix_23455_masterbiasram' into 'release-13.0'",
                            "Catherine Grenet",
                            "2023-08-14T09:11:48.000+00:00",
                            "0ded2a18694b2eb4406f5661c8743326a316f1d4"
                        ]
                    ],
                    "VIS_IAL_Pipelines/auxdir/VIS_IAL_Pipelines/VIS_ProcessField_Pipeline/PkgDef_VIS_ProcessField.py": [
                        [
                            "@@ -41,7 +41,7 @@ from euclidwf.framework.taskdefs import Executable, Input, Output, ComputingReso\n #mod = importlib.machinery.SourceFileLoader( \"VIS_IAL_PIPELINES_VERSION\", ialversion_path).load_module()\n #TASKS_VER = VIS_IAL_PIPELINES_VERSION.VIS_IAL_PIPELINES_ORIGINAL_VERSION\n \n-TASKS_VER = \"13.0.11\"\n+TASKS_VER = \"13.0.12\"\n \n import os\n PIPE_NAME = \"VIS_\" + os.path.splitext( os.path.basename( __file__))[0].split( \"VIS_\")[1]\n",
                            "[UPD]Set TASKS_VER to 13.0.12",
                            "Catherine Grenet",
                            "2023-08-14T11:09:22.000+02:00",
                            "65a7c9228c83143727270412b527ff9722bae3da"
                        ],
                        [
                            "@@ -41,7 +41,7 @@ from euclidwf.framework.taskdefs import Executable, Input, Output, ComputingReso\n #mod = importlib.machinery.SourceFileLoader( \"VIS_IAL_PIPELINES_VERSION\", ialversion_path).load_module()\n #TASKS_VER = VIS_IAL_PIPELINES_VERSION.VIS_IAL_PIPELINES_ORIGINAL_VERSION\n \n-TASKS_VER = \"13.0.10\"\n+TASKS_VER = \"13.0.11\"\n \n import os\n PIPE_NAME = \"VIS_\" + os.path.splitext( os.path.basename( __file__))[0].split( \"VIS_\")[1]\n",
                            "[UPD]Set TASKS_VER to 13.0.11",
                            "Catherine Grenet",
                            "2023-08-12T10:32:16.000+02:00",
                            "5f37d3c5af51e7be89d64dce372ddf9b063fd7a3"
                        ],
                        [
                            "@@ -41,7 +41,7 @@ from euclidwf.framework.taskdefs import Executable, Input, Output, ComputingReso\n #mod = importlib.machinery.SourceFileLoader( \"VIS_IAL_PIPELINES_VERSION\", ialversion_path).load_module()\n #TASKS_VER = VIS_IAL_PIPELINES_VERSION.VIS_IAL_PIPELINES_ORIGINAL_VERSION\n \n-TASKS_VER = \"13.0.4\"\n+TASKS_VER = \"13.0.10\"\n \n import os\n PIPE_NAME = \"VIS_\" + os.path.splitext( os.path.basename( __file__))[0].split( \"VIS_\")[1]\n",
                            "fix conflicts",
                            "James Nightingale",
                            "2023-08-10T10:37:45.000+01:00",
                            "77f423cb2068faeffab5fa9074c5e89e156b42d4"
                        ],
                        [
                            "@@ -41,7 +41,7 @@ from euclidwf.framework.taskdefs import Executable, Input, Output, ComputingReso\n #mod = importlib.machinery.SourceFileLoader( \"VIS_IAL_PIPELINES_VERSION\", ialversion_path).load_module()\n #TASKS_VER = VIS_IAL_PIPELINES_VERSION.VIS_IAL_PIPELINES_ORIGINAL_VERSION\n \n-TASKS_VER = \"13.0.9\"\n+TASKS_VER = \"13.0.10\"\n \n import os\n PIPE_NAME = \"VIS_\" + os.path.splitext( os.path.basename( __file__))[0].split( \"VIS_\")[1]\n",
                            "[UPD]Set TASKS_VER to 13.0.10",
                            "Catherine Grenet",
                            "2023-08-08T14:57:49.000+02:00",
                            "ccc61aa044e0ce8eba6c1d8a04d5c5491981b329"
                        ]
                    ],
                    "VIS_IAL_Pipelines/auxdir/VIS_IAL_Pipelines/VIS_SmallScaleFlat_Pipeline/PkgDef_VIS_SmallScaleFlat.py": [
                        [
                            "@@ -17,7 +17,7 @@ VIS_SmallScaleFlat_xml_in = \\\n                          Input(  \"prnulist_in\", content_type=\"listfile\")],\n               outputs = [Output( \"prnulists_out\", mime_type=\"json\", content_type=\"listfile\")],\n               resources = ComputingResources( cores = 1,\n-                                              ram = 3.0,\n+                                              ram = 1.0,\n                                               walltime = 1.0))\n \n \n@@ -39,7 +39,8 @@ VIS_CombinePRNU = \\\n                          Input(  \"prnulist_in\", content_type=\"listfile\"),\n                          Input(  \"flagmaps_in\", content_type=\"listfile\")],\n               outputs = [Output( \"smallscaleflat_out\"),\n-                         Output( \"prnuflagmap_out\")],\n+                         Output( \"prnuflagmap_out\"),\n+                         Output( \"dqc_out\")],\n               resources = ComputingResources( cores = 1,\n-                                              ram = 3.0,\n-                                              walltime = 1.0))\n+                                              ram = 1.0,\n+                                              walltime = 2.0))\n",
                            "Merge branch 'release-13.0' into develop: SmallScaleFlat add DQC ouptut, accepts any combination of LED/fluence",
                            "Catherine Grenet",
                            "2023-08-13T17:26:05.000+02:00",
                            "0fe441ebf05cc4b6cdc67d2165352626892351c9"
                        ]
                    ],
                    "VIS_IAL_Pipelines/auxdir/VIS_IAL_Pipelines/VIS_CTIMasterCI_Pipeline/PkgDef_VIS_CTIMasterCI.py": [
                        [
                            "@@ -1,30 +1,10 @@\n #\n-# File PkgDef_VIS_ProcessField.py\n+# File PkgDef_VIS_CTIMasterCI.py\n #\n-# Created on: Jan 09, 2016\n-# Author: Catherine Grenet\n+# Created on: June 2023\n+# Author: James Nightingale\n #\n # VIS package definition for IAL workflow manager\n-#\n-# History\n-# Nov 07, 2017 (LP & OH): processExp task is now splitted in 3 differents tasks to be able to run the astrometry over 4 dithers at the same time:\n-#     processExtractExp, processAstroField and processPhotoExp are now declared in package definition\n-# Oct 19, 2017 (OH): migration from pickle list to json file. Adjust tasks parameters name accordingly\n-# Sep 06, 2017 (CG): \"ram\" now specifies maxrss instead of maxvmem\n-# Aug 24, 2017 (CG):\n-#     VIS_science_xml_out: specify mime_type=\"json\" for outfile (bug #5563)\n-# Nov 26, 2016 (CG):\n-#     processExp: cores = 1 not to use the multicore queues at CC\n-#                 walltime = 24 h to cope the 2nd SExtractor run\n-#     stacking  : walltime = 8 h\n-# Apr 07, 2016 (CG):\n-#     ComputingResources: ram = 4.0 for all jobs\n-# Apr 03, 2016 (CG):\n-#     Non linearity model is not a processQuad input any more\n-# Mar 18, 2016 (CG):\n-#    added processFlatQuad executable\n-# Mar 16, 2016 (CG):\n-#    added explist2quadlist, processQuad and ghosts2stack executables\n \n from euclidwf.framework.taskdefs import (\n     Executable,\n@@ -66,18 +46,18 @@ master_ci_estimate = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_CTI_Master_CI\",\n     inputs=[\n          Input('config'),\n-#        Input(\"MDB\"),\n-        Input(\"quad_list_of_lists\")],\n+        Input(\"quad_list_of_lists\")\n+    ],\n     outputs=[Output(\"cti_master_ci\", mime_type=\"json\")],\n-    resources=ComputingResources(cores=1, ram=16.0, walltime=4.0),\n+    resources=ComputingResources(cores=1, ram=256.0, walltime=4.0),\n )\n \n-quad2FPA = Executable(command = f\"E-Run VIS_Tasks {TASKS_VER} VIS_quad_to_fpa\",\n-                      inputs = [Input(\"infilelist_data\"), \"config\"],\n-                      outputs = [Output(\"master_data\", mime_type=\"json\")],\n-                      resources = ComputingResources(cores = 1,\n-                                                     ram = 3.0,\n-                                                     walltime = 1.0))\n+quad2FPA = Executable(\n+    command = f\"E-Run VIS_Tasks {TASKS_VER} VIS_quad_to_fpa\",\n+    inputs = [Input(\"infilelist_data\"), \"config\"],\n+    outputs = [Output(\"master_data\", mime_type=\"json\")],\n+    resources = ComputingResources(cores = 1, ram = 3.0, walltime = 1.0)\n+)\n \n \n \n@@ -85,8 +65,7 @@ VIS_cti_master_ci_xml_out = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_cti_master_ci_xml_out\",\n     inputs=[\"config\", \"cti_master_ci_list\"],\n     outputs=[\n-        Output(\"dpdmasterci\", mime_type=\"json\", content_type=\"listfile\"),\n-        Output(\"dpdanalysis_out\", mime_type=\"json\", content_type=\"listfile\"),\n+        Output(\"master_ci_xml_out\"),\n     ],\n     resources=ComputingResources(cores=1, ram=7.0, walltime=3.0),\n )\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ],
                        [
                            "@@ -1,30 +1,10 @@\n #\n-# File PkgDef_VIS_ProcessField.py\n+# File PkgDef_VIS_CTIMasterCI.py\n #\n-# Created on: Jan 09, 2016\n-# Author: Catherine Grenet\n+# Created on: June 2023\n+# Author: James Nightingale\n #\n # VIS package definition for IAL workflow manager\n-#\n-# History\n-# Nov 07, 2017 (LP & OH): processExp task is now splitted in 3 differents tasks to be able to run the astrometry over 4 dithers at the same time:\n-#     processExtractExp, processAstroField and processPhotoExp are now declared in package definition\n-# Oct 19, 2017 (OH): migration from pickle list to json file. Adjust tasks parameters name accordingly\n-# Sep 06, 2017 (CG): \"ram\" now specifies maxrss instead of maxvmem\n-# Aug 24, 2017 (CG):\n-#     VIS_science_xml_out: specify mime_type=\"json\" for outfile (bug #5563)\n-# Nov 26, 2016 (CG):\n-#     processExp: cores = 1 not to use the multicore queues at CC\n-#                 walltime = 24 h to cope the 2nd SExtractor run\n-#     stacking  : walltime = 8 h\n-# Apr 07, 2016 (CG):\n-#     ComputingResources: ram = 4.0 for all jobs\n-# Apr 03, 2016 (CG):\n-#     Non linearity model is not a processQuad input any more\n-# Mar 18, 2016 (CG):\n-#    added processFlatQuad executable\n-# Mar 16, 2016 (CG):\n-#    added explist2quadlist, processQuad and ghosts2stack executables\n \n from euclidwf.framework.taskdefs import (\n     Executable,\n@@ -66,18 +46,18 @@ master_ci_estimate = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_CTI_Master_CI\",\n     inputs=[\n          Input('config'),\n-#        Input(\"MDB\"),\n-        Input(\"quad_list_of_lists\")],\n+        Input(\"quad_list_of_lists\")\n+    ],\n     outputs=[Output(\"cti_master_ci\", mime_type=\"json\")],\n     resources=ComputingResources(cores=1, ram=256.0, walltime=4.0),\n )\n \n-quad2FPA = Executable(command = f\"E-Run VIS_Tasks {TASKS_VER} VIS_quad_to_fpa\",\n-                      inputs = [Input(\"infilelist_data\"), \"config\"],\n-                      outputs = [Output(\"master_data\", mime_type=\"json\")],\n-                      resources = ComputingResources(cores = 1,\n-                                                     ram = 3.0,\n-                                                     walltime = 1.0))\n+quad2FPA = Executable(\n+    command = f\"E-Run VIS_Tasks {TASKS_VER} VIS_quad_to_fpa\",\n+    inputs = [Input(\"infilelist_data\"), \"config\"],\n+    outputs = [Output(\"master_data\", mime_type=\"json\")],\n+    resources = ComputingResources(cores = 1, ram = 3.0, walltime = 1.0)\n+)\n \n \n \n@@ -85,8 +65,7 @@ VIS_cti_master_ci_xml_out = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_cti_master_ci_xml_out\",\n     inputs=[\"config\", \"cti_master_ci_list\"],\n     outputs=[\n-        Output(\"dpdmasterci\", mime_type=\"json\", content_type=\"listfile\"),\n-        Output(\"dpdanalysis_out\", mime_type=\"json\", content_type=\"listfile\"),\n+        Output(\"master_ci_xml_out\"),\n     ],\n     resources=ComputingResources(cores=1, ram=7.0, walltime=3.0),\n )\n",
                            "Merge branch 'cti_xml_out' into 'release-13.0'",
                            "Catherine Grenet",
                            "2023-08-12T13:39:06.000+00:00",
                            "186e271fa9883de8b10db78ab0693ea4d5c6a379"
                        ],
                        [
                            "@@ -65,7 +65,7 @@ VIS_cti_master_ci_xml_out = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_cti_master_ci_xml_out\",\n     inputs=[\"config\", \"cti_master_ci_list\"],\n     outputs=[\n-        Output(\"dpdmasterci\"),\n+        Output(\"master_ci_xml_out\"),\n     ],\n     resources=ComputingResources(cores=1, ram=7.0, walltime=3.0),\n )\n",
                            "formatting and parameter names",
                            "James Nightingale",
                            "2023-08-10T11:07:50.000+01:00",
                            "6ba0d9f757fecb3a1eef1be2385c1a2ac939cdc2"
                        ],
                        [
                            "@@ -17,8 +17,6 @@ from euclidwf.framework.taskdefs import (\n from VIS_ProcessField_Pipeline.PkgDef_VIS_ProcessField import TASKS_VER\n import os\n \n-TASKS_VER = \"13.0.11\"\n-\n PIPE_NAME = \"VIS_\" + os.path.splitext( os.path.basename( __file__))[0].split( \"VIS_\")[1]\n \n VIS_cti_xml_in = Executable(\n",
                            "merge time",
                            "James Nightingale",
                            "2023-08-10T10:57:03.000+01:00",
                            "c67653384be3dc4a0cf8048f7879a9f9edab81d6"
                        ],
                        [
                            "@@ -17,7 +17,7 @@ from euclidwf.framework.taskdefs import (\n from VIS_ProcessField_Pipeline.PkgDef_VIS_ProcessField import TASKS_VER\n import os\n \n-TASKS_VER = \"13.0.3\"\n+TASKS_VER = \"13.0.11\"\n \n PIPE_NAME = \"VIS_\" + os.path.splitext( os.path.basename( __file__))[0].split( \"VIS_\")[1]\n \n",
                            "manual tasks override",
                            "James Nightingale",
                            "2023-08-10T10:38:34.000+01:00",
                            "d069cbf5ee31280ddc765bff3a23fbd5c75d9b67"
                        ],
                        [
                            "@@ -1,30 +1,10 @@\n #\n-# File PkgDef_VIS_ProcessField.py\n+# File PkgDef_VIS_CTIMasterCI.py\n #\n-# Created on: Jan 09, 2016\n-# Author: Catherine Grenet\n+# Created on: June 2023\n+# Author: James Nightingale\n #\n # VIS package definition for IAL workflow manager\n-#\n-# History\n-# Nov 07, 2017 (LP & OH): processExp task is now splitted in 3 differents tasks to be able to run the astrometry over 4 dithers at the same time:\n-#     processExtractExp, processAstroField and processPhotoExp are now declared in package definition\n-# Oct 19, 2017 (OH): migration from pickle list to json file. Adjust tasks parameters name accordingly\n-# Sep 06, 2017 (CG): \"ram\" now specifies maxrss instead of maxvmem\n-# Aug 24, 2017 (CG):\n-#     VIS_science_xml_out: specify mime_type=\"json\" for outfile (bug #5563)\n-# Nov 26, 2016 (CG):\n-#     processExp: cores = 1 not to use the multicore queues at CC\n-#                 walltime = 24 h to cope the 2nd SExtractor run\n-#     stacking  : walltime = 8 h\n-# Apr 07, 2016 (CG):\n-#     ComputingResources: ram = 4.0 for all jobs\n-# Apr 03, 2016 (CG):\n-#     Non linearity model is not a processQuad input any more\n-# Mar 18, 2016 (CG):\n-#    added processFlatQuad executable\n-# Mar 16, 2016 (CG):\n-#    added explist2quadlist, processQuad and ghosts2stack executables\n \n from euclidwf.framework.taskdefs import (\n     Executable,\n@@ -71,7 +51,7 @@ master_ci_estimate = Executable(\n         Input(\"quad_list_of_lists\")\n     ],\n     outputs=[Output(\"cti_master_ci\", mime_type=\"json\")],\n-    resources=ComputingResources(cores=1, ram=128.0, walltime=4.0),\n+    resources=ComputingResources(cores=1, ram=256.0, walltime=4.0),\n )\n \n quad2FPA = Executable(\n",
                            "fix conflicts",
                            "James Nightingale",
                            "2023-08-10T10:37:45.000+01:00",
                            "77f423cb2068faeffab5fa9074c5e89e156b42d4"
                        ]
                    ],
                    "VIS_IAL_Pipelines/auxdir/VIS_IAL_Pipelines/VIS_CTITimeEvolution_Pipeline/PkgDef_VIS_CTITimeEvolution.py": [
                        [
                            "@@ -17,7 +17,6 @@ from VIS_ProcessField_Pipeline.PkgDef_VIS_ProcessField import TASKS_VER\n VIS_xml_in = Executable(\n     command=f\"E-Run VIS_Tasks {TASKS_VER} VIS_cti_time_evolution_xml_in\",\n     inputs=[\n-        Input(\"auxdatafiles\"),\n         Input(\"MDB\"),\n         Input(\"cti_results_in\", content_type=\"listfile\"),\n      ],\n@@ -34,7 +33,7 @@ fit_cti_time_evolution = Executable(command   = f\"E-Run VIS_Tasks {TASKS_VER} VI\n                                       Input(\"cti_results_x1_ccd\")],\n                          outputs   = [Output(\"time_evolution_json\", mime_type=\"json\")],\n                          resources = ComputingResources(cores = 1,\n-                                                        ram = 4.0,\n+                                                        ram = 32.0,\n                                                         walltime = 6.0))\n \n VIS_cti_xml_out = Executable(\n",
                            "Merge branch 'release-13.0' into develop:[UPD]CTI calibration pipelines and SUM",
                            "Catherine Grenet",
                            "2023-08-12T16:30:23.000+02:00",
                            "00768b44636e82062558835b8042288232f85af9"
                        ]
                    ]
                },
                "count_selected_modifications": "6",
                "tags_in_period": [
                    {
                        "name": "13.0.10",
                        "created_at": "2023-08-08T14:57:49.000+02:00",
                        "author_name": "Catherine Grenet"
                    },
                    {
                        "name": "13.0.11",
                        "created_at": "2023-08-12T14:20:36.000+00:00",
                        "author_name": "Catherine Grenet"
                    },
                    {
                        "name": "13.0.12",
                        "created_at": "2023-08-14T16:13:23.000+02:00",
                        "author_name": "Catherine Grenet"
                    }
                ]
            },
            "PF-VIS/VIS_Transients": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_XTalk": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_BiasCorrection": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_BiasCalibration": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_PRNUCalibration": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_PRNUCorrection": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_Helper_scripts": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_PSF": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_Validation": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_Cosmics": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_CTI": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_NonLinCorrection": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_Pipelines": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_Tasks": {
                "start date": "2023-08-08T12:11:35",
                "end date": "2023-08-13T15:44:17",
                "start tag": "13.0.10",
                "end tag": "13.0.12",
                "count_files_modified": "53",
                "modifications_by_file": {
                    "HISTORY.txt": [
                        [
                            "@@ -1,9 +1,14 @@\n VIS_Tasks changelog\n -------------------\n \n+\n+* 11 Aug 2023 - mottet@iap.fr\n+** VIS_science_xml_out.py: fix #23096, compress EUC_VIS_DET-SWL*.fits separately after data product creation\n+\n * 10 Aug 2023 - mottet@iap.fr\n ** VIS_SmallScaleFlat: add DQC ouptut, should now accept any combination of single-LED/single-fluence master flats\n \n+\n * 04 Aug 2023 - herent@iap.fr\n ** VIS_Photometry/python/VIS_Photometry/VIS_Calibrate_Photometry.py: fix photometry issue #23277 for PDC dataset\n \n",
                            "Merge branch 'hotfix_23096_truncatedzip' into 'release-13.0'",
                            "Catherine Grenet",
                            "2023-08-13T15:44:17.000+00:00",
                            "0b3b8f472386353b13cc8d7fc90bb1e3e7d91eae"
                        ],
                        [
                            "@@ -1,9 +1,14 @@\n VIS_Tasks changelog\n -------------------\n \n+\n * 11 Aug 2023 - mottet@iap.fr\n ** VIS_science_xml_out.py: fix #23096, compress EUC_VIS_DET-SWL*.fits separately after data product creation\n \n+* 10 Aug 2023 - mottet@iap.fr\n+** VIS_SmallScaleFlat: add DQC ouptut, should now accept any combination of single-LED/single-fluence master flats\n+\n+\n * 04 Aug 2023 - herent@iap.fr\n ** VIS_Photometry/python/VIS_Photometry/VIS_Calibrate_Photometry.py: fix photometry issue #23277 for PDC dataset\n \n",
                            "Merge branch 'release-13.0' into 'hotfix_23096_truncatedzip'",
                            "Catherine Grenet",
                            "2023-08-13T15:43:46.000+00:00",
                            "99a0100288666fcf60920019baf1e402042bf3d6"
                        ],
                        [
                            "@@ -1,6 +1,9 @@\n VIS_Tasks changelog\n -------------------\n \n+* 10 Aug 2023 - mottet@iap.fr\n+** VIS_SmallScaleFlat: add DQC ouptut, should now accept any combination of single-LED/single-fluence master flats\n+\n * 04 Aug 2023 - herent@iap.fr\n ** VIS_Photometry/python/VIS_Photometry/VIS_Calibrate_Photometry.py: fix photometry issue #23277 for PDC dataset\n \n",
                            "Merge branch 'release-13.0' into develop: add DQC ouptut, accepts any combination of LED/fluence",
                            "Catherine Grenet",
                            "2023-08-13T17:13:13.000+02:00",
                            "f3cbe70401789abfb61ef253f20cd3285bdc8ae7"
                        ],
                        [
                            "@@ -1,6 +1,9 @@\n VIS_Tasks changelog\n -------------------\n \n+* 10 Aug 2023 - mottet@iap.fr\n+** VIS_SmallScaleFlat: add DQC ouptut, should now accept any combination of single-LED/single-fluence master flats\n+\n * 04 Aug 2023 - herent@iap.fr\n ** VIS_Photometry/python/VIS_Photometry/VIS_Calibrate_Photometry.py: fix photometry issue #23277 for PDC dataset\n \n",
                            "Merge branch 'hotfix_22219_smallscaleflat' into 'release-13.0'",
                            "Catherine Grenet",
                            "2023-08-13T15:08:12.000+00:00",
                            "49dffe472a2bd94712011316b9b0293111b82125"
                        ],
                        [
                            "@@ -1,6 +1,9 @@\n VIS_Tasks changelog\n -------------------\n \n+* 11 Aug 2023 - mottet@iap.fr\n+** VIS_science_xml_out.py: fix #23096, compress EUC_VIS_DET-SWL*.fits separately after data product creation\n+\n * 04 Aug 2023 - herent@iap.fr\n ** VIS_Photometry/python/VIS_Photometry/VIS_Calibrate_Photometry.py: fix photometry issue #23277 for PDC dataset\n \n",
                            "VIS_science_xml_out.py: fix #23096, compress EUC_VIS_DET-SWL*.fits separately after data product creation",
                            "Sylvain Mottet",
                            "2023-08-11T17:20:27.000+02:00",
                            "a101ae9be9854389b2119569a9e6fd9a6e0b98e9"
                        ],
                        [
                            "@@ -1,6 +1,9 @@\n VIS_Tasks changelog\n -------------------\n \n+* 10 Aug 2023 - mottet@iap.fr\n+** VIS_SmallScaleFlat: add DQC ouptut, should now accept any combination of single-LED/single-fluence master flats\n+\n * 04 Aug 2023 - herent@iap.fr\n ** VIS_Photometry/python/VIS_Photometry/VIS_Calibrate_Photometry.py: fix photometry issue #23277 for PDC dataset\n \n",
                            "VIS_SmallScaleFlat: add DQC ouptut, should now accept any combination of single-LED/single-fluence master flats",
                            "Sylvain Mottet",
                            "2023-08-10T10:46:26.000+02:00",
                            "9f90d8ea7856f75f235f33db2ebf500bc88cbbde"
                        ],
                        [
                            "@@ -1,6 +1,27 @@\n VIS_Tasks changelog\n -------------------\n \n+* 04 Aug 2023 - herent@iap.fr\n+** VIS_Photometry/python/VIS_Photometry/VIS_Calibrate_Photometry.py: fix photometry issue #23277 for PDC dataset\n+\n+* 31 Jul 2023 - mottet@iap.fr\n+** VIS_process_quad.py: fix #23240, add config_filename to NL correction PE call\n+\n+* 29 Jul 2023 - catherine.grenet@iap.fr\n+Feature ##23191 Astrometric calibration (use-fpa-model): adapt magnitude range selection to exposure duration\n+*** Modules.py: Wcsfit() new argument exptime\n+*** VIS_process_astro_field.py: pass EXPTIME to Modules.Wcsfit()\n+\n+* 28 Jul 2023 - mottet@iap.fr\n+** VIS_xml_in.py, VIS_ghosts_calibration: fix #23163, now use DpdVisGhostModel to store the ghost model.\n+\n+* 25 Jul 2023 - herent@iap.fr\n+** VIS_xml_in.py: add Gain calibration section to setup the activation of specific PE correction\n+                  for the Gain calibration pipeline\n+\n+* 25 Jul 2023 - mottet@iap.fr\n+** VIS_extract_sources.py: fix bug 22894, 'tmpdir' is now automatically and systematically used\n+\n * 07 July 2023 - v13.0.2 - matt.wander@open.ac.uk\n ** VIS_TrapPumping_IO.plotting: fix bins and stacking on histograms (#22966)\n \n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_Tasks_M/python/VIS_Tasks_M/VIS_science_xml_out.py": [
                        [
                            "@@ -335,10 +335,12 @@ def mainMethod(args):\n         update_background_zodimodel( background, config, int( primhdr['EXPTIME']))\n \n         # Get Euclid filenames\n+        # SWL-DET has 3 extensions per detector, bug in fitsio prevents from generating it compressed\n+        # so generate it uncompressed and compress it after data product creation\n         euc_det_file = filename_provider_obj.get_allowed_filename(processing_function='VIS',\n                                                           type_name=\"SWL-DET-\" + exp_id + \"-0000000\",\n                                                           instance_id='',\n-                                                          extension=fits_ext)\n+                                                          extension=\".fits\")\n         euc_bkg_file = filename_provider_obj.get_allowed_filename(processing_function='VIS',\n                                                              type_name=\"SWL-BKG-\" + exp_id + \"-0000000\",\n                                                              instance_id='',\n@@ -380,6 +382,14 @@ def mainMethod(args):\n                                                    euc_bkg_file,\n                                                    euc_wgt_file,\n                                                    raw_meta = exposure_config_section)\n+        if ZIP_OUTPUTS:\n+          # compress SWL-DET FITS file and put its compressed name in data product\n+          zip_tools.zip_file( os.path.join( datadir, euc_det_file),\n+                              os.path.join( datadir, euc_det_file + \".gz\"),\n+                              options=\"\")\n+          euc_det_file += \".gz\"\n+          vis_cal_frame_dp.Data.DataStorage.DataContainer.FileName = euc_det_file\n+\n         # Spatial footprint observation sequence and observation date will be needed for single exposure catalog\n         spatial_footprint = vis_cal_frame_dp.Data.ImgSpatialFootprint\n         observation_sequence = vis_cal_frame_dp.Data.ObservationSequence\n",
                            "Merge branch 'hotfix_23096_truncatedzip' into 'release-13.0'",
                            "Catherine Grenet",
                            "2023-08-13T15:44:17.000+00:00",
                            "0b3b8f472386353b13cc8d7fc90bb1e3e7d91eae"
                        ],
                        [
                            "@@ -379,7 +379,7 @@ def mainMethod(args):\n                                                    euc_psf_file,\n                                                    euc_bkg_file,\n                                                    euc_wgt_file,\n-                                                   raw_frame_id = raw_frame_ids[-1])\n+                                                   raw_meta = exposure_config_section)\n         # Spatial footprint observation sequence and observation date will be needed for single exposure catalog\n         spatial_footprint = vis_cal_frame_dp.Data.ImgSpatialFootprint\n         observation_sequence = vis_cal_frame_dp.Data.ObservationSequence\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "CMakeLists.txt": [
                        [
                            "@@ -8,11 +8,11 @@ find_package(ElementsProject)\n #                         elements_project(MyProject 1.0 USE Element 3.8)\n #===============================================================================\n \n-elements_project( VIS_Tasks 13.0.10\n+elements_project( VIS_Tasks 13.0.12\n                   USE Elements 6.2.1\n                       VIS_PyLibrary 3.20.2\n                       VIS_ImageTools 3.16.0\n-                      VIS_CTI 5.8.1\n+                      VIS_CTI 5.9.0\n                       VIS_Instrument_Tools 0.7.0\n                       EL_Utils 1.4.0\n                       ST_DataModelTools 9.2.0\n",
                            "Merge branch 'release-13.0' into 'hotfix_23096_truncatedzip'",
                            "Catherine Grenet",
                            "2023-08-13T15:43:46.000+00:00",
                            "99a0100288666fcf60920019baf1e402042bf3d6"
                        ],
                        [
                            "@@ -8,7 +8,7 @@ find_package(ElementsProject)\n #                         elements_project(MyProject 1.0 USE Element 3.8)\n #===============================================================================\n \n-elements_project( VIS_Tasks 13.0.11\n+elements_project( VIS_Tasks 13.0.12\n                   USE Elements 6.2.1\n                       VIS_PyLibrary 3.20.2\n                       VIS_ImageTools 3.16.0\n",
                            "Bump version to 13.0.12",
                            "Catherine Grenet",
                            "2023-08-12T17:36:27.000+02:00",
                            "b8de1395e018598e060b64d2dd2ef6335eb8e197"
                        ],
                        [
                            "@@ -12,7 +12,7 @@ elements_project( VIS_Tasks 13.1\n                   USE Elements 6.2.1\n                       VIS_PyLibrary 3.20.2\n                       VIS_ImageTools 3.17\n-                      VIS_CTI 5.8.1\n+                      VIS_CTI 5.9.0\n                       VIS_Instrument_Tools 0.7.0\n                       EL_Utils 1.4.0\n                       ST_DataModelTools 9.2.0\n",
                            "Merge branch 'release-13.0' into develop:[UPD]Upgrade VIS_CTI version to 5.9.0",
                            "Catherine Grenet",
                            "2023-08-12T15:33:54.000+02:00",
                            "48384a3ab6567d1d1953a0ffb1dd4be5f0a62b9a"
                        ],
                        [
                            "@@ -12,7 +12,7 @@ elements_project( VIS_Tasks 13.0.11\n                   USE Elements 6.2.1\n                       VIS_PyLibrary 3.20.2\n                       VIS_ImageTools 3.16.0\n-                      VIS_CTI 5.8.1\n+                      VIS_CTI 5.9.0\n                       VIS_Instrument_Tools 0.7.0\n                       EL_Utils 1.4.0\n                       ST_DataModelTools 9.2.0\n",
                            "Merge branch 'cti_xml_out' into 'release-13.0': new VIS_CTI version 3.9.0",
                            "Catherine Grenet",
                            "2023-08-12T13:06:47.000+00:00",
                            "7caf4b40df58855f663af527c0fdff1013cae551"
                        ],
                        [
                            "@@ -12,7 +12,7 @@ elements_project( VIS_Tasks 13.0.11\n                   USE Elements 6.2.1\n                       VIS_PyLibrary 3.20.2\n                       VIS_ImageTools 3.16.0\n-                      VIS_CTI 5.8.2\n+                      VIS_CTI 5.9.0\n                       VIS_Instrument_Tools 0.7.0\n                       EL_Utils 1.4.0\n                       ST_DataModelTools 9.2.0\n",
                            "[UPD]Upgrade VIS_CTI version to 5.9.0",
                            "Catherine Grenet",
                            "2023-08-12T15:02:20.000+02:00",
                            "23121a01daae53d83b8d68e9de6daa760765c0f3"
                        ],
                        [
                            "@@ -8,7 +8,7 @@ find_package(ElementsProject)\n #                         elements_project(MyProject 1.0 USE Element 3.8)\n #===============================================================================\n \n-elements_project( VIS_Tasks 13.0.11\n+elements_project( VIS_Tasks 13.0.10\n                   USE Elements 6.2.1\n                       VIS_PyLibrary 3.20.2\n                       VIS_ImageTools 3.16.0\n",
                            "VIS_science_xml_out.py: fix #23096, compress EUC_VIS_DET-SWL*.fits separately after data product creation",
                            "Sylvain Mottet",
                            "2023-08-11T17:20:27.000+02:00",
                            "a101ae9be9854389b2119569a9e6fd9a6e0b98e9"
                        ],
                        [
                            "@@ -8,7 +8,7 @@ find_package(ElementsProject)\n #                         elements_project(MyProject 1.0 USE Element 3.8)\n #===============================================================================\n \n-elements_project( VIS_Tasks 13.0.10\n+elements_project( VIS_Tasks 13.0.11\n                   USE Elements 6.2.1\n                       VIS_PyLibrary 3.20.2\n                       VIS_ImageTools 3.16.0\n",
                            "Merge branch 'hotfix_22219_smallscaleflat' of gitlab.euclid-sgs.uk:PF-VIS/VIS_Tasks into hotfix_22219_smallscaleflat",
                            "Sylvain Mottet",
                            "2023-08-11T15:52:05.000+02:00",
                            "4a8f455505cb4dd23c78ce82dbc64a457bbefb89"
                        ],
                        [
                            "@@ -8,7 +8,7 @@ find_package(ElementsProject)\n #                         elements_project(MyProject 1.0 USE Element 3.8)\n #===============================================================================\n \n-elements_project( VIS_Tasks 13.0.8\n+elements_project( VIS_Tasks 13.0.10\n                   USE Elements 6.2.1\n                       VIS_PyLibrary 3.20.2\n                       VIS_ImageTools 3.16.0\n",
                            "FromToXML.py: revert to previous create_analysis_dp() interface, tested with VIS_SmallScaleFlat, VIS_MasterBias and VIS_ProcessField",
                            "Sylvain Mottet",
                            "2023-08-11T15:48:54.000+02:00",
                            "51ebcf317e09ed13867124609df8d94835f7c81f"
                        ],
                        [
                            "@@ -8,7 +8,7 @@ find_package(ElementsProject)\n #                         elements_project(MyProject 1.0 USE Element 3.8)\n #===============================================================================\n \n-elements_project( VIS_Tasks 13.0.8\n+elements_project( VIS_Tasks 13.0.11\n                   USE Elements 6.2.1\n                       VIS_PyLibrary 3.20.2\n                       VIS_ImageTools 3.16.0\n",
                            "Merge branch 'release-13.0' into 'hotfix_22219_smallscaleflat'",
                            "Sylvain Mottet",
                            "2023-08-10T09:00:02.000+00:00",
                            "aa16de65d5938dda3ff8c1d7f3f0ddd2a5a8daf4"
                        ],
                        [
                            "@@ -8,7 +8,7 @@ find_package(ElementsProject)\n #                         elements_project(MyProject 1.0 USE Element 3.8)\n #===============================================================================\n \n-elements_project( VIS_Tasks 13.0.9\n+elements_project( VIS_Tasks 13.0.8\n                   USE Elements 6.2.1\n                       VIS_PyLibrary 3.20.2\n                       VIS_ImageTools 3.16.0\n",
                            "VIS_SmallScaleFlat: add DQC ouptut, should now accept any combination of single-LED/single-fluence master flats",
                            "Sylvain Mottet",
                            "2023-08-10T10:46:26.000+02:00",
                            "9f90d8ea7856f75f235f33db2ebf500bc88cbbde"
                        ],
                        [
                            "@@ -8,7 +8,7 @@ find_package(ElementsProject)\n #                         elements_project(MyProject 1.0 USE Element 3.8)\n #===============================================================================\n \n-elements_project( VIS_Tasks 13.0.10\n+elements_project( VIS_Tasks 13.0.11\n                   USE Elements 6.2.1\n                       VIS_PyLibrary 3.20.2\n                       VIS_ImageTools 3.16.0\n",
                            "Bump version to 13.0.11",
                            "Catherine Grenet",
                            "2023-08-08T15:48:26.000+02:00",
                            "0e676a42c5b6036095fe21ac0a879e9d23bff3b6"
                        ],
                        [
                            "@@ -8,9 +8,9 @@ find_package(ElementsProject)\n #                         elements_project(MyProject 1.0 USE Element 3.8)\n #===============================================================================\n \n-elements_project( VIS_Tasks 13.0.3\n+elements_project( VIS_Tasks 13.0.11\n                   USE Elements 6.2.1\n-                      VIS_PyLibrary 3.20.1\n+                      VIS_PyLibrary 3.20.2\n                       VIS_ImageTools 3.16.0\n                       VIS_CTI 5.8.2\n                       VIS_Instrument_Tools 0.7.0\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ],
                        [
                            "@@ -8,7 +8,7 @@ find_package(ElementsProject)\n #                         elements_project(MyProject 1.0 USE Element 3.8)\n #===============================================================================\n \n-elements_project( VIS_Tasks 13.0.10\n+elements_project( VIS_Tasks 13.0.11\n                   USE Elements 6.2.1\n                       VIS_PyLibrary 3.20.2\n                       VIS_ImageTools 3.16.0\n",
                            "master ci xml out fixed",
                            "James Nightingale",
                            "2023-08-08T15:28:42.000+02:00",
                            "7db1ab490e0de87d00fba4037689dd8187f3774e"
                        ]
                    ],
                    "VIS_Blooming/python/VIS_Blooming/VIS_blooming_calib.py": [
                        [
                            "@@ -136,7 +136,10 @@ def mainMethod(args):\n     blooming_json_dict['author'] = __file__\n     blooming_json_dict['units'] = \"e-/ADU\"   \n \n-\n+    ptc_json_dict = dict()\n+    \n+    # contains the 144 json files that contain the PTC data\n+    ptc_json_list = list()\n \n     blooming_model_file = \"\"\n     for ext in range(0, nquad):\n@@ -307,6 +310,21 @@ def mainMethod(args):\n        \n        #### update json file with blooming threshold estimation ####\n        blooming_json_dict[quadname] = blooming_threshold_per_quadrant[ext]\n+       \n+       # creation of a json file to be put in the data product\n+       for elmt_signal, elmt_var in zip(signal_without_outliers, variance_without_outliers):\n+         ptc_json_dict[elmt_signal] = elmt_var\n+\n+       ptc_json_file = FileNameProvider().get_allowed_filename( processing_function = 'VIS',\n+                                                                    type_name           = f\"PTC-QUADRANT-{ext}\",\n+                                                                    instance_id         = '',\n+                                                                    extension           = '.json')\n+       logger.info (\"==> Creating blooming calibration data product %s\", ptc_json_file)\n+       ptc_json_file = os.path.join( args.workdir, \"data\", ptc_json_file)\n+       with open(ptc_json_file, 'w') as fp:\n+         fp.write(json.dumps(ptc_json_dict, indent=2, default=np.ndarray.tolist))\n+\n+       ptc_json_list.append( os.path.basename(ptc_json_file))\n \n     # Write end data product\n \n@@ -337,6 +355,19 @@ def mainMethod(args):\n \n     DmUtils.save_product_metadata( data_product, dpdcalib_blooming)\n \n+    # adding to the data_product, inside Data.QualityParameterStorage, the json file containing the list of the PTC data points\n+    ptc_file = FileNameProvider().get_allowed_filename( processing_function = 'VIS',\n+                                                                    type_name           = \"list-PTCs\",\n+                                                                    instance_id         = '',\n+                                                                    extension           = '.json')\n+    ptc_file = os.path.join( args.workdir, \"data\", ptc_file)    \n+    with open(ptc_file, 'w') as fp:\n+      fp.write(json.dumps(ptc_json_list, indent=2, default=np.ndarray.tolist))\n+    logger.info(f\"ptc_file is : {ptc_file}\")\n+    FromToXML.add_quality_parameter_file(data_product, ptc_file)\n+\n+    DmUtils.save_product_metadata( data_product, dpdcalib_blooming)\n+\n     logger.info(blooming_threshold_per_quadrant)\n \n     logger.info( \"#\")\n",
                            "Merge branch 'release-13.0' into 'hotfix_23096_truncatedzip'",
                            "Catherine Grenet",
                            "2023-08-13T15:43:46.000+00:00",
                            "99a0100288666fcf60920019baf1e402042bf3d6"
                        ],
                        [
                            "@@ -325,10 +325,11 @@ def mainMethod(args):\n     data_product = FromToXML.create_DpdVisBloomingModel( os.path.basename( blooming_model_file))\n \n     # tar of the 144 png images into one single file, that will be added to the calibration product into Data.\n-    output_PTC_graphs_filename = \"PTC_graphs.tar\"\n+    output_PTC_graphs_filename = workdir+\"/data/PTC_graphs.tar\"\n \n     with tarfile.open(output_PTC_graphs_filename, \"w:gz\") as tar:\n       for filename in os.listdir(subdir):\n+        #logger.info(f\"filename is : {filename}\")\n         tar.add(os.path.join(subdir, filename), arcname=filename)\n \n     # adding to the data_product, inside Data.QualityParameterStorage, the file output_PTC_graphs_filename\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_PRNU/python/VIS_PRNU/VIS_SmallScaleFlat/VIS_CombinePRNU.py": [
                        [
                            "@@ -77,7 +77,7 @@ def combine_flagmaps( flagin_list, flagmap_out):\n   hdul0 = fits.open( flagin_list[0], memmap=False)\n \n   # create output flagmap\n-  logger.info( \"writing output flagmap \" + flagmap_out)\n+  logger.info( \"creating output flagmap \" + flagmap_out)\n   fits.writeto( flagmap_out, data=None, header=hdul0[0].header, overwrite=True)\n \n   # scan and combine flagmaps extensions\n@@ -102,18 +102,23 @@ def combine_PRNU( prnu_filelist, combine_model, timestamp):\n   # get LED identifiant of each input monochromatic PRNU\n   # and create a primary header storing the combined PRNU file names and coefficients\n   prnu_dict = dict()\n-  prim_hdr = dict()\n+  fluences = set()\n+  prim_hdr = None\n   for prnu_filename in prnu_filelist:\n     hdul_in = fits.open( prnu_filename, memmap=False)\n+    if prim_hdr is None:\n+      prim_hdr = hdul_in[0].header\n     led_id, fluence = VIS_SmallScaleFlat_xml_in.get_PRNU_metadata( prnu_filename)\n-    logger.info( f\"{prnu_filename}, LED{led_id}\")\n+    logger.info( f\"{prnu_filename}: LEDID={led_id}, FLUENCE={fluence}\")\n     prnu_dict[led_id] = hdul_in\n+    fluences.add( fluence)\n     prim_hdr[led_id + \"FILE\"] = os.path.basename( prnu_filename)\n     prim_hdr[led_id + \"COEF\"] = combine_model[\"LED\"+led_id]\n \n   led_ids = sorted( list( set( prnu_dict.keys())))\n   assert len( led_ids) == len( prnu_dict.keys()), \\\n     f\"ERROR: there must be only one input zero-signal PRNU per LED\"\n+  prim_hdr[\"LEDID\"] = ''.join( led_ids)\n \n   norm = 0\n   for led_id in led_ids:\n@@ -121,8 +126,13 @@ def combine_PRNU( prnu_filelist, combine_model, timestamp):\n   logger.info( f\"model norm for leds {led_ids}: {norm}\")\n \n   # create the output combined PRNU FITS file primary HDU\n-  small_scale_flat_out = os.path.join( DATADIR, f\"EUC_VIS_MSR-FLA_LED{''.join( led_ids)}-000ADU__{timestamp}.fits\")\n-  logger.info( \"create output combined PRNU file: \" + small_scale_flat_out)\n+  led_id = ''.join( led_ids)\n+  if len( fluences) == 1:\n+    fluence = VIS_SmallScaleFlat_xml_in.fluence_to_str( list( fluences)[0])\n+  else:\n+    fluence = \"000\"\n+  small_scale_flat_out = os.path.join( DATADIR, f\"EUC_VIS_MSR-FLA_LED{led_id}-{fluence}ADU__{timestamp}.fits\")\n+  logger.info( \"creating output combined PRNU \" + small_scale_flat_out)\n   prim_hdu = fits.HDUList( [fits.PrimaryHDU( header=fits.Header( prim_hdr))])\n   prim_hdu.writeto( small_scale_flat_out, overwrite=True)\n \n@@ -159,7 +169,7 @@ def defineSpecificProgramOptions():\n   # outputs\n   ap.add_argument( \"--smallscaleflat_out\", help=\"output SmallScaleFlat data product XML file path\")\n   ap.add_argument( \"--prnuflagmap_out\",    help=\"output flagmap data product XML file path\")\n-  ap.add_argument( \"--dqc_data_out\",       help=\"output data quality control data product XML file path\")\n+  ap.add_argument( \"--dqc_out\",       help=\"output data quality control data product XML file path\")\n   return ap\n \n \n@@ -190,7 +200,7 @@ def mainMethod( args):\n   xml_list = FromToXML.load_list_from_file( args.flagmaps_in)\n   for xml in xml_list:\n     flagmaps_in.append( os.path.join( DATADIR, FromToXML.get_xml_data_file_list( xml)[0]))\n-  flagmap_out = small_scale_flat_out.replace(\"EUC_VIS_MSR-FLA_LED\", \"EUC_VIS_MSR-FLA-FLAGMAP_LED\")\n+  flagmap_out = small_scale_flat_out.replace( \"EUC_VIS_MSR-FLA_LED\", \"EUC_VIS_MSR-FLA-FLAGMAP_LED\")\n   combine_flagmaps( flagmaps_in, flagmap_out)\n \n   # create SmallScaleFlat data product\n@@ -203,6 +213,13 @@ def mainMethod( args):\n \n   # create data quality control data product\n   # encapsulating extrapolated master flats and standard errors and slopes\n+  dp_dqc_out = FromToXML.create_analysis_dp( result_passed=True,\n+                                             aux_file=None,\n+                                             raw_frame_id=None,\n+                                             analysis_id=None,\n+                                             obs_seq_foranalysis=None,\n+                                             analysis_data=all_flatfiles)\n+  DmUtils.save_product_metadata( dp_dqc_out, args.dqc_out)\n \n   logger.info( \"#\")\n   logger.info( \"# Exiting %s mainMethod()\" % __name__)\n",
                            "Merge branch 'release-13.0' into 'hotfix_23096_truncatedzip'",
                            "Catherine Grenet",
                            "2023-08-13T15:43:46.000+00:00",
                            "99a0100288666fcf60920019baf1e402042bf3d6"
                        ],
                        [
                            "@@ -218,7 +218,7 @@ def mainMethod( args):\n                                              raw_frame_id=None,\n                                              analysis_id=None,\n                                              obs_seq_foranalysis=None,\n-                                             analysis_filelist=all_flatfiles)\n+                                             analysis_data=all_flatfiles)\n   DmUtils.save_product_metadata( dp_dqc_out, args.dqc_out)\n \n   logger.info( \"#\")\n",
                            "FromToXML.py: revert to previous create_analysis_dp() interface, tested with VIS_SmallScaleFlat, VIS_MasterBias and VIS_ProcessField",
                            "Sylvain Mottet",
                            "2023-08-11T15:48:54.000+02:00",
                            "51ebcf317e09ed13867124609df8d94835f7c81f"
                        ],
                        [
                            "@@ -77,7 +77,7 @@ def combine_flagmaps( flagin_list, flagmap_out):\n   hdul0 = fits.open( flagin_list[0], memmap=False)\n \n   # create output flagmap\n-  logger.info( \"writing output flagmap \" + flagmap_out)\n+  logger.info( \"creating output flagmap \" + flagmap_out)\n   fits.writeto( flagmap_out, data=None, header=hdul0[0].header, overwrite=True)\n \n   # scan and combine flagmaps extensions\n@@ -102,18 +102,23 @@ def combine_PRNU( prnu_filelist, combine_model, timestamp):\n   # get LED identifiant of each input monochromatic PRNU\n   # and create a primary header storing the combined PRNU file names and coefficients\n   prnu_dict = dict()\n-  prim_hdr = dict()\n+  fluences = set()\n+  prim_hdr = None\n   for prnu_filename in prnu_filelist:\n     hdul_in = fits.open( prnu_filename, memmap=False)\n+    if prim_hdr is None:\n+      prim_hdr = hdul_in[0].header\n     led_id, fluence = VIS_SmallScaleFlat_xml_in.get_PRNU_metadata( prnu_filename)\n-    logger.info( f\"{prnu_filename}, LED{led_id}\")\n+    logger.info( f\"{prnu_filename}: LEDID={led_id}, FLUENCE={fluence}\")\n     prnu_dict[led_id] = hdul_in\n+    fluences.add( fluence)\n     prim_hdr[led_id + \"FILE\"] = os.path.basename( prnu_filename)\n     prim_hdr[led_id + \"COEF\"] = combine_model[\"LED\"+led_id]\n \n   led_ids = sorted( list( set( prnu_dict.keys())))\n   assert len( led_ids) == len( prnu_dict.keys()), \\\n     f\"ERROR: there must be only one input zero-signal PRNU per LED\"\n+  prim_hdr[\"LEDID\"] = ''.join( led_ids)\n \n   norm = 0\n   for led_id in led_ids:\n@@ -121,8 +126,13 @@ def combine_PRNU( prnu_filelist, combine_model, timestamp):\n   logger.info( f\"model norm for leds {led_ids}: {norm}\")\n \n   # create the output combined PRNU FITS file primary HDU\n-  small_scale_flat_out = os.path.join( DATADIR, f\"EUC_VIS_MSR-FLA_LED{''.join( led_ids)}-000ADU__{timestamp}.fits\")\n-  logger.info( \"create output combined PRNU file: \" + small_scale_flat_out)\n+  led_id = ''.join( led_ids)\n+  if len( fluences) == 1:\n+    fluence = VIS_SmallScaleFlat_xml_in.fluence_to_str( list( fluences)[0])\n+  else:\n+    fluence = \"000\"\n+  small_scale_flat_out = os.path.join( DATADIR, f\"EUC_VIS_MSR-FLA_LED{led_id}-{fluence}ADU__{timestamp}.fits\")\n+  logger.info( \"creating output combined PRNU \" + small_scale_flat_out)\n   prim_hdu = fits.HDUList( [fits.PrimaryHDU( header=fits.Header( prim_hdr))])\n   prim_hdu.writeto( small_scale_flat_out, overwrite=True)\n \n@@ -159,7 +169,7 @@ def defineSpecificProgramOptions():\n   # outputs\n   ap.add_argument( \"--smallscaleflat_out\", help=\"output SmallScaleFlat data product XML file path\")\n   ap.add_argument( \"--prnuflagmap_out\",    help=\"output flagmap data product XML file path\")\n-  ap.add_argument( \"--dqc_data_out\",       help=\"output data quality control data product XML file path\")\n+  ap.add_argument( \"--dqc_out\",       help=\"output data quality control data product XML file path\")\n   return ap\n \n \n@@ -190,7 +200,7 @@ def mainMethod( args):\n   xml_list = FromToXML.load_list_from_file( args.flagmaps_in)\n   for xml in xml_list:\n     flagmaps_in.append( os.path.join( DATADIR, FromToXML.get_xml_data_file_list( xml)[0]))\n-  flagmap_out = small_scale_flat_out.replace(\"EUC_VIS_MSR-FLA_LED\", \"EUC_VIS_MSR-FLA-FLAGMAP_LED\")\n+  flagmap_out = small_scale_flat_out.replace( \"EUC_VIS_MSR-FLA_LED\", \"EUC_VIS_MSR-FLA-FLAGMAP_LED\")\n   combine_flagmaps( flagmaps_in, flagmap_out)\n \n   # create SmallScaleFlat data product\n@@ -203,6 +213,13 @@ def mainMethod( args):\n \n   # create data quality control data product\n   # encapsulating extrapolated master flats and standard errors and slopes\n+  dp_dqc_out = FromToXML.create_analysis_dp( result_passed=True,\n+                                             aux_file=None,\n+                                             raw_frame_id=None,\n+                                             analysis_id=None,\n+                                             obs_seq_foranalysis=None,\n+                                             analysis_filelist=all_flatfiles)\n+  DmUtils.save_product_metadata( dp_dqc_out, args.dqc_out)\n \n   logger.info( \"#\")\n   logger.info( \"# Exiting %s mainMethod()\" % __name__)\n",
                            "VIS_SmallScaleFlat: add DQC ouptut, should now accept any combination of single-LED/single-fluence master flats",
                            "Sylvain Mottet",
                            "2023-08-10T10:46:26.000+02:00",
                            "9f90d8ea7856f75f235f33db2ebf500bc88cbbde"
                        ]
                    ],
                    "VIS_PRNU/python/VIS_PRNU/VIS_SmallScaleFlat/VIS_ExtrapolatePRNU.py": [
                        [
                            "@@ -38,6 +38,7 @@ logger = logging.getLogger( __name__)\n from astropy.io import fits\n \n from VIS_Tasks_Common import FromToXML\n+from VIS_PyLibrary_Common.common_definitions import DATADIR\n from VIS_PyLibrary_Common import pipe_tools\n from VIS_PRNU.VIS_SmallScaleFlat import VIS_SmallScaleFlat_xml_in\n \n@@ -91,15 +92,16 @@ def extrapolate_prnu( ledid, prnulist_in, fluences, out_fitsname, err_fitsname,\n         b = (n*Sxy - Sx*Sy) / nSxx_SxSx\n         # intercept\n         a = Sy/n - b * Sx/n\n-        # standard errors\n-        # https://en.wikipedia.org/wiki/Standard_error\n-        Se2 = (n*Syy - Sy*Sy - b*b*nSxx_SxSx) / (n * (n-2))\n-        Sb2 = n*Se2 / nSxx_SxSx\n-        Sa2 = Sb2 * Sxx / n\n         # save outputs\n         data_out[row, col]  = a\n-        error_out[row, col] = np.sqrt( Sa2)\n         slope_out[row, col] = b\n+        # standard errors\n+        # https://en.wikipedia.org/wiki/Standard_error\n+        if n>2:\n+          Se2 = (n*Syy - Sy*Sy - b*b*nSxx_SxSx) / (n * (n-2))\n+          Sb2 = n*Se2 / nSxx_SxSx\n+          Sa2 = Sb2 * Sxx / n\n+          error_out[row, col] = np.sqrt( Sa2)\n     hdu.data = None\n     fits.append( out_fitsname,   data_out,  header=hdu.header, verify=False)\n     fits.append( err_fitsname,   error_out, header=hdu.header, verify=False)\n@@ -150,10 +152,19 @@ def mainMethod( args):\n     fluences.append( fluence)\n \n   timestamp = FromToXML.microsec_timestamp()\n-  out_fitsname   = f\"EUC_VIS_MSR-FLA_LED{ledid}-000ADU__{timestamp}.fits\"\n-  err_fitsname   = f\"EUC_VIS_MSR-FLA_LED{ledid}-000ADU-stderr__{timestamp}.fits\"\n-  slope_fitsname = f\"EUC_VIS_MSR-FLA_LED{ledid}-000ADU-slope__{timestamp}.fits\"\n-  extrapolate_prnu( ledid, prnu_list, fluences, out_fitsname, err_fitsname, slope_fitsname)\n+\n+  if len( fluences) > 1:\n+    out_fitsname   = os.path.join( DATADIR, f\"EUC_VIS_MSR-FLA_LED{ledid}-000ADU__{timestamp}.fits\")\n+    err_fitsname   = os.path.join( DATADIR, f\"EUC_VIS_MSR-FLA_LED{ledid}-000ADU-stderr__{timestamp}.fits\")\n+    slope_fitsname = os.path.join( DATADIR, f\"EUC_VIS_MSR-FLA_LED{ledid}-000ADU-slope__{timestamp}.fits\")\n+    extrapolate_prnu( ledid, prnu_list, fluences, out_fitsname, err_fitsname, slope_fitsname)\n+  else:\n+    # only one fluence, can't extrapolate masterflat, just use it as is\n+    fluence        = VIS_SmallScaleFlat_xml_in.fluence_to_str( fluences[0])\n+    out_fitsname   = os.path.join( DATADIR, f\"EUC_VIS_MSR-FLA_LED{ledid}-{fluence}ADU__{timestamp}.fits\")\n+    err_fitsname   = None\n+    slope_fitsname = None\n+    FromToXML.failsafe_symlink( prnu_list[0], out_fitsname)\n \n   # write to output\n   FromToXML.write_json( (out_fitsname, err_fitsname, slope_fitsname), args.prnulist_out)\n",
                            "Merge branch 'release-13.0' into 'hotfix_23096_truncatedzip'",
                            "Catherine Grenet",
                            "2023-08-13T15:43:46.000+00:00",
                            "99a0100288666fcf60920019baf1e402042bf3d6"
                        ]
                    ],
                    "VIS_PRNU/python/VIS_PRNU/VIS_SmallScaleFlat/VIS_SmallScaleFlat_xml_in.py": [
                        [
                            "@@ -62,6 +62,16 @@ def get_PRNU_metadata( prnu_filename):\n   return str( prim_hdr[\"LEDID\"]), float( prim_hdr[\"FLUENCE\"])\n \n \n+################################################################################\n+\n+def fluence_to_str( fluence):\n+  \"\"\"convert fluence from float to string using the kilo prefix when needed\"\"\"\n+  if fluence < 1000:\n+    return f\"{int( fluence)}\"\n+  else:\n+    return f\"{int( fluence/1000)}K\"\n+\n+\n ################################################################################\n \n def defineSpecificProgramOptions():\n",
                            "Merge branch 'release-13.0' into 'hotfix_23096_truncatedzip'",
                            "Catherine Grenet",
                            "2023-08-13T15:43:46.000+00:00",
                            "99a0100288666fcf60920019baf1e402042bf3d6"
                        ]
                    ],
                    "VIS_Tasks_Common/python/VIS_Tasks_Common/FromToXML.py": [
                        [
                            "@@ -66,6 +66,8 @@ from ST_DataModelBindings.dpd.vis import vismasterdarkframe_stub\n from ST_DataModelBindings.dpd.vis import vismasterflatframe_stub\n from ST_DataModelBindings.dpd.vis import visstackedframe_stub\n from ST_DataModelBindings.dpd.vis import visnonlinearitymodel_stub\n+from ST_DataModelBindings.dpd.vis import visctimodel_stub\n+from ST_DataModelBindings.dpd.vis import viscticalibrationresults_stub\n from ST_DataModelBindings.dpd.vis import vispsfmodel_stub\n from ST_DataModelBindings.dpd.vis import visdistortionmodel_stub\n from ST_DataModelBindings.dpd.vis import vislargeflatcalibration_stub\n@@ -620,7 +622,8 @@ def create_visFileContainerDataContainer( file_name,\n     # Fill it with the given values\n     data_container.FileName   = file_name\n     data_container.filestatus = file_status\n-    data_container.FileType   = file_type\n+# SM 7 aug. 2023: deprecated, or maybe never existed?\n+#    data_container.FileType   = file_type\n     return data_container\n \n \n@@ -1210,6 +1213,40 @@ def stack_dp( stack: str, survey_type: str, obsid: int, calblock_id: str,\n     return data_product\n \n \n+def cti_model_dp():\n+    \"\"\"\n+    Creates a DpdVisCTICalibrationResultsobject\n+\n+    Parameters\n+    ----------\n+    fits_file: filename containing cti calibration results (e.g. .zip files)\n+\n+    Returns\n+    -------\n+    DpdVisCTICalibrationResults object\n+    \"\"\"\n+\n+    import ST_DataModelBindings.ins_stub as ins_dict\n+\n+    # Create the data product\n+    data_product = viscticalibrationresults_stub.DpdVisCTICalibrationResults()\n+\n+    # Add Header\n+    data_product.Header = vis_generic_header(\"DpdVisCTICalibrationResults\", UNKNOWN_STRING)\n+\n+    # Add Data\n+    data = vis_stub.visCTICalibrationResults.Factory()\n+    # data.visCTICalibrationResults = storage\n+\n+    date_range = ins_dict.calibrationValidPeriod()\n+    date_range.TimestampStart = \"2023-02-21T00:00:00.000Z\"\n+    date_range.TimestampEnd = \"2023-02-22T00:00:00.000Z\"\n+\n+    data.ValidityRange = create_validity_range()\n+    data_product.Data = data\n+    return data_product\n+\n+\n def psfmodel_dp(fits_file: str, fits_file_grid: str):\n     \"\"\"Creates a DpdVisPSFModel\n \n@@ -1402,7 +1439,9 @@ def create_validation_requirementresult(requirement_id, requirement_result_passe\n \n     return requirement_result\n \n-def create_analysis_dp(result_passed: bool, aux_file: str, raw_frame_id=None, analysis_id=None, obs_seq_foranalysis=None, analysis_data=None):\n+\n+def create_analysis_dp( result_passed: bool, aux_file: str, raw_frame_id=None,\n+                        analysis_id=None, obs_seq_foranalysis=None, analysis_data=None):\n     \"\"\"Create a new DpdVisAnalysisResult data product, normally with an associated tar/zip file.\n     Parameters\n     ----------\n@@ -1453,12 +1492,12 @@ def create_analysis_dp(result_passed: bool, aux_file: str, raw_frame_id=None, an\n \n     if analysis_data is not None:\n        for filename in analysis_data:\n-         analysis_data = vis_stub.visAnalysisData.Factory()\n-         analysis_data.DataContainer = dss_stub.dataContainer.Factory()\n-         analysis_data.DataContainer.FileName = os.path.basename(filename)\n-         analysis_data.DataContainer.filestatus = \"PROPOSED\"\n-         analysis_data.DataContainer.FileType = \"fits\"\n-         data.AnalysisData.append(analysis_data)\n+         if (filename is not None) and (len( filename.strip()) > 0):\n+           vis_analysis_data = vis_stub.visAnalysisData.Factory()\n+           vis_analysis_data.DataContainer = dss_stub.dataContainer.Factory()\n+           vis_analysis_data.DataContainer.FileName = os.path.basename( filename)\n+           vis_analysis_data.DataContainer.filestatus = \"PROPOSED\"\n+           data.AnalysisData.append( vis_analysis_data)\n \n     data_product.Data = data\n     return data_product\n",
                            "Merge branch 'release-13.0' into 'hotfix_23096_truncatedzip'",
                            "Catherine Grenet",
                            "2023-08-13T15:43:46.000+00:00",
                            "99a0100288666fcf60920019baf1e402042bf3d6"
                        ],
                        [
                            "@@ -622,7 +622,8 @@ def create_visFileContainerDataContainer( file_name,\n     # Fill it with the given values\n     data_container.FileName   = file_name\n     data_container.filestatus = file_status\n-    data_container.FileType   = file_type\n+# SM 7 aug. 2023: deprecated, or maybe never existed?\n+#    data_container.FileType   = file_type\n     return data_container\n \n \n@@ -1438,7 +1439,9 @@ def create_validation_requirementresult(requirement_id, requirement_result_passe\n \n     return requirement_result\n \n-def create_analysis_dp(result_passed: bool, aux_file: str, raw_frame_id=None, analysis_id=None, obs_seq_foranalysis=None, analysis_data=None):\n+\n+def create_analysis_dp( result_passed: bool, aux_file: str, raw_frame_id=None,\n+                        analysis_id=None, obs_seq_foranalysis=None, analysis_data=None):\n     \"\"\"Create a new DpdVisAnalysisResult data product, normally with an associated tar/zip file.\n     Parameters\n     ----------\n@@ -1489,12 +1492,12 @@ def create_analysis_dp(result_passed: bool, aux_file: str, raw_frame_id=None, an\n \n     if analysis_data is not None:\n        for filename in analysis_data:\n-         analysis_data = vis_stub.visAnalysisData.Factory()\n-         analysis_data.DataContainer = dss_stub.dataContainer.Factory()\n-         analysis_data.DataContainer.FileName = os.path.basename(filename)\n-         analysis_data.DataContainer.filestatus = \"PROPOSED\"\n-         analysis_data.DataContainer.FileType = \"fits\"\n-         data.AnalysisData.append(analysis_data)\n+         if (filename is not None) and (len( filename.strip()) > 0):\n+           vis_analysis_data = vis_stub.visAnalysisData.Factory()\n+           vis_analysis_data.DataContainer = dss_stub.dataContainer.Factory()\n+           vis_analysis_data.DataContainer.FileName = os.path.basename( filename)\n+           vis_analysis_data.DataContainer.filestatus = \"PROPOSED\"\n+           data.AnalysisData.append( vis_analysis_data)\n \n     data_product.Data = data\n     return data_product\n",
                            "Merge branch 'release-13.0' into develop: add DQC ouptut, accepts any combination of LED/fluence",
                            "Catherine Grenet",
                            "2023-08-13T17:13:13.000+02:00",
                            "f3cbe70401789abfb61ef253f20cd3285bdc8ae7"
                        ],
                        [
                            "@@ -622,7 +622,8 @@ def create_visFileContainerDataContainer( file_name,\n     # Fill it with the given values\n     data_container.FileName   = file_name\n     data_container.filestatus = file_status\n-    data_container.FileType   = file_type\n+# SM 7 aug. 2023: deprecated, or maybe never existed?\n+#    data_container.FileType   = file_type\n     return data_container\n \n \n@@ -1438,7 +1439,9 @@ def create_validation_requirementresult(requirement_id, requirement_result_passe\n \n     return requirement_result\n \n-def create_analysis_dp(result_passed: bool, aux_file: str, raw_frame_id=None, analysis_id=None, obs_seq_foranalysis=None, analysis_data=None):\n+\n+def create_analysis_dp( result_passed: bool, aux_file: str, raw_frame_id=None,\n+                        analysis_id=None, obs_seq_foranalysis=None, analysis_data=None):\n     \"\"\"Create a new DpdVisAnalysisResult data product, normally with an associated tar/zip file.\n     Parameters\n     ----------\n@@ -1489,12 +1492,12 @@ def create_analysis_dp(result_passed: bool, aux_file: str, raw_frame_id=None, an\n \n     if analysis_data is not None:\n        for filename in analysis_data:\n-         analysis_data = vis_stub.visAnalysisData.Factory()\n-         analysis_data.DataContainer = dss_stub.dataContainer.Factory()\n-         analysis_data.DataContainer.FileName = os.path.basename(filename)\n-         analysis_data.DataContainer.filestatus = \"PROPOSED\"\n-         analysis_data.DataContainer.FileType = \"fits\"\n-         data.AnalysisData.append(analysis_data)\n+         if (filename is not None) and (len( filename.strip()) > 0):\n+           vis_analysis_data = vis_stub.visAnalysisData.Factory()\n+           vis_analysis_data.DataContainer = dss_stub.dataContainer.Factory()\n+           vis_analysis_data.DataContainer.FileName = os.path.basename( filename)\n+           vis_analysis_data.DataContainer.filestatus = \"PROPOSED\"\n+           data.AnalysisData.append( vis_analysis_data)\n \n     data_product.Data = data\n     return data_product\n",
                            "Merge branch 'hotfix_22219_smallscaleflat' into 'release-13.0'",
                            "Catherine Grenet",
                            "2023-08-13T15:08:12.000+00:00",
                            "49dffe472a2bd94712011316b9b0293111b82125"
                        ],
                        [
                            "@@ -66,6 +66,8 @@ from ST_DataModelBindings.dpd.vis import vismasterdarkframe_stub\n from ST_DataModelBindings.dpd.vis import vismasterflatframe_stub\n from ST_DataModelBindings.dpd.vis import visstackedframe_stub\n from ST_DataModelBindings.dpd.vis import visnonlinearitymodel_stub\n+from ST_DataModelBindings.dpd.vis import visctimodel_stub\n+from ST_DataModelBindings.dpd.vis import viscticalibrationresults_stub\n from ST_DataModelBindings.dpd.vis import vispsfmodel_stub\n from ST_DataModelBindings.dpd.vis import visdistortionmodel_stub\n from ST_DataModelBindings.dpd.vis import vislargeflatcalibration_stub\n@@ -1210,6 +1212,40 @@ def stack_dp( stack: str, survey_type: str, obsid: int, calblock_id: str,\n     return data_product\n \n \n+def cti_model_dp():\n+    \"\"\"\n+    Creates a DpdVisCTICalibrationResultsobject\n+\n+    Parameters\n+    ----------\n+    fits_file: filename containing cti calibration results (e.g. .zip files)\n+\n+    Returns\n+    -------\n+    DpdVisCTICalibrationResults object\n+    \"\"\"\n+\n+    import ST_DataModelBindings.ins_stub as ins_dict\n+\n+    # Create the data product\n+    data_product = viscticalibrationresults_stub.DpdVisCTICalibrationResults()\n+\n+    # Add Header\n+    data_product.Header = vis_generic_header(\"DpdVisCTICalibrationResults\", UNKNOWN_STRING)\n+\n+    # Add Data\n+    data = vis_stub.visCTICalibrationResults.Factory()\n+    # data.visCTICalibrationResults = storage\n+\n+    date_range = ins_dict.calibrationValidPeriod()\n+    date_range.TimestampStart = \"2023-02-21T00:00:00.000Z\"\n+    date_range.TimestampEnd = \"2023-02-22T00:00:00.000Z\"\n+\n+    data.ValidityRange = create_validity_range()\n+    data_product.Data = data\n+    return data_product\n+\n+\n def psfmodel_dp(fits_file: str, fits_file_grid: str):\n     \"\"\"Creates a DpdVisPSFModel\n \n",
                            "Merge branch 'release-13.0' into develop:[UPD]Upgrade VIS_CTI version to 5.9.0",
                            "Catherine Grenet",
                            "2023-08-12T15:33:54.000+02:00",
                            "48384a3ab6567d1d1953a0ffb1dd4be5f0a62b9a"
                        ],
                        [
                            "@@ -66,6 +66,8 @@ from ST_DataModelBindings.dpd.vis import vismasterdarkframe_stub\n from ST_DataModelBindings.dpd.vis import vismasterflatframe_stub\n from ST_DataModelBindings.dpd.vis import visstackedframe_stub\n from ST_DataModelBindings.dpd.vis import visnonlinearitymodel_stub\n+from ST_DataModelBindings.dpd.vis import visctimodel_stub\n+from ST_DataModelBindings.dpd.vis import viscticalibrationresults_stub\n from ST_DataModelBindings.dpd.vis import vispsfmodel_stub\n from ST_DataModelBindings.dpd.vis import visdistortionmodel_stub\n from ST_DataModelBindings.dpd.vis import vislargeflatcalibration_stub\n@@ -1210,6 +1212,40 @@ def stack_dp( stack: str, survey_type: str, obsid: int, calblock_id: str,\n     return data_product\n \n \n+def cti_model_dp():\n+    \"\"\"\n+    Creates a DpdVisCTICalibrationResultsobject\n+\n+    Parameters\n+    ----------\n+    fits_file: filename containing cti calibration results (e.g. .zip files)\n+\n+    Returns\n+    -------\n+    DpdVisCTICalibrationResults object\n+    \"\"\"\n+\n+    import ST_DataModelBindings.ins_stub as ins_dict\n+\n+    # Create the data product\n+    data_product = viscticalibrationresults_stub.DpdVisCTICalibrationResults()\n+\n+    # Add Header\n+    data_product.Header = vis_generic_header(\"DpdVisCTICalibrationResults\", UNKNOWN_STRING)\n+\n+    # Add Data\n+    data = vis_stub.visCTICalibrationResults.Factory()\n+    # data.visCTICalibrationResults = storage\n+\n+    date_range = ins_dict.calibrationValidPeriod()\n+    date_range.TimestampStart = \"2023-02-21T00:00:00.000Z\"\n+    date_range.TimestampEnd = \"2023-02-22T00:00:00.000Z\"\n+\n+    data.ValidityRange = create_validity_range()\n+    data_product.Data = data\n+    return data_product\n+\n+\n def psfmodel_dp(fits_file: str, fits_file_grid: str):\n     \"\"\"Creates a DpdVisPSFModel\n \n",
                            "Merge branch 'cti_xml_out' into 'release-13.0': new VIS_CTI version 3.9.0",
                            "Catherine Grenet",
                            "2023-08-12T13:06:47.000+00:00",
                            "7caf4b40df58855f663af527c0fdff1013cae551"
                        ],
                        [
                            "@@ -1192,7 +1192,7 @@ def stack_dp( stack: str, survey_type: str, obsid: int, calblock_id: str,\n     data.ImgSpatialFootprint = DmUtils.create_spatial_footprint_from_header(ext_header,\n                                                                             N_FOOTPRINT_SAMPLE_STEPS)\n     data.ObservationId = obsid\n-    data.CalblockId = calblock_id\n+    data.CalblockId = str( calblock_id)\n     data.DataStorage = DmUtils.create_fits_storage(\n                                vis_stub.visStackedStorageFitsFile,\n                                os.path.basename(stack), \"vis.stackedImage\", \"0.1\")\n",
                            "Merge branch 'hotfix_22219_smallscaleflat' of gitlab.euclid-sgs.uk:PF-VIS/VIS_Tasks into hotfix_22219_smallscaleflat",
                            "Sylvain Mottet",
                            "2023-08-11T15:52:05.000+02:00",
                            "4a8f455505cb4dd23c78ce82dbc64a457bbefb89"
                        ],
                        [
                            "@@ -1403,8 +1403,9 @@ def create_validation_requirementresult(requirement_id, requirement_result_passe\n \n     return requirement_result\n \n+\n def create_analysis_dp( result_passed: bool, aux_file: str, raw_frame_id=None,\n-                        analysis_id=None, obs_seq_foranalysis=None, analysis_filelist=None):\n+                        analysis_id=None, obs_seq_foranalysis=None, analysis_data=None):\n     \"\"\"Create a new DpdVisAnalysisResult data product, normally with an associated tar/zip file.\n     Parameters\n     ----------\n@@ -1453,14 +1454,14 @@ def create_analysis_dp( result_passed: bool, aux_file: str, raw_frame_id=None,\n     data.InputRawFrameReference.ProductID = raw_frame_id\n     data.InputRawFrameReference.ProductType = \"DpdVisRawFrame\"\n \n-    if analysis_filelist is not None:\n-       for filename in analysis_filelist:\n+    if analysis_data is not None:\n+       for filename in analysis_data:\n          if (filename is not None) and (len( filename.strip()) > 0):\n-           analysis_data = vis_stub.visAnalysisData.Factory()\n-           analysis_data.DataContainer = dss_stub.dataContainer.Factory()\n-           analysis_data.DataContainer.FileName = os.path.basename( filename)\n-           analysis_data.DataContainer.filestatus = \"PROPOSED\"\n-           data.AnalysisData.append( analysis_data)\n+           vis_analysis_data = vis_stub.visAnalysisData.Factory()\n+           vis_analysis_data.DataContainer = dss_stub.dataContainer.Factory()\n+           vis_analysis_data.DataContainer.FileName = os.path.basename( filename)\n+           vis_analysis_data.DataContainer.filestatus = \"PROPOSED\"\n+           data.AnalysisData.append( vis_analysis_data)\n \n     data_product.Data = data\n     return data_product\n",
                            "FromToXML.py: revert to previous create_analysis_dp() interface, tested with VIS_SmallScaleFlat, VIS_MasterBias and VIS_ProcessField",
                            "Sylvain Mottet",
                            "2023-08-11T15:48:54.000+02:00",
                            "51ebcf317e09ed13867124609df8d94835f7c81f"
                        ],
                        [
                            "@@ -1193,7 +1193,7 @@ def stack_dp( stack: str, survey_type: str, obsid: int, calblock_id: str,\n     data.ImgSpatialFootprint = DmUtils.create_spatial_footprint_from_header(ext_header,\n                                                                             N_FOOTPRINT_SAMPLE_STEPS)\n     data.ObservationId = obsid\n-    data.CalblockId = calblock_id\n+    data.CalblockId = str( calblock_id)\n     data.DataStorage = DmUtils.create_fits_storage(\n                                vis_stub.visStackedStorageFitsFile,\n                                os.path.basename(stack), \"vis.stackedImage\", \"0.1\")\n",
                            "Merge branch 'release-13.0' into cti_xml_out",
                            "James Nightingale",
                            "2023-08-10T10:35:36.000+01:00",
                            "2957a7041c1656a95bdb8229c0fc0dac2e6471f3"
                        ],
                        [
                            "@@ -1192,7 +1192,7 @@ def stack_dp( stack: str, survey_type: str, obsid: int, calblock_id: str,\n     data.ImgSpatialFootprint = DmUtils.create_spatial_footprint_from_header(ext_header,\n                                                                             N_FOOTPRINT_SAMPLE_STEPS)\n     data.ObservationId = obsid\n-    data.CalblockId = calblock_id\n+    data.CalblockId = str( calblock_id)\n     data.DataStorage = DmUtils.create_fits_storage(\n                                vis_stub.visStackedStorageFitsFile,\n                                os.path.basename(stack), \"vis.stackedImage\", \"0.1\")\n",
                            "Merge branch 'release-13.0' into 'hotfix_22219_smallscaleflat'",
                            "Sylvain Mottet",
                            "2023-08-10T09:00:02.000+00:00",
                            "aa16de65d5938dda3ff8c1d7f3f0ddd2a5a8daf4"
                        ],
                        [
                            "@@ -620,7 +620,8 @@ def create_visFileContainerDataContainer( file_name,\n     # Fill it with the given values\n     data_container.FileName   = file_name\n     data_container.filestatus = file_status\n-    data_container.FileType   = file_type\n+# SM 7 aug. 2023: deprecated, or maybe never existed?\n+#    data_container.FileType   = file_type\n     return data_container\n \n \n@@ -1402,7 +1403,8 @@ def create_validation_requirementresult(requirement_id, requirement_result_passe\n \n     return requirement_result\n \n-def create_analysis_dp(result_passed: bool, aux_file: str, raw_frame_id=None, analysis_id=None, obs_seq_foranalysis=None, analysis_data=None):\n+def create_analysis_dp( result_passed: bool, aux_file: str, raw_frame_id=None,\n+                        analysis_id=None, obs_seq_foranalysis=None, analysis_filelist=None):\n     \"\"\"Create a new DpdVisAnalysisResult data product, normally with an associated tar/zip file.\n     Parameters\n     ----------\n@@ -1451,14 +1453,14 @@ def create_analysis_dp(result_passed: bool, aux_file: str, raw_frame_id=None, an\n     data.InputRawFrameReference.ProductID = raw_frame_id\n     data.InputRawFrameReference.ProductType = \"DpdVisRawFrame\"\n \n-    if analysis_data is not None:\n-       for filename in analysis_data:\n-         analysis_data = vis_stub.visAnalysisData.Factory()\n-         analysis_data.DataContainer = dss_stub.dataContainer.Factory()\n-         analysis_data.DataContainer.FileName = os.path.basename(filename)\n-         analysis_data.DataContainer.filestatus = \"PROPOSED\"\n-         analysis_data.DataContainer.FileType = \"fits\"\n-         data.AnalysisData.append(analysis_data)\n+    if analysis_filelist is not None:\n+       for filename in analysis_filelist:\n+         if (filename is not None) and (len( filename.strip()) > 0):\n+           analysis_data = vis_stub.visAnalysisData.Factory()\n+           analysis_data.DataContainer = dss_stub.dataContainer.Factory()\n+           analysis_data.DataContainer.FileName = os.path.basename( filename)\n+           analysis_data.DataContainer.filestatus = \"PROPOSED\"\n+           data.AnalysisData.append( analysis_data)\n \n     data_product.Data = data\n     return data_product\n",
                            "VIS_SmallScaleFlat: add DQC ouptut, should now accept any combination of single-LED/single-fluence master flats",
                            "Sylvain Mottet",
                            "2023-08-10T10:46:26.000+02:00",
                            "9f90d8ea7856f75f235f33db2ebf500bc88cbbde"
                        ],
                        [
                            "@@ -1191,7 +1191,7 @@ def stack_dp( stack: str, survey_type: str, obsid: int, calblock_id: str,\n     data.ImgSpatialFootprint = DmUtils.create_spatial_footprint_from_header(ext_header,\n                                                                             N_FOOTPRINT_SAMPLE_STEPS)\n     data.ObservationId = obsid\n-    data.CalblockId = calblock_id\n+    data.CalblockId = str( calblock_id)\n     data.DataStorage = DmUtils.create_fits_storage(\n                                vis_stub.visStackedStorageFitsFile,\n                                os.path.basename(stack), \"vis.stackedImage\", \"0.1\")\n",
                            "Merge branch 'release-13.0' into develop: [FIX]Bug #23358, [ENH]#22650",
                            "Catherine Grenet",
                            "2023-08-08T16:08:45.000+02:00",
                            "b0f56b32463c1432fbe28bf5d229e1254f1a56d3"
                        ],
                        [
                            "@@ -77,9 +77,11 @@ from ST_DataModelBindings.dpd.vis import ppovalidation_stub\n from ST_DataModelBindings.dpd.vis import validationresult_stub\n from ST_DataModelBindings.dpd.vis import visfilecontainer_stub\n from ST_DataModelBindings.dpd.vis import visbloomingmodel_stub\n+from ST_DataModelBindings.dpd.vis import visbfemodel_stub\n from ST_DataModelBindings.dpd.vis import vistrappumpingmodel_stub\n from ST_DataModelBindings.dpd.vis import visgainmodel_stub\n from ST_DataModelBindings.dpd.vis import viszeropoint_stub\n+from ST_DataModelBindings.dpd.vis import visghostmodel_stub\n # pro\n from ST_DataModelBindings.pro import le1_stub\n from ST_DataModelBindings.pro import vis_stub\n@@ -1028,7 +1030,8 @@ def stack_cat_dp(fits_catalog, spatial_footprint, observation_id, raw_frame_id=U\n # Calibrated exposure data product\n #---------------------------------\n \n-def calib_exp_dp(exposure: str, prnu_corr_exposure: str, psf: str, background: str, weightmap: str, raw_frame_id: str):\n+def calib_exp_dp( exposure: str, prnu_corr_exposure: str, psf: str,\n+                  background: str, weightmap: str, raw_meta: dict = None):\n     \"\"\"Creates a DpdVisCalibratedFrame from a FITS single exposure + associated files\n \n     Parameters\n@@ -1038,6 +1041,7 @@ def calib_exp_dp(exposure: str, prnu_corr_exposure: str, psf: str, background: s\n         psf: filename of the PSF model FITS file\n         background: filename of the background FITS file\n         weightmap: filename of the weightmap FITS file\n+        metadata: optional config.cfg section containing raw frame metadata\n \n     Returns\n     -------\n@@ -1098,19 +1102,18 @@ def calib_exp_dp(exposure: str, prnu_corr_exposure: str, psf: str, background: s\n     data.WLQ2Exposures = create_WLQ2_exposures(prnu_corr_exposure)\n     data.PsfModelStorage = DmUtils.create_fits_storage(\n                                vis_stub.visPsfModelStorageFitsFile,\n-                               psf, \"vis.psfModel\", \"0.1\")\n+                               os.path.basename( psf), \"vis.psfModel\", \"0.1\")\n     data.BackgroundStorage = DmUtils.create_fits_storage(\n                                vis_stub.visBackgroundStorageFitsFile,\n-                               background, \"vis.backgroundMap\", \"0.1\")\n+                               os.path.basename( background), \"vis.backgroundMap\", \"0.1\")\n     data.WeightStorage = DmUtils.create_fits_storage(\n                                vis_stub.visWeightStorageFitsFile,\n-                               weightmap, \"vis.weightMap\", \"0.1\")\n+                               os.path.basename( weightmap), \"vis.weightMap\", \"0.1\")\n     data.DataStorage = DmUtils.create_fits_storage(\n                                vis_stub.visCalibratedStorageFitsFile,\n-                               os.path.basename(exposure), \"vis.calibratedFrame\", \"0.1\")\n+                               os.path.basename( exposure), \"vis.calibratedFrame\", \"0.1\")\n \n     # DetectorList\n-#    data.DetectorList = img_stub.detectorList()\n     data.DetectorList = vis_stub.visCalFrameDetectorList()\n     ext_header_list = []\n     ext = 1\n@@ -1128,17 +1131,23 @@ def calib_exp_dp(exposure: str, prnu_corr_exposure: str, psf: str, background: s\n     data.ImgSpatialFootprint = DmUtils.create_spatial_footprint_from_header_list(ext_header_list,\n                                                                                  N_FOOTPRINT_SAMPLE_STEPS)\n \n-    # InputRawFrameReference\n-    data.InputRawFrameReference = sys_stub.dataProductReference()\n-    data.InputRawFrameReference.ProductID = raw_frame_id\n-    data.InputRawFrameReference.ProductType = \"DpdVisRawFrame\"\n+    if raw_meta is not None:\n+      if \"DpdVisRawFrame_ProductID\" in raw_meta:\n+        data.InputRawFrameReference = sys_stub.dataProductReference()\n+        data.InputRawFrameReference.ProductID = raw_meta[\"DpdVisRawFrame_ProductID\"]\n+        data.InputRawFrameReference.ProductType = \"DpdVisRawFrame\"\n+      if \"dp.Data.ObservationSequence.CalblockId\" in raw_meta:\n+        data.ObservationSequence.CalblockId = raw_meta[\"dp.Data.ObservationSequence.CalblockId\"]\n+      if \"dp.Data.ObservationSequence.CalblockVariant\"in raw_meta:\n+        data.ObservationSequence.CalblockVariant = raw_meta[\"dp.Data.ObservationSequence.CalblockVariant\"]\n \n     data_product.Data = data\n \n     return data_product\n \n \n-def stack_dp(stack: str, survey_type: str, obsid: int, psf: str, background: str, weightmap: str):\n+def stack_dp( stack: str, survey_type: str, obsid: int, calblock_id: str,\n+              psf: str, background: str, weightmap: str):\n     \"\"\"Creates a DpDVisStackedFrame from a FITS stack file + associated files\n \n     Parameters\n@@ -1184,6 +1193,7 @@ def stack_dp(stack: str, survey_type: str, obsid: int, psf: str, background: str\n     data.ImgSpatialFootprint = DmUtils.create_spatial_footprint_from_header(ext_header,\n                                                                             N_FOOTPRINT_SAMPLE_STEPS)\n     data.ObservationId = obsid\n+    data.CalblockId = calblock_id\n     data.DataStorage = DmUtils.create_fits_storage(\n                                vis_stub.visStackedStorageFitsFile,\n                                os.path.basename(stack), \"vis.stackedImage\", \"0.1\")\n@@ -1483,7 +1493,7 @@ def create_analysis_dp(result_passed: bool, aux_file: str, raw_frame_id=None, an\n          analysis_data.DataContainer = dss_stub.dataContainer.Factory()\n          analysis_data.DataContainer.FileName = os.path.basename(filename)\n          analysis_data.DataContainer.filestatus = \"PROPOSED\"\n-         analysis_data.DataContainer.FileType = \"fits\" \n+         analysis_data.DataContainer.FileType = \"fits\"\n          data.AnalysisData.append(analysis_data)\n \n     data_product.Data = data\n@@ -1802,6 +1812,10 @@ def create_DpdVisBloomingModel( file_name: str) ->  visbloomingmodel_stub.DpdVis\n   fill_visFileContainer_dp( dp, [file_name])\n   return dp\n \n+def create_DpdVisBFEModel( file_name: str) -> visbfemodel_stub.DpdVisBFEModel:\n+   dp = visbfemodel_stub.DpdVisBFEModel()\n+   fill_visFileContainer_dp( dp, [file_name])\n+   return dp\n \n def create_DpdVisGainModel( file_name: str) ->  visgainmodel_stub.DpdVisGainModel:\n   dp = visgainmodel_stub.DpdVisGainModel()\n@@ -1831,3 +1845,9 @@ def create_DpdVisZeroPoint( file_name: str) ->  viszeropoint_stub.DpdVisZeroPoin\n   dp = viszeropoint_stub.DpdVisZeroPoint()\n   fill_visFileContainer_dp( dp, [file_name])\n   return dp\n+\n+\n+def create_DpdVisGhostModel( file_name: str) ->  visghostmodel_stub.DpdVisGhostModel:\n+  dp = visghostmodel_stub.DpdVisGhostModel()\n+  fill_visFileContainer_dp( dp, [file_name])\n+  return dp\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ],
                        [
                            "@@ -1191,7 +1191,7 @@ def stack_dp( stack: str, survey_type: str, obsid: int, calblock_id: str,\n     data.ImgSpatialFootprint = DmUtils.create_spatial_footprint_from_header(ext_header,\n                                                                             N_FOOTPRINT_SAMPLE_STEPS)\n     data.ObservationId = obsid\n-    data.CalblockId = calblock_id\n+    data.CalblockId = str( calblock_id)\n     data.DataStorage = DmUtils.create_fits_storage(\n                                vis_stub.visStackedStorageFitsFile,\n                                os.path.basename(stack), \"vis.stackedImage\", \"0.1\")\n",
                            "Merge branch 'hotfix_23358_missingcalblockid' into 'release-13.0'",
                            "Catherine Grenet",
                            "2023-08-08T12:11:35.000+00:00",
                            "572755dca290595ae90f8f5f5561f3fe1916a2fb"
                        ]
                    ],
                    "VIS_Tasks_M/CMakeLists.txt": [
                        [
                            "@@ -71,6 +71,7 @@ elements_add_python_program(VIS_process_flat_quad VIS_Tasks_M.VIS_process_flat_q\n elements_add_python_program(VIS_process_dark_quad VIS_Tasks_M.VIS_process_dark_quad)\n elements_add_python_program(VIS_calib_xml_out VIS_Tasks_M.VIS_calib_xml_out)\n elements_add_python_program(VIS_cti_xml_out VIS_Tasks_M.VIS_cti_xml_out)\n+elements_add_python_program(VIS_cti_master_ci_xml_out VIS_Tasks_M.VIS_cti_master_ci_xml_out)\n elements_add_python_program(VIS_science_xml_out VIS_Tasks_M.VIS_science_xml_out)\n elements_add_python_program(VIS_xml_in VIS_Tasks_M.VIS_xml_in)\n elements_add_python_program(VIS_process_extract_exp VIS_Tasks_M.VIS_process_extract_exp)\n@@ -81,7 +82,6 @@ elements_add_python_program(VIS_Astrometry_calib VIS_Tasks_M.VIS_Astrometry_cali\n elements_add_python_program(VIS_PSF_calib VIS_Tasks_M.VIS_PSF_calib)\n elements_add_python_program(VIS_LargeFlat_calib VIS_Tasks_M.VIS_LargeFlat_calib)\n elements_add_python_program(VIS_CTI_Calibration VIS_Tasks_M.VIS_CTI_Calibration)\n-elements_add_python_program(VIS_CTI_Data_Visualize VIS_Tasks_M.VIS_CTI_Data_Visualize)\n elements_add_python_program(VIS_CTI_Master_CI VIS_Tasks_M.VIS_CTI_Master_CI)\n elements_add_python_program(VIS_process_astro_field_largeflat VIS_Tasks_M.VIS_process_astro_field_largeflat)\n elements_add_python_program(VIS_gain_calib VIS_Tasks_M.VIS_gain_calib)\n",
                            "Merge branch 'release-13.0' into 'hotfix_23096_truncatedzip'",
                            "Catherine Grenet",
                            "2023-08-13T15:43:46.000+00:00",
                            "99a0100288666fcf60920019baf1e402042bf3d6"
                        ]
                    ],
                    "VIS_Tasks_M/python/VIS_Tasks_M/VIS_CTI_Data_Visualize.py": [
                        [
                            "@@ -1,175 +0,0 @@\n-# Copyright (C) 2012-2020 Euclid Science Ground Segment\r\n-#\r\n-# This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General\r\n-# Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option)\r\n-# any later version.\r\n-#\r\n-# This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied\r\n-# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\r\n-# details.\r\n-#\r\n-# You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to\r\n-# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\r\n-#\r\n-import argparse\r\n-import os\r\n-import sys\r\n-\r\n-if sys.version_info[0] < 3:\r\n-    from ConfigParser import RawConfigParser\r\n-else:\r\n-    from configparser import RawConfigParser\r\n-import shutil\r\n-\r\n-# Euclid specific imports\r\n-import ElementsKernel.Logging as log\r\n-from astropy.io import fits\r\n-import numpy as np\r\n-import re\r\n-\r\n-# Local imports\r\n-from VIS_PyLibrary_Common import pe_run_information\r\n-\r\n-from VIS_Tasks_Common.FromToXML import read_json, write_json\r\n-from VIS_PyLibrary_Common import pipe_tools\r\n-\r\n-# initialise global logger\r\n-import ElementsKernel.Logging\r\n-\r\n-logger = ElementsKernel.Logging.getLogger(__name__)\r\n-\r\n-\r\n-def defineSpecificProgramOptions():\r\n-    \"\"\"\r\n-    @brief Allows to define the (command line and configuration file) options\r\n-    specific to this program\r\n-\r\n-    @details\r\n-    See the Elements documentation for more details.\r\n-    @return\r\n-    An  ArgumentParser.\r\n-    \"\"\"\r\n-\r\n-    # Inputs\r\n-    parser = argparse.ArgumentParser()\r\n-\r\n-    parser.add_argument(\"--workdir\", type=str, help=\"absolute path to the workdir\")\r\n-    parser.add_argument(\r\n-        \"--logdir\", type=str, help=\"path to the logdir, relative to the workdir\"\r\n-    )\r\n-    parser.add_argument(\"--config\", type=str, help=\"configuration file path\")\r\n-    parser.add_argument(\"--input_quads\", type=str)\r\n-    # Outputs\r\n-    parser.add_argument(\"--visualize_output\", type=str, help=\"Visualize json file\")\r\n-\r\n-    return parser\r\n-\r\n-\r\n-def mainMethod(args):\r\n-\r\n-    logger.info(\"#\")\r\n-    logger.info(\"# Entering %s mainMethod()\" % __name__)\r\n-    logger.info(\"# command line: \" + pipe_tools.get_erun_commandline())\r\n-    pipe_tools.log_task_environment(logger)\r\n-    logger.info(\"#\")\r\n-\r\n-    logdir = os.path.join(args.workdir, args.logdir)\r\n-    config_filename = os.path.join(args.workdir, args.config)\r\n-    input_quads = os.path.join(args.workdir, args.input_quads)\r\n-    visualize_output_name = os.path.join(args.workdir, args.visualize_output)\r\n-\r\n-    logger.info(\"ccdlistname: \" + visualize_output_name)\r\n-\r\n-    # Check that configuration file exists\r\n-    if os.path.isfile(config_filename) == False:\r\n-        logger.error(\"%s does not exist or is not readable\", config_filename)\r\n-        exit(1)\r\n-    # Instantiate the configuration file parser\r\n-    config = RawConfigParser()\r\n-    # Make it case-sensitive for parameter names\r\n-    config.optionxform = str\r\n-    # Open the configuration file\r\n-    config.read(config_filename)\r\n-\r\n-    # Set up logger\r\n-    logger.setLevel(\"DEBUG\")\r\n-\r\n-    logger.info(input_quads)\r\n-\r\n-    # Read parameters from config file\r\n-    # initialise PERunInformation dictionary for Data Quality Control\r\n-    # To be done later.\r\n-    peri = dict()\r\n-\r\n-    # Load quad name files.\r\n-    # NOTE: This is NOT 8*144 yet but 8 files/tuplelist.  These 8 files contain the 144 quads\r\n-    # I thin because of how we defined it in IAL Pip/Pkg these 8 files are in a file as a list of list\r\n-    # Basically a list of 8x1 where 1 is the file name.  Probably could be fixed in IAL definition.\r\n-    # Just in case it is 8x? higher than 1, will load up everything below.\r\n-    quad_name_files = [read_json(input_quads)]\r\n-    logger.info(\"Names of Quad Files:\")\r\n-    [logger.info(quad_name) for quad_name in quad_name_files]\r\n-\r\n-    visualize_output = []\r\n-\r\n-    # prefix file names with workdir\r\n-    all_quads = []\r\n-    print(f\"NUM FILES (FPARef_A): {quad_name_files}\")\r\n-    for i in range(len(quad_name_files)):\r\n-\r\n-        logger.info(\r\n-            f\"Quad Name file {i}: \"\r\n-            + str(quad_name_files[i])\r\n-            + \" len: \"\r\n-            + str(len(quad_name_files[i]))\r\n-        )\r\n-\r\n-        logger.info(\"quad name files[][]: \" + str(quad_name_files[i][0]))\r\n-\r\n-        for qname_tuple_file in quad_name_files[i]:\r\n-\r\n-            logger.info(\"Print QuadName TupleList: \" + qname_tuple_file)\r\n-            quad_144_list = read_json(qname_tuple_file)\r\n-            logger.info(\"Len quad_144_list: \" + str(quad_144_list))\r\n-            all_quads.append(quad_144_list)\r\n-\r\n-    # In a perfect world this [8][144] should be the same size and we don't bother opening fits files.\r\n-    # we just make file references from these lists. We are going for now to assume were in a perfect world\r\n-    # also a big assumption that every 4 quadrants are part of the same CCD.\r\n-    num_quads = len(all_quads[0])\r\n-\r\n-    # print(\"NUM FILES (FPARef_B): \" + str(all_quads))\r\n-    logger.info(\r\n-        \"NUM Quads in index 0: \"\r\n-        + str(num_quads)\r\n-        + \" Num of indexes: \"\r\n-        + str(len(all_quads[0]))\r\n-    )\r\n-\r\n-    print(all_quads)\r\n-    dddd\r\n-\r\n-    ccd_num = int(num_quads / 4)\r\n-    logger.info(\"Number of ccd to do: \" + str(ccd_num))\r\n-    for i in range(ccd_num):\r\n-        # For now lets store these names and everything in the gater_ccd directory instead of workdir.\r\n-        # Note it has .json names to this file we should do a strip or something here.\r\n-\r\n-        # file_name = visualize_output_name + \"_cti.\" + str(i) + \".json\"\r\n-        file_name = os.path.basename(visualize_output_name) + \"fpa_quad_\" + str(i) + \".png\"\r\n-\r\n-        ccd_quads = []\r\n-        visualize_output.append(file_name)\r\n-        for j in range(len(all_quads)):\r\n-            start_range = i * 4\r\n-            end_range = i * 4 + 4\r\n-            for k in range(start_range, end_range):\r\n-                ccd_quads.append(all_quads[j][k])\r\n-\r\n-\r\n-    logger.info(\"Writing to: \" + os.path.basename(visualize_output_name))\r\n-    write_json(visualize_output, visualize_output_name)\r\n-\r\n-    logger.info(\"#\")\r\n-    logger.info(\"# Exiting %s mainMethod()\" % __name__)\r\n-    logger.info(\"#\")\r\n",
                            "Merge branch 'release-13.0' into 'hotfix_23096_truncatedzip'",
                            "Catherine Grenet",
                            "2023-08-13T15:43:46.000+00:00",
                            "99a0100288666fcf60920019baf1e402042bf3d6"
                        ]
                    ],
                    "VIS_Tasks_M/python/VIS_Tasks_M/VIS_cti_master_ci_xml_out.py": [
                        [
                            "@@ -0,0 +1,147 @@\n+\"\"\"\r\n+@file: python/Tasks/VIS_master_ci_xml_out.py\r\n+@author: user\r\n+@date: 21/02/2023\r\n+\"\"\"\r\n+\r\n+#Standard library imports\r\n+import argparse\r\n+import os\r\n+import fitsio\r\n+import json\r\n+from pathlib import Path\r\n+import shutil\r\n+from typing import Union\r\n+\r\n+\r\n+# Euclid specific imports\r\n+from ST_DM_FilenameProvider.FilenameProvider import FileNameProvider\r\n+from ST_DM_DmUtils import DmUtils\r\n+from ST_DataModelBindings.bas import img_stub\r\n+from ST_DataModelBindings.pro import vis_stub\r\n+from ST_DataModelBindings.dpd.vis import vismasterciframe_stub\r\n+from VIS_Tasks_Common.FromToXML import (\r\n+  vis_filter,\r\n+  create_validity_range,\r\n+  vis_generic_header,\r\n+  create_img_type,\r\n+  UNKNOWN_STRING,\r\n+  add_quality_parameter_file\r\n+)\r\n+\r\n+from VIS_PyLibrary_Common.zip_tools import tar_zip_files\r\n+from VIS_PyLibrary_Common import pipe_tools\r\n+\r\n+import ElementsKernel.Logging\r\n+logger = ElementsKernel.Logging.getLogger( __name__)\r\n+\r\n+\r\n+################################################################################\r\n+\r\n+def defineSpecificProgramOptions():\r\n+\r\n+    parser = argparse.ArgumentParser()\r\n+    # inputs\r\n+    parser.add_argument( '--workdir',                    required=True,  help='absolute path to the workdir')\r\n+    parser.add_argument( '--logdir',                     required=True,  help='path to the logdir, relative to the workdir')\r\n+    parser.add_argument('--config',                                      help='configuration file path')\r\n+    parser.add_argument( '--cti_master_ci_list', required=True,  help='Path to the master CI results json file')\r\n+    # outputs\r\n+    parser.add_argument( '--master_ci_xml_out',                required=True,  help='output master CI results xml filename')\r\n+    return parser\r\n+\r\n+################################################################################\r\n+\r\n+def write_tar_zip(in_files: list[Union[Path, str]], out_file: Path) -> None:\r\n+  tar_zip_files(\" \".join(map(str, in_files)), str(out_file), False)\r\n+\r\n+def mainMethod( args):\r\n+\r\n+  logger.info( '#')\r\n+  logger.info( '# Entering %s mainMethod()' % __name__)\r\n+  logger.info( '# command line: ' + pipe_tools.get_erun_commandline())\r\n+  pipe_tools.log_task_environment( logger)\r\n+  logger.info( '#')\r\n+  \r\n+  # Create workdir folders for XML files if not present:\r\n+  \r\n+  if not os.path.isabs( args.master_ci_xml_out):\r\n+    args.master_ci_xml_out = os.path.join( args.workdir, args.master_ci_xml_out)\r\n+\r\n+  out_dir = os.path.split(args.master_ci_xml_out )[0]\r\n+  os.makedirs(out_dir, exist_ok=True)\r\n+\r\n+  with open(args.cti_master_ci_list, \"r\") as f:\r\n+    master_ci_filename_fits = json.load(f)\r\n+\r\n+  workdir_master_path = os.path.join(args.workdir, master_ci_filename_fits)\r\n+  data_path = os.path.join(args.workdir, \"data\")\r\n+  shutil.copy(workdir_master_path, data_path)\r\n+\r\n+  master_ci_data_path_fits = os.path.join(data_path, master_ci_filename_fits)\r\n+\r\n+  # Create the data product\r\n+  data_product = vismasterciframe_stub.DpdVisMasterCIFrame()\r\n+\r\n+  # Add Header\r\n+  data_product.Header = vis_generic_header(\"DpdVisMasterCIFrame\")\r\n+\r\n+  # Add Data\r\n+  data = vis_stub.visMasterCIFrame.Factory()\r\n+\r\n+  # Open the FITS file\r\n+  fits = fitsio.FITS(master_ci_data_path_fits, 'r')\r\n+  nhdu = fits[-1].get_extnum()\r\n+  header = fits[1].read_header()\r\n+\r\n+  data.ImgType = create_img_type(\"CALIB\", \"CHARGE_INJECTION\", \"OTHER\", \"CALIBRATION\")\r\n+  data.ImgArea = img_stub.imgArea(Name=\"QUADRANT\")\r\n+  data.ImgNumber = nhdu\r\n+  data.AxisNumber = header[\"NAXIS\"]\r\n+\r\n+  data.AxisLengths = [header[\"NAXIS1\"], header[\"NAXIS2\"]]\r\n+  data.DataSize = header[\"BITPIX\"]\r\n+  data.DataLength = header[\"NAXIS1\"] * header[\"NAXIS2\"]\r\n+  data.ValidityRange = create_validity_range()\r\n+  data.Filter = vis_filter()\r\n+  # DataStorage\r\n+  data.DataStorage = DmUtils.create_fits_storage(\r\n+    vis_stub.visMasterCIStorageFitsFile,\r\n+    os.path.basename(master_ci_filename_fits), \"vis.masterCI\", \"0.1\"\r\n+  )\r\n+\r\n+  fits.close()\r\n+\r\n+\r\n+  # Add data to data product\r\n+  data_product.Data = data\r\n+\r\n+\r\n+  # All data quality images (.png files) are in the folder workdir/data/parallel_images_***\r\n+  # We zip this folder into a .tar file and add it to the data product\r\n+\r\n+  dq_file = FileNameProvider().get_allowed_filename(\r\n+    processing_function='VIS',\r\n+    type_name=\"QC-PLOTS-MASTER-CI\",\r\n+    instance_id='',\r\n+    extension='.tar.gz'\r\n+  )\r\n+\r\n+  dq_folder = os.path.join(args.workdir, \"data\", \"images\")\r\n+  dq_tar_path = os.path.join(args.workdir, \"data\", dq_file)\r\n+\r\n+  write_tar_zip([dq_folder], dq_tar_path)\r\n+\r\n+  add_quality_parameter_file(data_product, dq_file)\r\n+\r\n+  dqc_params_dm = vis_stub.visDqcParams.Factory()\r\n+\r\n+  data_product.QualityParams = dqc_params_dm\r\n+\r\n+  # Output to XML^M                                                                                   \r\n+\r\n+  DmUtils.save_product_metadata(data_product, args.master_ci_xml_out)\r\n+\r\n+  logger.info( \"#\")\r\n+  logger.info( \"# Exiting %s mainMethod()\" % __name__)\r\n+  logger.info( \"#\")\r\n",
                            "Merge branch 'release-13.0' into 'hotfix_23096_truncatedzip'",
                            "Catherine Grenet",
                            "2023-08-13T15:43:46.000+00:00",
                            "99a0100288666fcf60920019baf1e402042bf3d6"
                        ],
                        [
                            "@@ -122,7 +122,7 @@ def mainMethod( args):\n \r\n   dq_file = FileNameProvider().get_allowed_filename(\r\n     processing_function='VIS',\r\n-    type_name=\"QC-PLOTS-CTI-PARALLEL\",\r\n+    type_name=\"QC-PLOTS-MASTER-CI\",\r\n     instance_id='',\r\n     extension='.tar.gz'\r\n   )\r\n@@ -130,7 +130,7 @@ def mainMethod( args):\n   dq_folder = os.path.join(args.workdir, \"data\", \"images\")\r\n   dq_tar_path = os.path.join(args.workdir, \"data\", dq_file)\r\n \r\n-  write_tar_zip(dq_folder, dq_tar_path)\r\n+  write_tar_zip([dq_folder], dq_tar_path)\r\n \r\n   add_quality_parameter_file(data_product, dq_file)\r\n \r\n",
                            "fix tag bug",
                            "James Nightingale",
                            "2023-08-08T19:19:37.000+02:00",
                            "c2ba884a8ecfc7230ecebca8faefc87748396f78"
                        ],
                        [
                            "@@ -15,6 +15,7 @@ from typing import Union\n \r\n \r\n # Euclid specific imports\r\n+from ST_DM_FilenameProvider.FilenameProvider import FileNameProvider\r\n from ST_DM_DmUtils import DmUtils\r\n from ST_DataModelBindings.bas import img_stub\r\n from ST_DataModelBindings.pro import vis_stub\r\n@@ -54,7 +55,6 @@ def defineSpecificProgramOptions():\n def write_tar_zip(in_files: list[Union[Path, str]], out_file: Path) -> None:\r\n   tar_zip_files(\" \".join(map(str, in_files)), str(out_file), False)\r\n \r\n-\r\n def mainMethod( args):\r\n \r\n   logger.info( '#')\r\n@@ -116,14 +116,26 @@ def mainMethod( args):\n   # Add data to data product\r\n   data_product.Data = data\r\n \r\n-  # Need to add all .png files contained in cti_result_list to these objects as a .tar\r\n-  # qualPramStorage = vis_stub.visQualityParameterStorageFitsFile()\r\n-  dqc_params_dm = vis_stub.visDqcParams.Factory()\r\n \r\n-  add_quality_parameter_file(data_product, \"placeholder.json\")\r\n+  # All data quality images (.png files) are in the folder workdir/data/parallel_images_***\r\n+  # We zip this folder into a .tar file and add it to the data product\r\n+\r\n+  dq_file = FileNameProvider().get_allowed_filename(\r\n+    processing_function='VIS',\r\n+    type_name=\"QC-PLOTS-CTI-PARALLEL\",\r\n+    instance_id='',\r\n+    extension='.tar.gz'\r\n+  )\r\n+\r\n+  dq_folder = os.path.join(args.workdir, \"data\", \"images\")\r\n+  dq_tar_path = os.path.join(args.workdir, \"data\", dq_file)\r\n+\r\n+  write_tar_zip(dq_folder, dq_tar_path)\r\n+\r\n+  add_quality_parameter_file(data_product, dq_file)\r\n+\r\n+  dqc_params_dm = vis_stub.visDqcParams.Factory()\r\n \r\n-  # data_product.Data.QualityParameterStorage.append(qualPramStorage)\r\n-  # data_product.Data.QualityParameterStorage[-1].DataContainer = create_data_container(\"placeholder.json\")\r\n   data_product.QualityParams = dqc_params_dm\r\n \r\n   # Output to XML^M                                                                                   \r\n",
                            "data quality output",
                            "James Nightingale",
                            "2023-08-08T18:15:34.000+01:00",
                            "4845cc3c0e1899dfb4fb4f043125a77fd3a6f379"
                        ],
                        [
                            "@@ -94,10 +94,11 @@ def mainMethod( args):\n   nhdu = fits[-1].get_extnum()\r\n   header = fits[1].read_header()\r\n \r\n-  data.ImgType = create_img_type(\"CALIB\", \"CHARGE-INJECTION\", \"OTHER\", \"CALIBRATION\")\r\n+  data.ImgType = create_img_type(\"CALIB\", \"CHARGE_INJECTION\", \"OTHER\", \"CALIBRATION\")\r\n   data.ImgArea = img_stub.imgArea(Name=\"QUADRANT\")\r\n   data.ImgNumber = nhdu\r\n   data.AxisNumber = header[\"NAXIS\"]\r\n+\r\n   data.AxisLengths = [header[\"NAXIS1\"], header[\"NAXIS2\"]]\r\n   data.DataSize = header[\"BITPIX\"]\r\n   data.DataLength = header[\"NAXIS1\"] * header[\"NAXIS2\"]\r\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ],
                        [
                            "@@ -111,6 +111,7 @@ def mainMethod( args):\n \r\n   fits.close()\r\n \r\n+\r\n   # Add data to data product\r\n   data_product.Data = data\r\n \r\n@@ -124,9 +125,6 @@ def mainMethod( args):\n   # data_product.Data.QualityParameterStorage[-1].DataContainer = create_data_container(\"placeholder.json\")\r\n   data_product.QualityParams = dqc_params_dm\r\n \r\n-  # Output to XML\r\n-  cti_xml_out = \"ci_master.xml\"\r\n-  DmUtils.save_product_metadata(data_product, cti_xml_out)\r\n   # Output to XML^M                                                                                   \r\n \r\n   DmUtils.save_product_metadata(data_product, args.master_ci_xml_out)\r\n",
                            "refactor VIS_master_ci_file_entry_point to use dataset_list_from method",
                            "James Nightingale",
                            "2023-08-08T14:37:10.000+01:00",
                            "35fa86c03c6a65f206f26a68e3753a59c172495d"
                        ],
                        [
                            "@@ -98,6 +98,7 @@ def mainMethod( args):\n   data.ImgArea = img_stub.imgArea(Name=\"QUADRANT\")\r\n   data.ImgNumber = nhdu\r\n   data.AxisNumber = header[\"NAXIS\"]\r\n+\r\n   data.AxisLengths = [header[\"NAXIS1\"], header[\"NAXIS2\"]]\r\n   data.DataSize = header[\"BITPIX\"]\r\n   data.DataLength = header[\"NAXIS1\"] * header[\"NAXIS2\"]\r\n",
                            "master ci xml out fixed",
                            "James Nightingale",
                            "2023-08-08T15:28:42.000+02:00",
                            "7db1ab490e0de87d00fba4037689dd8187f3774e"
                        ]
                    ],
                    "VIS_Tasks_M/python/VIS_Tasks_M/VIS_cti_xml_out.py": [
                        [
                            "@@ -1,5 +1,5 @@\n \"\"\"\r\n-@file: python/Tasks/VIS_cti_xml_out.py\r\n+@file: python/Tasks/VIS_parallel_cti_xml_out.py\r\n @author: user\r\n @date: 21/02/2023\r\n \"\"\"\r\n@@ -7,24 +7,18 @@\n #Standard library imports\r\n import argparse\r\n import os\r\n-import shutil\r\n import json\r\n-import tarfile\r\n-import time\r\n-\r\n-from types import SimpleNamespace as Namespace\r\n+from pathlib import Path\r\n+from typing import Union\r\n \r\n \r\n # Euclid specific imports\r\n from ST_DM_FilenameProvider.FilenameProvider import FileNameProvider\r\n-from ST_DM_DmUtils import DmUtils\r\n-from ST_DataModelBindings.dpd.vis import visctimodel_stub\r\n from ST_DataModelBindings.pro import vis_stub\r\n-import ST_DataModelBindings.ins_stub as ins_dict\r\n from ST_DM_DmUtils.DmUtils import create_data_container, save_product_metadata\r\n-from VIS_Tasks_Common.FromToXML import vis_generic_header, UNKNOWN_STRING\r\n+from VIS_Tasks_Common.FromToXML import create_validity_range, vis_generic_header, UNKNOWN_STRING, add_quality_parameter_file\r\n \r\n-from VIS_Tasks_Common import FromToXML\r\n+from VIS_PyLibrary_Common.zip_tools import tar_zip_files\r\n from VIS_PyLibrary_Common import pipe_tools\r\n \r\n import ElementsKernel.Logging\r\n@@ -39,13 +33,19 @@ def defineSpecificProgramOptions():\n     # inputs\r\n     parser.add_argument( '--workdir',                    required=True,  help='absolute path to the workdir')\r\n     parser.add_argument( '--logdir',                     required=True,  help='path to the logdir, relative to the workdir')\r\n+    parser.add_argument('--config',                                      help='configuration file path')\r\n     parser.add_argument( '--calibrate_cti_results_list', required=True,  help='Path to the CTI calibration results json file')\r\n     # outputs\r\n-    parser.add_argument( '--cti_xml_out',                required=True,  help='output CTI results xml filename')\r\n+    parser.add_argument( '--parallel_cti_xml_out',                required=True,  help='output parallel CTI results xml filename')\r\n+    parser.add_argument( '--serial_cti_xml_out',                required=True,  help='output serial CTI results xml filename')\r\n     return parser\r\n \r\n ################################################################################\r\n \r\n+def write_tar_zip(in_files: list[Union[Path, str]], out_file: Path) -> None:\r\n+  tar_zip_files(\" \".join(map(str, in_files)), str(out_file), False)\r\n+\r\n+\r\n def mainMethod( args):\r\n \r\n   logger.info( '#')\r\n@@ -56,93 +56,220 @@ def mainMethod( args):\n   \r\n   # Create workdir folders for XML files if not present:\r\n   \r\n-  if not os.path.isabs( args.cti_xml_out):\r\n-    args.cti_xml_out = os.path.join( args.workdir, args.cti_xml_out)\r\n+  if not os.path.isabs( args.parallel_cti_xml_out):\r\n+    args.parallel_cti_xml_out = os.path.join( args.workdir, args.parallel_cti_xml_out)\r\n \r\n-  out_dir = os.path.split(args.cti_xml_out )[0]\r\n+  out_dir = os.path.split(args.parallel_cti_xml_out )[0]\r\n   os.makedirs(out_dir, exist_ok=True)\r\n \r\n-  # get an Euclid compliant filename to store XML\r\n+  \"\"\"\r\n+  calibrate_cti_results_list: is a .json file containing strings with the names of 72.json files in the workdir, \r\n+  each are parallel and serial fits per ccd.\r\n+  \r\n+  cti_per_ccd is a list of 72 .json files, where each .json files is a dictionary of the results of the CTI calibration p\r\n+  ipeline. For each, the first .json file is called CCD1-1_parallel.json, which will look something like the following:\r\n+\r\n+  # {\"ModelResult\": \"/sps/euclid/Users/jnightin/workspaces/ctical/ppo_root/workdir//output/2022-10-13T11:37:14.399Z_CCD6-4/parallel[x1]/2f929b8acbe296cfb1102229221a7438.zip\",\r\n+  # {\"ModelInfo\": \"/sps/euclid/Users/jnightin/workspaces/ctical/ppo_root/workdir//output/2022-10-13T11:37:14.399Z_CCD6-4/parallel[x1]/2f929b8acbe296cfb1102229221a7438/model.info\"}\r\n+  \"\"\"\r\n+\r\n+  with open(args.calibrate_cti_results_list, \"r\") as f:\r\n+    cti_per_ccd_list = json.load(f)\r\n+\r\n+  cti_result_list = []\r\n+\r\n+  for cti_for_ccd_list in cti_per_ccd_list:\r\n+    for cti_direction in cti_for_ccd_list:\r\n+\r\n+        with open(cti_direction, \"r\") as f:\r\n+\r\n+          cti_result = json.load(f)\r\n+          cti_result_list.append(cti_result)\r\n+\r\n+\r\n+  logger.info( f\"reading {len( cti_per_ccd_list)} CCD CTI calibration files\")\r\n+\r\n+  from ST_DM_DmUtils import DmUtils\r\n+  from ST_DataModelBindings.dpd.vis import viscticalibrationresults_stub\r\n+  import ST_DataModelBindings.ins_stub as ins_dict\r\n+\r\n+  \"\"\"Create the date range\"\"\"\r\n+  date_range = ins_dict.calibrationValidPeriod()\r\n+  date_range.TimestampStart = \"2023-02-21T00:00:00.000Z\"\r\n+  date_range.TimestampEnd = \"2023-02-22T00:00:00.000Z\"\r\n+\r\n+  \"\"\"Create a CTI model fit entry\"\"\"\r\n+  parallel_fit_list = []\r\n+  serial_fit_list = []\r\n+\r\n+  \"\"\"\r\n+  __Fit Results__\r\n+  \r\n+  The cti_result_list contains the results of all 72 CTI calibrations performed in this pipeline\r\n+  run (36 x parallel CTI, 36 x serial CTI).\r\n+\r\n+  This loop iterates over all results, creates a visCTIModelFitData() object for each\r\n+  and then stores in them data.Fits at the end.\r\n+  \"\"\"\r\n+\r\n+  for cti_result in cti_result_list:\r\n+\r\n+    fit = vis_stub.visCTIModelFitData()\r\n+\r\n+    fit.ValidityRange = date_range\r\n+    fit.DateRange = date_range\r\n+    fit.DetectorId = cti_result[\"DetectorId\"]\r\n+\r\n+    fit.FitMetaData = create_data_container(cti_result[\"FitMetaData\"])\r\n+    fit.SearchPickle = create_data_container(cti_result[\"SearchPickle\"])\r\n+    fit.ModelPickle = create_data_container(cti_result[\"ModelPickle\"])\r\n+    fit.ModelInfo = create_data_container(cti_result[\"ModelInfo\"])\r\n+    fit.Model = create_data_container(cti_result[\"Model\"])\r\n+\r\n+    fit.ModelResults = create_data_container(cti_result[\"ModelResults\"])\r\n+    fit.SearchInfo = create_data_container(cti_result[\"SearchInfo\"])\r\n+\r\n+    fit.MaxLikelihoodInstance = create_data_container(cti_result[\"MaxLikelihoodInstance\"])\r\n+\r\n+    fit.CovarianceMatrix = create_data_container(cti_result[\"CovarianceMatrix\"])\r\n+\r\n+    fit.ExtractedEPERs = create_data_container(str(cti_result[\"ExtractedEPERs\"]))\r\n+\r\n+    fit.TotalTraps = cti_result[\"TotalTraps\"]\r\n+    fit.TrapType = cti_result[\"TrapType\"]\r\n+    fit.CCDType = cti_result[\"CCDType\"]\r\n+    fit.IsFitBinned = cti_result[\"IsFitBinned\"]\r\n+    fit.IsParallelSerialSimultaneous = cti_result[\"IsParallelSerialSimultaneous\"]\r\n+    fit.IsraelDeltaEllipticity = cti_result[\"IsraelDeltaEllipticity\"]\r\n+    fit.TimeFromZero = cti_result[\"TimeFromZero\"]\r\n+\r\n+    if cti_result[\"IsParallel\"]:\r\n+      parallel_fit_list.append(fit)\r\n+      cti_result_parallel = cti_result\r\n+    else:\r\n+      serial_fit_list.append(fit)\r\n+      cti_result_serial = cti_result  \r\n+\r\n+  \"\"\"\r\n+  __Data Quality Files__\r\n   \r\n-  # TODO : Need to check if type_name is a good name or not\r\n+  Create a list of the Data Quality image folders which contain all .png images of the fits \r\n+  for parallel and serial CTI.\r\n   \r\n-  datafile_out = FileNameProvider().get_allowed_filename( processing_function='VIS',\r\n-                                                          type_name          =\"MDL-CTICORR-000-000000-0000000\",\r\n-                                                          instance_id        ='',\r\n-                                                          extension          ='.json')\r\n-  datafile_out = os.path.join( args.workdir, \"data\", datafile_out)\r\n+  There are 72 folders in total, 36 for parallel and 36 for serial, which will be collectively\r\n+  zipped into two .tar files.\r\n+  \"\"\"\r\n+\r\n+  parallel_dq_file_list = []\r\n+  serial_dq_file_list = []\r\n+\r\n+  for cti_result in cti_result_list:\r\n+\r\n+    file = os.path.join(args.workdir, \"data\", cti_result[\"DQImage\"])\r\n+\r\n+    if cti_result[\"IsParallel\"]:\r\n+      parallel_dq_file_list.append(file)\r\n+    else:\r\n+      serial_dq_file_list.append(file)\r\n+\r\n+  \"\"\"PARALLEL Data Product\"\"\"\r\n+\r\n+  # Create the data product\r\n+  data_product = viscticalibrationresults_stub.DpdVisCTICalibrationResults()\r\n+\r\n+  # Add Header\r\n+  data_product.Header = vis_generic_header(\"DpdVisCTICalibrationResults\", UNKNOWN_STRING)\r\n+\r\n+  # Create the Data\r\n+  data = vis_stub.visCTICalibrationResults.Factory()\r\n+  data.ValidityRange = create_validity_range()\r\n+  data.DateRange = date_range\r\n+  data.PreviousCTIModelsUsedID = \"0\"\r\n+\r\n+  trap = cti_result_parallel[\"TrapType\"]\r\n+  ccd = cti_result_parallel[\"CCDType\"]\r\n+  time_from_zero = cti_result_parallel[\"TimeFromZero\"]\r\n   \r\n-  # concatenate the CTI models in datafile_out\r\n+  data.FitID = f'Par_{time_from_zero}_{trap}_{ccd}'\r\n \r\n-  # calibrate_cti_results_list: is a .json file containing strings with the names of 72.json files in the workdir, each are parallel and serial fits per ccd.\r\n-  # cti_per_ccd is a list of 72 .json files, where each .json files is a dictionary of the results of the CTI calibration pipeline.\r\n-  # For each, the first .json file is called CCD1-1_parallel.json, which will look something like the following:\r\n+  # Add fit to data\r\n+  data.Fits = parallel_fit_list\r\n \r\n-  # {\"MultiNestZip\": \"/sps/euclid/Users/jnightin/workspaces/ctical/ppo_root/workdir//output/2022-10-13T11:37:14.399Z_CCD6-4/parallel[x1]/2f929b8acbe296cfb1102229221a7438.zip\",\r\n-  # {\"ModelInfo\": \"/sps/euclid/Users/jnightin/workspaces/ctical/ppo_root/workdir//output/2022-10-13T11:37:14.399Z_CCD6-4/parallel[x1]/2f929b8acbe296cfb1102229221a7438/model.info\"}\r\n+  # Add data to data product\r\n+  data_product.Data = data\r\n \r\n-  cti_per_ccd = FromToXML.load_list_from_file( args.calibrate_cti_results_list)\r\n+  # All data quality images (.png files) are in the folder workdir/data/parallel_images_***\r\n+  # We zip this folder into a .tar file and add it to the data product\r\n \r\n-  logger.info( f\"reading {len( cti_per_ccd)} CCD CTI calibration files\")\r\n+  parallel_dq_file = FileNameProvider().get_allowed_filename(\r\n+    processing_function='VIS',\r\n+    type_name=\"QC-PLOTS-CTI-PARALLEL\",\r\n+    instance_id='',\r\n+    extension='.tar.gz'\r\n+  )\r\n+  parallel_dq_tar_path = os.path.join(args.workdir, \"data\", parallel_dq_file)\r\n \r\n-  cti_out = dict()\r\n-  cti_out[\"creator\"]     = __file__\r\n-  cti_out[\"date\"]        = time.ctime()\r\n-  cti_out[\"description\"] = \"The CTI Calibration results contains for each CCD the results of a Dynesty model-fit to charge injection data and other datasets. \"\r\n+  write_tar_zip(parallel_dq_file_list, parallel_dq_tar_path)\r\n+  add_quality_parameter_file(data_product, parallel_dq_file)\r\n \r\n-  # This loop updates the cti_out dictionary with each key of the .json file containing the 72 model fits.\r\n+  dqc_params_dm = vis_stub.visDqcParams.Factory()\r\n \r\n-  # For example, the first iteration loads the result:\r\n+  data_product.QualityParams = dqc_params_dm\r\n \r\n-  # {\"Something\":/sps/euclid/Users/jnightin/workspaces/ctical/ppo_root/workdir/cti_calibration_results/CCD1-1_parallel.json\"}\r\n+  # Output to XML^M                                                                                   \r\n \r\n-  for cti_file in cti_per_ccd:\r\n-    with open( cti_file, \"r\") as f:\r\n-      cti_out.update( json.load( f))\r\n-  logger.info( \"writing CTI calibration data product to \" + datafile_out)\r\n+  DmUtils.save_product_metadata(data_product, args.parallel_cti_xml_out)\r\n \r\n-  # This loop dumps each result in this dictionary to a new .json file, for some reason.\r\n+  \"\"\"SERIAL Data Product\"\"\"\r\n \r\n-  with open( datafile_out, \"w\") as f:\r\n-    json.dump( cti_out, f, indent=2)\r\n+  # Create the data product\r\n+  data_product = viscticalibrationresults_stub.DpdVisCTICalibrationResults()\r\n \r\n-  # create and write the xml data product encapsulating the datafile_out json file\r\n-  logger.info( \"writing data product XML to \" + args.cti_xml_out)\r\n-  data_product = FromToXML.cti_model_dp()\r\n+  # Add Header\r\n+  data_product.Header = vis_generic_header(\"DpdVisCTICalibrationResults\", UNKNOWN_STRING)\r\n \r\n-  date_range = ins_dict.calibrationValidPeriod()\r\n-  date_range.TimestampStart = \"2023-02-21T00:00:00.000Z\"\r\n-  date_range.TimestampEnd = \"2023-02-22T00:00:00.000Z\"\r\n+  # Create the Data\r\n+  data = vis_stub.visCTICalibrationResults.Factory()\r\n+  data.ValidityRange = create_validity_range()\r\n+  data.DateRange = date_range\r\n+  data.PreviousCTIModelsUsedID = \"0\"\r\n+  \r\n+  trap = cti_result_serial[\"TrapType\"]\r\n+  ccd = cti_result_serial[\"CCDType\"]\r\n+  time_from_zero = cti_result_serial[\"TimeFromZero\"]\r\n+  \r\n+  data.FitID = f'Ser_{time_from_zero}_{trap}_{ccd}'\r\n+\r\n+  # Add fit to data\r\n+  data.Fits = serial_fit_list\r\n \r\n-  phase = vis_stub.visCTIModelPhaseData()\r\n-  phase.MultiNestZIP = create_data_container(\"multinestzip.zip\")\r\n-  phase.ModelInfo = create_data_container(\"modelinfo.json\")\r\n-  phase.ModelResults = create_data_container(\"modelresults.json\")\r\n-  phase.DetectorId = \"1-1\"\r\n-  phase.DateRange = date_range\r\n-  phase.ValidityRange = date_range\r\n-  phase.PhaseNumber = 1\r\n-  phase.PhaseMetaData = create_data_container(\"blah.json\")\r\n-  phase.OptimizerPickle = create_data_container(\"blah.json\")\r\n-  phase.ModelPickle = create_data_container(\"blah.json\")\r\n-  phase.TrimmingLevel = create_data_container(\"blah.json\")\r\n-\r\n-  qualPramStorage = vis_stub.visQualityParameterStorageFitsFile()\r\n+  # Add data to data product\r\n+  data_product.Data = data\r\n+\r\n+  # All data quality images (.png files) are in the folder workdir/data/serial_images_***\r\n+  # We zip this folder into a .tar file and add it to the data product\r\n+\r\n+  serial_dq_file = FileNameProvider().get_allowed_filename(\r\n+    processing_function='VIS',\r\n+    type_name=\"QC-PLOTS-CTI-SERIAL\",\r\n+    instance_id='',\r\n+    extension='.tar.gz'\r\n+  )\r\n+\r\n+  serial_dq_tar_path = os.path.join(args.workdir, \"data\", serial_dq_file)\r\n+\r\n+  write_tar_zip(serial_dq_file_list, serial_dq_tar_path)\r\n+  add_quality_parameter_file(data_product, serial_dq_file)\r\n+  \r\n   dqc_params_dm = vis_stub.visDqcParams.Factory()\r\n \r\n-  data_product.ValidityRange = date_range\r\n-  data_product.DateRange = date_range\r\n-  data_product.PreviousCTIModelsUsedID = 0\r\n-  data_product.PhaseTotal = 1\r\n-  data_product.PhaseID = 123\r\n-  data_product.Phases = [phase]\r\n-  data_product.CILFrames = 0\r\n-  data_product.visCTIModelPhaseData = 0\r\n-  data_product.cilFrameRefList = 0\r\n-  data_product.QualityParameterStorage = qualPramStorage\r\n+#  data_product.QualityParameterStorage = qualPramStorage\r\n   data_product.QualityParams = dqc_params_dm\r\n \r\n-  DmUtils.save_product_metadata( data_product, args.cti_xml_out)\r\n+  # Output to XML\r\n+\r\n+  DmUtils.save_product_metadata(data_product, args.serial_cti_xml_out)\r\n+\r\n \r\n   logger.info( \"#\")\r\n   logger.info( \"# Exiting %s mainMethod()\" % __name__)\r\n",
                            "Merge branch 'release-13.0' into 'hotfix_23096_truncatedzip'",
                            "Catherine Grenet",
                            "2023-08-13T15:43:46.000+00:00",
                            "99a0100288666fcf60920019baf1e402042bf3d6"
                        ],
                        [
                            "@@ -198,15 +198,18 @@ def mainMethod( args):\n   # Add data to data product\r\n   data_product.Data = data\r\n \r\n-  # Need to add all .png files contained in cti_result_list to these objects as a .tar\r\n- # qualPramStorage = vis_stub.visQualityParameterStorageFitsFile()\r\n-\r\n-  parallel_dq_file = FileNameProvider().get_allowed_filename(processing_function='VIS',\r\n-                                                             type_name=\"QC-PLOTS-CTI-PARALLEL\",\r\n-                                                             instance_id='',\r\n-                                                             extension='.tar.gz')\r\n-\r\n-  write_tar_zip(parallel_dq_file_list, os.path.join(args.workdir, \"data\", parallel_dq_file))\r\n+  # All data quality images (.png files) are in the folder workdir/data/parallel_images_***\r\n+  # We zip this folder into a .tar file and add it to the data product\r\n+\r\n+  parallel_dq_file = FileNameProvider().get_allowed_filename(\r\n+    processing_function='VIS',\r\n+    type_name=\"QC-PLOTS-CTI-PARALLEL\",\r\n+    instance_id='',\r\n+    extension='.tar.gz'\r\n+  )\r\n+  parallel_dq_tar_path = os.path.join(args.workdir, \"data\", parallel_dq_file)\r\n+\r\n+  write_tar_zip(parallel_dq_file_list, parallel_dq_tar_path)\r\n   add_quality_parameter_file(data_product, parallel_dq_file)\r\n \r\n   dqc_params_dm = vis_stub.visDqcParams.Factory()\r\n@@ -243,14 +246,19 @@ def mainMethod( args):\n   # Add data to data product\r\n   data_product.Data = data\r\n \r\n-  # Need to add all .png files contained in cti_result_list to these objects as a .tar\r\n-  # qualPramStorage = vis_stub.visQualityParameterStorageFitsFile()\r\n-  \r\n-  serial_dq_file = FileNameProvider().get_allowed_filename(processing_function='VIS',\r\n-                                                             type_name=\"QC-PLOTS-CTI-SERIAL\",\r\n-                                                             instance_id='',\r\n-                                                             extension='.tar.gz')\r\n-  write_tar_zip(serial_dq_file_list, os.path.join(args.workdir, \"data\", serial_dq_file))\r\n+  # All data quality images (.png files) are in the folder workdir/data/serial_images_***\r\n+  # We zip this folder into a .tar file and add it to the data product\r\n+\r\n+  serial_dq_file = FileNameProvider().get_allowed_filename(\r\n+    processing_function='VIS',\r\n+    type_name=\"QC-PLOTS-CTI-SERIAL\",\r\n+    instance_id='',\r\n+    extension='.tar.gz'\r\n+  )\r\n+\r\n+  serial_dq_tar_path = os.path.join(args.workdir, \"data\", serial_dq_file)\r\n+\r\n+  write_tar_zip(serial_dq_file_list, serial_dq_tar_path)\r\n   add_quality_parameter_file(data_product, serial_dq_file)\r\n   \r\n   dqc_params_dm = vis_stub.visDqcParams.Factory()\r\n",
                            "data quality output",
                            "James Nightingale",
                            "2023-08-08T18:15:34.000+01:00",
                            "4845cc3c0e1899dfb4fb4f043125a77fd3a6f379"
                        ]
                    ],
                    "VIS_PTC_NL/python/VIS_PTC_NL/VIS_PTC_NL_calibration.py": [
                        [
                            "@@ -58,7 +58,7 @@ import ElementsKernel.Logging\n logger = ElementsKernel.Logging.getLogger( __name__)\n \n \n-def compute_ptc(flat_1, flat_2, quad_name, n_tile=10, bf_corr_typ=1, kernelsize=12, fltn=0):\n+def compute_ptc(flat_1, flat_2, quad_name, n_tile=10, bf_corr_typ=1, fltn=0, kernelsize=12, sigclip=5):\n     '''\n     @brief\n     flat_1 and flat_2 are two flats of a single pair (already processed)\n@@ -77,57 +77,51 @@ def compute_ptc(flat_1, flat_2, quad_name, n_tile=10, bf_corr_typ=1, kernelsize=\n     tab_diff = np.array([])\n \n     if (bf_corr_typ == 0):\n-        tab_var, tab_mean, tab_err_var  = Compute_mean_var_correctedfromBFE(flat_1, flat_2, n_tile, 0, mm=1, fltn=fltn)\n-    elif (bf_corr_typ == 1):\n-         # we correct from brighter-fatter with covariance'\n-         tab_var, tab_mean, tab_err_var = Compute_mean_var_correctedfromBFE(flat_1, flat_2, n_tile, kernelsize, mm=1, fltn=fltn)\n+        tab_var, tab_mean, tab_err_var = Compute_mean_var_correctedfromBFE(flat_1-flat_2,(flat_1+flat_2)/2.,np.ones(np.shape(flat_1)), n_tile, fltn=fltn, sigclip=sigclip)\n+    #elif (bf_corr_typ == 1):\n+    #     # we correct from brighter-fatter with covariance'\n+    #     tab_var, tab_mean, tab_err_var = Compute_mean_var_correctedfromBFE(flat_1, flat_2, n_tile, kernelsize, mm=1, fltn=fltn)\n     else:\n          # we first rebin the quadrants\n-         new_flat_1, new_flat_2         = rebin3(flat_1, flat_2, kernelsize)\n-         tab_var, tab_mean, tab_err_var = Compute_mean_var_correctedfromBFE(new_flat_1, new_flat_2, n_tile, 0, mm=1, fltn=fltn)\n+\n+         new_flat_1, new_flat_2, wg     = rebin3(flat_1-flat_2, (flat_2+flat_1)/2., kernelsize, sigclip=sigclip)\n+         tab_var, tab_mean, tab_err_var = Compute_mean_var_correctedfromBFE(new_flat_1, new_flat_2, wg, n_tile, fltn=fltn,sigclip=sigclip)\n          tab_var                        = tab_var*kernelsize*kernelsize\n          tab_err_var                    = tab_err_var*(kernelsize*kernelsize)**2\n-\n     return tab_var, tab_mean, np.sqrt(tab_err_var)\n \n \n-def Compute_mean_var_correctedfromBFE(image_1, image_2, n_tile, kernelsize, mm=1, fltn=0):\n+def Compute_mean_var_correctedfromBFE(image_s1, image_s2, wg, n_tile, fltn=0, sigclip=5):\n     '''\n     @brief\n-    image_1 and image_2 are two offset-subtracted flats.\n-    kernelsize: if >0, BFE is corrected from the \"covariance method\"\n-    if fltn=1, the flats are flattened, and pixels are sorted by values and divided in a certain number of bins. Variance / mean are computed on\n+    image_1 and image_2 are respectively the difference and the mean of  two offset-subtracted flats.\n+    if fltn=1, the flats are flattened, and pixels are sorted by values and divided in a certain number of bins.\n     @return\n     '''\n-    DD = (image_1-image_2)\n-    MM = (image_1+image_2)/2.\n-\n-    if (kernelsize > 0):\n-        image_s1 = image_1[kernelsize:-kernelsize,kernelsize:-kernelsize]\n-        image_s2 = image_2[kernelsize:-kernelsize,kernelsize:-kernelsize]\n-    else:\n-        image_s1 = image_1\n-        image_s2 = image_2\n-\n-    if (fltn == 0):\n-        MM_s = (image_s1+image_s2)/2.\n-        DD_s = (image_s1-image_s2)\n-        # ww = np.where((np.abs(DD_s)<MM_s) * (np.isfinite(DD_s)))\n-    else:\n-        ### flatten the image and sort the pixels by their values\n-        MM_s = ((image_s1+image_s2).flatten()/2.)\n-        DD_s = ((image_s1-image_s2).flatten())\n-        idi = np.argsort(MM_s)\n-        # ww = np.where((np.abs(DD_s[idi])<MM_s[idi]) * (np.isfinite(DD_s[idi])))[0]\n-        # idi = idi[ww]\n+    DD_s = image_s1\n+    MM_s = image_s2\n+\n+    if (fltn == 1):\n+        MM_s = image_s2.flatten()\n+        DD_s = image_s1.flatten()\n+        wg   = wg.flatten()\n+        # keep only the non-masked pixels\n+        ww = np.where((ma.getmask(DD_s) == False)*(ma.getmask(MM_s) == False))[0]\n+        idi = np.argsort(MM_s[ww])\n+        idi = ww[idi]\n+        # additional sigma-clipping to be sure to remove the outliers\n+        mymas = astropy.stats.sigma_clip(DD_s[idi],sigma = sigclip)\n+        mask_ = ma.getmask(mymas)\n+        ww = np.where((mask_ == False))[0]\n+        idi = idi[ww]\n \n     n1 = np.shape(image_s1)[0]\n     n2 = np.shape(image_s2)[1]\n \n     if (fltn == 0):\n         #n_tile is the size in pixel of the tile\n-        n_tile_1 = n_tile # np.int(n1/n_tile)\n-        n_tile_2 = n_tile #np.int(n2/n_tile)\n+        n_tile_1 = n_tile\n+        n_tile_2 = n_tile\n         fluxmean_all = np.zeros(n_tile_1*n_tile_2)\n         variance_all = np.zeros(n_tile_1*n_tile_2)\n         err_var_all  = np.zeros(n_tile_1*n_tile_2)\n@@ -135,46 +129,27 @@ def Compute_mean_var_correctedfromBFE(image_1, image_2, n_tile, kernelsize, mm=1\n         n_pix_2 = np.int(n2/n_tile)\n         for k in range(n_tile_1):\n             for j in range(n_tile_2):\n+                ic = k*n_tile_2 +j\n                 MM_tmp = MM_s[k*n_pix_1:(k+1)*n_pix_1,j*n_pix_2:(j+1)*n_pix_2]\n                 DD_tmp = DD_s[k*n_pix_1:(k+1)*n_pix_1,j*n_pix_2:(j+1)*n_pix_2]\n-\n-                # ww = np.where((np.abs(DD_tmp)<MM_tmp)*(np.isfinite(DD_tmp)))\n-                # n_pt = len(MM[ww])\n-                DD_tmp = astropy.stats.sigma_clip(DD_tmp,sigma = 5)\n-                mask_ = ma.getmask(DD_tmp)\n+                wg_tmp = wg[k*n_pix_1:(k+1)*n_pix_1,j*n_pix_2:(j+1)*n_pix_2]\n+                mymas = astropy.stats.sigma_clip(DD_tmp,sigma = sigclip)\n+                mask_ = ma.getmask(mymas)\n                 w = np.where(mask_ == False)\n                 MM_tmp = MM_tmp[w]\n+                DD_tmp = DD_tmp[w]\n+                wg_tmp = wg_tmp[w]\n                 n_pt = len(MM_tmp.flatten())\n-                ic = k*n_tile_2 + j\n-\n-                if (mm==1):\n-                    fluxmean_all[ic] = np.mean(MM_tmp)\n-                else:\n-                    fluxmean_all[ic] = np.median(MM_tmp)\n-                if (kernelsize == 0):\n-                    variance_all[ic] = np.std((DD_tmp))**2\n-                    mu_4 = np.mean((DD_tmp - np.mean(DD_tmp))**4)\n-                    # err_var_all[k] = mu_4/n_pt - variance_all[k]**2*(n_pt-3)/(n_pt*(n_pt-1))\n-                    # variance_all[k] /= 2 ## because uncertainties on the two flats of the pair add up in quadrature. We don't want to count it twice\n-                    # err_var_all[k] /= 4 ## if we divide variance by 2, we also divide its std by 2, and therefore its variance by 4\n+                if ((n_pt >1 ) * (np.sum(wg_tmp)>0)):\n+                    fluxmean_all[ic] = np.ma.sum(wg_tmp*MM_tmp)/np.sum(wg_tmp)\n+                    dd_mean = np.ma.sum(wg_tmp*DD_tmp)/np.sum(wg_tmp)\n+                    variance_all[ic] = np.ma.sum(wg_tmp*(DD_tmp-dd_mean)**2)/np.sum(wg_tmp)\n+                    mu_4 = np.ma.sum(wg_tmp*(DD_tmp - dd_mean)**4)/np.sum(wg_tmp)\n                     err_var_all[ic] = mu_4/n_pt - variance_all[ic]**2*(n_pt-3)/(n_pt*(n_pt-1))\n                     variance_all[ic] /= 2 ## because uncertainties on the two flats of the pair add up in quadrature. We don't want to count it twice\n                     err_var_all[ic] /= 4 ## if we divide variance by 2, we also divide its std by 2, and therefore its variance by 4\n-                else:\n-                    med = np.median(MM_tmp)\n-                    for m in range(-kernelsize,kernelsize+1):\n-                        for n in range(-kernelsize,kernelsize+1):\n-                            newids1 = kernelsize + w[0]+ m #kernelsize+newids//n2+m  ##3\n-                            newids2 = kernelsize + w[1]+ n #kernelsize+newids%n2+n\n-                            # variance_all[k] = variance_all[k] + np.sum(DD_tmp*DD[newids1,newids2])/(len(ww[0])-1) - np.sum(DD_tmp)*np.sum(DD_tmp)/(len(ww)-1)**2\n-                            # mu_4 = np.mean((DD_tmp - np.mean(DD_tmp))**4)\n-                            # err_var_all[k] = mu_4/n_pt - variance_all[k]**4*(n_pt-3)/(n_pt*(n_pt-1))\n-                            # err_var_all[k] /= 4 ### check this factor 4\n-                            # ic = k*n_tile_2 + j\n-                            variance_all[ic] = variance_all[ic] + np.sum(DD_tmp*DD[newids1,newids2])/(len(w[0])-1) - np.sum(DD_tmp)*np.sum(DD_tmp)/(len(w)-1)**2\n-                            mu_4 = np.mean((DD_tmp - np.mean(DD_tmp))**4)\n-                            err_var_all[ic] = mu_4/n_pt - variance_all[ic]**4*(n_pt-3)/(n_pt*(n_pt-1))\n-                            err_var_all[ic] /= 4 ### check this factor 4\n+                    variance_all[ic] *= np.ma.mean(wg_tmp)\n+                    err_var_all[ic] *= np.ma.mean(wg_tmp)**2\n     else:\n         fluxmean_all = np.zeros(n_tile)\n         variance_all = np.zeros(n_tile)\n@@ -183,40 +158,25 @@ def Compute_mean_var_correctedfromBFE(image_1, image_2, n_tile, kernelsize, mm=1\n \n         for k in range(n_tile):\n             newids = idi[k*nnn:(k+1)*nnn] #ids of the pixels which will contribute to this bin\n-            DD_tmp = astropy.stats.sigma_clip(DD_s[newids],sigma = 5)\n-            mask_ = ma.getmask(DD_tmp)\n-            ww = np.where(mask_ == False)[0]\n-            newids = newids[ww]\n-\n+            # DD_tmp = astropy.stats.sigma_clip(DD_s[newids],sigma = 5)\n+            # mask_ = ma.getmask(DD_tmp)\n+            # ww = np.where(mask_ == False)[0]\n+            # newids = newids[ww]\n             n_pt = len(newids)\n-            if (mm==1):\n-                fluxmean_all[k] = np.mean(MM_s[newids])\n-            else:\n-                fluxmean_all[k] = np.median(MM_s[newids])\n-\n-            if (kernelsize == 0):\n-                variance_all[k] = np.std((DD_s[newids]))**2 #/2.\n-                mu_4 = np.mean((DD_s[newids] - np.mean(DD_s[newids]) )**4)\n-\n+            if ((n_pt > 1) * (np.sum(wg[newids])>0)):\n+                fluxmean_all[k] = np.ma.sum(MM_s[newids]*wg[newids])/np.sum(wg[newids])\n+                dd_mean = np.ma.sum(wg[newids]*DD_s[newids])/np.sum(wg[newids])\n+                variance_all[k] = np.ma.sum(wg[newids]*(DD_s[newids]-dd_mean)**2)/np.sum(wg[newids])\n+                mu_4 = np.ma.sum(wg[newids]*(DD_s[newids] - dd_mean)**4)/np.sum(wg[newids])\n                 err_var_all[k] =  (mu_4/n_pt - variance_all[k]**2*(n_pt-3)/(n_pt*(n_pt-1)))\n                 variance_all[k] /= 2 ## because uncertainties on the two flats of the pair add up in quadrature. We don't want to count it twice\n                 err_var_all[k] /= 4 ## if we divide variance by 2, we also divide its std by 2, and therefore its variance by 4\n-            else:\n-                med = np.median(MM_s[newids])\n-                ttt = np.zeros([len(newids),kernelsize*2+1,kernelsize*2+1])\n-\n-                for m in range(-kernelsize,kernelsize+1):\n-                    for n in range(-kernelsize,kernelsize+1):\n-                        newids1 = kernelsize+newids//n2+m  ##3\n-                        newids2 = kernelsize+newids%n2+n\n-                        variance_all[k] = variance_all[k]+np.sum(DD_s[newids]*DD[newids1,newids2])/(len(newids)-1) - np.sum(DD_s[newids])*np.sum(DD_s[newids])/(len(newids)-1)**2\n-                        mu_4 = np.mean((DD_s[newids] - np.mean(DD_s[newids]))**4)\n-                        err_var_all[k] = (mu_4/n_pt - variance_all[k]**2*(n_pt-3)/(n_pt*(n_pt-1)))\n-                        err_var_all[k] /= 4 ### check this factor 4\n-\n-    return variance_all, fluxmean_all, err_var_all\n-\n-def rebin3(quad1, quad2, kernelsize):\n+                variance_all[k] *= np.ma.mean(wg[newids])\n+                err_var_all[k] *= np.ma.mean(wg[newids])**2\n+            ########\n+    return variance_all[(fluxmean_all>0)], fluxmean_all[fluxmean_all>0], err_var_all[fluxmean_all>0]\n+\n+def rebin3(quad1, quad2, kernelsize, sigclip=5):\n     '''\n     @brief\n     rebin two Masked ndarray data in 2D into two smaller Masked ndarray of the same rank, whose dimensions\n@@ -227,18 +187,23 @@ def rebin3(quad1, quad2, kernelsize):\n     the two rebinned Masked ndarray data\n     '''\n     shape = quad1.shape\n-    narrays = (asarray(shape)%kernelsize)+1 #.astype(np.int)-1\n+    narrays = (asarray(shape)%kernelsize)+1\n     n_pix = asarray(shape)//kernelsize\n \n     nq1 = ma.zeros([n_pix[0],n_pix[1],narrays[1]*narrays[0]])\n     nq2 = ma.zeros([n_pix[0],n_pix[1],narrays[1]*narrays[0]])\n+    wg  = ma.zeros([n_pix[0],n_pix[1],narrays[1]*narrays[0]])\n+\n     for np1 in range(narrays[0]):\n             for np2 in range(narrays[1]):\n                 a = quad1[np1:,np2:][:n_pix[0]*kernelsize,:n_pix[1]*kernelsize]\n+                a =  astropy.stats.sigma_clip(a,sigma = sigclip)\n                 nn = np.ma.reshape(a,[n_pix[0],kernelsize,n_pix[1],kernelsize])\n-                nq1[:,:,np1*narrays[1]+np2] = np.mean(nn,axis=(1,3))\n+                nq1[:,:,np1*narrays[1]+np2] = np.ma.mean(nn,axis=(1,3))\n                 a = quad2[np1:,np2:][:n_pix[0]*kernelsize,:n_pix[1]*kernelsize]\n+                a =  astropy.stats.sigma_clip(a,sigma = sigclip)\n                 nn = np.ma.reshape(a,[n_pix[0],kernelsize,n_pix[1],kernelsize])\n-                nq2[:,:,np1*narrays[1]+np2] = np.mean(nn,axis=(1,3))\n+                nq2[:,:,np1*narrays[1]+np2] = np.ma.mean(nn,axis=(1,3))\n+                wg[:,:,np1*narrays[1]+np2] = (np.ma.count(nn,axis=(1,3)))/(kernelsize*kernelsize)\n \n-    return nq1[:,:,0], nq2[:,:,0] #np.mean(nq1, axis=2), np.mean(nq2, axis=2)\n+    return nq1[:,:,0], nq2[:,:,0], wg[:,:,0]\n",
                            "Merge branch 'hotfix_22219_smallscaleflat' of gitlab.euclid-sgs.uk:PF-VIS/VIS_Tasks into hotfix_22219_smallscaleflat",
                            "Sylvain Mottet",
                            "2023-08-11T15:52:05.000+02:00",
                            "4a8f455505cb4dd23c78ce82dbc64a457bbefb89"
                        ]
                    ],
                    "VIS_PTC_NL/python/VIS_PTC_NL/VIS_mcmc_emcee.py": [
                        [
                            "@@ -208,12 +208,12 @@ def Make_Corner_Plot(out_chain, thetaref, rangetab, typ=\"mean\", burn_ = 100, log\n             else:\n                 plt.scatter(np.median(out_chain[:,n]),np.median(out_chain[:,n]),color=\"black\",marker='+')\n \n-            plt.scatter(thetaref[n],thetaref[k],color=\"black\",marker='+',s=200)\n+            # plt.scatter(thetaref[n],thetaref[k],color=\"black\",marker='+',s=200)\n             axes=plt.gca()\n             plt.text(0.05,0.08,f'measured: p{n+1}={np.round(np.mean(out_chain[:,n])*1000.)/1000.}; p{k+1}={np.round(np.mean(out_chain[:,k])*1000.)/1000.} ',\n                      transform=axes.transAxes,horizontalalignment='left',verticalalignment='bottom',fontsize=14,color=\"firebrick\")\n-            plt.text(0.05,0.02,f'model: p{n+1}={np.round(thetaref[n]*1000.)/1000.}; p{k+1}={np.round(thetaref[k]*1000.)/1000.} ',\n-                     transform=axes.transAxes,horizontalalignment='left',verticalalignment='bottom',fontsize=14,color=\"black\")\n+            # plt.text(0.05,0.02,f'model: p{n+1}={np.round(thetaref[n]*1000.)/1000.}; p{k+1}={np.round(thetaref[k]*1000.)/1000.} ',\n+                    #  transform=axes.transAxes,horizontalalignment='left',verticalalignment='bottom',fontsize=14,color=\"black\")\n             axes.tick_params(axis='both', which='major', labelsize=14)\n             axes.tick_params(axis='both', which='minor', labelsize=14)\n \n",
                            "Merge branch 'hotfix_22219_smallscaleflat' of gitlab.euclid-sgs.uk:PF-VIS/VIS_Tasks into hotfix_22219_smallscaleflat",
                            "Sylvain Mottet",
                            "2023-08-11T15:52:05.000+02:00",
                            "4a8f455505cb4dd23c78ce82dbc64a457bbefb89"
                        ]
                    ],
                    "VIS_PTC_NL/python/VIS_PTC_NL/file_entry_point.py": [
                        [
                            "@@ -106,8 +106,8 @@ def file_layer_entry_point(input_files, interm_dir, quadrant_id=None, in_flagmap\n         handle.close()\n         print(f\"flagmap handler closed...\")\n \n-        print(f\"applying algo.flagging_stack...\")\n-        flagging_stack_start = timer()\n+        # print(f\"applying algo.flagging_stack...\")\n+        # flagging_stack_start = timer()\n         # image_stack = algo.flagging_stack(image_stack32,\n         #                                   flagmap,\n         #                                   input_files,\n@@ -118,8 +118,8 @@ def file_layer_entry_point(input_files, interm_dir, quadrant_id=None, in_flagmap\n         #                                   flag_prescan_size,\n         #                                   flag_serial_overscan_size,\n         #                                   flag_parallel_overscan_size)\n-        flagging_stack_end = timer()\n-        print(f\"flagging_stack processed in {flagging_stack_end-flagging_stack_start} seconds...\")\n+        # flagging_stack_end = timer()\n+        # print(f\"flagging_stack processed in {flagging_stack_end-flagging_stack_start} seconds...\")\n     image_stack = ma.array(image_stack32, mask=flagmap, copy=False)\n \n     log.info(\"file_layer_entry_point(): end\")\n",
                            "Merge branch 'hotfix_22219_smallscaleflat' of gitlab.euclid-sgs.uk:PF-VIS/VIS_Tasks into hotfix_22219_smallscaleflat",
                            "Sylvain Mottet",
                            "2023-08-11T15:52:05.000+02:00",
                            "4a8f455505cb4dd23c78ce82dbc64a457bbefb89"
                        ]
                    ],
                    "VIS_Stacking/python/VIS_Stacking/VIS_stacking.py": [
                        [
                            "@@ -723,7 +723,13 @@ def mainMethod(args):\n   else:\n     logger.warning( \"Stacking disabled in config.cfg, produce empty outputs\")\n     # write empty output product XML list\n-    stack_xml_out( workdir, list(), stack_out_prefix, args.dpdstacked_frame, args.dpdstacked_catalogue, ZIP_OUTPUTS=False)\n+    stack_xml_out( workdir,\n+                   list(),\n+                   stack_out_prefix,\n+                   args.dpdstacked_frame,\n+                   args.dpdstacked_catalogue,\n+                   calblock_id=\"None\",\n+                   ZIP_OUTPUTS=False)\n \n   # and we're done\n   logger.info( \"#\")\n",
                            "Merge branch 'hotfix_22219_smallscaleflat' of gitlab.euclid-sgs.uk:PF-VIS/VIS_Tasks into hotfix_22219_smallscaleflat",
                            "Sylvain Mottet",
                            "2023-08-11T15:52:05.000+02:00",
                            "4a8f455505cb4dd23c78ce82dbc64a457bbefb89"
                        ],
                        [
                            "@@ -367,7 +367,9 @@ def subtract( infile1, infile2, outfile, flagfile, extnum=-1, maxmem=MAXMEM):\n \n ################################################################################\n \n-def stack_xml_out( workdir, exposure_list, stack_file_prefix, dpdstacked_frame, dpdstacked_catalogue, ZIP_OUTPUTS=False):\n+def stack_xml_out( workdir, exposure_list, stack_file_prefix,\n+                   dpdstacked_frame, dpdstacked_catalogue, calblock_id,\n+                   ZIP_OUTPUTS=False):\n   \"\"\"Produce the stacking task output products\n   \"\"\"\n \n@@ -483,6 +485,7 @@ def stack_xml_out( workdir, exposure_list, stack_file_prefix, dpdstacked_frame,\n       stk_dp = FromToXML.stack_dp( os.path.join( datadir, euc_stk_file),\n                                    survey_type,\n                                    obs_id,\n+                                   calblock_id,\n                                    euc_psf_file,\n                                    euc_bkg_file,\n                                    euc_wgt_file)\n@@ -495,7 +498,7 @@ def stack_xml_out( workdir, exposure_list, stack_file_prefix, dpdstacked_frame,\n #        FromToXML.create_qualityparams_fromlist(stk_dp,pe_runinfo_consolidate_list)\n \n       # Creating xml file\n-      xml_filename = os.path.join( DATADIR, \"DpdVisStackedFrame.xml\")\n+      xml_filename = \"DpdVisStackedFrame.xml\"\n       DmUtils.save_product_metadata( stk_dp, os.path.join( workdir, xml_filename))\n       DpdVisStackedFrame_list.append( xml_filename)\n \n@@ -517,7 +520,7 @@ def stack_xml_out( workdir, exposure_list, stack_file_prefix, dpdstacked_frame,\n       stack_catalog_dp = FromToXML.stack_cat_dp( os.path.join( datadir, euc_cat_file),\n                                                  spatial_footprint,\n                                                  obs_id)\n-      xml_filename = os.path.join( DATADIR, \"DpdVisStackedFrameCatalog.xml\")\n+      xml_filename = \"DpdVisStackedFrameCatalog.xml\"\n       DmUtils.save_product_metadata( stack_catalog_dp, os.path.join( workdir, xml_filename))\n       DpdVisStackedCatalogue_list.append( xml_filename)\n \n@@ -593,6 +596,7 @@ def mainMethod(args):\n     input_files = sorted( FromToXML.read_json( args.exposure_list))\n     exposure_list = list()\n     wgt_files_list = list()\n+    calblock_id = \"\"\n     for input_file in input_files:\n       file_ext = os.path.splitext( input_file)[1].lower()\n       if file_ext == \".xml\":\n@@ -612,6 +616,10 @@ def mainMethod(args):\n         exposure_list.append( sci_datafile)\n         wgt_datafile = zip_tools.unzip( os.path.join( DATADIR, wgt_datafile))\n         wgt_files_list.append( wgt_datafile)\n+        # read calblock_id from input DpdVisCalibratedFrame XML file\n+        if calblock_id == \"\":\n+          dp = DmUtils.read_product_metadata( input_file)\n+          calblock_id = dp.Data.ObservationSequence.CalblockId\n       else:\n         # working as stacking task in another pipeline\n         # args.exposure_list contains \"process_photo_exp.reduce/tuplelist.json\"\n@@ -627,6 +635,15 @@ def mainMethod(args):\n         exp_json_list  = FromToXML.read_json( args.exposure_list)\n         exposure_list  = [FromToXML.read_json( exp_json) for exp_json in input_files]\n         wgt_files_list = None\n+        # read calblock_id from metadata stored in config.cfg by VIS_xml_in.py\n+        # and take the first one, supposing calblocks are not mixed in VIS pipelines...\n+        if calblock_id == \"\":\n+          # find first config file section containing input raw frame metadata\n+          for section in config.sections():\n+            if section.startswith( visdef.EUCVISEXP_PREFIX) and \\\n+               \"dp.Data.ObservationSequence.CalblockId\" in config[section]:\n+              calblock_id = config[section][\"dp.Data.ObservationSequence.CalblockId\"]\n+              break\n \n     logger.info( f\"flatten args.exposure_list={exposure_list}\")\n \n@@ -688,6 +705,7 @@ def mainMethod(args):\n                    stack_out_prefix,\n                    args.dpdstacked_frame,\n                    args.dpdstacked_catalogue,\n+                   calblock_id,\n                    ZIP_OUTPUTS)\n \n     # save (again) pipeline profiling, possibly replacing the one created by VIS_science_xml_out which should have completed first\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_Tasks_M/python/VIS_Tasks_M/VIS_PTC_NL_calib.py": [
                        [
                            "@@ -156,7 +156,7 @@ def mainMethod(args):\n     ## if bf_corr_typ==1: correction with covariance;\n     ## if bf_corr_typ==2: correction with rebinning\n     bf_corr_typ = 2\n-    tile_s      = 4  ## when bf_corr_typ ==2 , tile_s must be a small number.\n+    tile_s      = 3  ## when bf_corr_typ ==2 , tile_s must be a small number.\n     kernelsize  = 12 ## if bf_corr_typ==2:  we rebin in superpixels of size kernelsize x kernelsize original pixels\n \n     # Initialize JSON model file names\n@@ -238,9 +238,16 @@ def mainMethod(args):\n         n_steps_tot = 2000\n \n         ## initialisation\n+        ndim = 5\n         p1_r = np.array([0.5,1.5])\n         p2_r = np.array([-0.5,0.5])\n         p3_r = np.array([-0.5,0.5])\n+        tab_r = np.array([p1_r])\n+        # print(tab_r)\n+        for i in range(1,ndim):\n+            tab_r = np.append(tab_r,[np.array([-0.5,0.5])],axis=0)\n+        p = np.zeros(ndim)\n+        p[0] = 1/3.\n         tab_r = np.array([p1_r,p2_r,p3_r]) #range on which vary the parameters\n \n         p = np.array([0.3,0,0]) # initial guess for the parameter\n",
                            "Merge branch 'hotfix_22219_smallscaleflat' of gitlab.euclid-sgs.uk:PF-VIS/VIS_Tasks into hotfix_22219_smallscaleflat",
                            "Sylvain Mottet",
                            "2023-08-11T15:52:05.000+02:00",
                            "4a8f455505cb4dd23c78ce82dbc64a457bbefb89"
                        ]
                    ],
                    "VIS_Astrometry/python/VIS_Astrometry/wcsfit.py": [
                        [
                            "@@ -51,10 +51,10 @@ import matplotlib.pyplot as plt\n import matplotlib.colors\n from scipy.spatial.distance import cdist\n \n-# from . import wcsfit_core\n-# from .sip_tpv import sip_to_pv\n-import wcsfit_core\n-from sip_tpv import sip_to_pv\n+from . import wcsfit_core\n+from .sip_tpv import sip_to_pv\n+# import wcsfit_core\n+# from sip_tpv import sip_to_pv\n \n import VIS_PyLibrary_Common.pe_run_information as peri\n \n",
                            "turn on ecrf - #23351",
                            "Leigh Smith",
                            "2023-08-08T14:45:29.000+01:00",
                            "5a3e79d1aeae13a2e72e14016a82d47c2d937d99"
                        ],
                        [
                            "@@ -51,10 +51,10 @@ import matplotlib.pyplot as plt\n import matplotlib.colors\n from scipy.spatial.distance import cdist\n \n-from . import wcsfit_core\n-from .sip_tpv import sip_to_pv\n-# import wcsfit_core\n-# from sip_tpv import sip_to_pv\n+# from . import wcsfit_core\n+# from .sip_tpv import sip_to_pv\n+import wcsfit_core\n+from sip_tpv import sip_to_pv\n \n import VIS_PyLibrary_Common.pe_run_information as peri\n \n@@ -1673,9 +1673,23 @@ def read_observations_references(\n             source_catalogues, reference_catalogues,\n             fillvalue=reference_catalogues[0]\n     ):\n+\n+        # grab data from the observation primary header\n+        pri_hdr = fits.getheader(src_cat_path, 0)\n+        # date of the vis observation\n+        mjdobs = pri_hdr['MJD-OBS']\n+        obs_epoch = Time(mjdobs, format='mjd').jyear\n+        # position of the instrument\n+        pos = tuple([pri_hdr[f\"POS_{elem}\"] for elem in \"XYZ\"])\n+        # velocity of the instrument\n+        vel = tuple([pri_hdr[f\"VEL_{elem}\"] for elem in \"XYZ\"])\n+\n         # read the reference catalogue\n         refdata = get_references(\n             ref_cat_path,\n+            obs_epoch,\n+            pos,\n+            vel,\n             refmagkey=refmagkey,\n             refmagmin=refmagmin,\n             refmagmax=refmagmax,\n@@ -2333,7 +2347,7 @@ def get_observation(src_cat_path, refdata, refmagmin=None, refmagmax=None,\n     return observation\n \n \n-def get_references(refcat,\n+def get_references(refcat, obs_epoch, pos, vel,\n                    refmagkey=None, refmagmin=None, refmagmax=None,\n                    logger=None):\n     \"\"\"\n@@ -2343,6 +2357,12 @@ def get_references(refcat,\n     ----------\n     refcat : str\n         A FITS file with catalogue of position reference stars.\n+    obs_epoch : float\n+        Julian year of observation.\n+    pos : tuple\n+        Geocentric position vector of the instrument.\n+    vel : tuple\n+        Geocentric velocity vector of the instrument.\n     refmagkey : str, optional\n         Name of the column which contains the catalogue magnitudes.\n     refmagmin : float, optional\n@@ -2369,6 +2389,12 @@ def get_references(refcat,\n         ref_ra_error = ref_hdulist[1].data.field('GAIA_RA_ERROR')\n         ref_dec_error = ref_hdulist[1].data.field('GAIA_DEC_ERROR')\n \n+        # Read astrometry from the reference catalogue\n+        ref_epoch = ref_hdulist[1].data.field('REF_EPOCH')\n+        ref_pmra = ref_hdulist[1].data.field('PMRA')\n+        ref_pmdec = ref_hdulist[1].data.field('PMDEC')\n+        ref_parallax = ref_hdulist[1].data.field('PARALLAX')\n+\n         # read the reference star mags\n         if refmagkey is not None:\n             ref_mag = ref_hdulist[1].data.field(refmagkey)\n@@ -2419,6 +2445,15 @@ def get_references(refcat,\n                 f'magnitude selection'\n             )\n \n+    # propagate positions to the correct reference frame and epoch\n+    if logger is not None:\n+        logger.info(f\"rejecting {np.count_nonzero(np.isnan(ref_parallax[mask]))} ref stars with null parallaxes\")\n+    mask[np.isnan(ref_parallax)] = False\n+    ra, dec = icrs_to_ecrf(\n+        ref_ra[mask], ref_dec[mask], ref_parallax[mask], ref_pmra[mask], ref_pmdec[mask],\n+        ref_epoch[mask], obs_epoch, pos, vel\n+    )\n+\n     # filter ref mags if not None\n     if ref_mag is not None:\n         ref_mag = ref_mag[mask]\n@@ -2434,7 +2469,7 @@ def get_references(refcat,\n \n     # create the RefData object\n     refdata = wcsfit_core.RefData(\n-        ref_ra[mask], ref_dec[mask],\n+        ra, dec,\n         ref_ra_error[mask], ref_dec_error[mask],\n         mags=ref_mag, filename=refcat\n     )\n@@ -2477,11 +2512,14 @@ def icrs_to_ecrf(ra, dec, parallax, pmra, pmdec, ref_epoch,\n     new_dec : array-like\n         Declination in the Euclid-centric reference frame at the target_epoch\n     \"\"\"\n+    # deal with negative parallaxes\n+    _parallax = np.clip(parallax, 1E-10, np.inf)\n+\n     # icrs sky coordinates at reference epoch\n     icrs0 = SkyCoord(\n         ra * u.deg, dec * u.deg,\n         pm_ra_cosdec=pmra * u.mas / u.yr, pm_dec=pmdec * u.mas / u.yr,\n-        distance=1000.0 / parallax * u.pc,\n+        distance=1000.0 / _parallax * u.pc,\n         obstime=Time(ref_epoch, format='jyear'),\n         frame='icrs'\n     )\n@@ -2502,7 +2540,7 @@ def icrs_to_ecrf(ra, dec, parallax, pmra, pmdec, ref_epoch,\n     # transform coordinates to ECRF system\n     ecrf1 = icrs1.transform_to(ECRF)\n \n-    return ecrf1.ra.dec, ecrf1.dec.deg\n+    return ecrf1.ra.deg, ecrf1.dec.deg\n \n \n def run_checks(srccats=None, refcats=None,\n",
                            "turn on ecrf - #23351",
                            "Leigh Smith",
                            "2023-08-08T14:44:51.000+01:00",
                            "37df1937faba8282e21a91342f755eab115eaa37"
                        ],
                        [
                            "@@ -2157,6 +2157,10 @@ def get_observation(src_cat_path, refdata, refmagmin=None, refmagmax=None,\n         # grab the primary header\n         pri_hdr = srccat_hdul[0].header\n \n+        # record the primary header exptime if present\n+        if 'EXPTIME' in pri_hdr.keys():\n+            exptimes.append(float(pri_hdr['EXPTIME']))\n+\n         for i in range(1, len(srccat_hdul), 2):\n             # the headers are stored in the odd extensions and the catalogues\n             # are stored in the even extensions [excluding the 0th]\n@@ -2193,20 +2197,28 @@ def get_observation(src_cat_path, refdata, refmagmin=None, refmagmax=None,\n             pointings.append((header['RA'], header['DEC']))\n             pas.append(header['PA'])\n \n-            # read the exposure time\n-            exptime = float(header['EXPTIME'])\n-            exptimes.append(exptime)\n+            # record the exposure time if present\n+            if 'EXPTIME' in header.keys():\n+                exptimes.append(float(header['EXPTIME']))\n \n+            # verify that an exptime is available\n+            if len(exptimes) == 0:\n+                if logger is not None:\n+                    logger.error(\n+                        \"No EXPTIME is present in the primary or secondary headers\"\n+                    )\n+                    sys.exit(1)\n             # add the mag ZP\n             # todo\n             #   this might be unnecessary in production, we might be provided\n             #   with calibrated catalogues\n-            mags += 24.36 + 2.5 * np.log10(exptime)\n+            mags += 24.36 + 2.5 * np.log10(exptimes[-1])\n \n             # ref source filtering on mag and flux radius\n             _mask = filter_catalogue(\n                 mags, fluxrad,\n                 mag_min=refmagmin, mag_max=refmagmax, mag_margin=0.5,\n+                flux_rad_min=2.0, flux_rad_max=4.0,\n                 logger=logger\n             )\n \n@@ -3299,12 +3311,13 @@ def gauss_func(x, a, x0, sigma):\n     )\n \n \n-def gauss_fit(xdat, ydat):\n+def gauss_fit(xdat, ydat, flux_rad_min, flux_rad_max):\n     \"\"\"\n     Perform a Gaussian fit (courtesy of Sylvain Mottet)\n     \"\"\"\n     # initial parameters\n-    p0 = np.array([0.5, 1.1, 0.15])\n+    flux_rad_med = 0.5 * (flux_rad_min + flux_rad_max)\n+    p0 = np.array([0.5, flux_rad_med, 0.15])\n \n     def func(x, p00, p01, p02):\n         # composite of two Gaussian functions\n@@ -3313,13 +3326,14 @@ def gauss_fit(xdat, ydat):\n     popt, pcov = curve_fit(\n         func, xdat, ydat,\n         p0=p0, bounds=(\n-            [0, 0.5, 0],\n-            [np.inf, 2.5, np.inf]\n+            [0, flux_rad_min, 0],\n+            [np.inf, flux_rad_max, np.inf]\n         )\n     )\n     return popt  # a, x0, sigma\n \n def filter_catalogue(mag, fluxrad, mag_min=None, mag_max=None, mag_margin=0.0,\n+                     flux_rad_min=0.5, flux_rad_max=2.5,\n                      logger=None):\n     \"\"\"\n     Filter a set of sources by magnitude and flux radius\n@@ -3336,6 +3350,10 @@ def filter_catalogue(mag, fluxrad, mag_min=None, mag_max=None, mag_margin=0.0,\n         Maximum magnitude\n     mag_margin : float, optional\n         Allowable margin for error on the magnitudes\n+    flux_rad_min : float, optional\n+        Lower limit of acceptable flux_radius range, default 0.5.\n+    flux_rad_max : float, optional\n+        Upper limit of acceptable flux_radius range, default 2.5.\n     logger : Logger, optional\n         A logger which will be used for printing the logging messages (None for\n         no printing).\n@@ -3358,8 +3376,11 @@ def filter_catalogue(mag, fluxrad, mag_min=None, mag_max=None, mag_margin=0.0,\n     if mag_max is not None:\n         mask[mag > (mag_max + mag_margin)] = False\n \n+    \"\"\"\n+    # Commented out: see https://euclid.roe.ac.uk/issues/23190#note-57\n+\n     # basic fluxrad filtering\n-    mask[(fluxrad < 0.5) | (fluxrad > 2.5)] = False\n+    mask[(fluxrad < flux_rad_min) | (fluxrad > flux_rad_max)] = False\n \n     # check on current source count, can we do something fancy?\n     num_in_range = np.count_nonzero(mask)\n@@ -3369,13 +3390,13 @@ def filter_catalogue(mag, fluxrad, mag_min=None, mag_max=None, mag_margin=0.0,\n         bin_count = 50\n         # get flux radius histogram\n         radius_count, bin_edges = np.histogram(\n-            fluxrad[mask], bins=bin_count, range=[0.5, 2.5], density=True\n+            fluxrad[mask], bins=bin_count, range=[flux_rad_min, flux_rad_max], density=True\n         )\n         bin_centers = (bin_edges[:-1] + bin_edges[1:]) / 2\n \n         # try to fit a gaussian to the flux_radius distribution\n         try:\n-            a, x0, sig = gauss_fit(bin_centers, radius_count)\n+            a, x0, sig = gauss_fit(bin_centers, radius_count, flux_rad_min, flux_rad_max)\n             mask[np.abs(fluxrad - x0) > (5 * sig)] = False\n \n             # plt.hist(\n@@ -3398,6 +3419,7 @@ def filter_catalogue(mag, fluxrad, mag_min=None, mag_max=None, mag_margin=0.0,\n             logger.info(\n                 f\"too few sources to attempt flux_radius distribution fitting\"\n             )\n+    \"\"\"\n \n     return mask\n \n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_Blooming/python/VIS_Blooming/file_entry_point.py": [
                        [
                            "@@ -17,6 +17,7 @@\n \n import astropy.io.fits as pf\n import numpy as np\n+import numpy.ma as ma\n \n import ElementsKernel.Logging as elog\n \n@@ -93,7 +94,7 @@ def file_layer_entry_point(input_files, interm_dir, quadrant_id=None, in_flagmap\n           flag_quad_id = handle[quadrant_id].header[\"QUADID\"]\n           handle.close()\n         \n-        image_stack = algo.flagging_stack(image_stack32, \n+        '''image_stack = algo.flagging_stack(image_stack32, \n                                           flagmap, \n                                           input_files, \n                                           quad_name, \n@@ -103,5 +104,7 @@ def file_layer_entry_point(input_files, interm_dir, quadrant_id=None, in_flagmap\n                                           flag_prescan_size,\n                                           flag_serial_overscan_size, \n                                           flag_parallel_overscan_size)\n+        '''\n+    image_stack = ma.array(image_stack32, mask=flagmap, copy=False)    \n     log.info(\"file_layer_entry_point(): end\")\n     return image_stack\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_BrighterFatter/python/VIS_BrighterFatter/VIS_BrighterFatter_calib.py": [
                        [
                            "@@ -251,8 +251,7 @@ def mainMethod(args):\n     dpdcalib_bfe = os.path.abspath( os.path.join( args.workdir, dpdcalib_bfe))\n     logger.info( \"** Writing Bfe model data product XML to \" + dpdcalib_bfe)\n     logger.info(dpdcalib_bfe)\n-    data_product = FromToXML.create_DpdVisFileContainer( datafile_list = [os.path.basename(bfe_model_file)],\n-                                                         vis_product=\"bfe_model\")\n+    data_product = FromToXML.create_DpdVisBFEModel( os.path.basename( bfe_model_file))\n     DmUtils.save_product_metadata( data_product, dpdcalib_bfe)       \n      \n     \n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_Ghosts/python/VIS_Ghosts/VIS_ghosts_calibration.py": [
                        [
                            "@@ -184,7 +184,7 @@ def mainMethod( args):\n \n   # create and write the XML data product encapsulating the model file\n   logger.info( \"** Writing ghost model data product XML to \" + args.ghost_model_xml_out)\n-  data_product = FromToXML.create_DpdVisXTalkModel( model_json)\n+  data_product = FromToXML.create_DpdVisGhostModel( model_json)\n   DmUtils.save_product_metadata( data_product, args.ghost_model_xml_out)\n \n \n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_LargeFlat/python/VIS_LargeFlat/VIS_LargeFlat_Modelling/FPA_VIS_Geometry.py": [
                        [
                            "@@ -176,8 +176,6 @@ class FPA_VISGeometry():\n                       self.sizeDetX(), self.sizeGapsX()[3],  \\\n                       self.sizeDetX(), self.sizeGapsX()[4],  \\\n                       self.sizeDetX())) / self.sizeFPX()\n-        #c = np.cumsum(c) * 2 - 1\n-        #c[0] = -1.;  c[-1] = 1.\n         c = np.cumsum(c) * 3 - 1.5\n         c[0] = -1.5;  c[-1] = 1.5\n         return c\n@@ -191,9 +189,6 @@ class FPA_VISGeometry():\n                       self.sizeDetY(), self.sizeGapsY()[3],  \\\n                       self.sizeDetY(), self.sizeGapsY()[4],  \\\n                       self.sizeDetY())) / self.sizeFPY()\n-        #c = np.cumsum(c) * 2 - 1\n-        #c[0] = -1.;  c[-1] = 1.\n-        #c2 = np.cumsum(c) * 2 - 1.5\n         c = np.cumsum(c) * 3 - 1.5\n         c[0] = -1.5;  c[-1] = 1.5\n         return c\n@@ -231,7 +226,7 @@ class FPA_VISGeometry():\n         \"\"\"Return True if the chip of a detector is rotated by 180 degrees in the FPA.\"\"\"\n         if self.enableDetRotation:\n             (idetx, idety) = self.idetseq2xy(idet)\n-            return (idety >= 5)\n+            return (idetx >= 4)\n         return False\n     \n     \n@@ -268,9 +263,7 @@ class FPA_VISGeometry():\n         x = copy.copy(_x)\n         y = copy.copy(_y)\n \n-        #print(np.count_nonzero(y >= 4136))\n         y = np.where(y >= 4136, 4130, y)\n-        #print(np.count_nonzero(y >= 4136))\n \n \n         assert np.all(0. <= x);  assert np.all(x <= self.detector_pixel_shortdim)\n@@ -310,10 +303,6 @@ class FPA_VISGeometry():\n             y = np.array((y,))\n         if np.isscalar(idet):\n             idet = np.repeat(idet, x.size)\n-        #assert np.all(np.abs(x) <= 1)\n-        #assert np.all(np.abs(y) <= 1)\n-        \n-        \n         \n         assert np.all(np.abs(x) <= 1.5)\n         assert np.all(np.abs(y) <= 1.5)\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_LargeFlat/python/VIS_LargeFlat/VIS_LargeFlat_Modelling/Fit2D.py": [
                        [
                            "@@ -4,13 +4,6 @@ from scipy.interpolate import CloughTocher2DInterpolator, interp1d, NearestNDInt\n # 2D profile fitting (non-parametric)\n class Fit2D_NP:\n \n-    #def coords(self):\n-    #    if self.atedge:\n-    #        return np.linspace(-1.5, 1.5, self.npar)\n-    #    else:\n-    #        g = np.linspace(-1.5, 1.5, self.npar+1)\n-    #        return (g[0:-1] + g[1:]) / 2.\n-        \n     def coords_x(self):\n         g = np.linspace(-1.5, 1.5, self.npar_x+1)\n         return (g[0:-1] + g[1:]) / 2.\n@@ -23,35 +16,6 @@ class Fit2D_NP:\n     Fit2D initialisation class\n     WALKTHRU_3-1\n     \"\"\"\n-    #def __init__(self, npar, meas_x, meas_y,logger,atedge=False):\n-    #    self.npar = npar\n-    #    self.logger=logger\n-    #    assert meas_x.size == meas_y.size\n-    #    assert np.max(np.abs(meas_x)) < 1.5\n-    #    assert np.max(np.abs(meas_y)) < 1.5\n-    #    self.meas_x = meas_x.copy()\n-    #    self.meas_y = meas_y.copy()\n-    #    self.param_val = np.zeros((npar, npar))\n-    #    self.param_unc = np.zeros((npar, npar))\n-    #    self.atedge = atedge\n-    #    x = self.coords()\n-    #    y = self.coords()\n-    #    step = x[1] - x[0]\n-    #    self.indexmap = []\n-    #    for ix in range(0, npar):\n-    #        for iy in range(0, npar):\n-    #            max_dist = step / 2 ##original from \n-                \n-    #            j = np.where((np.abs(self.meas_x - x[ix]) < max_dist)  &\n-    #                         (np.abs(self.meas_y - y[iy]) < max_dist))\n-    #            \"OU-NIR tends to throw an exception and quit. So NIR expects data points. Not reaching this in selfcal\"\n-    #            if len(j[0]) < 2:\n-    #                self.logger.warn(\"Not enough data in the square region around \" + str(x[iy]) + \", \" + str(y[iy]) + \" (size: \" + str(step) + \")\")\n-    #                print(\"Not enough data in the square region around \" + str(x[iy]) + \", \" + str(y[iy]) + \" (size: \" + str(step) + \")\")\n-    #            else : \n-    #                self.indexmap.append(j[0])\n-    #    print(\"End __init__ of fit2d\")\n-        \n     def __init__(self, npar_x, npar_y, meas_x, meas_y, logger):\n         self.npar_x = npar_x\n         self.npar_y = npar_y\n@@ -84,23 +48,6 @@ class Fit2D_NP:\n                     raise ValueError(\"Not enough data in the square region around \" + str(x[iy]) + \", \" + str(y[iy]) + \" (size: \" + str(step_x) + \")\")\n                 self.indexmap.append(j[0])\n         \n-\n-    #def fit(self, meas, uncert):\n-    #    print(\"Start fit2d.fit\")\n-    #    assert meas.ndim == 1\n-    #    assert meas.size == self.meas_x.size\n-    #    i = 0\n-    #    for ix in range(0, self.npar):\n-    #        for iy in range(0, self.npar):\n-    #            if(i < len(self.indexmap)):\n-    #                j = self.indexmap[i]\n-    #                i += 1\n-    #                if len(j) > 0:\n-    #                    self.param_val[ix, iy] = np.mean(meas[j])\n-    #                    self.param_unc[ix, iy] = np.mean(uncert[j]) / np.sqrt(len(j))\n-    #                    \n-    #    print(\"End fit of fit2d.fit\")\n-        \n     def fit(self, meas, uncert):\n         assert meas.ndim == 1\n         assert meas.size == self.meas_x.size\n@@ -114,24 +61,6 @@ class Fit2D_NP:\n                     self.param_unc[ix, iy] = np.mean(uncert[j]) / np.sqrt(len(j))        \n \n \n-    #def extrapolate(self, x, y):\n-    #    print(\"Start fit of extrapolate\")\n-\n-    #    assert np.isscalar(x)\n-    #    assert np.isscalar(y)\n-    #    assert ((np.abs(x) < 1.5) or (np.abs(y) < 1.5))\n-    #    if np.abs(x) < 1.5:\n-    #        mx = np.repeat(x, self.npar)\n-    #        my = self.coords()\n-    #        dd = self.predict_at(mx, my)\n-    #        return float(interp1d(my, dd, fill_value='extrapolate')(y))\n-    #    if np.abs(y) < 1.5:\n-    #        mx = self.coords()\n-    #        my = np.repeat(y, self.npar)\n-    #        dd = self.predict_at(mx, my)\n-    #        return float(interp1d(mx, dd, fill_value='extrapolate')(x))\n-    #    raise ValueError('Unexpected value for inputs (x=' + str(x) + ', y=' + str(y) + ').')\n-    \n     def extrapolate(self, x, y):\n         assert np.isscalar(x)\n         assert np.isscalar(y)\n@@ -151,26 +80,6 @@ class Fit2D_NP:\n         raise ValueError('Unexpected value for inputs (x=' + str(x) + ', y=' + str(y) + ').')\n     \n \n-    #def predict_at(self, x, y, uncert=False):\n-    #    if uncert:\n-    #        z = self.param_unc.transpose()\n-    #    else:\n-    #        z = self.param_val.transpose()\n-\n-    #    if self.atedge:\n-    #        x_grid, y_grid, z_grid = self.coords(), self.coords(), z\n-    #    else:\n-    #        x_grid, y_grid, z_grid = self.extended_grid(self.coords(), self.coords(), z)\n-\n-    #    (mx, my) = np.meshgrid(x_grid, y_grid)\n-    #    mx = mx.reshape(mx.size)\n-    #    my = my.reshape(my.size)\n-    #    points = np.vstack([mx, my]).transpose()\n-    #    itp = CloughTocher2DInterpolator(points, z_grid.reshape(z_grid.size))\n-    #    return itp(x, y)\n-    \n-    \n-    \n     # Predict model at coordinates x, y.  If uncert=true returns the\n     # model uncertainties at x,y.\n     def predict_at(self, x, y, uncert=False):\n@@ -184,8 +93,6 @@ class Fit2D_NP:\n         # coords_x/y() are always WITHIN, and not AT, the boundaries.\n         # Here we prepare a grid extending to the boundaries (-1.5:1.5)\n         # and extrapolate the \"z\" values on the added locations.\n-        #x_grid = np.hstack((-1., self.coords_x(), 1.))\n-        #y_grid = np.hstack((-1., self.coords_y(), 1.))\n         \n         x_grid = np.hstack((-1.5, self.coords_x(), 1.5))\n         y_grid = np.hstack((-1.5, self.coords_y(), 1.5))\n@@ -196,27 +103,19 @@ class Fit2D_NP:\n         # Extrapolate on the boundaries\n         for i in range(0, self.npar_y):\n             itp = interp1d(self.coords_x(), z[:, i], fill_value='extrapolate')\n-            #z_grid[ 0, i+1] = float(itp(-1.))\n-            #z_grid[-1, i+1] = float(itp( 1.))\n             z_grid[ 0, i+1] = float(itp(-1.5))\n             z_grid[-1, i+1] = float(itp( 1.5))\n             \n         for i in range(0, self.npar_x):\n             itp = interp1d(self.coords_y(), z[i, :], fill_value='extrapolate')\n-            #z_grid[i+1 , 0] = float(itp(-1.))\n-            #z_grid[i+1, -1] = float(itp( 1.))\n             z_grid[i+1 , 0] = float(itp(-1.5))\n             z_grid[i+1, -1] = float(itp( 1.5))\n \n         itp = interp1d(self.coords_y(), z_grid[ 0, 1:self.npar_y+1], fill_value='extrapolate')\n-        #z_grid[ 0,  0] = float(itp(-1.))\n-        #z_grid[ 0, -1] = float(itp( 1.))\n         z_grid[ 0,  0] = float(itp(-1.5))\n         z_grid[ 0, -1] = float(itp( 1.5))\n         \n         itp = interp1d(self.coords_y(), z_grid[-1, 1:self.npar_y+1], fill_value='extrapolate')\n-        #z_grid[-1,  0] = float(itp(-1.))\n-        #z_grid[-1, -1] = float(itp( 1.))\n         z_grid[-1,  0] = float(itp(-1.5))\n         z_grid[-1, -1] = float(itp( 1.5))\n \n@@ -243,28 +142,3 @@ class Fit2D_NP:\n \n     def addGlobalOffset(self, offset):\n         self.param_val[:] += offset\n-\n-\n-    # Extrapolate to the whole detector (i.e. in the range -1.5:1.5)\n-    #def extended_grid(self, x_inner, y_inner, z_inner):\n-    #    print(\"Start extended_grid\")\n-    #    x_outer = np.hstack((-1.5, x_inner, 1.5))\n-    #    y_outer = np.hstack((-1.5, y_inner, 1.5))\n-    #    z_outer = np.zeros((self.npar+2, self.npar+2))\n-    #    for i in range(0, self.npar):\n-    #        z_outer[1:self.npar+1, i+1] = z_inner[0:self.npar, i]\n-\n-    #    for i in range(0, self.npar):\n-    #        z_outer[i+1,  0] = float(interp1d(y_inner, z_inner[i, :], fill_value='extrapolate')(-1.5))\n-    #        z_outer[i+1, -1] = float(interp1d(y_inner, z_inner[i, :], fill_value='extrapolate')( 1.5))\n-\n-    #        z_outer[ 0, i+1] = float(interp1d(x_inner, z_inner[:, i], fill_value='extrapolate')(-1.5))\n-    #        z_outer[-1, i+1] = float(interp1d(x_inner, z_inner[:, i], fill_value='extrapolate')( 1.5))\n-\n-    #    z_outer[ 0,  0] = float(interp1d(x_inner, z_outer[1:self.npar+1,  0], fill_value='extrapolate')(-1.5))\n-    #    z_outer[-1,  0] = float(interp1d(x_inner, z_outer[1:self.npar+1,  0], fill_value='extrapolate')( 1.5))\n-\n-    #    z_outer[ 0, -1] = float(interp1d(x_inner, z_outer[1:self.npar+1, -1], fill_value='extrapolate')(-1.5))\n-    #    z_outer[-1, -1] = float(interp1d(x_inner, z_outer[1:self.npar+1, -1], fill_value='extrapolate')( 1.5))\n-    #    print(\"End extended_grid\")\n-    #    return (x_outer, y_outer, z_outer)\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_LargeFlat/python/VIS_LargeFlat/VIS_LargeFlat_Modelling/SelfCalib_VIS.py": [
                        [
                            "@@ -8,9 +8,7 @@ import astropy.stats\n import tarfile\n \n import scipy.linalg\n-\n-\n-\n+from math import floor\n import astropy.coordinates\n from astropy.io import fits\n from astropy.table import Table\n@@ -107,52 +105,36 @@ def readFiles(filelist, ccdid_list, vis_fpa_geom, logger, outdir=None):\n             #    if hdul[ihdu].header['CCDID'] == vis_fpa_geom.idetseq2string(idet):\n             #        break                  \n             #assert hdul[ihdu].header['CCDID'] == vis_fpa_geom.idetseq2string(idet)\n+\n+            nextid_test = floor((idet-1)/6+1)\n+            mextid_test = (idet-1)%6+1\n+            extid_test = mextid_test + 6*(nextid_test-1)\n+            extid_test_new = nextid_test +6*(mextid_test-1)\n+            #extid_test_new = a +6*(b-1)\n             \n-            catTable_read = data['extid'] == idet  # Makes a boolean selection mask (numpy array)\n+            logger.info(\"idet: \" + str(idet) + \"ext_test: \" + str(extid_test) + \" ext_test_new: \" + str(extid_test_new) + \"  m: \" + str(mextid_test) + \" n: \" + str(nextid_test))\n+            \n+            #catTable_read = data['extid'] == idet  # Makes a boolean selection mask (numpy array)\n+            catTable_read = data['extid'] == extid_test_new # Makes a boolean selection mask (numpy array)\n             catTable = data[catTable_read]  # Makes a new astropy Table\n \n-            #****We don't need to look for ccd extension in the file. Always just extension 1.\n-            #data = Table.read(filelist[ifile], hdu=ihdu)\n-            #c = astropy.table.Column(name='ifile', data=np.repeat(ifile, len(data))); data.add_column(c)\n-            #c = astropy.table.Column(name='idet' , data=np.repeat(idet , len(data))); data.add_column(c)\n-            \n             c = astropy.table.Column(name='ifile', data=np.repeat(ifile, len(catTable))); catTable.add_column(c)\n             c = astropy.table.Column(name='idet' , data=np.repeat(idet , len(catTable))); catTable.add_column(c)\n             \n-            #****Rename of column for new wcsfit\n-            #(x, y) = vis_fpa_geom.pixel2focalplane(data['idet'], data['X_IMAGE'], data['Y_IMAGE'])\n-            #(x, y) = vis_fpa_geom.pixel2focalplane(data['idet'], data['XWIN_IMAGE'], data['YWIN_IMAGE'])\n-            \n             (x, y) = vis_fpa_geom.pixel2focalplane(catTable['idet'], catTable['XWIN_IMAGE'], catTable['YWIN_IMAGE'])            \n \n-            #c = astropy.table.Column(name='X_fp' , data=x); data.add_column(c)\n-            #c = astropy.table.Column(name='Y_fp' , data=y); data.add_column(c)\n             c = astropy.table.Column(name='X_fp' , data=x); catTable.add_column(c)\n             c = astropy.table.Column(name='Y_fp' , data=y); catTable.add_column(c)\n \n-\n-            #****Rename of column for new wcsfit\n-            #(x, y) = vis_fpa_geom.pixel2det(idet, data['X_IMAGE'], data['Y_IMAGE'])\n-            #(x, y) = vis_fpa_geom.pixel2det(idet, data['XWIN_IMAGE'], data['YWIN_IMAGE'])\n-            #logger.info(\"idetA: \" + str(idet) + \" \" + str(np.count_nonzero(catTable['YWIN_IMAGE'] >= 4136)))\n             (x, y) = vis_fpa_geom.pixel2det(idet, catTable['XWIN_IMAGE'], catTable['YWIN_IMAGE'])\n-            #c = astropy.table.Column(name='X_det' , data=x); data.add_column(c)\n-            #c = astropy.table.Column(name='Y_det' , data=y); data.add_column(c)\n-            #logger.info(\"idetB: \" + str(idet) + \" \" + str(np.count_nonzero(y >= 1.5)))\n+\n             c = astropy.table.Column(name='X_det' , data=x); catTable.add_column(c)\n             c = astropy.table.Column(name='Y_det' , data=y); catTable.add_column(c)\n \n-            \n-            #data['MAG_APER'][:] = np.add(data['MAG_APER'][:], 20).tolist()\n-            #print(\"readfiles ihdu: \" + str(ihdu))\n-\n-            #data.meta.clear()  # Avoid warnings when merging meta\n             catTable.meta.clear()\n             if len(obs) == 0:\n-                #obs = data.copy()\n                 obs = catTable.copy()\n             else:\n-                #obs = astropy.table.vstack([obs, data])\n                 obs = astropy.table.vstack([obs, catTable])\n \n     logger.info(\"Initial number of constraints : \" + str(len(obs)))\n@@ -177,11 +159,8 @@ def readFiles(filelist, ccdid_list, vis_fpa_geom, logger, outdir=None):\n     # Discard pairs whose distance is > distance threshold\n     dist_threshold = 0.3   # arcsec\n     #****WCFit change in column name but should it call findMatching twice? Rechck\n-    #(i1, i2) = findMatchingObs(obs['OBJECT_ID'])\n     (i1, i2) = findMatchingObs(obs['starid'])\n     #****WCSFit change in column name.\n-    #c1 = astropy.coordinates.SkyCoord(obs['ALPHA_J2000'][i1], obs['DELTA_J2000'][i1], unit=\"deg\")\n-    #c2 = astropy.coordinates.SkyCoord(obs['ALPHA_J2000'][i2], obs['DELTA_J2000'][i2], unit=\"deg\")\n     c1 = astropy.coordinates.SkyCoord(obs['RA'][i1], obs['DEC'][i1], unit=\"deg\")\n     c2 = astropy.coordinates.SkyCoord(obs['RA'][i2], obs['DEC'][i2], unit=\"deg\")\n \n@@ -233,7 +212,6 @@ class SelfCalibData:\n         # Prepare catalog of individual stars\n         catalog = Table()\n         #****\n-        #catalog['OBJECT_ID'] = np.unique(obs['OBJECT_ID'])\n         catalog['starid'] = np.unique(obs['starid'])\n         catalog['nobs'] = np.repeat(     0, len(catalog))\n         catalog['mag']  = np.repeat(np.NaN, len(catalog))\n@@ -248,7 +226,6 @@ class SelfCalibData:\n         for i in range(0, len(catalog)):\n             \n             #****\n-            #j = np.where(obs['OBJECT_ID'] == catalog['OBJECT_ID'][i])\n             j = np.where(obs['starid'] == catalog['starid'][i])\n             index_star2obs.append(j[0])\n             catalog['nobs'][i] = len(j[0])\n@@ -263,14 +240,12 @@ class SelfCalibData:\n             #****\n             #ss = np.sum(1 / obs['MAGERR_APER'][j])\n             ss = np.sum(1 / obs['MAGERR_AUTO'][j])\n-            #logger.info(\"in toopa i: \" + str(i))\n             for k in j[0]:\n                 rr.append(k)\n                 cc.append(i)\n                 #****\n                 #dd.append(1. / obs['MAGERR_APER'][k] / ss)\n                 dd.append(1. / obs['MAGERR_AUTO'][k] / ss)\n-            #logger.info(\"in loopb i: \" + str(i))\n \n         logger.info(\"calculate coomatrix\")\n         rr = np.asarray(rr)\n@@ -316,7 +291,6 @@ class SelfCalib:\n         mm = self\n \n         self.logger.info(\"In Prepare. Do FindMatchObject\")\n-        #(i1, i2) = findMatchingObs(obs['OBJECT_ID'])\n         (i1, i2) = findMatchingObs(obs['starid'])\n         self.logger.info(\"Done with FindMatchingObs in Prepare. Get Unique\")\n         i = np.unique([i1, i2])\n@@ -333,7 +307,6 @@ class SelfCalib:\n             i = mm.data.index_det2obs[idet]  \n             x = mm.data.obs['X_det'][i]\n             y = mm.data.obs['Y_det'][i]\n-            #print(\"Prepare idet: \" + str(idet) + \" ncoeff: \" + str(mm.ncoeff) + \"  i: \" + str(i) + \" x: \" + str(x) + \" y: \" + str(y) )\n             par_flat.append(Fit2D_NP(mm.ncoeff,mm.ncoeff, x, y,self.logger))\n \n         if hasattr(self, 'par_flat'):\n@@ -367,10 +340,6 @@ class SelfCalib:\n         \"\"\"TODO: Check about removing this loop.  Not sure why it is here except for debug to make sure it\n         has all the files.\n         \"\"\"\n-        #with open(os.path.join(outdir, \"filelist.txt\"), \"w\") as text_file:\n-        #    for ifile in range(0, len(filelist)):\n-        #        print(ifile, \"   \", filelist[ifile], file=text_file)\n-                \n         logger.info(\"Read files and prepare:\")\n         (obs, filter,exptime) = readFiles(filelist, ccdid_list, self.vis_fpa_geom,logger,outdir=outdir)\n         logger.info(\"Done with Read Files. Now Prepare\")\n@@ -493,9 +462,6 @@ class SelfCalib:\n         for i in range(0, gx.size):\n             mat[i, dets[i, 0]-1] =  1.5 ##Should it be 1.5\n             mat[i, dets[i, 1]-1] = -1.5\n-            #self.logger.info(\"KEVIN_MAT_NEW i: \" + str(i) + \" MAT: \" + str(mat[i]))\n-            #mat[i, dets[i, 0]-1] = -1 ##OUNIR Should it be 1.5. OUVIS shuld be 1.5\n-            #mat[i, dets[i, 1]-1] = -1 \n \n         mat[gx.size, :] = 1.5                  # add constraint for the average\n \n@@ -503,13 +469,11 @@ class SelfCalib:\n \n         #res = np.linalg.lstsq(mat, data, rcond=-1.)\n         res = np.linalg.lstsq(mat, data)\n-        #mm.par_detqe += res[0]\n         mm.par_detqe += res_scipy[0]\n \n         for idet in range(0, 36):  \n             val_scipy = -1. * res_scipy[0][idet]\n             mm.par_flat[idet].addGlobalOffset(val_scipy)\n-            #mm.par_flat[idet].addGlobalOffset(-1. * res[0][idet])\n \n         return out\n \n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_LargeFlat/python/VIS_LargeFlat/VIS_LargeFlat_Modelling/Utils.py": [
                        [
                            "@@ -6,7 +6,6 @@ import VIS_LargeFlat.VIS_LargeFlat_Modelling.FPA_VIS_Geometry as vis_geom\n \n def coordGapsX(vis_fpa_geom,n=1):\n     print(\"Start coordgapsx\")\n-    #print(\"Size detX: \" + str(vis_fpa_geom.sizeDetX()))\n     out = np.array(())\n     c = 0.\n     for i in range(0, 6):\n@@ -20,19 +19,13 @@ def coordGapsX(vis_fpa_geom,n=1):\n \n \n def coordGapsY(vis_fpa_geom,n=1):\n-    #print(\"Size detY: \" + str(vis_fpa_geom.sizeDetY()))\n-\n     out = np.array(())\n     c = 0.\n     for i in range(0, 6):\n         out = np.append(out, c + vis_fpa_geom.sizeDetY() * np.linspace(1, n, n) / (n+1));  c += vis_fpa_geom.sizeDetY();\n-        #if i <= 2:\n         if i <= 3:\n             out = np.append(out, c + vis_fpa_geom.sizeGapsY()[i] / 3);                     c += vis_fpa_geom.sizeGapsY()[i];\n-            #out = np.append(out, c + vis_fpa_geom.sizeGapsY()[i] / 2);                     c += vis_fpa_geom.sizeGapsY()[i];\n-    #out = np.asarray(out) / vis_fpa_geom.sizeFPY() * 2 - 1\n     out = np.asarray(out) / vis_fpa_geom.sizeFPY() * 3 - 1.5\n-    #out = np.asarray(out) / vis_fpa_geom.sizeFPY() * 2 - 1.5\n     return out\n \n \n@@ -43,7 +36,6 @@ def coordGaps(vis_fpa_geom,n=1):\n     y = coordGapsY(vis_fpa_geom,n)\n     outX = []\n     outY = []\n-    #print(\"CoordGaps LenX: \" + str(len(x)) + \" LenY: \" + str(len(y)))\n     for ix in range(0, len(x)):\n         for iy in range(0, len(y)):\n             # Discard points fallig on a detector\n@@ -56,29 +48,11 @@ def coordGaps(vis_fpa_geom,n=1):\n             (idet2, _x, _y) = vis_fpa_geom.focalplane2det(-1.5, y[iy])\n             if (idet1 == 0)  and  (idet2 == 0):\n                 continue\n-\n-            #print(\"GAPS idet: \" + str(idet) + \" idet1: \" + str(idet1) + \" idet2: \" + str(idet2) + \" xix: \" + str(x[ix]) + \" yiy: \" + str(y[iy]) + \" _x:\" + str(_x) + \" _y: \" + str(_y))\n             outX.append(x[ix])\n             outY.append(y[iy])\n     print(\"End coordGaps\")\n     return (np.asarray(outX), np.asarray(outY))\n \n-\n-#def allcombinations(x, y):\n-    #print(\"Start allcombinations\")\n-#    (x, y) = np.meshgrid(x, y)\n-#    x = x.reshape(x.size)\n-#    y = y.reshape(y.size)\n-    #print(\"End allcombinations\")\n-#    return (x, y)\n-\n-#def cartesianProduct(x, y):\n-#    (x, y) = np.meshgrid(x, y)\n-#    x = x.reshape(x.size)\n-#    y = y.reshape(y.size)\n-#    return (x, y)\n-\n-\n def cartesianProduct(x, y):\n     (x, y) = np.meshgrid(x, y, indexing='ij')\n     x = x.reshape(x.size)\n@@ -88,7 +62,6 @@ def cartesianProduct(x, y):\n def closestDetectors(vis_fpa_geom,x, y):\n     \n     c = np.array((-1.25,-0.75, -0.25, 0.25, 0.75,1.25))\n-    #(cy, cx) = allcombinations(c.copy(), c.copy())  # NOTE: this is correct: first y, then x.\n \n     (cx, cy) = cartesianProduct(c.copy(), c.copy())\n     idet = np.argsort(np.sqrt( (cx-x)**2  +  (cy-y)**2 ))[0:2] + 1\n@@ -100,37 +73,5 @@ def closestDetectors(vis_fpa_geom,x, y):\n         return idet[[1,0]]\n     return idet\n \n-\"\"\"\n-for loop in range(0, 2):\n-    fig = plt.figure()\n-    (x, y) = coordGaps(5); plt.scatter(x, y);\n-    for i in range(0, x.size):\n-        idet = closestDetectors(x[i], y[i])[loop]\n-        (idetx, idety) = idetseq2xy(idet)\n-        px = -0.75 + (idetx-1) * 0.5\n-        py = -0.75 + (idety-1) * 0.5\n-        plt.plot([x[i], px], [y[i], py])\n-plt.show()\n-\"\"\"\n-\n-\"\"\"\n-# Each point in the gaps (excluding points at the intersection of the\n-# gaps) has exactly two closest detectors.  Given x,y coordinate of a\n-# point, the closestDetectors() function returns the detector IDs of\n-# such detectors.  The following shows its usage in a plot:\n-for loop in range(0, 2):  # Select either the first or second closest det.\n-    fig = plt.figure()\n-    (x, y) = coordGaps(5);\n-    plt.scatter(x, y);\n-    for i in range(0, x.size):\n-        idet = closestDetectors(x[i], y[i])[loop]\n-        (idetx, idety) = idetseq2xy(idet)\n-        px = -0.75 + (idetx-1) * 0.5  # X coordinate of closest detector\n-        py = -0.75 + (idety-1) * 0.5  # Y coordinate of closest detector\n-        plt.plot([x[i], px], [y[i], py])\n-plt.show()\n-\"\"\"\n-\n-\n def gaussian(x, mu, sig):\n     return np.exp(-np.power(x - mu, 2.) / (2 * np.power(sig, 2.))) / np.sqrt(2 * np.pi) / sig\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_LargeFlat/tests/python/EUC_MDB_2023-07-11_SpaceSegment.Instrument.VIS.xml": [
                        [
                            "@@ -0,0 +1,179 @@\n+<?xml version=\"1.0\" ?><ns0:DpdMdbDataBase xmlns:ns0=\"http://ecdm.euclid-ec.org/schema/dpd/mdb\">\n+ <Header>\n+  <ProductId>EUC_MDB_MISSIONCONFIGURATION-DEV_2023-07-11T15:00:00.00Z_00</ProductId>\n+  <ProductType>DpdMdbDataBase</ProductType>\n+  <SoftwareName>ST_MDB_Tools</SoftwareName>\n+  <SoftwareRelease>1.0</SoftwareRelease>\n+  <ProdSDC>UNKNOWN</ProdSDC>\n+  <DataSetRelease>NoDR</DataSetRelease>\n+  <Purpose>TEST</Purpose>\n+  <PlanId>NoPlan</PlanId>\n+  <PPOId>NoPPP</PPOId>\n+  <PipelineDefinitionId>NoPipelineDef</PipelineDefinitionId>\n+  <PpoStatus>COMPLETED</PpoStatus>\n+  <ManualValidationStatus>UNKNOWN</ManualValidationStatus>\n+  <Curator>SGS Euclid System Team</Curator>\n+  <CreationDate>2023-07-11T13:03:57.813000Z</CreationDate>\n+ </Header>\n+ <Data>\n+  <EuclidMissionParameterSet>\n+\n+\n+\n+   <Parameter title=\"SpaceSegment.Instrument.VIS.VISAveragePixelSizemicron\">\n+    <Description>This is the average physical size of the detector pixels on the focal plane.</Description>\n+    <Source>Input by J.A. As required. Not validated. For test in the MDB.</Source>\n+    <Expression>None</Expression>\n+    <Release>0.1</Release>\n+    <Value>\n+     <Double unit=\"um\">\n+      <DoubleValue>12.0</DoubleValue>\n+     </Double>\n+    </Value>\n+   </Parameter>\n+\n+   <Parameter title=\"SpaceSegment.Instrument.VIS.VISCCDChargeInjection\">\n+    <Description>This is the size of the charge injection structure that splits the CCD in the vertical direction.</Description>\n+    <Source>Input from J. Denniston EUCL-MSS-ICD-6-002 issue1.1. As Required</Source>\n+    <Expression>None</Expression>\n+    <Release>0.1</Release>\n+    <Value>\n+     <Long unit=\"pixel\">\n+      <LongValue>4</LongValue>\n+     </Long>\n+    </Value>\n+   </Parameter>\n+\n+   <Parameter title=\"SpaceSegment.Instrument.VIS.VISCCDColumn\">\n+    <Description>This is the number of CCD on a column of the VIS focal plane assembly.</Description>\n+    <Source>Input by J.A. As required. Not validated. For test in the MDB.</Source>\n+    <Expression>None</Expression>\n+    <Release>0.1</Release>\n+    <Value>\n+     <Long unit=\"NA\">\n+      <LongValue>6</LongValue>\n+     </Long>\n+    </Value>\n+   </Parameter>\n+\n+   <Parameter title=\"SpaceSegment.Instrument.VIS.VISCCDGapLongDimensionNominalImage\">\n+    <Description>This is the nominal size of the gaps between 2 CCDs active area, in the VIS channel telescope image focal plane, in the longest dimension                of the VIS focal plane. The longest dimension of the VIS focal plane is projected on the sky along the Ysc axis. It corresponds to the                X_OPT_VIS axis. In order to get its size on the sky, the VIS channel telescope plate scale parameter must be used.</Description>\n+    <Source>Input by J.A. As required. Not validated, for test in the MDB. EUCL-MSS-RD-6-001 issue 1.3.</Source>\n+    <Expression>None</Expression>\n+    <Release>0.2</Release>\n+    <Value>\n+     <Double unit=\"mm\">\n+      <DoubleValue>7.528</DoubleValue>\n+     </Double>\n+    </Value>\n+   </Parameter>\n+\n+   <Parameter title=\"SpaceSegment.Instrument.VIS.VISCCDGapShortDimensionNominalImage\">\n+    <Description>This is the nominal size of the gaps between 2 CCDs active area, in the VIS channel telescope image focal plane, in the shortest                dimension of the VIS focal plane. The shortest dimension of the VIS focal plane is projected on the sky along the Xsc axis. It corresponds                to the Y_OPT_VIS axis. In order to get its size on the sky, the VIS channel telescope plate scale parameter must be used.</Description>\n+    <Source>Input by J.A. As required. Not validated, for test in the MDB. EUCL-MSS-RD-6-001 issue 1.3.</Source>\n+    <Expression>None</Expression>\n+    <Release>0.2</Release>\n+    <Value>\n+     <Double unit=\"mm\">\n+      <DoubleValue>1.468</DoubleValue>\n+     </Double>\n+    </Value>\n+   </Parameter>\n+\n+   <Parameter title=\"SpaceSegment.Instrument.VIS.VISCCDNumber\">\n+    <Description>This is the total number of CCD integrated into the VIS focal plane assembly.</Description>\n+    <Source>Input by J.A. As required. Not validated. For test in the MDB.</Source>\n+    <Expression>None</Expression>\n+    <Release>0.1</Release>\n+    <Value>\n+     <Long unit=\"NA\">\n+      <LongValue>36</LongValue>\n+     </Long>\n+    </Value>\n+   </Parameter>\n+\n+   <Parameter title=\"SpaceSegment.Instrument.VIS.VISCCDQuadrantList\">\n+    <Description>This is the set of identifiers of the Quadrants of the VIS detector. The detailed description of the quadrant configuration of the CCD                is in the document referenced in the source.</Description>\n+    <Source>Input from J. Denniston EUCL-MSS-ICD-6-002 issue1.1. As Required</Source>\n+    <Expression>None</Expression>\n+    <Release>0.1</Release>\n+    <Value>\n+     <Text>E F G H</Text>\n+    </Value>\n+   </Parameter>\n+\n+   <Parameter title=\"SpaceSegment.Instrument.VIS.VISCCDRow\">\n+    <Description>This is the number of CCD on a row of the VIS focal plane assembly.</Description>\n+    <Source>Input by J.A. As required. Not validated. For test in the MDB.</Source>\n+    <Expression>None</Expression>\n+    <Release>0.1</Release>\n+    <Value>\n+     <Long unit=\"NA\">\n+      <LongValue>6</LongValue>\n+     </Long>\n+    </Value>\n+   </Parameter>\n+\n+   <Parameter title=\"SpaceSegment.Instrument.VIS.VISDetectorActivePixelLongDimensionFormat\">\n+    <Description>This is the minimum number of active pixels in the longest dimension of the VIS focal plane. Due to the injection line inserted in the                long direction of the CCD format, the active array is split in 2 equal active arrays of 2066 pixels.</Description>\n+    <Source>Input by J.A. As required. Not validated, for test in the MDB. EUCL-EST-PS-7-001.</Source>\n+    <Expression>None</Expression>\n+    <Release>0.2</Release>\n+    <Value>\n+     <Long unit=\"pixel\">\n+      <LongValue>4132</LongValue>\n+     </Long>\n+    </Value>\n+   </Parameter>\n+\n+   <Parameter title=\"SpaceSegment.Instrument.VIS.VISDetectorActivePixelShortDimensionFormat\">\n+    <Description>This is the minimum number of active pixels in the shortest dimension of the            VIS focal plane.</Description>\n+    <Source>Input by J.A. As required. Not validated, for test in the MDB.            EUCL-EST-PS-7-001.</Source>\n+    <Expression>None</Expression>\n+    <Release>0.3</Release>\n+    <Value>\n+     <Long unit=\"pixel\">\n+      <LongValue>4096</LongValue>\n+     </Long>\n+    </Value>\n+   </Parameter>\n+\n+   <Parameter title=\"SpaceSegment.Instrument.VIS.VISDetectorPixelLongDimensionFormat\">\n+    <Description>This is the minimum number of pixels in the longest dimension of the VIS focal plane. Due to the injection line inserted in the long                direction of the CCD format, the active array is split in 2 equal active arrays, with 4 inactive pixels in the middle for injection line.</Description>\n+    <Source>Input by J.A. As required. Not validated, for test in the MDB. EUCL-EST-PS-7-001.</Source>\n+    <Expression>None</Expression>\n+    <Release>0.2</Release>\n+    <Value>\n+     <Long unit=\"pixel\">\n+      <LongValue>4136</LongValue>\n+     </Long>\n+    </Value>\n+   </Parameter>\n+\n+   <Parameter title=\"SpaceSegment.Instrument.VIS.VISFocalPlaneAssemblyLongDimensionMaxImage\">\n+    <Description>This is the maximum size of the Focal Plane Assembly of the VIS, in the longest dimension of the VIS focal plane. The longest dimension                of the VIS focal plane is projected on the sky along the Ysc axis. It corresponds to the X_OPT_VIS axis. In order to get its size on the sky,                the VIS channel telescope plate scale parameter must be used.</Description>\n+    <Source>Input by J.A. As required. Not validated, for test in the MDB. EUCL-MSS-RD-6-001 issue 1.3.</Source>\n+    <Expression>None</Expression>\n+    <Release>0.2</Release>\n+    <Value>\n+     <Double unit=\"mm\">\n+      <DoubleValue>336.932</DoubleValue>\n+     </Double>\n+    </Value>\n+   </Parameter>\n+\n+   <Parameter title=\"SpaceSegment.Instrument.VIS.VISFocalPlaneAssemblyShortDimensionMaxImage\">\n+    <Description>This is the minimum size of the Focal Plane Assembly of the VIS, in the shortest dimension of the VIS focal plane.                The shortest dimension of the VIS focal plane is projected on the sky along the Xsc axis. It corresponds to the Y_OPT_VIS axis.                In order to get its size on the sky, the VIS channel telescope plate scale parameter must be used.</Description>\n+    <Source>Input by J.A. As required. Not validated, for test in the MDB. EUCL-MSS-RD-6-001 issue 1.3.</Source>\n+    <Expression>None</Expression>\n+    <Release>0.2</Release>\n+    <Value>\n+     <Double unit=\"mm\">\n+      <DoubleValue>303.127</DoubleValue>\n+     </Double>\n+    </Value>\n+   </Parameter>\n+\n+  </EuclidMissionParameterSet>\n+ </Data>\n+</ns0:DpdMdbDataBase>\n\\ No newline at end of file\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_LargeFlat/tests/python/FPA_VIS_Geometry_test.py": [
                        [
                            "@@ -0,0 +1,108 @@\n+\"\"\"\n+@file VIS_Tasks/VIS_LargeFlat/tests/python/FPA_VIS_Geometry_test.py\n+@date 2023-07-25\n+@author mottet@iap.fr\n+\n+@description: VIS_LargeFlat/VIS_LargeFlat_Modelling/FPA_VIS_Geometry.py test script\n+\n+run with:\n+$ cd VIS_Tasks\n+$ make purge all install\n+$ ./build.*/run pytest --capture=no VIS_LargeFlat/tests/python/FPA_VIS_Geometry_test.py\n+\n+\"\"\"\n+\n+\n+################################################################################\n+\n+import pytest\n+import os\n+import re\n+import numpy as np\n+\n+import logging\n+logger = logging.getLogger( __name__)\n+\n+from ST_DM_MDBTools.Mdb import Mdb\n+\n+from VIS_LargeFlat.VIS_LargeFlat_Modelling import FPA_VIS_Geometry\n+from VIS_ImageTools_M import FPA_quadrant\n+\n+\n+#-------------------------------------------------------------------------------\n+\n+def ccd_row_col( ccdid):\n+  ccdrow, ccdcol = re.findall( \"[1-6]\", ccdid)\n+  return int( ccdrow), int( ccdcol)\n+\n+\n+#-------------------------------------------------------------------------------\n+\n+def is_close( x, y, err):\n+  return np.abs( x-y) < err\n+\n+\n+#-------------------------------------------------------------------------------\n+\n+def test_FPA_VIS_Geometry():\n+\n+  # clean log\n+  print()\n+\n+  script_dir = os.path.dirname( os.path.realpath( __file__))\n+\n+  mdb = Mdb( os.path.join( script_dir, \"EUC_MDB_2023-07-11_SpaceSegment.Instrument.VIS.xml\"))\n+\n+  vis_fpa_geom = FPA_VIS_Geometry.FPA_VISGeometry( mdb, logger)\n+\n+  ccd_list =      ['1-1','2-1','3-1','4-1','5-1','6-1']\n+  ccd_list.extend(['1-2','2-2','3-2','4-2','5-2','6-2'])\n+  ccd_list.extend(['1-3','2-3','3-3','4-3','5-3','6-3'])\n+  ccd_list.extend(['1-4','2-4','3-4','4-4','5-4','6-4'])\n+  ccd_list.extend(['1-5','2-5','3-5','4-5','5-5','6-5'])\n+  ccd_list.extend(['1-6','2-6','3-6','4-6','5-6','6-6'])\n+\n+  NCCD = len( ccd_list)\n+  assert NCCD == 36\n+\n+# test idetseq2string(), idetseq2xy() and idetxy2seq()\n+  for idet in range( 1, NCCD+1):\n+    ccd_id = ccd_list[idet-1]\n+    logger.debug( ccd_id)\n+    assert vis_fpa_geom.idetseq2string( idet) == ccd_id\n+    det_col, det_row = vis_fpa_geom.idetseq2xy( idet)\n+    idet_out = vis_fpa_geom.idetxy2seq( det_col, det_row)\n+    logger.info( f\"idetseq2xy( {ccd_id}): ccd_row={det_row}, ccd_col={det_col}\")\n+    assert idet_out == idet\n+    ccd_row, ccd_col = ccd_row_col( ccd_id)\n+    assert (det_col == ccd_col) and (det_row == ccd_row)\n+\n+# fpa_x/y are normalised FPA coordinates from -1.5 to 1.5\n+# det_x/y are normalised CCD coordinates from -1.5 to 1.5\n+# pix_x/y are CCD pixel coordinates, from (0, 0) to (4096, 4136)\n+\n+# test det2pixel(), pixel2det()\n+  maxerr = 0\n+  for det_x, det_y in ((-1.5, -1.5), (-1.5, +1.5), (+1.5, -1.5), (+1.5, +1.5), (0, 0)):\n+    for idet in (1, 6, 31, 36):\n+      ccd_id = vis_fpa_geom.idetseq2string( idet)\n+      pix_x, pix_y = vis_fpa_geom.det2pixel( idet, det_x, det_y)\n+      logger.info( f\"vis_fpa_geom.det2pixel( {ccd_id}, det_x={det_x}, det_y={det_y}): pix_x={pix_x}, pix_y={pix_y}\")\n+      det_x_out, det_y_out = vis_fpa_geom.pixel2det( idet, pix_x, pix_y)\n+      maxerr = max( np.abs( det_x - det_x_out), maxerr)\n+      maxerr = max( np.abs( det_y - det_y_out), maxerr)\n+  maxerr_pix = maxerr / 3.0 * 4100\n+  logger.info( f\"det2pixel() - pixel2det() max error = {maxerr_pix} pixels\")\n+\n+# test det2focalplane(), focalplane2det()\n+  for idet in range( 1, NCCD+1):\n+    for det_x, det_y in ((-1.5, -1.5), (+1.5, +1.5), (0, 0)):\n+      ccd_id = vis_fpa_geom.idetseq2string( idet)\n+      fpa_x, fpa_y = vis_fpa_geom.det2focalplane( idet, det_x, det_y)\n+      logger.info( f\"vis_fpa_geom.det2focalplane( {idet}, {det_x}, {det_y}): fpa_x={fpa_x}, fpa_y={fpa_y}\")\n+      idet_out, det_x_out, det_y_out = vis_fpa_geom.focalplane2det( fpa_x, fpa_y)\n+      assert idet == idet_out\n+      assert det_x == det_x_out\n+      assert det_y == det_y_out\n+\n+  return\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_NonLinearity/auxdir/VIS_NonLinearity/Patty_FlatfieldNL.json": [
                        [
                            "",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_NonLinearity/auxdir/VIS_NonLinearity/Patty_FlatfieldNL.readme.txt": [
                        [
                            "@@ -1,4 +1,4 @@\n An example json file containing measured NL points for each quadrant.\n Downloaded from:\n https://euclid.roe.ac.uk/issues/22517#note-28\n-https://euclid.roe.ac.uk/attachments/87505\n\\ No newline at end of file\n+https://euclid.roe.ac.uk/attachments/87505\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_NonLinearity/python/VIS_NonLinearity/VIS_NonLinCorrection_IO/file_entry_point.py": [
                        [
                            "@@ -22,6 +22,8 @@ A corrected copy of the specified input quadrant will be written to the output f\n \n import os.path\n import numpy as np\n+import json\n+import configparser\n import re #regular expressions\n from astropy.io import fits\n \n@@ -29,15 +31,18 @@ import ElementsKernel.Logging as elog\n \n import VIS_PyLibrary_M.fits_io_library as fio\n \n-from VIS_NonLinearity_Flat.VIS_NonLinCorrectionFlat_IO import file_entry_point as flat_method\n-\n-from ..VIS_NonLin_Removal import non_lin_removal as algo\n+from ..VIS_NonLin_Removal import non_lin_removal as pixel_algo\n+from ..VIS_NonLin_Removal import non_lin_flat_removal as flat_algo\n \n __all__ = ['file_layer_entry_point']\n \n+#the name of this PE's [section] in the configuration ini file\n+_CONFIG_SECTION = \"CorrectNonLinearity\"\n+\n \n-def _read_corr_model_file(model_file_name, quad_name):\n-    \"\"\"Read the non-linearity correction model of the specified quadrant from a file.\n+def _read_corr_model_file_pixel(model_file_name, quad_name):\n+    \"\"\"Read the non-linearity correction model of the specified quadrant from a file.  For the pixel-based method\n+       where the file contains a polynomial.\n \n     Parameters\n     ----------\n@@ -65,7 +70,33 @@ def _read_corr_model_file(model_file_name, quad_name):\n     model_coeffs = [model[name][0] for name in model.names if iscoeff(name)]\n     return model_coeffs\n \n-def file_layer_entry_point(input_file, model_file, output_file, quadrant_id=None):\n+def _read_corr_model_file_flat(model_file_name, quad_name):\n+    \"\"\"Read the non-linearity correction model of the specified quadrant from a json file.  Intended for the\n+       list of data points which define the model fitted to flat exposures.\n+\n+    Parameters\n+    ----------\n+    model_file_name : string\n+        File name of the json file containing the model which converts non-linear flux to linear flux, where both\n+        are in ADU.  It must contain the quadrant specified by `quad_name`.\n+    quad_name : string\n+        Name of the quadrant whose model shall be read from the file.  It should match a name used inside the file.\n+\n+    Returns\n+    -------\n+    2-D array_like of float\n+        A set of pairs of flux values which convert non-linear flux to linear flux, where both are in ADU.  If there are\n+        N pairs this array's shape is [N][2].  In each pair, index [1] is a non-linear (i.e. observed) flux and [0] is the\n+        corresponding linear (i.e. corrected) flux.\n+    \"\"\"\n+    log = elog.getLogger(__name__)\n+    with open( model_file_name, \"r\") as file:\n+        json_data = json.load(file)\n+    model_points = np.array(json_data[quad_name])\n+    log.info(\"_read_corr_model_file(): Loaded a model with \" + str(len(model_points)) + \" points\")\n+    return model_points\n+\n+def file_layer_entry_point(input_file, model_file, config_file, output_file, quadrant_id=None):\n     \"\"\"Handles the I/O to/from files.  It is a wrapper around the core algorithm.\n \n     Parameters\n@@ -76,6 +107,8 @@ def file_layer_entry_point(input_file, model_file, output_file, quadrant_id=None\n         File name of the FITS (for pixel method) or json (for flat method) file containing the model which converts\n         non-linear flux to linear flux, where both are in ADU.  It must contain the quadrant specified by `quadrant_id`.\n         The file name must end in .fits or .json, to distinguish the two supported methods of correcting non-linearity.\n+    config_file : string\n+        File name of the configuration parameters for this PE.  It should be in the ini file format.\n     output_file : string\n         Output FITS file name.  If it already exists, only the one corrected quadrant will be modified.  If it does\n         not already exist, a new output file will be created.\n@@ -88,25 +121,41 @@ def file_layer_entry_point(input_file, model_file, output_file, quadrant_id=None\n     log.info(\"file_layer_entry_point(): argument 'input_file' is: \" + str(input_file))\n     log.info(\"file_layer_entry_point(): argument 'quadrant_id' is: \" + str(quadrant_id))\n     log.info(\"file_layer_entry_point(): argument 'model_file' is: \" + str(model_file))\n+    log.info(\"file_layer_entry_point(): argument 'config_file' is: \" + str(config_file))\n     log.info(\"file_layer_entry_point(): argument 'output_file' is: \" + str(output_file))\n+    if config_file is None:\n+        message = (\"file_layer_entry_point(): Configuration ini file name must be supplied (see #22822)\")\n+        log.error(message)\n+        raise Exception(message)\n+    config = configparser.ConfigParser()\n+    config.read(config_file)\n+    if _CONFIG_SECTION not in config:\n+        message = (\"file_layer_entry_point(): The section [\" + str(_CONFIG_SECTION) + \"] is missing from \"\n+                   \"the configuration ini file (see #22822)\")\n+        log.error(message)\n+        raise Exception(message)\n+    non_lin_cfg = config[_CONFIG_SECTION]\n     if (quadrant_id is None) or (quadrant_id == \"\"):\n         quadrant_id = 1 #use the first image extension\n     elif quadrant_id.isdigit():\n         quadrant_id = int(quadrant_id)\n     quad_name = fio.read_ext_name(input_file, quadrant_id)\n+    log.info(\"file_layer_entry_point(): quadrant name (converted) is: \" + str(quad_name))\n+    image = fio.load_single_ext(input_file, quad_name, apply_gain=False)\n     if \".json\" in model_file.lower():\n         log.info(\"file_layer_entry_point(): calling flat version of NL removal\")\n-        flat_method.file_layer_entry_point(input_file, model_file, output_file, str(quadrant_id))\n+        model_points = _read_corr_model_file_flat(model_file, quad_name)\n+        log.debug(\"file_layer_entry_point(): FITS model points are \" + str(model_points))\n+        output_image = flat_algo.remove_non_lin_flat(image, model_points, non_lin_cfg)\n     else:\n-        log.info(\"file_layer_entry_point(): quadrant name (converted) is: \" + str(quad_name))\n-        image = fio.load_single_ext(input_file, quad_name, apply_gain=False)\n-        model_coeffs = _read_corr_model_file(model_file, quad_name)\n+        log.info(\"file_layer_entry_point(): calling pixel-based version of NL removal\")\n+        model_coeffs = _read_corr_model_file_pixel(model_file, quad_name)\n         log.debug(\"file_layer_entry_point(): FITS model coeffs are \" + str(model_coeffs))\n-        output_image = algo.remove_non_lin(image, model_coeffs)\n-        if os.path.isfile(output_file):\n-            log.info(\"file_layer_entry_point(): saving to existing file: \" + output_file)\n-            fio.update_single_ext(output_file, output_image, quad_name, gain=None, apply_gain=False)\n-        else:\n-            log.info(\"file_layer_entry_point(): saving image to new file: \" + output_file)\n-            fio.save_single_ext(output_file, output_image, quad_name, input_file, gain=None, apply_gain=False)\n+        output_image = pixel_algo.remove_non_lin(image, model_coeffs)\n+    if os.path.isfile(output_file):\n+        log.info(\"file_layer_entry_point(): saving to existing file: \" + output_file)\n+        fio.update_single_ext(output_file, output_image, quad_name, gain=None, apply_gain=False)\n+    else:\n+        log.info(\"file_layer_entry_point(): saving image to new file: \" + output_file)\n+        fio.save_single_ext(output_file, output_image, quad_name, input_file, gain=None, apply_gain=False)\n     log.info(\"file_layer_entry_point(): end\")\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_NonLinearity/python/VIS_NonLinearity/VIS_NonLinCorrection_Programs/VIS_remove_non_lin.py": [
                        [
                            "@@ -3,7 +3,7 @@\n The Elements Program name matches the name of this .py file.\n \"\"\"\n #\n-# Copyright (C) 2012-2021 Euclid Science Ground Segment\n+# Copyright (C) 2012-2023 Euclid Science Ground Segment\n #\n # This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General\n # Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option)\n@@ -43,6 +43,7 @@ def mainMethod(args):\n     \"\"\"\n     fep.file_layer_entry_point(args.in_image,\n                                args.in_model,\n+                               args.config_ini,\n                                args.out_file_name,\n                                quadrant_id=args.extname)\n \n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_NonLinearity/python/VIS_NonLinearity/VIS_NonLinCorrection_Programs/command_line_options.py": [
                        [
                            "@@ -37,6 +37,8 @@ def define_cmd_line_options():\n                         help='Input non-linearity correction model file name (ending in either .fits or .json).')\n     parser.add_argument('--extname', type=str,\n                         help='(optional) name or number of the quadrant to be corrected (e.g. \"2-1.E\").')\n+    parser.add_argument('--config_ini', type=str,\n+                        help='Input configuration file name')\n     parser.add_argument('--out_file_name', type=str,\n                         help='Output file name for the corrected quadrant.  It may already exist and contain other ' +\n                              'quadrants.  If it does not exist, a new file will be created.')\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_NonLinearity/python/VIS_NonLinearity/VIS_NonLin_Removal/__init__.py": [
                        [
                            "@@ -13,3 +13,4 @@ __path__ = extend_path(__path__, __name__)\n \n #import the python files which define the external interface of this Elements module\n from .non_lin_removal import *\n+from .non_lin_flat_removal import *\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_NonLinearity/python/VIS_NonLinearity/VIS_NonLin_Removal/non_lin_flat_removal.py": [
                        [
                            "@@ -1,4 +1,10 @@\n \"\"\"Corrects the non-linearity effect in image pixel data, using a model from flat images.\n+\n+standalone test with:\n+\n+$ cd /sps/euclid/Users/smottet/wrk_pattynlcorr\n+$ E-Run VIS_Tasks VIS_remove_non_lin_flat --in_image EUC_VIS_EXP_000024-01-1.fits_sa_bs.010 --in_model Patty_FlatfieldNL.json --extname  1-3.F --out_file_name outfilename.fits\n+\n \"\"\"\n #\n # Copyright (C) 2012-2023 Euclid Science Ground Segment\n@@ -17,43 +23,35 @@\n \n import numpy as np\n \n-__all__ = ['remove_non_lin']\n+import ElementsKernel.Logging as elog\n+\n+__all__ = ['remove_non_lin_flat']\n \n-#flux values above this should not occur.  If they do exist they will receive the same correction as 65535.0\n+#The model will be extrapolated up to this non-linear (observed) flux value.  If there is any flux value\n+#above this, they will receive the same correction as this value.\n _EXTRAPOLATION_LIMIT = 65535.0\n \n+#flux values below this will be unchanged\n+_MINIMUM_FLUX = -10000.0\n \n-def _interpolate_nl_to_linear(nl_flux_value, points_model):\n-    \"\"\"Correct the non-linearity effect of a flux value by applying a model defined by several fixed points.\n+\n+def _assert_config_valid(non_lin_flat_cfg):\n+    \"\"\"Raise an exception if the config is not valid for this algorithm.\n \n     Parameters\n     ----------\n-    nl_flux_value : number\n-        A value in which is to be corrected for the non-linearity effect.\n-    points_model : 2-D array_like of float\n-        A set of pairs of numbers.  In each pair, index [1] is a non-linear (i.e. observed) flux and [0] is the\n-        corresponding linear (i.e. corrected) flux.\n-\n-    Returns\n-    -------\n-    number\n-        The flux value with the non-linearity effect corrected.\n+    non_lin_flat_cfg : dictionary-like\n+        Config parameters.  This could be a SectionProxy from a ConfigParser, or any other dictionary-like object.\n     \"\"\"\n-    if nl_flux_value >= _EXTRAPOLATION_LIMIT:\n-        #use the correction defined by the last point\n-        result = nl_flux_value + (points_model[-1,0] - points_model[-1,1])\n-    elif (len(points_model) < 2) or (nl_flux_value <= 0.0) or (nl_flux_value <= points_model[0,1]):\n-        #don't apply any correction\n-        result = nl_flux_value\n-    else:\n-        for pair_i in range(len(points_model)-2):\n-            if (nl_flux_value > points_model[pair_i,1]) and (nl_flux_value <= points_model[pair_i+1,1]):\n-                linear_diff = points_model[pair_i+1,0] - points_model[pair_i,0]\n-                nl_diff     = points_model[pair_i+1,1] - points_model[pair_i,1]\n-                result = points_model[pair_i,0] + (nl_flux_value - points_model[pair_i,1]) / nl_diff * linear_diff\n-    return result\n-\n-def remove_non_lin(image, points_model):\n+    log = elog.getLogger(__name__)\n+    required_config = \"linear_up_to_adu\"\n+    if required_config not in non_lin_flat_cfg:\n+        message = (\"_assert_config_valid(): The configuration value \" + str(required_config) + \" is missing from \"\n+                   \"the configuration (check the ini file?)\")\n+        log.error(message)\n+        raise Exception(message)\n+\n+def remove_non_lin_flat(image, points_model, non_lin_flat_cfg):\n     \"\"\"Correct the non-linearity effect in an image by applying a model defined by several fixed points.\n \n     Parameters\n@@ -63,15 +61,27 @@ def remove_non_lin(image, points_model):\n     points_model : 2-D ndarray of floats\n         A set of pairs of numbers.  In each pair, index [1] is a non-linear (i.e. observed) flux and [0] is the\n         corresponding linear (i.e. corrected) flux.\n+    non_lin_flat_cfg : dictionary-like\n+        Config parameters.  This could be a SectionProxy from a ConfigParser, or any other dictionary-like object.\n \n     Returns\n     -------\n     array_like of number\n         A copy of `image` with the non-linearity effect corrected.\n     \"\"\"\n-    if points_model[0,1] > 0.0:\n-        #prepend another point at zero,zero\n-        ext_model = np.concatenate((np.zeros_like(points_model, shape=(1,2)), points_model))\n+    log = elog.getLogger(__name__)\n+    _assert_config_valid(non_lin_flat_cfg)\n+    correction_lower_limit = float(non_lin_flat_cfg[\"linear_up_to_adu\"])\n+    log.info(\"remove_non_lin_flat(): The correction lower limit (linear_up_to_adu in config) is \" + str(correction_lower_limit))\n+    # prepend two additional linear points at -1000 ADU and 'correction_lower_limit'\n+    # to take into account negative readout noise values in overscans and not correct pixels up to 'correction_lower_limit'\n+    ext_model = np.array( [[_MINIMUM_FLUX, _MINIMUM_FLUX], [correction_lower_limit, correction_lower_limit]], dtype=np.float32)\n+    for pair_i in range(len(points_model)):\n+        _, nonlin_val = points_model[pair_i]\n+        if nonlin_val <= correction_lower_limit:\n+            continue\n+        ext_model = np.concatenate((ext_model, [points_model[pair_i]]))\n+\n     if ext_model[-1,1] < _EXTRAPOLATION_LIMIT:\n         #append a new last point at _EXTRAPOLATION_LIMIT\n         last_linear_diff = ext_model[-1,0] - ext_model[-2,0]\n@@ -82,7 +92,27 @@ def remove_non_lin(image, points_model):\n         new_last_point[0,1] = _EXTRAPOLATION_LIMIT\n         new_last_point[0,0] = ext_model[-1,0] + (_EXTRAPOLATION_LIMIT - ext_model[-1,1]) * gradient\n         ext_model = np.concatenate((ext_model, new_last_point))\n-    #apply the non-linearity correction function to each flux value individually\n-    nl_correction = np.vectorize(_interpolate_nl_to_linear, otypes=[float], excluded=[\"points_model\"])\n-    corrected_img = nl_correction(nl_flux_value=image, points_model=ext_model)\n+\n+    corrected_img = image.copy() * np.nan\n+    #pixels lower than the model's lowest point are unchanged\n+    nl_pixels_mask = image < ext_model[0,1]\n+    corrected_img[nl_pixels_mask] = image[nl_pixels_mask]\n+    #pixels at or above the model's highest point are given the NL correction which that point defines\n+    nl_pixels_mask = image >= ext_model[-1,1]\n+    corrected_img[nl_pixels_mask] = image[nl_pixels_mask] + (ext_model[-1,0] - ext_model[-1,1])\n+    for pair_i in range(len(ext_model)-1):\n+        linear_beg, nonlin_beg = ext_model[pair_i]\n+        linear_end, nonlin_end = ext_model[pair_i+1]\n+        log.debug( f\"remove_non_lin_flat(): linear_beg, nonlin_beg, linear_end, nonlin_end = \" +\n+                   f\"{linear_beg:.2f}, {nonlin_beg:.2f}, {linear_end:.2f}, {nonlin_end:.2f}\")\n+        nl_pixels_mask = np.logical_and( image >= nonlin_beg, image < nonlin_end)\n+        log.debug( f\"remove_non_lin_flat(): pixel count = {np.count_nonzero( nl_pixels_mask)}\")\n+        linear_diff = linear_end - linear_beg\n+        nl_diff     = nonlin_end - nonlin_beg\n+        corrected_img[nl_pixels_mask] = linear_beg + (image[nl_pixels_mask] - nonlin_beg) / nl_diff * linear_diff\n+\n+    uncorrected_pixel_count = np.count_nonzero( np.isnan( corrected_img))\n+    log.debug( f\"remove_non_lin_flat(): uncorrected pixels = {uncorrected_pixel_count}\")\n+    assert uncorrected_pixel_count == 0, (f\"remove_non_lin_flat(): Error: {uncorrected_pixel_count} pixels \" +\n+                                          f\"were not corrected. This should not happen\")\n     return corrected_img\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_NonLinearity/tests/python/VIS_remove_non_lin_flat_test.py": [
                        [
                            "@@ -26,26 +26,109 @@ To run them at the command line, use \"make purge install ; make CTEST_OUTPUT_ON_\n \n import pytest\n \n-import VIS_NonLinearity_Flat.VIS_NonLinCorrectionFlat_Programs.VIS_remove_non_lin_flat as prog\n+from   VIS_NonLinearity import VIS_NonLin_Removal\n+import numpy as np\n+import json\n+import sys\n \n+import logging\n+logger = logging.getLogger( __name__)\n \n-def test_main_method_badargs():\n-    \"\"\"Call the command line entry point with an argument that is not recognised.\n \n-    Assert that the expected exception is thrown due to the invalid argument.\n-    \"\"\"\n-    arg_string = ['argv_item_zero_which_is_not_used', '--unrecognised_argument']\n-    #Python's argparse.py calls sys.exit() which throws a SystemExit Exception\n-    with pytest.raises(SystemExit):\n-        prog.cmd_line_entry_point(arg_string)\n+def test_non_lin_flat_removal():\n+  # to get the log messages, execute with:\n+  # build.*/run pytest --capture=no VIS_NonLinearity_Flat/tests/python/VIS_remove_non_lin_flat_test.py\n \n-def test_main_method_callable():\n-    \"\"\"Call the command line entry point with input files that do not exist.\n+  # from https://euclid.roe.ac.uk/issues/22517#note-28\n+  # first value in the pair is the linear signal in ADU,\n+  # the second one is the correcponding non-linear signal in ADU\n+  NLMODEL = \"\"\"{\n+\"1-1.E\": [\n+    [\n+      5.7205759826688904,\n+      5.807249847988931\n+    ],\n+    [\n+      12.088025578334763,\n+      12.13829002398899\n+    ],\n+    [\n+      31.357132187303225,\n+      31.468369922215974\n+    ],\n+    [\n+      63.12610021814389,\n+      62.992331362068676\n+    ],\n+    [\n+      127.18233644061723,\n+      127.07687630976658\n+    ],\n+    [\n+      319.2614419237922,\n+      319.15183262424875\n+    ],\n+    [\n+      639.6414209206326,\n+      639.7731134066603\n+    ],\n+    [\n+      1281.0531955783497,\n+      1282.3205548366452\n+    ],\n+    [\n+      3209.5279760698586,\n+      3218.461708954091\n+    ],\n+    [\n+      6438.379363052668,\n+      6474.959727033666\n+    ],\n+    [\n+      12949.723502523604,\n+      13089.290747508476\n+    ],\n+    [\n+      32698.444425748825,\n+      33398.46232320779\n+    ],\n+    [\n+      39328.831991792795,\n+      40263.488795679245\n+    ],\n+    [\n+      52608.14872305627,\n+      54032.42242146698\n+    ],\n+    [\n+      59221.55010694724,\n+      60863.18786984436\n+    ]\n+  ]\n+}\"\"\"\n+  logger.info( \"\")\n+  # correct nonlinearity in a random array\n+  non_lin_flat_cfg = { \"linear_up_to_adu\": 300 }\n+  model_points = np.array( json.loads( NLMODEL)[\"1-1.E\"])\n+  nonlin_image = np.random.rand( 1000, 1000) * 65535.0 - 100.0\n+  linear_image = VIS_NonLin_Removal.remove_non_lin_flat( nonlin_image, model_points, non_lin_flat_cfg)\n+  pixels_above_1000 = linear_image > 1000\n \n-    Assert that the expected file-not-found exception is thrown.\n-    \"\"\"\n-    arg_string = ['argv_item_zero_which_is_not_used',\n-                  '--in_image', 'non/existent/input/file.fits']\n-    #An IOError Exception \"No such file or directory\" is expected\n-    with pytest.raises(IOError):\n-        prog.cmd_line_entry_point(arg_string)\n+  # check that correction goes in the right way\n+  # (with model above, linear values above 1000 ADU are lower than non-linear values)\n+  logger.info( f\"above 1000 ADU correction mean: {np.mean( linear_image[pixels_above_1000] - nonlin_image[pixels_above_1000]):.2f} ADU\")\n+  assert np.all( linear_image[pixels_above_1000] < nonlin_image[pixels_above_1000])\n+\n+  # invert nl correction model\n+  inv_model = model_points[:,::-1]\n+\n+  # convert linear_image back to non linear image\n+  nonlin_image2 = VIS_NonLin_Removal.remove_non_lin_flat( linear_image, inv_model, non_lin_flat_cfg)\n+  diff = nonlin_image2 - nonlin_image\n+\n+  # and check various stats\n+  logger.info( f\"max difference={np.abs( diff).max()}\")\n+  logger.info( f\"abs difference sum={np.abs( diff).sum()}\")\n+  logger.info( f\"different pixels count={np.count_nonzero( diff):,}\")\n+  assert np.abs( diff).sum() < 1\n+  return\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_NonLinearity_Flat/CMakeLists.txt": [
                        [
                            "@@ -1,70 +0,0 @@\n-CMAKE_MINIMUM_REQUIRED(VERSION 2.8.5)\n-\n-#===============================================================================\n-# Load elements_subdir macro here\n-# Examples:\n-#   For declaring a project module:\n-#         elements_subdir(ElementsExamples)\n-#===============================================================================\n-elements_subdir(VIS_NonLinearity_Flat)\n-\n-#===============================================================================\n-# Load elements_depends_on_subdirs macro here\n-#   For creating a dependency onto an other accessible module\n-#         elements_depends_on_subdirs(ElementsKernel)\n-#===============================================================================\n-elements_depends_on_subdirs(ElementsKernel)\n-\n-#===============================================================================\n-# Add the find_package macro (a pure CMake command) here to locate the\n-# libraries.\n-# Examples:\n-#          find_package(CppUnit)\n-#===============================================================================\n-\n-#===============================================================================\n-# Declare the library dependencies here\n-# Example:\n-#         elements_add_library(ElementsExamples src/Lib/*.cpp\n-#                     LINK_LIBRARIES Boost ElementsKernel\n-#                     INCLUDE_DIRS Boost ElementsKernel\n-#                     PUBLIC_HEADERS ElementsExamples)\n-#===============================================================================\n-\n-#===============================================================================\n-# Declare the executables here\n-# Example:\n-# elements_add_executable(ElementsProgramExample src/Program/ProgramExample.cpp\n-#                        LINK_LIBRARIES Boost ElementsExamples\n-#                        INCLUDE_DIRS Boost ElementsExamples)\n-#===============================================================================\n-\n-#===============================================================================\n-# Declare the Boost tests here\n-# Example:\n-# elements_add_unit_test(BoostClassExample tests/src/Boost/ClassExample_test.cpp\n-#                       EXECUTABLE BoostClassExample_test\n-#                       INCLUDE_DIRS ElementsExamples\n-#                       LINK_LIBRARIES ElementsExamples TYPE Boost)\n-#===============================================================================\n-\n-#===============================================================================\n-# Use the following macro for python modules, scripts and aux files:\n-#  elements_install_python_modules()\n-#  elements_install_scripts()\n-#===============================================================================\n-elements_install_python_modules()\n-\n-#===============================================================================\n-# Declare the Python programs here\n-# Examples :\n-# elements_add_python_program(PythonProgramExample\n-#                             ElementsExamples.PythonProgramExample)\n-#===============================================================================\n-elements_add_python_program(VIS_remove_non_lin_flat VIS_NonLinearity_Flat.VIS_NonLinCorrectionFlat_Programs.VIS_remove_non_lin_flat)\n-\n-#===============================================================================\n-# Add the elements_install_conf_files macro\n-# Examples:\n-#          elements_install_conf_files()\n-#===============================================================================\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_NonLinearity_Flat/python/VIS_NonLinearity_Flat/VIS_NonLinCorrectionFlat_IO/__init__.py": [
                        [
                            "@@ -1,9 +0,0 @@\n-\"\"\"\n-This package contains the VIS_NonLinCorrectionFlat_IO Elements module.\n-\"\"\"\n-\n-from pkgutil import extend_path\n-__path__ = extend_path(__path__, __name__)\n-\n-#import the python files which define the external interface of this Elements module\n-from .file_entry_point import *\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_NonLinearity_Flat/python/VIS_NonLinearity_Flat/VIS_NonLinCorrectionFlat_IO/file_entry_point.py": [
                        [
                            "@@ -1,103 +0,0 @@\n-\"\"\"The layer of the Non-linearity Correction (Flat exposures) PE which reads/writes files on disk.\n-\n-This layer should be used by a caller who can supply the file names of input files to be read, and the name of an\n-output file to be written.\n-\n-A corrected copy of the specified input quadrant will be written to the output file.\n-\"\"\"\n-#\n-# Copyright (C) 2012-2023 Euclid Science Ground Segment\n-#\n-# This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General\n-# Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option)\n-# any later version.\n-#\n-# This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied\n-# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n-# details.\n-#\n-# You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to\n-# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n-#\n-\n-import os.path\n-import numpy as np\n-import json\n-import re #regular expressions\n-from astropy.io import fits\n-\n-import ElementsKernel.Logging as elog\n-\n-import VIS_PyLibrary_M.fits_io_library as fio\n-\n-from ..VIS_NonLinFlat_Removal import non_lin_flat_removal as algo\n-\n-__all__ = ['file_layer_entry_point']\n-\n-\n-def _read_corr_model_file(model_file_name, quad_name):\n-    \"\"\"Read the non-linearity correction model of the specified quadrant from a json file.\n-\n-    Parameters\n-    ----------\n-    model_file_name : string\n-        File name of the json file containing the model which converts non-linear flux to linear flux, where both\n-        are in ADU.  It must contain the quadrant specified by `quad_name`.\n-    quad_name : string\n-        Name of the quadrant whose model shall be read from the file.  It should match a name used inside the file.\n-\n-    Returns\n-    -------\n-    2-D array_like of float\n-        A set of pairs of flux values which convert non-linear flux to linear flux, where both are in ADU.  If there are\n-        N pairs this array's shape is [N][2].  In each pair, index [1] is a non-linear (i.e. observed) flux and [0] is the\n-        corresponding linear (i.e. corrected) flux.\n-    \"\"\"\n-    log = elog.getLogger(__name__)\n-    with open( model_file_name, \"r\") as file:\n-        json_data = json.load(file)\n-    model_points = np.array(json_data[quad_name])\n-    log.info(\"_read_corr_model_file(): Loaded a model with \" + str(len(model_points)) + \" points\")\n-    return model_points\n-\n-def file_layer_entry_point(input_file, model_file, output_file, quadrant_id=None):\n-    \"\"\"Handles the I/O to/from files.  It is a wrapper around the core algorithm.\n-\n-    Parameters\n-    ----------\n-    input_file : string\n-        File name of the input FITS image file to be examined.  It must contain the quadrant specified by\n-        `quadrant_id`.\n-    model_file : string\n-        File name of the json file containing the model (as a set of points) which converts non-linear flux to linear\n-        flux, where both are in ADU.  It must contain the quadrant specified by `quadrant_id`.\n-    output_file : string\n-        Output FITS file name.  If it already exists, only the one corrected quadrant will be modified.  If it does\n-        not already exist, a new output file will be created.\n-    quadrant_id : string or number\n-        Optional name or number of the quadrant to examine.  It should match the EXTNAME in the FITS header of\n-        an image extension in the `input_file`.  Alternatively it can be an integer index of the extension within\n-        the FITS file (usually 1 to 144 in Euclid).  If not supplied, the first image extension is examined.\n-    \"\"\"\n-    log = elog.getLogger(__name__)\n-    log.info(\"file_layer_entry_point(): argument 'input_file' is: \" + str(input_file))\n-    log.info(\"file_layer_entry_point(): argument 'quadrant_id' is: \" + str(quadrant_id))\n-    log.info(\"file_layer_entry_point(): argument 'model_file' is: \" + str(model_file))\n-    log.info(\"file_layer_entry_point(): argument 'output_file' is: \" + str(output_file))\n-    if (quadrant_id is None) or (quadrant_id == \"\"):\n-        quadrant_id = 1 #use the first image extension\n-    elif quadrant_id.isdigit():\n-        quadrant_id = int(quadrant_id)\n-    quad_name = fio.read_ext_name(input_file, quadrant_id)\n-    log.info(\"file_layer_entry_point(): quadrant name (converted) is: \" + str(quad_name))\n-    image = fio.load_single_ext(input_file, quad_name, apply_gain=False)\n-    model_points = _read_corr_model_file(model_file, quad_name)\n-    log.debug(\"file_layer_entry_point(): FITS model points are \" + str(model_points))\n-    output_image = algo.remove_non_lin(image, model_points)\n-    if os.path.isfile(output_file):\n-        log.info(\"file_layer_entry_point(): saving to existing file: \" + output_file)\n-        fio.update_single_ext(output_file, output_image, quad_name, gain=None, apply_gain=False)\n-    else:\n-        log.info(\"file_layer_entry_point(): saving image to new file: \" + output_file)\n-        fio.save_single_ext(output_file, output_image, quad_name, input_file, gain=None, apply_gain=False)\n-    log.info(\"file_layer_entry_point(): end\")\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_NonLinearity_Flat/python/VIS_NonLinearity_Flat/VIS_NonLinCorrectionFlat_Programs/VIS_remove_non_lin_flat.py": [
                        [
                            "@@ -1,68 +0,0 @@\n-\"\"\"Entry point for the Elements program of the Non-linearity Correction PE for a model from flat exposures.\n-\n-The Elements Program name matches the name of this .py file.\n-\"\"\"\n-#\n-# Copyright (C) 2012-2023 Euclid Science Ground Segment\n-#\n-# This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General\n-# Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option)\n-# any later version.\n-#\n-# This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied\n-# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n-# details.\n-#\n-# You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to\n-# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n-#\n-\n-import ElementsKernel.Logging as elog\n-\n-from ..VIS_NonLinCorrectionFlat_IO import file_entry_point as fep\n-\n-from . import command_line_options as clo\n-from . import identity as this_emod #Id of the Elements module which contains this program\n-\n-__all__ = ['defineSpecificProgramOptions', 'mainMethod', 'cmd_line_entry_point', 'parent_module_name']\n-\n-\n-def defineSpecificProgramOptions():\n-    \"\"\"Standard method required by Elements, defining the options.\"\"\"\n-    return clo.define_cmd_line_options()\n-\n-def mainMethod(args):\n-    \"\"\"Entry point for launching the algorithm with pre-parsed arguments.\n-\n-    Used by Euclid Elements (E-Run for example).\n-\n-    Parameters\n-    ----------\n-    args : argparse.Namespace\n-        Named arguments and their values, as defined in `command_line_options.py`.\n-    \"\"\"\n-    fep.file_layer_entry_point(args.in_image,\n-                               args.in_model,\n-                               args.out_file_name,\n-                               quadrant_id=args.extname)\n-\n-def cmd_line_entry_point(argv):\n-    \"\"\"Entry point for launching the algorithm with command line arguments.\n-\n-    Technically these args could come directly from a command line, or from other Python code such as a unit test.\n-\n-    Parameters\n-    ----------\n-    argv : array_like\n-        An array of arguments in the same format as sys.argv.  The supported arguments are defined\n-        in `command_line_options.py`.\n-    \"\"\"\n-    log = elog.getLogger(__name__)\n-    log.debug(\"cmd_line_entry_point(): argv is \" + str(argv))\n-    parser = clo.define_cmd_line_options()\n-    parsed_args = parser.parse_args(argv[1:])\n-    mainMethod(parsed_args)\n-\n-def parent_module_name():\n-    \"\"\"Returns the name of the Elements module which contains this program.\"\"\"\n-    return this_emod.elements_module_name()\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_NonLinearity_Flat/python/VIS_NonLinearity_Flat/VIS_NonLinCorrectionFlat_Programs/__init__.py": [
                        [
                            "@@ -1,9 +0,0 @@\n-\"\"\"\n-This package contains the VIS_NonLinCorrectionFlat_Programs Elements module.\n-\"\"\"\n-\n-from pkgutil import extend_path\n-__path__ = extend_path(__path__, __name__)\n-\n-#import the python files which define the external interface of this Elements module\n-from .VIS_remove_non_lin_flat import *\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_NonLinearity_Flat/python/VIS_NonLinearity_Flat/VIS_NonLinCorrectionFlat_Programs/command_line_options.py": [
                        [
                            "@@ -1,43 +0,0 @@\n-\"\"\"Defines the command line arguments supported by the Elements program of this PE.\n-\n-For a more general overview of the input and output data, see this project's README.md.\n-\"\"\"\n-#\n-# Copyright (C) 2012-2023 Euclid Science Ground Segment\n-#\n-# This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General\n-# Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option)\n-# any later version.\n-#\n-# This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied\n-# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n-# details.\n-#\n-# You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to\n-# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n-#\n-\n-import argparse\n-\n-__all__ = ['define_cmd_line_options']\n-\n-\n-def define_cmd_line_options():\n-    \"\"\"Define the command line arguments supported by the VIS_remove_non_lin_flat Elements program.\n-\n-    Returns\n-    -------\n-    argparse.ArgumentParser\n-        A definition of arguments.\n-    \"\"\"\n-    parser = argparse.ArgumentParser()\n-    parser.add_argument('--in_image', type=str,\n-                        help='Input FITS image file name.  It must contain the quadrant to be corrected (--extname).')\n-    parser.add_argument('--in_model', type=str,\n-                        help='Input non-linearity correction model json file name.')\n-    parser.add_argument('--extname', type=str,\n-                        help='(optional) name or number of the quadrant to be corrected (e.g. \"2-1.E\").')\n-    parser.add_argument('--out_file_name', type=str,\n-                        help='Output file name for the corrected quadrant.  It may already exist and contain other ' +\n-                             'quadrants.  If it does not exist, a new file will be created.')\n-    return parser\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_NonLinearity_Flat/python/VIS_NonLinearity_Flat/VIS_NonLinCorrectionFlat_Programs/eclipse_main.py": [
                        [
                            "@@ -1,27 +0,0 @@\n-\"\"\"\n-This is the entry point only for use in Eclipse.  It replaces a similar 'if' statement which was previously\n-in VIS_remove_non_lin_flat.py, but did not work with relative imports (i.e. \"from . import\")).\n-\"\"\"\n-#\n-# Copyright (C) 2012-2023 Euclid Science Ground Segment\n-#\n-# This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General\n-# Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option)\n-# any later version.\n-#\n-# This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied\n-# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n-# details.\n-#\n-# You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to\n-# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n-#\n-\n-import sys\n-\n-#from . import VIS_remove_non_lin_flat as program  #this does not work in Eclipse\n-import VIS_NonLinearity_Flat.VIS_NonLinCorrectionFlat_Programs.VIS_remove_non_lin_flat as program\n-\n-\n-if __name__ == '__main__':\n-    program.cmd_line_entry_point(sys.argv)\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_NonLinearity_Flat/python/VIS_NonLinearity_Flat/VIS_NonLinCorrectionFlat_Programs/identity.py": [
                        [
                            "@@ -1,20 +0,0 @@\n-\"\"\"Defines the identity of the Elements module which contains it.\n-\"\"\"\n-#\n-# Copyright (C) 2012-2023 Euclid Science Ground Segment\n-#\n-# This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General\n-# Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option)\n-# any later version.\n-#\n-# This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied\n-# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n-# details.\n-#\n-# You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to\n-# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n-#\n-\n-def elements_module_name():\n-    \"\"\"Returns the name of the Elements module.\"\"\"\n-    return \"VIS_NonLinCorrectionFlat_Programs\"\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_NonLinearity_Flat/python/VIS_NonLinearity_Flat/VIS_NonLinFlat_Removal/__init__.py": [
                        [
                            "@@ -1,9 +0,0 @@\n-\"\"\"\n-This package contains the VIS_NonLinFlat_Removal Elements module.\n-\"\"\"\n-\n-from pkgutil import extend_path\n-__path__ = extend_path(__path__, __name__)\n-\n-#import the python files which define the external interface of this Elements module\n-from .non_lin_flat_removal import *\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_NonLinearity_Flat/python/VIS_NonLinearity_Flat/__init__.py": [
                        [
                            "@@ -1,7 +0,0 @@\n-\"\"\"\n-This package contains the VIS Non-linearity Ccorrection PE which uses a model made from flat\n-exposures (i.e. the Calibration Unit LED).\n-\"\"\"\n-\n-from pkgutil import extend_path\n-__path__ = extend_path(__path__, __name__)\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_Photometry/python/VIS_Photometry/VIS_Calibrate_Photometry.py": [
                        [
                            "@@ -151,6 +151,9 @@ def get_zeropoint(catref_file, catmes_file, exp_time, logdir):\n              smp.add_ext( hdu)\n              ### Filtering VIS sources\n              mask = (catmes_data['SNR_WIN'] > 100) & (np.abs(catmes_data['SPREAD_MODEL']) < 0.005) & (catmes_data['ELLIPTICITY'] < 0.05) & (catmes_data['FLAGS'] == 0)\n+             if mask.sum() == 0:\n+               ## No need to continue in the loop\n+               continue\n              ### Fill in the dqc table\n              dqc_data = catmes_data[mask]\n              aper_cor_dqc_row = dict()\n@@ -190,6 +193,9 @@ def get_zeropoint(catref_file, catmes_file, exp_time, logdir):\n              ######\n \n              magref_matched  = magref_assoc[ dist_arcsec_abs < tol ]\n+             if len(magref_matched) < 3:\n+               # Not enough matched sources\n+               continue\n              ra_vis_matched  = ra_vis[ dist_arcsec_abs < tol ]\n              dec_vis_matched = dec_vis[ dist_arcsec_abs < tol ]\n              x_vis_matched   = x_vis[ dist_arcsec_abs < tol ]\n@@ -216,6 +222,9 @@ def get_zeropoint(catref_file, catmes_file, exp_time, logdir):\n \n         hdulist.close()\n \n+    if len(zero_point_dqc) == 0:\n+      return(-1)\n+\n     # write spread_model plot\n     try: # failsafe mode\n       expid = visdef.get_expid_from_filename( catmes_file)\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_SourceExtraction/python/VIS_SourceExtraction/VIS_extract_sources.py": [
                        [
                            "@@ -49,7 +49,7 @@ def defineSpecificProgramOptions():\n   parser.add_argument( \"--OUTPUT_CAT\", required=True, help=\"name of the output catalog\")\n   parser.add_argument( \"--FLAGS\",      help=\"name of the flags map, mandatory, will be updated with OBJECTS check-image\")\n   parser.add_argument( \"--WEIGHT\",     help=\"name of the weight map, optional\")\n-  parser.add_argument( \"--tmpdir\",     help=\"directory where default sextractor parameter and conf files are written\")\n+  parser.add_argument( \"--tmpdir\",     help=\"deprecated and ignored, now automatically generated - directory where default sextractor parameter and conf files are written\")\n   return parser\n \n \n@@ -67,7 +67,11 @@ def mainMethod(args):\n   inflagmap = args.FLAGS\n   inweight = args.WEIGHT\n   workdir = args.workdir\n-  tmpdir = args.tmpdir + '/'\n+\n+  # tmpdir must be used an unique, we build it from the exposure name\n+  # actual arg.tmpdir argument value is ignored\n+  tmpdir = os.path.basename( args.FITS_INPUT) + \".sexconf\"\n+  os.mkdir( tmpdir)\n \n   #Arguments given in input of the command for SExtractor\n   if (image[-5:] == \".fits\"):\n@@ -166,6 +170,12 @@ def mainMethod(args):\n     os.remove( inflagmap)\n     os.rename( temp_flagmap, inflagmap)\n \n+  # remove SExtractor configuration temporary directory\n+  try:\n+    shutil.rmtree( tmpdir)\n+  except:\n+    pass\n+\n   logger.info( \"#\")\n   logger.info( \"# Exiting %s mainMethod()\", __name__)\n   logger.info( \"#\")\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_Tasks_Common/python/VIS_Tasks_Common/Modules.py": [
                        [
                            "@@ -172,12 +172,13 @@ def CorrectDark( config, infile, outfile):\n \n     logger.debug( f\"CorrectDark() Output: {outfile}\")\n \n-def CorrectNonLin( config, infile, outfile, quad_name):\n+def CorrectNonLin( config, config_filename, infile, outfile, quad_name):\n \n     workdir = config.get( \"General\", \"workdir\")\n     nlcorr_model = os.path.join( workdir, config.get( \"CalibDataProducts\", \"nlcorr_model\"))\n     non_lin_cor_io.file_layer_entry_point(infile,\n                                           nlcorr_model,\n+                                          config_filename,\n                                           outfile,\n                                           quad_name)\n \n@@ -388,7 +389,7 @@ def Calibrate_Astrometry(config, section, workdir, catalog, star_file, distormod\n            logger.error(f\"Astrometry subprocess error code: {cpe}\")\n            raise\n \n-def Wcsfit(config, catalogue, star_file, exp_list, plot_dir=None):\n+def Wcsfit(config, catalogue, star_file, exp_list, exptime, plot_dir=None):\n \n     # Populate command line for runwcsfit module\n     cmdline  = f\"use-fpa-model \"\n@@ -399,7 +400,7 @@ def Wcsfit(config, catalogue, star_file, exp_list, plot_dir=None):\n     cmdline += f\"--target-precision 3 \"\n     cmdline += f\"--niter 3 \"\n     cmdline += f\"--refmagcol VIS \"\n-    cmdline += f\"--refmagmin 18.5 \"\n+    cmdline += f\"--refmagmin {18.5 + 2.5 * np.log10(exptime / 565.0)} \"\n     cmdline += f\"--refmagmax 22.0 \"\n     cmdline += f\"--writeto {' '.join(map(str, exp_list))} {catalogue} \"\n     cmdline += f\"--loglevel debug \"\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_Tasks_Common/tests/python/FromToXML_test.py": [
                        [
                            "@@ -279,7 +279,8 @@ class TestFromToXML(object):\n \n         # Create input data\n         filename = \"CalibratedExp.fits\"\n-        fits = fitsio.FITS(filename, 'rw', ignore_empty=True)\n+        if os.path.exists(filename): os.remove(filename)\n+        fits = fitsio.FITS(filename, 'rw')\n         nccds = 4\n         naxis1 = 4\n         naxis2 = 5\n@@ -375,8 +376,13 @@ class TestFromToXML(object):\n         spatial_footprint = DmUtils.create_spatial_footprint_from_header_list(ext_header_list, 5)\n         fits.close()\n \n+        raw_meta = {\n+          \"DpdVisRawFrame_ProductID\": \"rawpid\",\n+          \"dp.Data.ObservationSequence.CalblockId\": \"cbid\",\n+          \"dp.Data.ObservationSequence.CalblockVariant\": \"cbvar\"\n+        }\n         dp = FromToXML.calib_exp_dp(os.path.abspath(filename), \"prnu.fits\", \"psf.fits\", \"background.fits\", \"weight.fits\",\n-                                    raw_frame_id=FromToXML.UNKNOWN_STRING)\n+                                    raw_meta=raw_meta)\n         DmUtils.save_product_metadata( dp, dp.Header.ProductType + \"_test.xml\")\n \n         assert DmUtils.validate(dp)\n@@ -399,7 +405,7 @@ class TestFromToXML(object):\n         assert data.Instrument.InstrumentName == \"VIS\"\n         assert data.Instrument.TelescopeName == \"Euclid\"\n         assert data.Filter.Name == \"VIS\"\n-#        assert data.InputRawFrameReference.ProductID == FromToXML.UNKNOWN_STRING\n+        assert data.InputRawFrameReference.ProductID.value() == \"rawpid\"\n         assert data.InputRawFrameReference.ProductType == \"DpdVisRawFrame\"\n \n         ### assert data.ImgSpatialFootprint.Polygon == spatial_footprint.Polygon\n@@ -413,6 +419,8 @@ class TestFromToXML(object):\n         assert data.ObservationSequence.PointingId == pri_header[\"PTGID\"]\n         assert data.ObservationSequence.Exposure == pri_header[\"EXPNUM\"]\n         assert data.ObservationSequence.TotalExposure == pri_header[\"TOTEXP\"]\n+        assert data.ObservationSequence.CalblockId == \"cbid\"\n+        assert data.ObservationSequence.CalblockVariant == \"cbvar\"\n         assert data.InstrumentMode == \"Science\"\n         assert data.CommandedFPAPointing.RA == pri_header[\"RA\"]\n         assert data.CommandedFPAPointing.Dec == pri_header[\"DEC\"]\n@@ -500,7 +508,8 @@ class TestFromToXML(object):\n         date_obs_start = \"1997-05-24T11:40:24.802000Z\"\n         date_obs_end = \"1998-05-24T11:40:24.802000Z\"\n         obsid = 52929\n-        dp = FromToXML.stack_dp(os.path.abspath(filename), \"WIDE\", obsid,\n+        calblock_id = \"PV-001\"\n+        dp = FromToXML.stack_dp(os.path.abspath(filename), \"WIDE\", obsid, calblock_id,\n                                 \"psf.fits\", \"background.fits\", \"weight.fits\")\n         DmUtils.save_product_metadata( dp, dp.Header.ProductType + \"_test.xml\")\n \n@@ -551,6 +560,7 @@ class TestFromToXML(object):\n         assert data.BackgroundStorage.DataContainer.FileName == \"background.fits\"\n         assert data.WeightStorage.DataContainer.FileName == \"weight.fits\"\n         assert data.DataStorage.DataContainer.FileName == filename\n+        assert data.CalblockId == calblock_id\n \n         # delete test files\n         os.remove( dp.Header.ProductType + \"_test.xml\")\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_Tasks_M/auxdir/VIS_Tasks_M/EUC_VIS_PPR-SC8_00_20210423T163838.815652Z.ini": [
                        [
                            "@@ -127,6 +127,8 @@ ReferenceGain = 3.48\n ;-------------------------------------------------------------------------------\n [CorrectNonLinearity]\n invNLmodel = invNonLinearityModel_Sim_CCD273.txt\n+; When correcting data, model data points (from json file) below this value are not used (ADU).  The value must be >= 0.\n+linear_up_to_adu = 300\n \n \n ;-------------------------------------------------------------------------------\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_Tasks_M/python/VIS_Tasks_M/VIS_process_astro_field.py": [
                        [
                            "@@ -129,11 +129,15 @@ def mainMethod(args):\n         else:\n             # run wcsfit in 'use-fpa-model' mode to copy distmodel to headers and reconstruct pointing\n             for catalogue, exposure in zip( catalog_list, exposure_list):\n+                # Open the catalog to find exposure duration (EXPTIME in #HDU 0)\n+                with fits.open(catalogue, mode='readonly',  memmap=False) as hdul:\n+                    exptime = hdul[0].header[\"EXPTIME\"]\n                 logger.info (\"==> Performing Wcsfit run on %s...\", catalogue)\n                 Modules.Wcsfit( config,\n                                 catalogue,\n                                 reference_starcat,\n                                 headers_to_update( exposure),\n+                                exptime,\n                                 os.path.join( visdef.logdir_name( args.logdir), visdiags.DIAGDIR))\n \n     # write output lists to JSON files\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_Tasks_M/python/VIS_Tasks_M/VIS_process_quad.py": [
                        [
                            "@@ -140,7 +140,7 @@ def mainMethod(args):\n     # get visible pixel indices\n     xmin, xmax, ymin, ymax = FPA_quadrant.get_quadrant_real_pixels( mef_hdul[1])\n \n-    \n+\n     # get an objects_mask flagmap if one available\n     objmask_cfg_section = f\"object_mask_ObsId-{prim_hdr['OBS_ID']}-PointingId-{prim_hdr['PTGID']}\"\n     objmask_name = None\n@@ -148,7 +148,7 @@ def mainMethod(args):\n       objmask_name = config.get( objmask_cfg_section, \"flagmap_FITS\")\n       flagmap_list.append( os.path.join( DATADIR, objmask_name))\n       logger.info( f\"found {objmask_name} to mask objects in {args.raw_exp_in}\")\n-    \n+\n     for hdu_in in mef_hdul[1:]:\n       # read quadrant extension from MEF\n       quad_dat = hdu_in.data.astype( \"float32\")\n@@ -271,7 +271,7 @@ def mainMethod(args):\n       outfile = out_prefix # eg. /workdir/EUC_VIS_EXP_052929_01.fits\n       logger.info( \"==> Processing \" + os.path.basename( outfile + dot_ext))\n \n-       \n+\n       # Flag saturated pixels\n       if config.has_option('CalibDataProducts', 'saturation_model'):\n         infile = outfile\n@@ -293,8 +293,8 @@ def mainMethod(args):\n           os.remove( infile + dot_ext)\n       else:\n         logger.info( \"### Saturated pixels flagging deactivated in \" + args.config)\n-        \n-    \n+\n+\n     # Correct XTalk\n     # all quadrants of a block must be in the same processing state to correct XTalk\n     if config.has_option('CalibDataProducts', 'xtalk_model'):\n@@ -309,7 +309,7 @@ def mainMethod(args):\n         os.remove( infile + dot_ext)\n     else:\n       logger.info( \"### CrossTalk correction deactivated in \" + args.config)\n-    \n+\n     processed_quad_fits = list()\n     processed_quad_flg_fits = list()\n     outfile_init = outfile\n@@ -349,7 +349,7 @@ def mainMethod(args):\n       if config.has_option('CalibDataProducts', 'nlcorr_model'):\n         infile = outfile\n         outfile = infile + '_nl' # eg. /workdir/EUC_VIS_EXP_052929_01.fits_sa_xt_bs_nl\n-        CorrectNonLin( config, infile + dot_ext, outfile + dot_ext, quad_name)\n+        CorrectNonLin( config, args.config, infile + dot_ext, outfile + dot_ext, quad_name)\n         logger.info( f\"==> CorrectNonLin done on {quad_name} ({iquad+1}/{len( qnames)})\")\n         if rm_tmpfiles:\n           os.remove( infile + dot_ext)\n@@ -381,33 +381,33 @@ def mainMethod(args):\n #        if rm_tmpfiles:\n #          os.remove( infile + dot_ext)\n \n-      # Cosmics      \n-      logger.info(f\"flagmap before Cosmics is : {flg_file}\")      \n-      \n+      # Cosmics\n+      logger.info(f\"flagmap before Cosmics is : {flg_file}\")\n+\n       start_time = time.time()\n       if config.getboolean('General', 'FlagCosmics') == True:\n         infile = outfile\n         # This processing step does not modify the input image\n         # hence, we do directly : outfile = infile\n         outfile = infile\n-        Cosmics( config, quad_name, infile + dot_ext, flg_file + dot_ext)        \n+        Cosmics( config, quad_name, infile + dot_ext, flg_file + dot_ext)\n         outfile = infile\n         logger.info(f\"outfile after Cosmics is : {outfile+dot_ext}\")\n         logger.info(f\"flagmap after Cosmics is : {flg_file+dot_ext}\")\n         logger.info( f\"==> Cosmics flagged in {quad_name} ({iquad+1}/{len( qnames)})\")\n       else:\n         logger.info( \"### Cosmics flagging deactivated in \" + args.config)\n-      \n+\n       end_time = time.time()\n       total_time = end_time - start_time\n       logger.info(f\"Flagging of CR takes {total_time} seconds\")\n-      \n+\n       # Correct Brighter-Fatter\n       if config.has_option('CalibDataProducts', 'bfe_model'):\n         infile = outfile\n         outfile = infile + '_bfe' # eg. /workdir/EUC_VIS_EXP_052929_01.fits_sa_xt_bs_nl_cti_bfe\n-        BrighterFatter_correction(infile + dot_ext, flg_file + dot_ext, \n-                                  bfe_kernels_dict[quad_name], quad_name, config.getfloat( \"GainPerQuad\", quad_name), \n+        BrighterFatter_correction(infile + dot_ext, flg_file + dot_ext,\n+                                  bfe_kernels_dict[quad_name], quad_name, config.getfloat( \"GainPerQuad\", quad_name),\n                                   outfile + dot_ext)\n         logger.info( f\"==> CorrectBFE done on {quad_name} ({iquad+1}/{len( qnames)})\")\n         if rm_tmpfiles:\n@@ -428,7 +428,7 @@ def mainMethod(args):\n           os.remove( infile + dot_ext)\n       else:\n         logger.info( \"### Pre/Overscan pixels removal deactivated in \" + args.config)\n-        \n+\n       # Correct flat field\n       if config.has_option('CalibDataProducts', 'master_flat'):\n         infile = outfile\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ],
                    "VIS_Tasks_M/python/VIS_Tasks_M/VIS_xml_in.py": [
                        [
                            "@@ -373,6 +373,10 @@ def mainMethod(args):\n     config.set( raw_frame_section, \"Header.CreationDate\",    dp.Header.CreationDate)\n     config.set( raw_frame_section, \"Data.ImgType.Category\",  dp.Data.ImgType.Category)\n     config.set( raw_frame_section, \"Data.ImgType.FirstType\", dp.Data.ImgType.FirstType)\n+    if hasattr( dp.Data.ObservationSequence, \"CalblockId\"):\n+      config.set( raw_frame_section, \"dp.Data.ObservationSequence.CalblockId\", dp.Data.ObservationSequence.CalblockId)\n+    if hasattr( dp.Data.ObservationSequence, \"CalblockVariant\"):\n+      config.set( raw_frame_section, \"dp.Data.ObservationSequence.CalblockVariant\", dp.Data.ObservationSequence.CalblockVariant)\n     if dp.Data.ImgType.FirstType == \"FLAT\":\n       for hkey in (\"CULEDMSK\", \"CULEDDUR\"):\n         config.set( raw_frame_section, hkey, primhdr[hkey])\n@@ -436,6 +440,17 @@ def mainMethod(args):\n     # prevent cosmic ray detections in the case of the masterflat pipeline\n     config.set('General', 'FlagCosmics', 'False')\n \n+  if args.pipeline_name == \"VIS_GainCalibration\":\n+    if calibration_type != \"FLAT\":\n+      raise Exception(\n+          f\"calibration type '{calibration_type}' does not match FLAT\"\n+      )\n+    job_max_quad = config.getint('MasterFlat', 'QuadrantsPerJob')\n+    # prevent the gain equalisation in the case of the masterflat pipeline\n+    config.remove_section('GainEqualisation')\n+    # prevent cosmic ray detections in the case of the masterflat pipeline\n+    config.set('General', 'FlagCosmics', 'False')\n+\n   if args.pipeline_name == \"VIS_PTCNLCalibration\":\n     if calibration_type != \"FLAT\":\n       raise Exception(\n@@ -609,6 +624,8 @@ def mainMethod(args):\n     refcat_filename = os.path.join( science_xml_in_dir, 'Master_Ref_Cat.fits')\n     cat_ra, cat_dec = merge_catalogues( cat_xml_list, refcat_filename)\n     config.set( \"General\", \"star_catalogue\", refcat_filename)\n+  else:\n+    cat_ra = cat_dec = None\n \n   # put other \"standard\" model file names in config CalibDataProducts section\n   put_model_filename_in_config( config, args.zero_point,     \"zero_point\")\n",
                            "Merge branch 'cti_xml_out' of https://gitlab.euclid-sgs.uk/PF-VIS/VIS_Tasks into cti_xml_out",
                            "James Nightingale",
                            "2023-08-08T14:37:45.000+01:00",
                            "cc7a2ed170684583dbdd192cdda3aefb6c652f47"
                        ]
                    ]
                },
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": [
                    {
                        "name": "13.0.10",
                        "created_at": "2023-08-08T12:11:35.000+00:00",
                        "author_name": "Catherine Grenet"
                    },
                    {
                        "name": "13.0.11",
                        "created_at": "2023-08-12T13:06:47.000+00:00",
                        "author_name": "Catherine Grenet"
                    },
                    {
                        "name": "13.0.12",
                        "created_at": "2023-08-13T15:44:17.000+00:00",
                        "author_name": "Catherine Grenet"
                    }
                ]
            },
            "PF-VIS/VIS_SatPixels": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_Photometry": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_NonLinCalibration": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_RemovePRNU": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_PyLibrary": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_MeasurePRNU": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_RemoveLamp": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_MeasureLamp": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_MasterBias": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_ImageTools": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_Ghosts": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_CTICalibrate": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_CTICorrect": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_CTIAdd": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_CTI_from_Git": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_Background": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            },
            "PF-VIS/VIS_Astrometry": {
                "start date": "-",
                "end date": "-",
                "start tag": "",
                "end tag": "",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": []
            }
        }
    },
    "INFRA": {
        "ST-EAS": {
            "ST-EAS/ST_EASDSS": {
                "start date": "2023-04-12T22:36:45",
                "end date": "2023-04-23T05:29:17",
                "start tag": "0.7.17",
                "end tag": "0.7.18",
                "count_files_modified": "0",
                "modifications_by_file": {},
                "selected_modifications": {},
                "count_selected_modifications": "0",
                "tags_in_period": [
                    {
                        "name": "0.7.17",
                        "created_at": "2023-04-12T22:36:45.000+02:00",
                        "author_name": "Andrey Belikov"
                    },
                    {
                        "name": "0.8.17",
                        "created_at": "2023-04-12T22:47:59.000+02:00",
                        "author_name": "Andrey Belikov"
                    },
                    {
                        "name": "0.7.18",
                        "created_at": "2023-04-23T05:29:17.000+02:00",
                        "author_name": "Andrey Belikov"
                    }
                ]
            }
        }
    }
}